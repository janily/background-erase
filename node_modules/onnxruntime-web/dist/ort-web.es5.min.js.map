{"version":3,"file":"ort-web.es5.min.js","mappings":"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","sources":["webpack://onnxruntime-web/webpack/universalModuleDefinition","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/cast.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external umd {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/global","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__1670__) {\nreturn ","var _scriptDir,t=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(t){function n(){return E.buffer!=D&&z(E.buffer),j}function e(){return E.buffer!=D&&z(E.buffer),F}function r(){return E.buffer!=D&&z(E.buffer),U}function i(){return E.buffer!=D&&z(E.buffer),Y}function a(){return E.buffer!=D&&z(E.buffer),I}var u,o,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){o=t,c=n}));var f,s,l,p,h,m,d=Object.assign({},u),y=\"./this.program\",b=(t,n)=>{throw n},g=\"object\"==typeof window,_=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(t){return u.locateFile?u.locateFile(t,T):T+t}if(v){let t;T=_?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=()=>{h||(p=require(\"fs\"),h=require(\"path\"))},f=function(t,n){return m(),t=h.normalize(t),p.readFileSync(t,n?void 0:\"utf8\")},l=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),s=(t,n,e)=>{m(),t=h.normalize(t),p.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(t){if(!(t instanceof ot))throw t})),process.on(\"unhandledRejection\",(function(t){throw t})),b=(t,n)=>{if(J())throw process.exitCode=t,n;n instanceof ot||x(\"exiting due to exception: \"+n),process.exit(t)},u.inspect=function(){return\"[Emscripten Module object]\"};try{t=require(\"worker_threads\")}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=t.Worker}else(g||_)&&(_?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",v||(f=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},_&&(l=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),s=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\"GET\",t,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var S=console.log.bind(console),A=console.warn.bind(console);v&&(m(),S=t=>p.writeSync(1,t+\"\\n\"),A=t=>p.writeSync(2,t+\"\\n\"));var M,C=u.print||S,x=u.printErr||A;Object.assign(u,d),d=null,u.thisProgram&&(y=u.thisProgram),u.quit&&(b=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&rt(\"no native wasm support detected\");var E,k,D,j,F,U,Y,I,W=!1,P=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function H(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&P)return P.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,e):t.subarray(n,e));for(r=\"\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var u=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|u:(7&i)<<18|a<<12|u<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function q(t,n){return(t>>>=0)?H(e(),t,n):\"\"}function B(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var u=t.charCodeAt(a);if(55296<=u&&57343>=u&&(u=65536+((1023&u)<<10)|1023&t.charCodeAt(++a)),127>=u){if(e>=r)break;n[e++>>>0]=u}else{if(2047>=u){if(e+1>=r)break;n[e++>>>0]=192|u>>6}else{if(65535>=u){if(e+2>=r)break;n[e++>>>0]=224|u>>12}else{if(e+3>=r)break;n[e++>>>0]=240|u>>18,n[e++>>>0]=128|u>>12&63}n[e++>>>0]=128|u>>6&63}n[e++>>>0]=128|63&u}}return n[e>>>0]=0,e-i}function G(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function z(t){D=t,u.HEAP8=j=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=U=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=Y=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=I=new Float64Array(t)}w&&(D=u.buffer);var N=u.INITIAL_MEMORY||16777216;if(w)E=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)E=u.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:N/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");E&&(D=E.buffer),N=D.byteLength,z(D);var V,L=[],X=[],Z=[],$=[];function J(){return R||!1}function Q(){var t=u.preRun.shift();L.unshift(t)}var K,tt=0,nt=null,et=null;function rt(t){throw w?postMessage({cmd:\"onAbort\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\"Aborted(\"+t+\")\"),W=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),c(t),t}function it(){return K.startsWith(\"data:application/octet-stream;base64,\")}function at(){var t=K;try{if(t==K&&M)return new Uint8Array(M);if(l)return l(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){rt(t)}}K=\"ort-wasm-threaded.wasm\",it()||(K=O(K));var ut={};function ot(t){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+t+\")\",this.status=t}function ct(t){(t=pt.Vb[t])||rt(),pt.mc(t)}function ft(t){var n=pt.Cc();if(!n)return 6;pt.ac.push(n),pt.Vb[t.Ub]=n,n.Ub=t.Ub;var e={cmd:\"run\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return n.$b=()=>{e.time=performance.now(),n.postMessage(e,t.Nc)},n.loaded&&(n.$b(),delete n.$b),0}function st(t){if(w)return Vt(1,1,t);J()||(pt.oc(),u.onExit&&u.onExit(t),W=!0),b(t,new ot(t))}function lt(t,n){if(!n&&w)throw dt(t),\"unwind\";J()||w||(bn(),ht(Z),yn(0),en[1].length&&rn(1,10),en[2].length&&rn(2,10),pt.oc()),st(t)}var pt={Yb:[],ac:[],qc:[],Vb:{},fc:function(){w&&pt.Ec()},Pc:function(){},Ec:function(){pt.receiveObjectTransfer=pt.Gc,pt.threadInitTLS=pt.pc,pt.setExitStatus=pt.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(pt.Vb))pt.mc(t);for(t of pt.Yb)t.terminate();pt.Yb=[]},mc:function(t){var n=t.Ub;delete pt.Vb[n],pt.Yb.push(t),pt.ac.splice(pt.ac.indexOf(t),1),t.Ub=0,Tn(n)},Gc:function(){},pc:function(){pt.qc.forEach((t=>t()))},Fc:function(t,n){t.onmessage=e=>{var r=(e=e.data).cmd;if(t.Ub&&(pt.Bc=t.Ub),e.targetThread&&e.targetThread!=hn()){var i=pt.Vb[e.Qc];i?i.postMessage(e,e.transferList):x('Internal error! Worker sent a message \"'+r+'\" to target pthread '+e.targetThread+\", but that thread no longer exists!\")}else\"processProxyingQueue\"===r?Ht(e.queue):\"spawnThread\"===r?ft(e):\"cleanupThread\"===r?ct(e.thread):\"killThread\"===r?(e=e.thread,r=pt.Vb[e],delete pt.Vb[e],r.terminate(),Tn(e),pt.ac.splice(pt.ac.indexOf(r),1),r.Ub=0):\"cancelThread\"===r?pt.Vb[e.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(t.loaded=!0,n&&n(t),t.$b&&(t.$b(),delete t.$b)):\"print\"===r?C(\"Thread \"+e.threadId+\": \"+e.text):\"printErr\"===r?x(\"Thread \"+e.threadId+\": \"+e.text):\"alert\"===r?alert(\"Thread \"+e.threadId+\": \"+e.text):\"setimmediate\"===e.target?t.postMessage(e):\"onAbort\"===r?u.onAbort&&u.onAbort(e.arg):r&&x(\"worker sent an unknown command \"+r);pt.Bc=void 0},t.onerror=t=>{throw x(\"worker sent an error! \"+t.filename+\":\"+t.lineno+\": \"+t.message),t},v&&(t.on(\"message\",(function(n){t.onmessage({data:n})})),t.on(\"error\",(function(n){t.onerror(n)})),t.on(\"detachedExit\",(function(){}))),t.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:E,wasmModule:k})},yc:function(){var t=O(\"ort-wasm-threaded.worker.js\");pt.Yb.push(new Worker(t))},Cc:function(){return 0==pt.Yb.length&&(pt.yc(),pt.Fc(pt.Yb[0])),pt.Yb.pop()}};function ht(t){for(;0<t.length;)t.shift()(u)}function mt(t){var n=Mn();return t=t(),Cn(n),t}function dt(t){if(w)return Vt(2,0,t);try{lt(t)}catch(t){t instanceof ot||\"unwind\"==t||b(1,t)}}u.PThread=pt,u.establishStackSpace=function(){var t=hn(),n=r()[t+44>>2>>>0];t=r()[t+48>>2>>>0],An(n,n-t),Cn(n)};var yt=[];function bt(t){var n=yt[t];return n||(t>=yt.length&&(yt.length=t+1),yt[t]=n=V.get(t)),n}u.invokeEntryPoint=function(t,n){t=bt(t)(n),J()?pt.nc(t):On(t)};var gt,_t,vt=[],wt=0,Tt=0;function Ot(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){r()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,n()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=n()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,n()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=n()[this.Sb+13>>0>>>0]},this.fc=function(t,n){this.cc(0),this.xc(t),this.wc(n),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(r(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(r(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(En(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function St(t){return dn(new Ot(t).Sb)}function At(t,n,e,r){return w?Vt(3,1,t,n,e,r):Mt(t,n,e,r)}function Mt(t,n,e,r){if(\"undefined\"==typeof SharedArrayBuffer)return x(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var i=[];return w&&0===i.length?At(t,n,e,r):(t={Ic:e,Ub:t,zc:r,Nc:i},w?(t.Oc=\"spawnThread\",postMessage(t,i),0):ft(t))}function Ct(t,n,e){return w?Vt(4,1,t,n,e):0}function xt(t,n){if(w)return Vt(5,1,t,n)}function Rt(t,n){if(w)return Vt(6,1,t,n)}function Et(t,n,e){if(w)return Vt(7,1,t,n,e)}function kt(t,n,e){return w?Vt(8,1,t,n,e):0}function Dt(t,n){if(w)return Vt(9,1,t,n)}function jt(t,n,e){if(w)return Vt(10,1,t,n,e)}function Ft(t,n,e,r){if(w)return Vt(11,1,t,n,e,r)}function Ut(t,n,e,r){if(w)return Vt(12,1,t,n,e,r)}function Yt(t,n,e,r){if(w)return Vt(13,1,t,n,e,r)}function It(t){if(w)return Vt(14,1,t)}function Wt(t,n){if(w)return Vt(15,1,t,n)}function Pt(t,n,e){if(w)return Vt(16,1,t,n,e)}function Ht(t){Atomics.store(r(),t>>2,1),hn()&&wn(t),Atomics.compareExchange(r(),t>>2,1,0)}function qt(t){return i()[t>>>2]+4294967296*r()[t+4>>>2]}function Bt(t,n,e,r,i,a){return w?Vt(17,1,t,n,e,r,i,a):-52}function Gt(t,n,e,r,i,a){if(w)return Vt(18,1,t,n,e,r,i,a)}function zt(t){var e=G(t)+1,r=mn(e);return r&&B(t,n(),r,e),r}function Nt(t,n,e){function a(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}if(w)return Vt(19,1,t,n,e);var u=(new Date).getFullYear(),o=new Date(u,0,1),c=new Date(u,6,1);u=o.getTimezoneOffset();var f=c.getTimezoneOffset(),s=Math.max(u,f);r()[t>>2>>>0]=60*s,r()[n>>2>>>0]=Number(u!=f),t=a(o),n=a(c),t=zt(t),n=zt(n),f<u?(i()[e>>2>>>0]=t,i()[e+4>>2>>>0]=n):(i()[e>>2>>>0]=n,i()[e+4>>2>>>0]=t)}function Vt(t,n){var e=arguments.length-2,r=arguments;return mt((()=>{for(var i=xn(8*e),u=i>>3,o=0;o<e;o++){var c=r[2+o];a()[u+o>>>0]=c}return vn(t,e,i,n)}))}u.executeNotifiedProxyingQueue=Ht,_t=v?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:w?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Lt,Xt=[],Zt={};function $t(){if(!Lt){var t,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:y||\"./this.program\"};for(t in Zt)void 0===Zt[t]?delete n[t]:n[t]=Zt[t];var e=[];for(t in n)e.push(t+\"=\"+n[t]);Lt=e}return Lt}function Jt(t,e){if(w)return Vt(20,1,t,e);var r=0;return $t().forEach((function(a,u){var o=e+r;for(u=i()[t+4*u>>2>>>0]=o,o=0;o<a.length;++o)n()[u++>>0>>>0]=a.charCodeAt(o);n()[u>>0>>>0]=0,r+=a.length+1})),0}function Qt(t,n){if(w)return Vt(21,1,t,n);var e=$t();i()[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),i()[n>>2>>>0]=r,0}function Kt(t){return w?Vt(22,1,t):52}function tn(t,n,e,r){return w?Vt(23,1,t,n,e,r):52}function nn(t,n,e,r,i){return w?Vt(24,1,t,n,e,r,i):70}var en=[null,[],[]];function rn(t,n){var e=en[t];0===n||10===n?((1===t?C:x)(H(e,0)),e.length=0):e.push(n)}function an(t,n,r,a){if(w)return Vt(25,1,t,n,r,a);for(var u=0,o=0;o<r;o++){var c=i()[n>>2>>>0],f=i()[n+4>>2>>>0];n+=8;for(var s=0;s<f;s++)rn(t,e()[c+s>>>0]);u+=f}return i()[a>>2>>>0]=u,0}var un=0;function on(t){return 0==t%4&&(0!=t%100||0==t%400)}var cn=[31,29,31,30,31,30,31,31,30,31,30,31],fn=[31,28,31,30,31,30,31,31,30,31,30,31];function sn(t,e,i,a){function u(t,n,e){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<n;)t=e[0]+t;return t}function o(t,n){return u(t,n,\"0\")}function c(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function f(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function s(t){var n=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(on(t.getFullYear())?cn:fn)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=f(new Date(t.getFullYear(),0,4)),e=f(e),0>=c(n,t)?0>=c(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=r()[a+40>>2>>>0];for(var p in a={Lc:r()[a>>2>>>0],Kc:r()[a+4>>2>>>0],dc:r()[a+8>>2>>>0],jc:r()[a+12>>2>>>0],ec:r()[a+16>>2>>>0],Xb:r()[a+20>>2>>>0],Tb:r()[a+24>>2>>>0],Wb:r()[a+28>>2>>>0],Rc:r()[a+32>>2>>>0],Jc:r()[a+36>>2>>>0],Mc:l?q(l):\"\"},i=q(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(p,\"g\"),l[p]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(t){return h[t.Tb].substring(0,3)},\"%A\":function(t){return h[t.Tb]},\"%b\":function(t){return m[t.ec].substring(0,3)},\"%B\":function(t){return m[t.ec]},\"%C\":function(t){return o((t.Xb+1900)/100|0,2)},\"%d\":function(t){return o(t.jc,2)},\"%e\":function(t){return u(t.jc,2,\" \")},\"%g\":function(t){return s(t).toString().substring(2)},\"%G\":function(t){return s(t)},\"%H\":function(t){return o(t.dc,2)},\"%I\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),o(t,2)},\"%j\":function(t){for(var n=0,e=0;e<=t.ec-1;n+=(on(t.Xb+1900)?cn:fn)[e++]);return o(t.jc+n,3)},\"%m\":function(t){return o(t.ec+1,2)},\"%M\":function(t){return o(t.Kc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(t){return 0<=t.dc&&12>t.dc?\"AM\":\"PM\"},\"%S\":function(t){return o(t.Lc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(t){return t.Tb||7},\"%U\":function(t){return o(Math.floor((t.Wb+7-t.Tb)/7),2)},\"%V\":function(t){var n=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&n++,n)53==n&&(4==(e=(t.Tb+371-t.Wb)%7)||3==e&&on(t.Xb)||(n=1));else{n=52;var e=(t.Tb+7-t.Wb-1)%7;(4==e||5==e&&on(t.Xb%400-1))&&n++}return o(n,2)},\"%w\":function(t){return t.Tb},\"%W\":function(t){return o(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\"%y\":function(t){return(t.Xb+1900).toString().substring(2)},\"%Y\":function(t){return t.Xb+1900},\"%z\":function(t){var n=0<=(t=t.Jc);return t=Math.abs(t)/60,(n?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":function(t){return t.Mc},\"%%\":function(){return\"%\"}},i=i.replace(/%%/g,\"\\0\\0\"),l)i.includes(p)&&(i=i.replace(new RegExp(p,\"g\"),l[p](a)));return p=function(t){var n=Array(G(t)+1);return B(t,n,0,n.length),n}(i=i.replace(/\\0\\0/g,\"%\")),p.length>e?0:(function(t,e){n().set(t,e>>>0)}(p,t),p.length-1)}pt.fc();var ln=[null,st,dt,At,Ct,xt,Rt,Et,kt,Dt,jt,Ft,Ut,Yt,It,Wt,Pt,Bt,Gt,Nt,Jt,Qt,Kt,tn,nn,an],pn={b:function(t){return mn(t+24)+24},n:function(t){return(t=new Ot(t)).uc()||(t.hc(!0),wt--),t.ic(!1),vt.push(t),t.sc(),t.vc()},ma:function(t){throw x(\"Unexpected exception thrown, this is not properly supported - aborting\"),W=!0,t},x:function(){Sn(0);var t=vt.pop();if(t.Hc()&&!t.kc()){var n=t.Dc();n&&bt(n)(t.Zb),St(t.Zb)}Tt=0},e:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},l:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},h:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},t:St,M:function(){var t=vt.pop();t||rt(\"no exception to throw\");var n=t.Zb;throw t.kc()||(vt.push(t),t.ic(!0),t.hc(!1),wt++),Tt=n,n},c:function(t,n,e){throw new Ot(t).fc(n,e),Tt=t,wt++,t},pa:function(){return wt},Fa:function(t){gn(t,!_,1,!g),pt.pc()},T:function(t){w?postMessage({cmd:\"cleanupThread\",thread:t}):ct(t)},xa:Mt,j:function(t){throw Tt||(Tt=t),t},H:Ct,Ma:xt,ua:Rt,wa:Et,oa:kt,Ka:Dt,Ca:jt,Ja:Ft,V:Ut,va:Yt,sa:It,La:Wt,ta:Pt,Ta:function(){},X:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ua:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,e,r){if(t==n)setTimeout((()=>Ht(r)));else if(w)postMessage({targetThread:t,cmd:\"processProxyingQueue\",queue:r});else{if(!(t=pt.Vb[t]))return;t.postMessage({cmd:\"processProxyingQueue\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getUTCSeconds(),r()[n+4>>2>>>0]=t.getUTCMinutes(),r()[n+8>>2>>>0]=t.getUTCHours(),r()[n+12>>2>>>0]=t.getUTCDate(),r()[n+16>>2>>>0]=t.getUTCMonth(),r()[n+20>>2>>>0]=t.getUTCFullYear()-1900,r()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getSeconds(),r()[n+4>>2>>>0]=t.getMinutes(),r()[n+8>>2>>>0]=t.getHours(),r()[n+12>>2>>>0]=t.getDate(),r()[n+16>>2>>>0]=t.getMonth(),r()[n+20>>2>>>0]=t.getFullYear()-1900,r()[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1),i=(t.getTime()-e.getTime())/864e5|0;r()[n+28>>2>>>0]=i,r()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(i!=(e=e.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(e,i)),r()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(r()[t+20>>2>>>0]+1900,r()[t+16>>2>>>0],r()[t+12>>2>>>0],r()[t+8>>2>>>0],r()[t+4>>2>>>0],r()[t>>2>>>0],0),e=r()[t+32>>2>>>0],i=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),u=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),c=Math.min(o,u);return 0>e?r()[t+32>>2>>>0]=Number(u!=o&&c==i):0<e!=(c==i)&&(u=Math.max(o,u),n.setTime(n.getTime()+6e4*((0<e?c:u)-i))),r()[t+24>>2>>>0]=n.getDay(),e=(n.getTime()-a.getTime())/864e5|0,r()[t+28>>2>>>0]=e,r()[t>>2>>>0]=n.getSeconds(),r()[t+4>>2>>>0]=n.getMinutes(),r()[t+8>>2>>>0]=n.getHours(),r()[t+12>>2>>>0]=n.getDate(),r()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(n,e,r){t.Ac||(t.Ac=!0,Nt(n,e,r))},y:function(){rt(\"\")},U:function(){if(!v&&!_){var t=\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\";gt||(gt={}),gt[t]||(gt[t]=1,v&&(t=\"warning: \"+t),x(t))}},ra:function(){return 4294901760},B:_t,Ia:function(t,n,r){e().copyWithin(t>>>0,n>>>0,n+r>>>0)},F:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Da:function(t,n,e){Xt.length=n,e>>=3;for(var r=0;r<n;r++)Xt[r]=a()[e+r>>>0];return(0>t?ut[-t-1]:ln[t]).apply(null,Xt)},qa:function(t){var n=e().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var r=1;4>=r;r*=2){var i=n*(1+.2/r);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{E.grow(a-D.byteLength+65535>>>16),z(E.buffer);var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},Na:function(){throw\"unwind\"},Ga:Jt,Ha:Qt,J:lt,I:Kt,S:tn,ga:nn,R:an,d:function(){return un},na:function t(e,r){t.lc||(t.lc=function(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(v)try{var n=require(\"crypto\");return()=>n.randomBytes(1)[0]}catch(t){}return()=>rt(\"randomDevice\")}());for(var i=0;i<r;i++)n()[e+i>>0>>>0]=t.lc();return 0},ia:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ja:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},K:function(t){var n=Mn();try{return bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},f:function(t,n){var e=Mn();try{return bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},P:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},Q:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},k:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},p:function(t,n,e,r){var i=Mn();try{return bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},q:function(t,n,e,r,i){var a=Mn();try{return bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},N:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},s:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},w:function(t,n,e,r,i,a,u){var o=Mn();try{return bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},L:function(t,n,e,r,i,a,u,o){var c=Mn();try{return bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},E:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{return bt(t)(n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},aa:function(t,n,e,r,i,a,u,o){var c=Mn();try{return Pn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},_:function(t,n,e,r,i,a,u){var o=Mn();try{return Dn(t,n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},Z:function(t,n,e,r,i){var a=Mn();try{return Hn(t,n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},ca:function(t,n,e,r){var i=Mn();try{return In(t,n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},$:function(t){var n=Mn();try{return kn(t)}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},ba:function(t,n){var e=Mn();try{return Wn(t,n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},Y:function(t,n,e){var r=Mn();try{return jn(t,n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},g:function(t){var n=Mn();try{bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},r:function(t,n){var e=Mn();try{bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},i:function(t,n,e){var r=Mn();try{bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ha:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},m:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},v:function(t,n,e,r,i){var a=Mn();try{bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},u:function(t,n,e,r,i,a){var u=Mn();try{bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},O:function(t,n,e,r,i,a,u){var o=Mn();try{bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},A:function(t,n,e,r,i,a,u,o){var c=Mn();try{bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},ka:function(t,n,e,r,i,a,u,o,c){var f=Mn();try{bt(t)(n,e,r,i,a,u,o,c)}catch(t){if(Cn(f),t!==t+0)throw t;Sn(1,0)}},C:function(t,n,e,r,i,a,u,o,c,f,s){var l=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s)}catch(t){if(Cn(l),t!==t+0)throw t;Sn(1,0)}},D:function(t,n,e,r,i,a,u,o,c,f,s,l,p,h,m,d){var y=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s,l,p,h,m,d)}catch(t){if(Cn(y),t!==t+0)throw t;Sn(1,0)}},fa:function(t,n,e,r,i,a,u,o){var c=Mn();try{Fn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},da:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{Yn(t,n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},ea:function(t,n,e,r,i,a){var u=Mn();try{Un(t,n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},o:function(t){return t},a:E||u.wasmMemory,G:function(t){un=t},la:sn,z:function(t,n,e,r){return sn(t,n,e,r)}};!function(){function t(t,n){u.asm=t.exports,pt.qc.push(u.asm.sb),V=u.asm.ub,X.unshift(u.asm.Va),k=n,w||(tt--,u.monitorRunDependencies&&u.monitorRunDependencies(tt),0==tt&&(null!==nt&&(clearInterval(nt),nt=null),et&&(t=et,et=null,t())))}function n(n){t(n.instance,n.module)}function e(t){return function(){if(!M&&(g||_)){if(\"function\"==typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return t.arrayBuffer()})).catch((function(){return at()}));if(s)return new Promise((function(t,n){s(K,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return at()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\"failed to asynchronously prepare wasm: \"+t),rt(t)}))}var r={a:pn};if(w||(tt++,u.monitorRunDependencies&&u.monitorRunDependencies(tt)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\"Module.instantiateWasm callback failed with error: \"+t),!1}(M||\"function\"!=typeof WebAssembly.instantiateStreaming||it()||K.startsWith(\"file://\")||v||\"function\"!=typeof fetch?e(n):fetch(K,{credentials:\"same-origin\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(n,(function(t){return x(\"wasm streaming compile failed: \"+t),x(\"falling back to ArrayBuffer instantiation\"),e(n)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var hn=u._pthread_self=function(){return(hn=u._pthread_self=u.asm.ob).apply(null,arguments)},mn=u._malloc=function(){return(mn=u._malloc=u.asm.pb).apply(null,arguments)},dn=u._free=function(){return(dn=u._free=u.asm.qb).apply(null,arguments)},yn=u._fflush=function(){return(yn=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var bn=u.___funcs_on_exit=function(){return(bn=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},gn=u.__emscripten_thread_init=function(){return(gn=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var _n,vn=u._emscripten_run_in_main_runtime_thread_js=function(){return(vn=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},wn=u.__emscripten_proxy_execute_task_queue=function(){return(wn=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Tn=u.__emscripten_thread_free_data=function(){return(Tn=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},On=u.__emscripten_thread_exit=function(){return(On=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Sn=u._setThrew=function(){return(Sn=u._setThrew=u.asm.Bb).apply(null,arguments)},An=u._emscripten_stack_set_limits=function(){return(An=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Mn=u.stackSave=function(){return(Mn=u.stackSave=u.asm.Db).apply(null,arguments)},Cn=u.stackRestore=function(){return(Cn=u.stackRestore=u.asm.Eb).apply(null,arguments)},xn=u.stackAlloc=function(){return(xn=u.stackAlloc=u.asm.Fb).apply(null,arguments)},Rn=u.___cxa_can_catch=function(){return(Rn=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},En=u.___cxa_is_pointer_type=function(){return(En=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},kn=u.dynCall_j=function(){return(kn=u.dynCall_j=u.asm.Ib).apply(null,arguments)},Dn=u.dynCall_iiiiij=function(){return(Dn=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},jn=u.dynCall_jii=function(){return(jn=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Fn=u.dynCall_viiiiij=function(){return(Fn=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Un=u.dynCall_vjji=function(){return(Un=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Yn=u.dynCall_viiijjjii=function(){return(Yn=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},In=u.dynCall_iij=function(){return(In=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},Wn=u.dynCall_ji=function(){return(Wn=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},Pn=u.dynCall_iiiiiij=function(){return(Pn=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Hn=u.dynCall_iiij=function(){return(Hn=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function qn(){function t(){if(!_n&&(_n=!0,u.calledRun=!0,!W)&&(w||ht(X),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!w)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();$.unshift(t)}ht($)}}if(!(0<tt))if(w)o(u),w||ht(X),postMessage({cmd:\"loaded\"});else{if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)Q();ht(L),0<tt||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),t()}),1)):t())}}if(u.UTF8ToString=q,u.stringToUTF8=function(t,n,r){return B(t,e(),n,r)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=J,u.wasmMemory=E,u.stackSave=Mn,u.stackRestore=Cn,u.stackAlloc=xn,u.ExitStatus=ot,u.PThread=pt,et=function t(){_n||qn(),_n||(et=t)},u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return qn(),t.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t:\"function\"==typeof define&&define.amd?define([],(function(){return t})):\"object\"==typeof exports&&(exports.ortWasmThreaded=t);\n","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var ca=Object.assign({},d),da=\"./this.program\",ea=(a,b)=>{throw b;},fa=\"object\"==typeof window,m=\"function\"==typeof importScripts,p=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,q=\"\",ha,r,v,fs,y,ia;\r\nif(p)q=m?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",ia=()=>{y||(fs=require(\"fs\"),y=require(\"path\"))},ha=function(a,b){ia();a=y.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},v=a=>{a=ha(a,!0);a.buffer||(a=new Uint8Array(a));return a},r=(a,b,c)=>{ia();a=y.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(da=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){if(!(a instanceof ja))throw a;}),process.on(\"unhandledRejection\",\r\nfunction(a){throw a;}),ea=(a,b)=>{if(noExitRuntime||0<ka)throw process.exitCode=a,b;b instanceof ja||z(\"exiting due to exception: \"+b);process.exit(a)},d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||m)m?q=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\",ha=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);\r\nreturn b.responseText},m&&(v=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),r=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var la=d.print||console.log.bind(console),z=d.printErr||console.warn.bind(console);Object.assign(d,ca);ca=null;d.thisProgram&&(da=d.thisProgram);d.quit&&(ea=d.quit);\r\nvar A;d.wasmBinary&&(A=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&B(\"no native wasm support detected\");var ma,D=!1,na=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction oa(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&na)return na.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|h);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|k:(f&7)<<18|h<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function pa(a,b){return(a>>>=0)?oa(G,a,b):\"\"}\r\nfunction qa(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var l=a.charCodeAt(++h);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\r\nfunction ra(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var sa,H,G,I,J;function ta(){var a=ma.buffer;sa=a;d.HEAP8=H=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=I=new Int32Array(a);d.HEAPU8=G=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=J=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var ua,va=[],wa=[],xa=[],ya=[],ka=0;\r\nfunction za(){var a=d.preRun.shift();va.unshift(a)}var K=0,Aa=null,L=null;function B(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";z(a);D=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function Ba(){return N.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"ort-wasm.wasm\";if(!Ba()){var Ca=N;N=d.locateFile?d.locateFile(Ca,q):q+Ca}\r\nfunction Da(){var a=N;try{if(a==N&&A)return new Uint8Array(A);if(v)return v(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){B(b)}}\r\nfunction Ea(){if(!A&&(fa||m)){if(\"function\"==typeof fetch&&!N.startsWith(\"file://\"))return fetch(N,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+N+\"'\";return a.arrayBuffer()}).catch(function(){return Da()});if(r)return new Promise(function(a,b){r(N,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Da()})}function ja(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}\r\nfunction O(a){for(;0<a.length;)a.shift()(d)}var P=[],Q=0,R=0;\r\nfunction S(a){this.Db=a;this.zb=a-24;this.Ub=function(b){J[this.zb+4>>2>>>0]=b};this.Eb=function(){return J[this.zb+4>>2>>>0]};this.Sb=function(b){J[this.zb+8>>2>>>0]=b};this.Wb=function(){return J[this.zb+8>>2>>>0]};this.Tb=function(){I[this.zb>>2>>>0]=0};this.Ib=function(b){H[this.zb+12>>0>>>0]=b?1:0};this.Pb=function(){return 0!=H[this.zb+12>>0>>>0]};this.Jb=function(b){H[this.zb+13>>0>>>0]=b?1:0};this.Lb=function(){return 0!=H[this.zb+13>>0>>>0]};this.Rb=function(b,c){this.Fb(0);this.Ub(b);this.Sb(c);\r\nthis.Tb();this.Ib(!1);this.Jb(!1)};this.Nb=function(){I[this.zb>>2>>>0]+=1};this.Xb=function(){var b=I[this.zb>>2>>>0];I[this.zb>>2>>>0]=b-1;return 1===b};this.Fb=function(b){J[this.zb+16>>2>>>0]=b};this.Ob=function(){return J[this.zb+16>>2>>>0]};this.Qb=function(){if(Fa(this.Eb()))return J[this.Db>>2>>>0];var b=this.Ob();return 0!==b?b:this.Db}}function Ga(a){return Ha((new S(a)).zb)}var T=[];function U(a){var b=T[a];b||(a>=T.length&&(T.length=a+1),T[a]=b=ua.get(a));return b}\r\nfunction Ia(a){var b=ra(a)+1,c=Ja(b);c&&qa(a,H,c,b);return c}function Ka(a,b,c){function e(n){return(n=n.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?n[1]:\"GMT\"}var f=(new Date).getFullYear(),h=new Date(f,0,1),k=new Date(f,6,1);f=h.getTimezoneOffset();var l=k.getTimezoneOffset();I[a>>2>>>0]=60*Math.max(f,l);I[b>>2>>>0]=Number(f!=l);a=e(h);b=e(k);a=Ia(a);b=Ia(b);l<f?(J[c>>2>>>0]=a,J[c+4>>2>>>0]=b):(J[c>>2>>>0]=b,J[c+4>>2>>>0]=a)}function La(a,b,c){La.Vb||(La.Vb=!0,Ka(a,b,c))}var Ma={};\r\nfunction Na(){if(!Oa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:da||\"./this.program\"},b;for(b in Ma)void 0===Ma[b]?delete a[b]:a[b]=Ma[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Oa=c}return Oa}var Oa,Pa=[null,[],[]];function Qa(a,b){var c=Pa[a];0===b||10===b?((1===a?la:z)(oa(c,0)),c.length=0):c.push(b)}var V=0;\r\nfunction Ra(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var a=new Uint8Array(1);return()=>{crypto.getRandomValues(a);return a[0]}}if(p)try{var b=require(\"crypto\");return()=>b.randomBytes(1)[0]}catch(c){}return()=>B(\"randomDevice\")}function W(a,b){W.Mb||(W.Mb=Ra());for(var c=0;c<b;c++)H[a+c>>0>>>0]=W.Mb();return 0}function Sa(a){return 0===a%4&&(0!==a%100||0===a%400)}var Ta=[31,29,31,30,31,30,31,31,30,31,30,31],Ua=[31,28,31,30,31,30,31,31,30,31,30,31];\r\nfunction Va(a){var b=Array(ra(a)+1);qa(a,b,0,b.length);return b}\r\nfunction Wa(a,b,c,e){function f(g,u,w){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<u;)g=w[0]+g;return g}function h(g,u){return f(g,u,\"0\")}function k(g,u){function w(M){return 0>M?-1:0<M?1:0}var F;0===(F=w(g.getFullYear()-u.getFullYear()))&&0===(F=w(g.getMonth()-u.getMonth()))&&(F=w(g.getDate()-u.getDate()));return F}function l(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function n(g){var u=g.Bb;for(g=new Date((new Date(g.Cb+1900,0,1)).getTime());0<u;){var w=g.getMonth(),F=(Sa(g.getFullYear())?Ta:Ua)[w];if(u>F-g.getDate())u-=F-g.getDate()+1,g.setDate(1),11>w?g.setMonth(w+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+u);break}}w=new Date(g.getFullYear()+1,0,4);u=l(new Date(g.getFullYear(),\r\n0,4));w=l(w);return 0>=k(u,g)?0>=k(w,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var t=I[e+40>>2>>>0];e={$b:I[e>>2>>>0],Zb:I[e+4>>2>>>0],Gb:I[e+8>>2>>>0],Kb:I[e+12>>2>>>0],Hb:I[e+16>>2>>>0],Cb:I[e+20>>2>>>0],Ab:I[e+24>>2>>>0],Bb:I[e+28>>2>>>0],bc:I[e+32>>2>>>0],Yb:I[e+36>>2>>>0],ac:t?pa(t):\"\"};c=pa(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\r\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var x in t)c=c.replace(new RegExp(x,\"g\"),t[x]);var E=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),C=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":function(g){return E[g.Ab].substring(0,3)},\"%A\":function(g){return E[g.Ab]},\"%b\":function(g){return C[g.Hb].substring(0,\r\n3)},\"%B\":function(g){return C[g.Hb]},\"%C\":function(g){return h((g.Cb+1900)/100|0,2)},\"%d\":function(g){return h(g.Kb,2)},\"%e\":function(g){return f(g.Kb,2,\" \")},\"%g\":function(g){return n(g).toString().substring(2)},\"%G\":function(g){return n(g)},\"%H\":function(g){return h(g.Gb,2)},\"%I\":function(g){g=g.Gb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){for(var u=0,w=0;w<=g.Hb-1;u+=(Sa(g.Cb+1900)?Ta:Ua)[w++]);return h(g.Kb+u,3)},\"%m\":function(g){return h(g.Hb+1,2)},\"%M\":function(g){return h(g.Zb,\r\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.Gb&&12>g.Gb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.$b,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.Ab||7},\"%U\":function(g){return h(Math.floor((g.Bb+7-g.Ab)/7),2)},\"%V\":function(g){var u=Math.floor((g.Bb+7-(g.Ab+6)%7)/7);2>=(g.Ab+371-g.Bb-2)%7&&u++;if(u)53==u&&(w=(g.Ab+371-g.Bb)%7,4==w||3==w&&Sa(g.Cb)||(u=1));else{u=52;var w=(g.Ab+7-g.Bb-1)%7;(4==w||5==w&&Sa(g.Cb%400-1))&&u++}return h(u,2)},\"%w\":function(g){return g.Ab},\"%W\":function(g){return h(Math.floor((g.Bb+\r\n7-(g.Ab+6)%7)/7),2)},\"%y\":function(g){return(g.Cb+1900).toString().substring(2)},\"%Y\":function(g){return g.Cb+1900},\"%z\":function(g){g=g.Yb;var u=0<=g;g=Math.abs(g)/60;return(u?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.ac},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(x in t)c.includes(x)&&(c=c.replace(new RegExp(x,\"g\"),t[x](e)));c=c.replace(/\\0\\0/g,\"%\");x=Va(c);if(x.length>b)return 0;H.set(x,a>>>0);return x.length-1}\r\nvar Jb={a:function(a){return Ja(a+24)+24},m:function(a){a=new S(a);a.Pb()||(a.Ib(!0),Q--);a.Jb(!1);P.push(a);a.Nb();return a.Qb()},ia:function(a){z(\"Unexpected exception thrown, this is not properly supported - aborting\");D=!0;throw a;},w:function(){X(0);var a=P.pop();if(a.Xb()&&!a.Lb()){var b=a.Wb();b&&U(b)(a.Db);Ga(a.Db)}R=0},d:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];\r\nif(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},k:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},g:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;\r\nif(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},s:Ga,L:function(){var a=P.pop();a||B(\"no exception to throw\");var b=a.Db;a.Lb()||(P.push(a),a.Jb(!0),a.Ib(!1),Q++);R=b;throw b;},b:function(a,b,c){(new S(a)).Rb(b,c);R=a;Q++;throw a;},la:function(){return Q},i:function(a){R||(R=a);throw a;},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},\r\nHa:function(){},Ja:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ia:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getUTCSeconds();I[b+4>>2>>>0]=a.getUTCMinutes();I[b+8>>2>>>0]=a.getUTCHours();I[b+12>>2>>>\r\n0]=a.getUTCDate();I[b+16>>2>>>0]=a.getUTCMonth();I[b+20>>2>>>0]=a.getUTCFullYear()-1900;I[b+24>>2>>>0]=a.getUTCDay();I[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Ea:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getSeconds();I[b+4>>2>>>0]=a.getMinutes();I[b+8>>2>>>0]=a.getHours();I[b+12>>2>>>0]=a.getDate();I[b+16>>2>>>0]=a.getMonth();I[b+20>>2>>>0]=a.getFullYear()-1900;I[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);I[b+\r\n28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;I[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();I[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Fa:function(a){var b=new Date(I[a+20>>2>>>0]+1900,I[a+16>>2>>>0],I[a+12>>2>>>0],I[a+8>>2>>>0],I[a+4>>2>>>0],I[a>>2>>>0],0),c=I[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),\r\nl=Math.min(k,h);0>c?I[a+32>>2>>>0]=Number(h!=k&&l==e):0<c!=(l==e)&&(h=Math.max(k,h),b.setTime(b.getTime()+6E4*((0<c?l:h)-e)));I[a+24>>2>>>0]=b.getDay();I[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;I[a>>2>>>0]=b.getSeconds();I[a+4>>2>>>0]=b.getMinutes();I[a+8>>2>>>0]=b.getHours();I[a+12>>2>>>0]=b.getDate();I[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},sa:function(){return-52},ta:function(){},Ga:La,B:function(){B(\"\")},ma:function(){return 4294901760},I:p?()=>{var a=process.hrtime();return 1E3*\r\na[0]+a[1]/1E6}:()=>performance.now(),xa:function(a,b,c){G.copyWithin(a>>>0,b>>>0,b+c>>>0)},G:function(a){var b=G.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,e+(65536-e%65536)%65536);a:{try{ma.grow(f-sa.byteLength+65535>>>16);ta();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},va:function(a,b){var c=0;Na().forEach(function(e,f){var h=b+c;f=J[a+4*f>>2>>>0]=h;for(h=0;h<e.length;++h)H[f++>>\r\n0>>>0]=e.charCodeAt(h);H[f>>0>>>0]=0;c+=e.length+1});return 0},wa:function(a,b){var c=Na();J[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});J[b>>2>>>0]=e;return 0},ba:function(a){noExitRuntime||0<ka||(Ya(),O(xa),Za(0),Pa[1].length&&Qa(1,10),Pa[2].length&&Qa(2,10));if(!(noExitRuntime||0<ka)){if(d.onExit)d.onExit(a);D=!0}ea(a,new ja(a))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(a,b,c,e){for(var f=0,h=0;h<c;h++){var k=J[b>>2>>>0],l=J[b+4>>\r\n2>>>0];b+=8;for(var n=0;n<l;n++)Qa(a,G[k+n>>>0]);f+=l}J[e>>2>>>0]=f;return 0},c:function(){return V},ja:W,ea:$a,fa:ab,J:bb,e:cb,N:db,O:eb,j:fb,o:gb,p:hb,M:ib,r:jb,v:kb,K:lb,D:mb,X:nb,V:ob,U:pb,Z:qb,W:rb,Y:sb,T:tb,f:ub,q:vb,h:wb,da:xb,l:yb,t:zb,u:Ab,x:Bb,z:Cb,ga:Db,A:Eb,C:Fb,aa:Gb,_:Hb,$:Ib,n:function(a){return a},F:function(a){V=a},ha:Wa,y:function(a,b,c,e){return Wa(a,b,c,e)}};\r\n(function(){function a(f){d.asm=f.exports;ma=d.asm.Ka;ta();ua=d.asm.ib;wa.unshift(d.asm.La);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==Aa&&(clearInterval(Aa),Aa=null),L&&(f=L,L=null,f()))}function b(f){a(f.instance)}function c(f){return Ea().then(function(h){return WebAssembly.instantiate(h,e)}).then(function(h){return h}).then(f,function(h){z(\"failed to asynchronously prepare wasm: \"+h);B(h)})}var e={a:Jb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\r\na)}catch(f){return z(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return A||\"function\"!=typeof WebAssembly.instantiateStreaming||Ba()||N.startsWith(\"file://\")||p||\"function\"!=typeof fetch?c(b):fetch(N,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(h){z(\"wasm streaming compile failed: \"+h);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.La).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Ma).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Na).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.Oa).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Pa).apply(null,arguments)};\r\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Qa).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ra).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Sa).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ta).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ua).apply(null,arguments)};\r\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Va).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Wa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Xa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ya).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Za).apply(null,arguments)};\r\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm._a).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.$a).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.ab).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.bb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.cb).apply(null,arguments)};\r\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.db).apply(null,arguments)};\r\nvar Ja=d._malloc=function(){return(Ja=d._malloc=d.asm.eb).apply(null,arguments)},Ha=d._free=function(){return(Ha=d._free=d.asm.fb).apply(null,arguments)},Za=d._fflush=function(){return(Za=d._fflush=d.asm.gb).apply(null,arguments)},Ya=d.___funcs_on_exit=function(){return(Ya=d.___funcs_on_exit=d.asm.hb).apply(null,arguments)},X=d._setThrew=function(){return(X=d._setThrew=d.asm.jb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.kb).apply(null,arguments)},Z=d.stackRestore=\r\nfunction(){return(Z=d.stackRestore=d.asm.lb).apply(null,arguments)},Kb=d.stackAlloc=function(){return(Kb=d.stackAlloc=d.asm.mb).apply(null,arguments)},Xa=d.___cxa_can_catch=function(){return(Xa=d.___cxa_can_catch=d.asm.nb).apply(null,arguments)},Fa=d.___cxa_is_pointer_type=function(){return(Fa=d.___cxa_is_pointer_type=d.asm.ob).apply(null,arguments)},Lb=d.dynCall_j=function(){return(Lb=d.dynCall_j=d.asm.pb).apply(null,arguments)},Mb=d.dynCall_iiiiij=function(){return(Mb=d.dynCall_iiiiij=d.asm.qb).apply(null,\r\narguments)},Nb=d.dynCall_jii=function(){return(Nb=d.dynCall_jii=d.asm.rb).apply(null,arguments)},Ob=d.dynCall_viiiiij=function(){return(Ob=d.dynCall_viiiiij=d.asm.sb).apply(null,arguments)},Pb=d.dynCall_vjji=function(){return(Pb=d.dynCall_vjji=d.asm.tb).apply(null,arguments)},Qb=d.dynCall_viiijjjii=function(){return(Qb=d.dynCall_viiijjjii=d.asm.ub).apply(null,arguments)},Rb=d.dynCall_iij=function(){return(Rb=d.dynCall_iij=d.asm.vb).apply(null,arguments)},Sb=d.dynCall_ji=function(){return(Sb=d.dynCall_ji=\r\nd.asm.wb).apply(null,arguments)},Tb=d.dynCall_iiiiiij=function(){return(Tb=d.dynCall_iiiiiij=d.asm.xb).apply(null,arguments)},Ub=d.dynCall_iiij=function(){return(Ub=d.dynCall_iiij=d.asm.yb).apply(null,arguments)};function cb(a,b){var c=Y();try{return U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function vb(a,b){var c=Y();try{U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function wb(a,b,c){var e=Y();try{U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nfunction fb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function gb(a,b,c,e){var f=Y();try{return U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function kb(a,b,c,e,f,h,k){var l=Y();try{return U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function ub(a){var b=Y();try{U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function jb(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction hb(a,b,c,e,f){var h=Y();try{return U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function yb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Ab(a,b,c,e,f,h){var k=Y();try{U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function zb(a,b,c,e,f){var h=Y();try{U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function Bb(a,b,c,e,f,h,k){var l=Y();try{U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}\r\nfunction Cb(a,b,c,e,f,h,k,l){var n=Y();try{U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function eb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function db(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function Db(a,b,c,e,f,h,k,l,n){var t=Y();try{U(a)(b,c,e,f,h,k,l,n)}catch(x){Z(t);if(x!==x+0)throw x;X(1,0)}}function ib(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction lb(a,b,c,e,f,h,k,l){var n=Y();try{return U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function mb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{return U(a)(b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function Eb(a,b,c,e,f,h,k,l,n,t,x){var E=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x)}catch(C){Z(E);if(C!==C+0)throw C;X(1,0)}}function Fb(a,b,c,e,f,h,k,l,n,t,x,E,C,g,u,w){var F=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x,E,C,g,u,w)}catch(M){Z(F);if(M!==M+0)throw M;X(1,0)}}\r\nfunction bb(a){var b=Y();try{return U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ab(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function $a(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function xb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Gb(a,b,c,e,f,h,k,l){var n=Y();try{Ob(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}\r\nfunction Ib(a,b,c,e,f,h){var k=Y();try{Pb(a,b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function Hb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{Qb(a,b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function qb(a,b,c,e){var f=Y();try{return Rb(a,b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function sb(a,b){var c=Y();try{return Sb(a,b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}\r\nfunction nb(a,b,c,e,f,h,k,l){var n=Y();try{return Tb(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function rb(a){var b=Y();try{return Lb(a)}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ob(a,b,c,e,f,h,k){var l=Y();try{return Mb(a,b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function pb(a,b,c,e,f){var h=Y();try{return Ub(a,b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function tb(a,b,c){var e=Y();try{return Nb(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nd.UTF8ToString=pa;d.stringToUTF8=function(a,b,c){return qa(a,G,b,c)};d.lengthBytesUTF8=ra;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=Kb;var Vb;L=function Wb(){Vb||Xb();Vb||(L=Wb)};\r\nfunction Xb(){function a(){if(!Vb&&(Vb=!0,d.calledRun=!0,!D)){O(wa);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();ya.unshift(b)}O(ya)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)za();O(va);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\r\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();Xb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.14.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var t={474:function(t,e,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){function e(){return j.buffer!=D&&N(j.buffer),P}function r(){return j.buffer!=D&&N(j.buffer),U}function a(){return j.buffer!=D&&N(j.buffer),F}function i(){return j.buffer!=D&&N(j.buffer),I}function o(){return j.buffer!=D&&N(j.buffer),W}var u,c,s;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,e){c=t,s=e}));var f,l,p,h,d,y,b=Object.assign({},u),m=\\\"./this.program\\\",v=(t,e)=>{throw e},g=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,_=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=u.ENVIRONMENT_IS_PTHREAD||!1,S=\\\"\\\";function A(t){return u.locateFile?u.locateFile(t,S):S+t}if(_){let e;S=w?n(908).dirname(S)+\\\"/\\\":\\\"//\\\",y=()=>{d||(h=n(384),d=n(908))},f=function(t,e){return y(),t=d.normalize(t),h.readFileSync(t,e?void 0:\\\"utf8\\\")},p=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),l=(t,e,n)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof ct))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),v=(t,e)=>{if($())throw process.exitCode=t,e;e instanceof ct||x(\\\"exiting due to exception: \\\"+e),process.exit(t)},u.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{e=n(925)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}n.g.Worker=e.Worker}else(g||w)&&(w?S=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(S=document.currentScript.src),_scriptDir&&(S=_scriptDir),S=0!==S.indexOf(\\\"blob:\\\")?S.substr(0,S.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",_||(f=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},w&&(p=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),l=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));_&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var T=console.log.bind(console),E=console.warn.bind(console);_&&(y(),T=t=>h.writeSync(1,t+\\\"\\\\n\\\"),E=t=>h.writeSync(2,t+\\\"\\\\n\\\"));var M,C=u.print||T,x=u.printErr||E;Object.assign(u,b),b=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(v=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&at(\\\"no native wasm support detected\\\");var j,k,D,P,U,F,I,W,H=!1,L=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function z(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&L)return L.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(t,e){return(t>>>=0)?z(r(),t,e):\\\"\\\"}function B(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function G(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=F=new Int32Array(t),u.HEAPU8=U=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}O&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(O)j=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)j=u.wasmMemory;else if(!((j=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),_&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");j&&(D=j.buffer),V=D.byteLength,N(D);var q,X=[],J=[],Z=[],Q=[];function $(){return R||!1}function K(){var t=u.preRun.shift();X.unshift(t)}var tt,et=0,nt=null,rt=null;function at(t){throw O?postMessage({cmd:\\\"onAbort\\\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\\\"Aborted(\\\"+t+\\\")\\\"),H=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),s(t),t}function it(){return tt.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ot(){var t=tt;try{if(t==tt&&M)return new Uint8Array(M);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){at(t)}}tt=\\\"ort-wasm-threaded.wasm\\\",it()||(tt=A(tt));var ut={};function ct(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function st(t){(t=ht.Vb[t])||at(),ht.mc(t)}function ft(t){var e=ht.Cc();if(!e)return 6;ht.ac.push(e),ht.Vb[t.Ub]=e,e.Ub=t.Ub;var n={cmd:\\\"run\\\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return e.$b=()=>{n.time=performance.now(),e.postMessage(n,t.Nc)},e.loaded&&(e.$b(),delete e.$b),0}function lt(t){if(O)return qt(1,1,t);$()||(ht.oc(),u.onExit&&u.onExit(t),H=!0),v(t,new ct(t))}function pt(t,e){if(!e&&O)throw bt(t),\\\"unwind\\\";$()||O||(me(),dt(Z),be(0),re[1].length&&ae(1,10),re[2].length&&ae(2,10),ht.oc()),lt(t)}var ht={Yb:[],ac:[],qc:[],Vb:{},fc:function(){O&&ht.Ec()},Pc:function(){},Ec:function(){ht.receiveObjectTransfer=ht.Gc,ht.threadInitTLS=ht.pc,ht.setExitStatus=ht.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(ht.Vb))ht.mc(t);for(t of ht.Yb)t.terminate();ht.Yb=[]},mc:function(t){var e=t.Ub;delete ht.Vb[e],ht.Yb.push(t),ht.ac.splice(ht.ac.indexOf(t),1),t.Ub=0,Oe(e)},Gc:function(){},pc:function(){ht.qc.forEach((t=>t()))},Fc:function(t,e){t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ub&&(ht.Bc=t.Ub),n.targetThread&&n.targetThread!=he()){var a=ht.Vb[n.Qc];a?a.postMessage(n,n.transferList):x('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"processProxyingQueue\\\"===r?zt(n.queue):\\\"spawnThread\\\"===r?ft(n):\\\"cleanupThread\\\"===r?st(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=ht.Vb[n],delete ht.Vb[n],r.terminate(),Oe(n),ht.ac.splice(ht.ac.indexOf(r),1),r.Ub=0):\\\"cancelThread\\\"===r?ht.Vb[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,e&&e(t),t.$b&&(t.$b(),delete t.$b)):\\\"print\\\"===r?C(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?x(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?t.postMessage(n):\\\"onAbort\\\"===r?u.onAbort&&u.onAbort(n.arg):r&&x(\\\"worker sent an unknown command \\\"+r);ht.Bc=void 0},t.onerror=t=>{throw x(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},_&&(t.on(\\\"message\\\",(function(e){t.onmessage({data:e})})),t.on(\\\"error\\\",(function(e){t.onerror(e)})),t.on(\\\"detachedExit\\\",(function(){}))),t.postMessage({cmd:\\\"load\\\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:j,wasmModule:k})},yc:function(){var t=A(\\\"ort-wasm-threaded.worker.js\\\");ht.Yb.push(new Worker(t))},Cc:function(){return 0==ht.Yb.length&&(ht.yc(),ht.Fc(ht.Yb[0])),ht.Yb.pop()}};function dt(t){for(;0<t.length;)t.shift()(u)}function yt(t){var e=Ee();return t=t(),Me(e),t}function bt(t){if(O)return qt(2,0,t);try{pt(t)}catch(t){t instanceof ct||\\\"unwind\\\"==t||v(1,t)}}u.PThread=ht,u.establishStackSpace=function(){var t=he(),e=a()[t+44>>2>>>0];t=a()[t+48>>2>>>0],Te(e,e-t),Me(e)};var mt=[];function vt(t){var e=mt[t];return e||(t>=mt.length&&(mt.length=t+1),mt[t]=e=q.get(t)),e}u.invokeEntryPoint=function(t,e){t=vt(t)(e),$()?ht.nc(t):Se(t)};var gt,wt,_t=[],Ot=0,St=0;function At(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){a()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,e()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=e()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,e()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=e()[this.Sb+13>>0>>>0]},this.fc=function(t,e){this.cc(0),this.xc(t),this.wc(e),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(a(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(a(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(Re(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function Tt(t){return ye(new At(t).Sb)}function Et(t,e,n,r){return O?qt(3,1,t,e,n,r):Mt(t,e,n,r)}function Mt(t,e,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return x(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];return O&&0===a.length?Et(t,e,n,r):(t={Ic:n,Ub:t,zc:r,Nc:a},O?(t.Oc=\\\"spawnThread\\\",postMessage(t,a),0):ft(t))}function Ct(t,e,n){return O?qt(4,1,t,e,n):0}function xt(t,e){if(O)return qt(5,1,t,e)}function Rt(t,e){if(O)return qt(6,1,t,e)}function jt(t,e,n){if(O)return qt(7,1,t,e,n)}function kt(t,e,n){return O?qt(8,1,t,e,n):0}function Dt(t,e){if(O)return qt(9,1,t,e)}function Pt(t,e,n){if(O)return qt(10,1,t,e,n)}function Ut(t,e,n,r){if(O)return qt(11,1,t,e,n,r)}function Ft(t,e,n,r){if(O)return qt(12,1,t,e,n,r)}function It(t,e,n,r){if(O)return qt(13,1,t,e,n,r)}function Wt(t){if(O)return qt(14,1,t)}function Ht(t,e){if(O)return qt(15,1,t,e)}function Lt(t,e,n){if(O)return qt(16,1,t,e,n)}function zt(t){Atomics.store(a(),t>>2,1),he()&&_e(t),Atomics.compareExchange(a(),t>>2,1,0)}function Yt(t){return i()[t>>>2]+4294967296*a()[t+4>>>2]}function Bt(t,e,n,r,a,i){return O?qt(17,1,t,e,n,r,a,i):-52}function Gt(t,e,n,r,a,i){if(O)return qt(18,1,t,e,n,r,a,i)}function Nt(t){var n=G(t)+1,r=de(n);return r&&B(t,e(),r,n),r}function Vt(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}if(O)return qt(19,1,t,e,n);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var s=c.getTimezoneOffset(),f=Math.max(o,s);a()[t>>2>>>0]=60*f,a()[e>>2>>>0]=Number(o!=s),t=r(u),e=r(c),t=Nt(t),e=Nt(e),s<o?(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e):(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t)}function qt(t,e){var n=arguments.length-2,r=arguments;return yt((()=>{for(var a=Ce(8*n),i=a>>3,u=0;u<n;u++){var c=r[2+u];o()[i+u>>>0]=c}return we(t,n,a,e)}))}u.executeNotifiedProxyingQueue=zt,wt=_?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:O?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Xt,Jt=[],Zt={};function Qt(){if(!Xt){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(t in Zt)void 0===Zt[t]?delete e[t]:e[t]=Zt[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);Xt=n}return Xt}function $t(t,n){if(O)return qt(20,1,t,n);var r=0;return Qt().forEach((function(a,o){var u=n+r;for(o=i()[t+4*o>>2>>>0]=u,u=0;u<a.length;++u)e()[o++>>0>>>0]=a.charCodeAt(u);e()[o>>0>>>0]=0,r+=a.length+1})),0}function Kt(t,e){if(O)return qt(21,1,t,e);var n=Qt();i()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),i()[e>>2>>>0]=r,0}function te(t){return O?qt(22,1,t):52}function ee(t,e,n,r){return O?qt(23,1,t,e,n,r):52}function ne(t,e,n,r,a){return O?qt(24,1,t,e,n,r,a):70}var re=[null,[],[]];function ae(t,e){var n=re[t];0===e||10===e?((1===t?C:x)(z(n,0)),n.length=0):n.push(e)}function ie(t,e,n,a){if(O)return qt(25,1,t,e,n,a);for(var o=0,u=0;u<n;u++){var c=i()[e>>2>>>0],s=i()[e+4>>2>>>0];e+=8;for(var f=0;f<s;f++)ae(t,r()[c+f>>>0]);o+=s}return i()[a>>2>>>0]=o,0}var oe=0;function ue(t){return 0==t%4&&(0!=t%100||0==t%400)}var ce=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function fe(t,n,r,i){function o(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function u(t,e){return o(t,e,\\\"0\\\")}function c(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function f(t){var e=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(ue(t.getFullYear())?ce:se)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=c(e,t)?0>=c(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=a()[i+40>>2>>>0];for(var p in i={Lc:a()[i>>2>>>0],Kc:a()[i+4>>2>>>0],dc:a()[i+8>>2>>>0],jc:a()[i+12>>2>>>0],ec:a()[i+16>>2>>>0],Xb:a()[i+20>>2>>>0],Tb:a()[i+24>>2>>>0],Wb:a()[i+28>>2>>>0],Rc:a()[i+32>>2>>>0],Jc:a()[i+36>>2>>>0],Mc:l?Y(l):\\\"\\\"},r=Y(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),l[p]);var h=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in l={\\\"%a\\\":function(t){return h[t.Tb].substring(0,3)},\\\"%A\\\":function(t){return h[t.Tb]},\\\"%b\\\":function(t){return d[t.ec].substring(0,3)},\\\"%B\\\":function(t){return d[t.ec]},\\\"%C\\\":function(t){return u((t.Xb+1900)/100|0,2)},\\\"%d\\\":function(t){return u(t.jc,2)},\\\"%e\\\":function(t){return o(t.jc,2,\\\" \\\")},\\\"%g\\\":function(t){return f(t).toString().substring(2)},\\\"%G\\\":function(t){return f(t)},\\\"%H\\\":function(t){return u(t.dc,2)},\\\"%I\\\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),u(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.ec-1;e+=(ue(t.Xb+1900)?ce:se)[n++]);return u(t.jc+e,3)},\\\"%m\\\":function(t){return u(t.ec+1,2)},\\\"%M\\\":function(t){return u(t.Kc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.dc&&12>t.dc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return u(t.Lc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Tb||7},\\\"%U\\\":function(t){return u(Math.floor((t.Wb+7-t.Tb)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&e++,e)53==e&&(4==(n=(t.Tb+371-t.Wb)%7)||3==n&&ue(t.Xb)||(e=1));else{e=52;var n=(t.Tb+7-t.Wb-1)%7;(4==n||5==n&&ue(t.Xb%400-1))&&e++}return u(e,2)},\\\"%w\\\":function(t){return t.Tb},\\\"%W\\\":function(t){return u(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Xb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Xb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Jc);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.Mc},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),l)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),l[p](i)));return p=function(t){var e=Array(G(t)+1);return B(t,e,0,e.length),e}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}ht.fc();var le=[null,lt,bt,Et,Ct,xt,Rt,jt,kt,Dt,Pt,Ut,Ft,It,Wt,Ht,Lt,Bt,Gt,Vt,$t,Kt,te,ee,ne,ie],pe={b:function(t){return de(t+24)+24},n:function(t){return(t=new At(t)).uc()||(t.hc(!0),Ot--),t.ic(!1),_t.push(t),t.sc(),t.vc()},ma:function(t){throw x(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),H=!0,t},x:function(){Ae(0);var t=_t.pop();if(t.Hc()&&!t.kc()){var e=t.Dc();e&&vt(e)(t.Zb),Tt(t.Zb)}St=0},e:function(){var t=St;if(!t)return oe=0;var e=new At(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},l:function(){var t=St;if(!t)return oe=0;var e=new At(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},h:function(){var t=St;if(!t)return oe=0;var e=new At(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},t:Tt,M:function(){var t=_t.pop();t||at(\\\"no exception to throw\\\");var e=t.Zb;throw t.kc()||(_t.push(t),t.ic(!0),t.hc(!1),Ot++),St=e,e},c:function(t,e,n){throw new At(t).fc(e,n),St=t,Ot++,t},pa:function(){return Ot},Fa:function(t){ve(t,!w,1,!g),ht.pc()},T:function(t){O?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):st(t)},xa:Mt,j:function(t){throw St||(St=t),t},H:Ct,Ma:xt,ua:Rt,wa:jt,oa:kt,Ka:Dt,Ca:Pt,Ja:Ut,V:Ft,va:It,sa:Wt,La:Ht,ta:Lt,Ta:function(){},X:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ua:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,e,n,r){if(t==e)setTimeout((()=>zt(r)));else if(O)postMessage({targetThread:t,cmd:\\\"processProxyingQueue\\\",queue:r});else{if(!(t=ht.Vb[t]))return;t.postMessage({cmd:\\\"processProxyingQueue\\\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getUTCSeconds(),a()[e+4>>2>>>0]=t.getUTCMinutes(),a()[e+8>>2>>>0]=t.getUTCHours(),a()[e+12>>2>>>0]=t.getUTCDate(),a()[e+16>>2>>>0]=t.getUTCMonth(),a()[e+20>>2>>>0]=t.getUTCFullYear()-1900,a()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[e+28>>2>>>0]=t},Qa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getFullYear()-1900,a()[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1),r=(t.getTime()-n.getTime())/864e5|0;a()[e+28>>2>>>0]=r,a()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(n=n.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(n,r)),a()[e+32>>2>>>0]=t},Ra:function(t){var e=new Date(a()[t+20>>2>>>0]+1900,a()[t+16>>2>>>0],a()[t+12>>2>>>0],a()[t+8>>2>>>0],a()[t+4>>2>>>0],a()[t>>2>>>0],0),n=a()[t+32>>2>>>0],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),o=new Date(e.getFullYear(),6,1).getTimezoneOffset(),u=i.getTimezoneOffset(),c=Math.min(u,o);return 0>n?a()[t+32>>2>>>0]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),e.setTime(e.getTime()+6e4*((0<n?c:o)-r))),a()[t+24>>2>>>0]=e.getDay(),n=(e.getTime()-i.getTime())/864e5|0,a()[t+28>>2>>>0]=n,a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(e,n,r){t.Ac||(t.Ac=!0,Vt(e,n,r))},y:function(){at(\\\"\\\")},U:function(){if(!_&&!w){var t=\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\";gt||(gt={}),gt[t]||(gt[t]=1,_&&(t=\\\"warning: \\\"+t),x(t))}},ra:function(){return 4294901760},B:wt,Ia:function(t,e,n){r().copyWithin(t>>>0,e>>>0,e+n>>>0)},F:function(){return _?n(993).cpus().length:navigator.hardwareConcurrency},Da:function(t,e,n){Jt.length=e,n>>=3;for(var r=0;r<e;r++)Jt[r]=o()[n+r>>>0];return(0>t?ut[-t-1]:le[t]).apply(null,Jt)},qa:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var a=e*(1+.2/n);a=Math.min(a,t+100663296);var i=Math;a=Math.max(t,a),i=i.min.call(i,4294901760,a+(65536-a%65536)%65536);t:{try{j.grow(i-D.byteLength+65535>>>16),N(j.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw\\\"unwind\\\"},Ga:$t,Ha:Kt,J:pt,I:te,S:ee,ga:ne,R:ie,d:function(){return oe},na:function t(r,a){t.lc||(t.lc=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(_)try{var e=n(Object(function(){var t=new Error(\\\"Cannot find module 'crypto'\\\");throw t.code=\\\"MODULE_NOT_FOUND\\\",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>at(\\\"randomDevice\\\")}());for(var i=0;i<a;i++)e()[r+i>>0>>>0]=t.lc();return 0},ia:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},ja:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},K:function(t){var e=Ee();try{return vt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Ae(1,0)}},f:function(t,e){var n=Ee();try{return vt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Ae(1,0)}},P:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},Q:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},k:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},p:function(t,e,n,r){var a=Ee();try{return vt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},q:function(t,e,n,r,a){var i=Ee();try{return vt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Ae(1,0)}},N:function(t,e,n,r,a,i){var o=Ee();try{return vt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},s:function(t,e,n,r,a,i){var o=Ee();try{return vt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},w:function(t,e,n,r,a,i,o){var u=Ee();try{return vt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Ae(1,0)}},L:function(t,e,n,r,a,i,o,u){var c=Ee();try{return vt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},E:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=Ee();try{return vt(t)(e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(Me(p),t!==t+0)throw t;Ae(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=Ee();try{return He(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},_:function(t,e,n,r,a,i,o){var u=Ee();try{return ke(t,e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Ae(1,0)}},Z:function(t,e,n,r,a){var i=Ee();try{return Le(t,e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Ae(1,0)}},ca:function(t,e,n,r){var a=Ee();try{return Ie(t,e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},$:function(t){var e=Ee();try{return je(t)}catch(t){if(Me(e),t!==t+0)throw t;Ae(1,0)}},ba:function(t,e){var n=Ee();try{return We(t,e)}catch(t){if(Me(n),t!==t+0)throw t;Ae(1,0)}},Y:function(t,e,n){var r=Ee();try{return De(t,e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},g:function(t){var e=Ee();try{vt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Ae(1,0)}},r:function(t,e){var n=Ee();try{vt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Ae(1,0)}},i:function(t,e,n){var r=Ee();try{vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},ha:function(t,e,n,r){var a=Ee();try{vt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},m:function(t,e,n,r){var a=Ee();try{vt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},v:function(t,e,n,r,a){var i=Ee();try{vt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Ae(1,0)}},u:function(t,e,n,r,a,i){var o=Ee();try{vt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},O:function(t,e,n,r,a,i,o){var u=Ee();try{vt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Ae(1,0)}},A:function(t,e,n,r,a,i,o,u){var c=Ee();try{vt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},ka:function(t,e,n,r,a,i,o,u,c){var s=Ee();try{vt(t)(e,n,r,a,i,o,u,c)}catch(t){if(Me(s),t!==t+0)throw t;Ae(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,f){var l=Ee();try{vt(t)(e,n,r,a,i,o,u,c,s,f)}catch(t){if(Me(l),t!==t+0)throw t;Ae(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,f,l,p,h,d,y){var b=Ee();try{vt(t)(e,n,r,a,i,o,u,c,s,f,l,p,h,d,y)}catch(t){if(Me(b),t!==t+0)throw t;Ae(1,0)}},fa:function(t,e,n,r,a,i,o,u){var c=Ee();try{Pe(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},da:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=Ee();try{Fe(t,e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(Me(p),t!==t+0)throw t;Ae(1,0)}},ea:function(t,e,n,r,a,i){var o=Ee();try{Ue(t,e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},o:function(t){return t},a:j||u.wasmMemory,G:function(t){oe=t},la:fe,z:function(t,e,n,r){return fe(t,e,n,r)}};!function(){function t(t,e){u.asm=t.exports,ht.qc.push(u.asm.sb),q=u.asm.ub,J.unshift(u.asm.Va),k=e,O||(et--,u.monitorRunDependencies&&u.monitorRunDependencies(et),0==et&&(null!==nt&&(clearInterval(nt),nt=null),rt&&(t=rt,rt=null,t())))}function e(e){t(e.instance,e.module)}function n(t){return function(){if(!M&&(g||w)){if(\\\"function\\\"==typeof fetch&&!tt.startsWith(\\\"file://\\\"))return fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+tt+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return ot()}));if(l)return new Promise((function(t,e){l(tt,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return ot()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\\\"failed to asynchronously prepare wasm: \\\"+t),at(t)}))}var r={a:pe};if(O||(et++,u.monitorRunDependencies&&u.monitorRunDependencies(et)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||it()||tt.startsWith(\\\"file://\\\")||_||\\\"function\\\"!=typeof fetch?n(e):fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){return x(\\\"wasm streaming compile failed: \\\"+t),x(\\\"falling back to ArrayBuffer instantiation\\\"),n(e)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var he=u._pthread_self=function(){return(he=u._pthread_self=u.asm.ob).apply(null,arguments)},de=u._malloc=function(){return(de=u._malloc=u.asm.pb).apply(null,arguments)},ye=u._free=function(){return(ye=u._free=u.asm.qb).apply(null,arguments)},be=u._fflush=function(){return(be=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var me=u.___funcs_on_exit=function(){return(me=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},ve=u.__emscripten_thread_init=function(){return(ve=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var ge,we=u._emscripten_run_in_main_runtime_thread_js=function(){return(we=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},_e=u.__emscripten_proxy_execute_task_queue=function(){return(_e=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Oe=u.__emscripten_thread_free_data=function(){return(Oe=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},Se=u.__emscripten_thread_exit=function(){return(Se=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Ae=u._setThrew=function(){return(Ae=u._setThrew=u.asm.Bb).apply(null,arguments)},Te=u._emscripten_stack_set_limits=function(){return(Te=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Ee=u.stackSave=function(){return(Ee=u.stackSave=u.asm.Db).apply(null,arguments)},Me=u.stackRestore=function(){return(Me=u.stackRestore=u.asm.Eb).apply(null,arguments)},Ce=u.stackAlloc=function(){return(Ce=u.stackAlloc=u.asm.Fb).apply(null,arguments)},xe=u.___cxa_can_catch=function(){return(xe=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},Re=u.___cxa_is_pointer_type=function(){return(Re=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},je=u.dynCall_j=function(){return(je=u.dynCall_j=u.asm.Ib).apply(null,arguments)},ke=u.dynCall_iiiiij=function(){return(ke=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},De=u.dynCall_jii=function(){return(De=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Pe=u.dynCall_viiiiij=function(){return(Pe=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Ue=u.dynCall_vjji=function(){return(Ue=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Fe=u.dynCall_viiijjjii=function(){return(Fe=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},Ie=u.dynCall_iij=function(){return(Ie=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},We=u.dynCall_ji=function(){return(We=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},He=u.dynCall_iiiiiij=function(){return(He=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Le=u.dynCall_iiij=function(){return(Le=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function ze(){function t(){if(!ge&&(ge=!0,u.calledRun=!0,!H)&&(O||dt(J),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!O)){if(u.postRun)for(\\\"function\\\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Q.unshift(t)}dt(Q)}}if(!(0<et))if(O)c(u),O||dt(J),postMessage({cmd:\\\"loaded\\\"});else{if(u.preRun)for(\\\"function\\\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)K();dt(X),0<et||(u.setStatus?(u.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){u.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(u.UTF8ToString=Y,u.stringToUTF8=function(t,e,n){return B(t,r(),e,n)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=$,u.wasmMemory=j,u.stackSave=Ee,u.stackRestore=Me,u.stackAlloc=Ce,u.ExitStatus=ct,u.PThread=ht,rt=function t(){ge||ze(),ge||(rt=t)},u.preInit)for(\\\"function\\\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ze(),t.ready});t.exports=r},932:function(t,e,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){var e,r,a;t=t||{},e||(e=void 0!==t?t:{}),e.ready=new Promise((function(t,e){r=t,a=e}));var i,o,u,c,s,f,l=Object.assign({},e),p=\\\"./this.program\\\",h=(t,e)=>{throw e},d=\\\"object\\\"==typeof window,y=\\\"function\\\"==typeof importScripts,b=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";b?(m=y?n(908).dirname(m)+\\\"/\\\":\\\"//\\\",f=()=>{s||(c=n(384),s=n(908))},i=function(t,e){return f(),t=s.normalize(t),c.readFileSync(t,e?void 0:\\\"utf8\\\")},u=t=>((t=i(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,e,n)=>{f(),t=s.normalize(t),c.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof Z))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),h=(t,e)=>{if(_||0<L)throw process.exitCode=t,e;e instanceof Z||w(\\\"exiting due to exception: \\\"+e),process.exit(t)},e.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||y)&&(y?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",i=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},y&&(u=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var v,g=e.print||console.log.bind(console),w=e.printErr||console.warn.bind(console);Object.assign(e,l),l=null,e.thisProgram&&(p=e.thisProgram),e.quit&&(h=e.quit),e.wasmBinary&&(v=e.wasmBinary);var _=e.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&V(\\\"no native wasm support detected\\\");var O,S,A,T,E,M,C=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function R(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&x)return x.decode(t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function j(t,e){return(t>>>=0)?R(T,t,e):\\\"\\\"}function k(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function D(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function P(){var t=O.buffer;S=t,e.HEAP8=A=new Int8Array(t),e.HEAP16=new Int16Array(t),e.HEAP32=E=new Int32Array(t),e.HEAPU8=T=new Uint8Array(t),e.HEAPU16=new Uint16Array(t),e.HEAPU32=M=new Uint32Array(t),e.HEAPF32=new Float32Array(t),e.HEAPF64=new Float64Array(t)}var U,F=[],I=[],W=[],H=[],L=0;function z(){var t=e.preRun.shift();F.unshift(t)}var Y,B=0,G=null,N=null;function V(t){throw e.onAbort&&e.onAbort(t),w(t=\\\"Aborted(\\\"+t+\\\")\\\"),C=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),a(t),t}function q(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(Y=\\\"ort-wasm.wasm\\\",!q()){var X=Y;Y=e.locateFile?e.locateFile(X,m):m+X}function J(){var t=Y;try{if(t==Y&&v)return new Uint8Array(v);if(u)return u(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){V(t)}}function Z(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function Q(t){for(;0<t.length;)t.shift()(e)}var $=[],K=0,tt=0;function et(t){this.Db=t,this.zb=t-24,this.Ub=function(t){M[this.zb+4>>2>>>0]=t},this.Eb=function(){return M[this.zb+4>>2>>>0]},this.Sb=function(t){M[this.zb+8>>2>>>0]=t},this.Wb=function(){return M[this.zb+8>>2>>>0]},this.Tb=function(){E[this.zb>>2>>>0]=0},this.Ib=function(t){A[this.zb+12>>0>>>0]=t?1:0},this.Pb=function(){return 0!=A[this.zb+12>>0>>>0]},this.Jb=function(t){A[this.zb+13>>0>>>0]=t?1:0},this.Lb=function(){return 0!=A[this.zb+13>>0>>>0]},this.Rb=function(t,e){this.Fb(0),this.Ub(t),this.Sb(e),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){E[this.zb>>2>>>0]+=1},this.Xb=function(){var t=E[this.zb>>2>>>0];return E[this.zb>>2>>>0]=t-1,1===t},this.Fb=function(t){M[this.zb+16>>2>>>0]=t},this.Ob=function(){return M[this.zb+16>>2>>>0]},this.Qb=function(){if(Mt(this.Eb()))return M[this.Db>>2>>>0];var t=this.Ob();return 0!==t?t:this.Db}}function nt(t){return gt(new et(t).zb)}var rt=[];function at(t){var e=rt[t];return e||(t>=rt.length&&(rt.length=t+1),rt[t]=e=U.get(t)),e}function it(t){var e=D(t)+1,n=vt(e);return n&&k(t,A,n,e),n}var ot={};function ut(){if(!ct){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(t in ot)void 0===ot[t]?delete e[t]:e[t]=ot[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);ct=n}return ct}var ct,st=[null,[],[]];function ft(t,e){var n=st[t];0===e||10===e?((1===t?g:w)(R(n,0)),n.length=0):n.push(e)}var lt=0;function pt(t){return 0==t%4&&(0!=t%100||0==t%400)}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],dt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(t,e,n,r){function a(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function i(t,e){return a(t,e,\\\"0\\\")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var e=t.Bb;for(t=new Date(new Date(t.Cb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(pt(t.getFullYear())?ht:dt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=u(new Date(t.getFullYear(),0,4)),n=u(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=E[r+40>>2>>>0];for(var f in r={$b:E[r>>2>>>0],Zb:E[r+4>>2>>>0],Gb:E[r+8>>2>>>0],Kb:E[r+12>>2>>>0],Hb:E[r+16>>2>>>0],Cb:E[r+20>>2>>>0],Ab:E[r+24>>2>>>0],Bb:E[r+28>>2>>>0],bc:E[r+32>>2>>>0],Yb:E[r+36>>2>>>0],ac:s?j(s):\\\"\\\"},n=j(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),s[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in s={\\\"%a\\\":function(t){return l[t.Ab].substring(0,3)},\\\"%A\\\":function(t){return l[t.Ab]},\\\"%b\\\":function(t){return p[t.Hb].substring(0,3)},\\\"%B\\\":function(t){return p[t.Hb]},\\\"%C\\\":function(t){return i((t.Cb+1900)/100|0,2)},\\\"%d\\\":function(t){return i(t.Kb,2)},\\\"%e\\\":function(t){return a(t.Kb,2,\\\" \\\")},\\\"%g\\\":function(t){return c(t).toString().substring(2)},\\\"%G\\\":function(t){return c(t)},\\\"%H\\\":function(t){return i(t.Gb,2)},\\\"%I\\\":function(t){return 0==(t=t.Gb)?t=12:12<t&&(t-=12),i(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.Hb-1;e+=(pt(t.Cb+1900)?ht:dt)[n++]);return i(t.Kb+e,3)},\\\"%m\\\":function(t){return i(t.Hb+1,2)},\\\"%M\\\":function(t){return i(t.Zb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Gb&&12>t.Gb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return i(t.$b,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Ab||7},\\\"%U\\\":function(t){return i(Math.floor((t.Bb+7-t.Ab)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Bb+7-(t.Ab+6)%7)/7);if(2>=(t.Ab+371-t.Bb-2)%7&&e++,e)53==e&&(4==(n=(t.Ab+371-t.Bb)%7)||3==n&&pt(t.Cb)||(e=1));else{e=52;var n=(t.Ab+7-t.Bb-1)%7;(4==n||5==n&&pt(t.Cb%400-1))&&e++}return i(e,2)},\\\"%w\\\":function(t){return t.Ab},\\\"%W\\\":function(t){return i(Math.floor((t.Bb+7-(t.Ab+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Cb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Yb);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.ac},\\\"%%\\\":function(){return\\\"%\\\"}},n=n.replace(/%%/g,\\\"\\\\0\\\\0\\\"),s)n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),s[f](r)));return f=function(t){var e=Array(D(t)+1);return k(t,e,0,e.length),e}(n=n.replace(/\\\\0\\\\0/g,\\\"%\\\")),f.length>e?0:(A.set(f,t>>>0),f.length-1)}var bt={a:function(t){return vt(t+24)+24},m:function(t){return(t=new et(t)).Pb()||(t.Ib(!0),K--),t.Jb(!1),$.push(t),t.Nb(),t.Qb()},ia:function(t){throw w(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),C=!0,t},w:function(){Ot(0);var t=$.pop();if(t.Xb()&&!t.Lb()){var e=t.Wb();e&&at(e)(t.Db),nt(t.Db)}tt=0},d:function(){var t=tt;if(!t)return lt=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return lt=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return lt=i,t}return lt=n,t},k:function(){var t=tt;if(!t)return lt=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return lt=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return lt=i,t}return lt=n,t},g:function(){var t=tt;if(!t)return lt=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return lt=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return lt=i,t}return lt=n,t},s:nt,L:function(){var t=$.pop();t||V(\\\"no exception to throw\\\");var e=t.Db;throw t.Lb()||($.push(t),t.Jb(!0),t.Ib(!1),K++),tt=e,e},b:function(t,e,n){throw new et(t).Rb(e,n),tt=t,K++,t},la:function(){return K},i:function(t){throw tt||(tt=t),t},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ia:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getUTCSeconds(),E[e+4>>2>>>0]=t.getUTCMinutes(),E[e+8>>2>>>0]=t.getUTCHours(),E[e+12>>2>>>0]=t.getUTCDate(),E[e+16>>2>>>0]=t.getUTCMonth(),E[e+20>>2>>>0]=t.getUTCFullYear()-1900,E[e+24>>2>>>0]=t.getUTCDay(),E[e+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getSeconds(),E[e+4>>2>>>0]=t.getMinutes(),E[e+8>>2>>>0]=t.getHours(),E[e+12>>2>>>0]=t.getDate(),E[e+16>>2>>>0]=t.getMonth(),E[e+20>>2>>>0]=t.getFullYear()-1900,E[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1);E[e+28>>2>>>0]=(t.getTime()-n.getTime())/864e5|0,E[e+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),E[e+32>>2>>>0]=0|(r!=n&&t.getTimezoneOffset()==Math.min(n,r))},Fa:function(t){var e=new Date(E[t+20>>2>>>0]+1900,E[t+16>>2>>>0],E[t+12>>2>>>0],E[t+8>>2>>>0],E[t+4>>2>>>0],E[t>>2>>>0],0),n=E[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),0,1),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),u=Math.min(o,i);return 0>n?E[t+32>>2>>>0]=Number(i!=o&&u==r):0<n!=(u==r)&&(i=Math.max(o,i),e.setTime(e.getTime()+6e4*((0<n?u:i)-r))),E[t+24>>2>>>0]=e.getDay(),E[t+28>>2>>>0]=(e.getTime()-a.getTime())/864e5|0,E[t>>2>>>0]=e.getSeconds(),E[t+4>>2>>>0]=e.getMinutes(),E[t+8>>2>>>0]=e.getHours(),E[t+12>>2>>>0]=e.getDate(),E[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function t(e,n,r){t.Vb||(t.Vb=!0,function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var u=o.getTimezoneOffset();E[t>>2>>>0]=60*Math.max(a,u),E[e>>2>>>0]=Number(a!=u),t=r(i),e=r(o),t=it(t),e=it(e),u<a?(M[n>>2>>>0]=t,M[n+4>>2>>>0]=e):(M[n>>2>>>0]=e,M[n+4>>2>>>0]=t)}(e,n,r))},B:function(){V(\\\"\\\")},ma:function(){return 4294901760},I:b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),xa:function(t,e,n){T.copyWithin(t>>>0,e>>>0,e+n>>>0)},G:function(t){var e=T.length;if(4294901760<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var a=Math;r=Math.max(t,r),a=a.min.call(a,4294901760,r+(65536-r%65536)%65536);t:{try{O.grow(a-S.byteLength+65535>>>16),P();var i=1;break t}catch(t){}i=void 0}if(i)return!0}return!1},va:function(t,e){var n=0;return ut().forEach((function(r,a){var i=e+n;for(a=M[t+4*a>>2>>>0]=i,i=0;i<r.length;++i)A[a++>>0>>>0]=r.charCodeAt(i);A[a>>0>>>0]=0,n+=r.length+1})),0},wa:function(t,e){var n=ut();M[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),M[e>>2>>>0]=r,0},ba:function(t){_||0<L||(_t(),Q(W),wt(0),st[1].length&&ft(1,10),st[2].length&&ft(2,10)),_||0<L||(e.onExit&&e.onExit(t),C=!0),h(t,new Z(t))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(t,e,n,r){for(var a=0,i=0;i<n;i++){var o=M[e>>2>>>0],u=M[e+4>>2>>>0];e+=8;for(var c=0;c<u;c++)ft(t,T[o+c>>>0]);a+=u}return M[r>>2>>>0]=a,0},c:function(){return lt},ja:function t(e,r){t.Mb||(t.Mb=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=n(Object(function(){var t=new Error(\\\"Cannot find module 'crypto'\\\");throw t.code=\\\"MODULE_NOT_FOUND\\\",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>V(\\\"randomDevice\\\")}());for(var a=0;a<r;a++)A[e+a>>0>>>0]=t.Mb();return 0},ea:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},fa:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},J:function(t){var e=St();try{return at(t)()}catch(t){if(At(e),t!==t+0)throw t;Ot(1,0)}},e:function(t,e){var n=St();try{return at(t)(e)}catch(t){if(At(n),t!==t+0)throw t;Ot(1,0)}},N:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},O:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},j:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},o:function(t,e,n,r){var a=St();try{return at(t)(e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},p:function(t,e,n,r,a){var i=St();try{return at(t)(e,n,r,a)}catch(t){if(At(i),t!==t+0)throw t;Ot(1,0)}},M:function(t,e,n,r,a,i){var o=St();try{return at(t)(e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},r:function(t,e,n,r,a,i){var o=St();try{return at(t)(e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},v:function(t,e,n,r,a,i,o){var u=St();try{return at(t)(e,n,r,a,i,o)}catch(t){if(At(u),t!==t+0)throw t;Ot(1,0)}},K:function(t,e,n,r,a,i,o,u){var c=St();try{return at(t)(e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=St();try{return at(t)(e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(At(p),t!==t+0)throw t;Ot(1,0)}},X:function(t,e,n,r,a,i,o,u){var c=St();try{return Ft(t,e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},V:function(t,e,n,r,a,i,o){var u=St();try{return xt(t,e,n,r,a,i,o)}catch(t){if(At(u),t!==t+0)throw t;Ot(1,0)}},U:function(t,e,n,r,a){var i=St();try{return It(t,e,n,r,a)}catch(t){if(At(i),t!==t+0)throw t;Ot(1,0)}},Z:function(t,e,n,r){var a=St();try{return Pt(t,e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},W:function(t){var e=St();try{return Ct(t)}catch(t){if(At(e),t!==t+0)throw t;Ot(1,0)}},Y:function(t,e){var n=St();try{return Ut(t,e)}catch(t){if(At(n),t!==t+0)throw t;Ot(1,0)}},T:function(t,e,n){var r=St();try{return Rt(t,e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},f:function(t){var e=St();try{at(t)()}catch(t){if(At(e),t!==t+0)throw t;Ot(1,0)}},q:function(t,e){var n=St();try{at(t)(e)}catch(t){if(At(n),t!==t+0)throw t;Ot(1,0)}},h:function(t,e,n){var r=St();try{at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},da:function(t,e,n,r){var a=St();try{at(t)(e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},l:function(t,e,n,r){var a=St();try{at(t)(e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},t:function(t,e,n,r,a){var i=St();try{at(t)(e,n,r,a)}catch(t){if(At(i),t!==t+0)throw t;Ot(1,0)}},u:function(t,e,n,r,a,i){var o=St();try{at(t)(e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},x:function(t,e,n,r,a,i,o){var u=St();try{at(t)(e,n,r,a,i,o)}catch(t){if(At(u),t!==t+0)throw t;Ot(1,0)}},z:function(t,e,n,r,a,i,o,u){var c=St();try{at(t)(e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},ga:function(t,e,n,r,a,i,o,u,c){var s=St();try{at(t)(e,n,r,a,i,o,u,c)}catch(t){if(At(s),t!==t+0)throw t;Ot(1,0)}},A:function(t,e,n,r,a,i,o,u,c,s,f){var l=St();try{at(t)(e,n,r,a,i,o,u,c,s,f)}catch(t){if(At(l),t!==t+0)throw t;Ot(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,f,l,p,h,d,y){var b=St();try{at(t)(e,n,r,a,i,o,u,c,s,f,l,p,h,d,y)}catch(t){if(At(b),t!==t+0)throw t;Ot(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=St();try{jt(t,e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},_:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=St();try{Dt(t,e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(At(p),t!==t+0)throw t;Ot(1,0)}},$:function(t,e,n,r,a,i){var o=St();try{kt(t,e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},n:function(t){return t},F:function(t){lt=t},ha:yt,y:function(t,e,n,r){return yt(t,e,n,r)}};!function(){function t(t){e.asm=t.exports,O=e.asm.Ka,P(),U=e.asm.ib,I.unshift(e.asm.La),B--,e.monitorRunDependencies&&e.monitorRunDependencies(B),0==B&&(null!==G&&(clearInterval(G),G=null),N&&(t=N,N=null,t()))}function n(e){t(e.instance)}function r(t){return function(){if(!v&&(d||y)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return J()}));if(o)return new Promise((function(t,e){o(Y,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return J()}))}().then((function(t){return WebAssembly.instantiate(t,i)})).then((function(t){return t})).then(t,(function(t){w(\\\"failed to asynchronously prepare wasm: \\\"+t),V(t)}))}var i={a:bt};if(B++,e.monitorRunDependencies&&e.monitorRunDependencies(B),e.instantiateWasm)try{return e.instantiateWasm(i,t)}catch(t){return w(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(v||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||q()||Y.startsWith(\\\"file://\\\")||b||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,i).then(n,(function(t){return w(\\\"wasm streaming compile failed: \\\"+t),w(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.La).apply(null,arguments)},e._OrtInit=function(){return(e._OrtInit=e.asm.Ma).apply(null,arguments)},e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Na).apply(null,arguments)},e._OrtAppendExecutionProvider=function(){return(e._OrtAppendExecutionProvider=e.asm.Oa).apply(null,arguments)},e._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Pa).apply(null,arguments)},e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Qa).apply(null,arguments)},e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ra).apply(null,arguments)},e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Sa).apply(null,arguments)},e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.Ta).apply(null,arguments)},e._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.Ua).apply(null,arguments)},e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.Va).apply(null,arguments)},e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Wa).apply(null,arguments)},e._OrtFree=function(){return(e._OrtFree=e.asm.Xa).apply(null,arguments)},e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ya).apply(null,arguments)},e._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Za).apply(null,arguments)},e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm._a).apply(null,arguments)},e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.$a).apply(null,arguments)},e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.ab).apply(null,arguments)},e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.bb).apply(null,arguments)},e._OrtRun=function(){return(e._OrtRun=e.asm.cb).apply(null,arguments)},e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.db).apply(null,arguments)};var mt,vt=e._malloc=function(){return(vt=e._malloc=e.asm.eb).apply(null,arguments)},gt=e._free=function(){return(gt=e._free=e.asm.fb).apply(null,arguments)},wt=e._fflush=function(){return(wt=e._fflush=e.asm.gb).apply(null,arguments)},_t=e.___funcs_on_exit=function(){return(_t=e.___funcs_on_exit=e.asm.hb).apply(null,arguments)},Ot=e._setThrew=function(){return(Ot=e._setThrew=e.asm.jb).apply(null,arguments)},St=e.stackSave=function(){return(St=e.stackSave=e.asm.kb).apply(null,arguments)},At=e.stackRestore=function(){return(At=e.stackRestore=e.asm.lb).apply(null,arguments)},Tt=e.stackAlloc=function(){return(Tt=e.stackAlloc=e.asm.mb).apply(null,arguments)},Et=e.___cxa_can_catch=function(){return(Et=e.___cxa_can_catch=e.asm.nb).apply(null,arguments)},Mt=e.___cxa_is_pointer_type=function(){return(Mt=e.___cxa_is_pointer_type=e.asm.ob).apply(null,arguments)},Ct=e.dynCall_j=function(){return(Ct=e.dynCall_j=e.asm.pb).apply(null,arguments)},xt=e.dynCall_iiiiij=function(){return(xt=e.dynCall_iiiiij=e.asm.qb).apply(null,arguments)},Rt=e.dynCall_jii=function(){return(Rt=e.dynCall_jii=e.asm.rb).apply(null,arguments)},jt=e.dynCall_viiiiij=function(){return(jt=e.dynCall_viiiiij=e.asm.sb).apply(null,arguments)},kt=e.dynCall_vjji=function(){return(kt=e.dynCall_vjji=e.asm.tb).apply(null,arguments)},Dt=e.dynCall_viiijjjii=function(){return(Dt=e.dynCall_viiijjjii=e.asm.ub).apply(null,arguments)},Pt=e.dynCall_iij=function(){return(Pt=e.dynCall_iij=e.asm.vb).apply(null,arguments)},Ut=e.dynCall_ji=function(){return(Ut=e.dynCall_ji=e.asm.wb).apply(null,arguments)},Ft=e.dynCall_iiiiiij=function(){return(Ft=e.dynCall_iiiiiij=e.asm.xb).apply(null,arguments)},It=e.dynCall_iiij=function(){return(It=e.dynCall_iiij=e.asm.yb).apply(null,arguments)};function Wt(){function t(){if(!mt&&(mt=!0,e.calledRun=!0,!C)){if(Q(I),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for(\\\"function\\\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t=e.postRun.shift();H.unshift(t)}Q(H)}}if(!(0<B)){if(e.preRun)for(\\\"function\\\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)z();Q(F),0<B||(e.setStatus?(e.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){e.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(e.UTF8ToString=j,e.stringToUTF8=function(t,e,n){return k(t,T,e,n)},e.lengthBytesUTF8=D,e.stackSave=St,e.stackRestore=At,e.stackAlloc=Tt,N=function t(){mt||Wt(),mt||(N=t)},e.preInit)for(\\\"function\\\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return Wt(),t.ready});t.exports=r},967:function(t,e){\\\"use strict\\\";var n=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,a,i=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)o.push(r.value)}catch(t){a={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=function(t,r,a,i){if(\\\"object\\\"==typeof t&&null!==t){if(a.has(t))throw new Error(\\\"Circular reference in options\\\");a.add(t)}Object.entries(t).forEach((function(t){var o=n(t,2),u=o[0],c=o[1],s=r?r+u:u;if(\\\"object\\\"==typeof c)(0,e.iterateExtraOptions)(c,s+\\\".\\\",a,i);else if(\\\"string\\\"==typeof c||\\\"number\\\"==typeof c)i(s,c.toString());else{if(\\\"boolean\\\"!=typeof c)throw new Error(\\\"Can't handle extra config type: \\\".concat(typeof c));i(s,c?\\\"1\\\":\\\"0\\\")}}))}},586:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setRunOptions=void 0;var r=n(967),a=n(983),i=n(361);e.setRunOptions=function(t){var e=(0,i.getInstance)(),n=0,o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);var c=0;if(void 0!==(null==t?void 0:t.tag)&&(c=(0,a.allocWasmString)(t.tag,o)),0===(n=e._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,c)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,i,u))throw new Error(\\\"Can't set a run config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},919:function(t,e,n){\\\"use strict\\\";var r=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setSessionOptions=void 0;var a=n(967),i=n(983),o=n(361);e.setSessionOptions=function(t){var e=(0,o.getInstance)(),n=0,u=[],c=t||{};!function(t){t.extra||(t.extra={}),t.extra.session||(t.extra.session={});var e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly=\\\"1\\\")}(c);try{void 0===(null==t?void 0:t.graphOptimizationLevel)&&(c.graphOptimizationLevel=\\\"all\\\");var s=function(t){switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\".concat(t))}}(c.graphOptimizationLevel);void 0===(null==t?void 0:t.enableCpuMemArena)&&(c.enableCpuMemArena=!0),void 0===(null==t?void 0:t.enableMemPattern)&&(c.enableMemPattern=!0),void 0===(null==t?void 0:t.executionMode)&&(c.executionMode=\\\"sequential\\\");var f=function(t){switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\".concat(t))}}(c.executionMode),l=0;if(void 0!==(null==t?void 0:t.logId)&&(l=(0,i.allocWasmString)(t.logId,u)),void 0===(null==t?void 0:t.logSeverityLevel))c.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))c.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));if(void 0===(null==t?void 0:t.enableProfiling)&&(c.enableProfiling=!1),0===(n=e._OrtCreateSessionOptions(s,!!c.enableCpuMemArena,!!c.enableMemPattern,f,!!c.enableProfiling,0,l,c.logSeverityLevel,c.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");return(null==t?void 0:t.executionProviders)&&function(t,e,n){var a,u;try{for(var c=r(e),s=c.next();!s.done;s=c.next()){var f=s.value,l=\\\"string\\\"==typeof f?f:f.name;switch(l){case\\\"xnnpack\\\":l=\\\"XNNPACK\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(\\\"not supported EP: \\\".concat(l))}var p=(0,i.allocWasmString)(l,n);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(t,p))throw new Error(\\\"Can't append execution provider: \\\".concat(l))}}catch(t){a={error:t}}finally{try{s&&!s.done&&(u=c.return)&&u.call(c)}finally{if(a)throw a.error}}}(n,t.executionProviders,u),void 0!==(null==t?void 0:t.extra)&&(0,a.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var a=(0,i.allocWasmString)(t,u),o=(0,i.allocWasmString)(r,u);if(0!==e._OrtAddSessionConfigEntry(n,a,o))throw new Error(\\\"Can't set a session config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[n,u]}catch(t){throw 0!==n&&e._OrtReleaseSessionOptions(n),u.forEach(e._free),t}}},983:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.allocWasmString=void 0;var r=n(361);e.allocWasmString=function(t,e){var n=(0,r.getInstance)(),a=n.lengthBytesUTF8(t)+1,i=n._malloc(a);return n.stringToUTF8(t,i,a),e.push(i),i}},349:function(t,e,n){\\\"use strict\\\";var r=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,a,i=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)o.push(r.value)}catch(t){a={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return o},a=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;var i=n(586),o=n(919),u=n(983),c=n(361);e.initOrt=function(t,e){var n=(0,c.getInstance)()._OrtInit(t,e);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\".concat(n))};var s=new Map;e.createSessionAllocate=function(t){var e=(0,c.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=function(t,e){var n,a=(0,c.getInstance)(),i=0,u=0,f=[];try{if(u=(n=r((0,o.setSessionOptions)(e),2))[0],f=n[1],0===(i=a._OrtCreateSession(t[0],t[1],u)))throw new Error(\\\"Can't create a session\\\")}finally{a._free(t[0]),a._OrtReleaseSessionOptions(u),f.forEach(a._free)}for(var l=a._OrtGetInputCount(i),p=a._OrtGetOutputCount(i),h=[],d=[],y=[],b=[],m=0;m<l;m++){var v=a._OrtGetInputName(i,m);if(0===v)throw new Error(\\\"Can't get an input name\\\");d.push(v),h.push(a.UTF8ToString(v))}for(m=0;m<p;m++){var g=a._OrtGetOutputName(i,m);if(0===g)throw new Error(\\\"Can't get an output name\\\");b.push(g),y.push(a.UTF8ToString(g))}return s.set(i,[i,d,b]),[i,h,y]},e.createSession=function(t,n){var r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=function(t){var e=(0,c.getInstance)(),n=s.get(t);if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=n[1],i=n[2];a.forEach(e._OrtFree),i.forEach(e._OrtFree),e._OrtReleaseSession(r),s.delete(t)};var f=function(t){switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},l=function(t){switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\".concat(t))}};e.run=function(t,e,n,a,o){var p,h=(0,c.getInstance)(),d=s.get(t);if(!d)throw new Error(\\\"invalid session id\\\");var y=d[0],b=d[1],m=d[2],v=e.length,g=a.length,w=0,_=[],O=[],S=[];try{w=(p=r((0,i.setRunOptions)(o),2))[0],_=p[1];for(var A=function(t){var e=n[t][0],r=n[t][1],a=n[t][2],i=void 0,o=void 0;if(Array.isArray(a)){o=4*a.length,i=h._malloc(o),S.push(i);for(var c=i/4,s=0;s<a.length;s++){if(\\\"string\\\"!=typeof a[s])throw new TypeError(\\\"tensor data at index \\\".concat(s,\\\" is not a string\\\"));h.HEAPU32[c++]=(0,u.allocWasmString)(a[s],S)}}else o=a.byteLength,i=h._malloc(o),S.push(i),h.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,o),i);var f=h.stackSave(),l=h.stackAlloc(4*r.length);try{var p=l/4;r.forEach((function(t){return h.HEAP32[p++]=t}));var d=h._OrtCreateTensor(function(t){switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\".concat(t))}}(e),i,o,l,r.length);if(0===d)throw new Error(\\\"Can't create a tensor\\\");O.push(d)}finally{h.stackRestore(f)}},T=0;T<v;T++)A(T);var E=h.stackSave(),M=h.stackAlloc(4*v),C=h.stackAlloc(4*v),x=h.stackAlloc(4*g),R=h.stackAlloc(4*g);try{var j=M/4,k=C/4,D=x/4,P=R/4;for(T=0;T<v;T++)h.HEAPU32[j++]=O[T],h.HEAPU32[k++]=b[e[T]];for(T=0;T<g;T++)h.HEAPU32[D++]=0,h.HEAPU32[P++]=m[a[T]];var U=h._OrtRun(y,C,M,v,R,g,x,w),F=[];if(0===U)for(T=0;T<g;T++){var I=h.HEAPU32[x/4+T],W=h.stackSave(),H=h.stackAlloc(16),L=void 0,z=0;try{if(0!==(U=h._OrtGetTensorData(I,H,H+4,H+8,H+12)))throw new Error(\\\"Can't access output tensor data. error code = \\\".concat(U));var Y=H/4,B=h.HEAPU32[Y++];z=h.HEAPU32[Y++];for(var G=h.HEAPU32[Y++],N=h.HEAPU32[Y++],V=[],q=0;q<N;q++)V.push(h.HEAPU32[G/4+q]);h._OrtFree(G);var X=0===V.length?1:V.reduce((function(t,e){return t*e}));if(\\\"string\\\"===(L=f(B))){for(var J=[],Z=z/4,Q=0;Q<X;Q++){var $=h.HEAPU32[Z++],K=Q===X-1?void 0:h.HEAPU32[Z]-$;J.push(h.UTF8ToString($,K))}F.push([L,V,J])}else{var tt=new(l(L))(X);new Uint8Array(tt.buffer,tt.byteOffset,tt.byteLength).set(h.HEAPU8.subarray(z,z+tt.byteLength)),F.push([L,V,tt])}}finally{h.stackRestore(W),\\\"string\\\"===L&&z&&h._free(z),h._OrtReleaseTensor(I)}}if(0===U)return F;throw new Error(\\\"failed to call OrtRun(). error code = \\\".concat(U,\\\".\\\"))}finally{h.stackRestore(E)}}finally{O.forEach(h._OrtReleaseTensor),S.forEach(h._free),h._OrtReleaseRunOptions(w),_.forEach(h._free)}},e.endProfiling=function(t){var e=(0,c.getInstance)(),n=s.get(t);if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=e._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");e._OrtFree(a)},e.extractTransferableBuffers=function(t){var e,n,r=[];try{for(var i=a(t),o=i.next();!o.done;o=i.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}},361:function(t,e,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(e,n);a&&!(\\\"get\\\"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,a)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),a=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return a(e,t),e},o=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(a,i){function o(t){try{c(r.next(t))}catch(t){i(t)}}function u(t){try{c(r.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}c((r=r.apply(t,e||[])).next())}))},u=this&&this.__generator||function(t,e){var n,r,a,i,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;i&&(i=0,u[0]&&(o=0)),o;)try{if(n=1,r&&(a=2&u[0]?r.return:u[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,u[1])).done)return a;switch(r=0,a&&(u=[2&u[0],a.value]),u[0]){case 0:case 1:a=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,r=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==u[0]&&2!==u[0])){o=0;continue}if(3===u[0]&&(!a||u[1]>a[0]&&u[1]<a[3])){o.label=u[1];break}if(6===u[0]&&o.label<a[1]){o.label=a[1],a=u;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(u);break}a[2]&&o.ops.pop(),o.trys.pop();continue}u=e.call(t,o)}catch(t){u=[6,t],r=0}finally{n=a=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},c=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;var s,f=i(n(449)),l=c(n(932)),p=n(474),h=!1,d=!1,y=!1,b=function(t,e){return e?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};e.initializeWebAssembly=function(t){return o(void 0,void 0,void 0,(function(){var e,r,a,i,o,c,m,v,g,w,_;return u(this,(function(u){switch(u.label){case 0:if(h)return[2,Promise.resolve()];if(d)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(y)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return d=!0,e=t.initTimeout,r=t.numThreads,a=t.simd,i=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}}(),o=a&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}}(),c=\\\"string\\\"==typeof t.wasmPaths?t.wasmPaths:void 0,m=b(!1,i),v=b(o,i),g=\\\"object\\\"==typeof t.wasmPaths?t.wasmPaths[v]:void 0,w=!1,_=[],e>0&&_.push(new Promise((function(t){setTimeout((function(){w=!0,t()}),e)}))),_.push(new Promise((function(t,e){var r=i?p:l.default,a={locateFile:function(t,e){return i&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):t===m?null!=g?g:(null!=c?c:e)+v:e+t}};if(i)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=f.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\".concat(r.toString(),\\\"})();\\\");a.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(a).then((function(e){d=!1,h=!0,s=e,t()}),(function(t){d=!1,y=!0,e(t)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\".concat(e,\\\"ms\\\"));return[2]}}))}))},e.getInstance=function(){if(h&&s)return s;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},e.dispose=function(){var t;!h||d||y||(d=!0,null===(t=s.PThread)||void 0===t||t.terminateAllThreads(),s=void 0,d=!1,h=!1,y=!0)}},154:function(t){\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var r=require(\\\"worker_threads\\\"),a=r.parentPort;a.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var t=n(349),e=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":(0,e.initializeWebAssembly)(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(t){return postMessage({type:\\\"init-wasm\\\",err:t})}));break;case\\\"init-ort\\\":try{var r=n.data.in,a=r.numThreads,i=r.loggingLevel;(0,t.initOrt)(a,i),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{var o=n.data.in.model,u=(0,t.createSessionAllocate)(o);postMessage({type:\\\"create_allocate\\\",out:u})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{var c=n.data.in,s=(u=c.modeldata,c.options),f=(0,t.createSessionFinalize)(u,s);postMessage({type:\\\"create_finalize\\\",out:f})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{var l=n.data.in;o=l.model,s=l.options,f=(0,t.createSession)(o,s),postMessage({type:\\\"create\\\",out:f})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{var p=n.data.in;(0,t.releaseSession)(p),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{var h=n.data.in,d=h.sessionId,y=h.inputIndices,b=h.inputs,m=h.outputIndices,v=(s=h.options,(0,t.run)(d,y,b,m,s));postMessage({type:\\\"run\\\",out:v},(0,t.extractTransferableBuffers)(v))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{p=n.data.in,(0,t.endProfiling)(p),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__1670__;","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__1670__","_scriptDir","t","document","currentScript","src","n","E","buffer","D","z","j","e","F","r","U","Y","I","u","o","c","ready","Promise","f","s","l","p","h","m","d","Object","assign","y","b","g","window","_","importScripts","v","process","versions","node","w","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","Uint8Array","readFile","argv","length","replace","slice","on","ot","J","exitCode","x","exit","inspect","console","error","Worker","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","S","log","bind","A","warn","writeSync","M","C","print","printErr","thisProgram","quit","wasmBinary","R","noExitRuntime","WebAssembly","rt","k","W","P","TextDecoder","H","decode","SharedArrayBuffer","subarray","String","fromCharCode","q","B","charCodeAt","G","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","N","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","V","L","X","Z","$","Q","preRun","shift","unshift","K","tt","nt","et","postMessage","cmd","arg","onAbort","RuntimeError","it","startsWith","at","ut","this","name","message","ct","pt","Vb","mc","ft","Cc","ac","push","Ub","start_routine","Ic","zc","pthread_ptr","$b","time","now","Nc","loaded","st","Vt","oc","onExit","lt","dt","bn","ht","yn","en","rn","Yb","qc","fc","Ec","Pc","receiveObjectTransfer","Gc","threadInitTLS","pc","setExitStatus","nc","values","terminate","splice","Tn","forEach","Fc","onmessage","data","Bc","targetThread","hn","Qc","transferList","Ht","queue","thread","threadId","text","alert","target","filename","lineno","urlOrBlob","mainScriptUrlOrBlob","wasmModule","yc","pop","mt","Mn","Cn","PThread","establishStackSpace","An","yt","bt","get","invokeEntryPoint","On","gt","_t","vt","wt","Tt","Ot","Zb","Sb","xc","bc","wc","Dc","rc","hc","uc","ic","kc","cc","sc","Atomics","add","Hc","sub","tc","vc","En","St","dn","At","Mt","Oc","Ct","xt","Rt","Et","kt","Dt","jt","Ft","Ut","Yt","It","Wt","Pt","store","wn","compareExchange","qt","Bt","Gt","zt","mn","Nt","toTimeString","match","Date","getFullYear","getTimezoneOffset","Math","max","Number","arguments","xn","vn","executeNotifiedProxyingQueue","hrtime","__performance_now_clock_drift","Lt","Xt","Zt","$t","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Jt","Qt","Kt","tn","nn","an","un","cn","fn","sn","toString","getMonth","getDate","getDay","Wb","Xb","getTime","setDate","setMonth","setFullYear","Lc","Kc","dc","jc","ec","Tb","Rc","Jc","Mc","RegExp","split","substring","floor","abs","includes","Array","set","ln","pn","ma","Sn","prototype","call","Rn","pa","Fa","gn","xa","Ma","ua","wa","oa","Ka","Ca","Ja","va","sa","La","ta","Ta","Ua","ya","Oa","za","setTimeout","Ea","Pa","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Qa","getSeconds","getMinutes","getHours","min","Ra","setTime","Aa","Ba","Sa","Ac","ra","Ia","copyWithin","hardwareConcurrency","Da","apply","qa","grow","Na","Ga","Ha","ga","na","lc","crypto","getRandomValues","randomBytes","ia","ja","aa","Pn","Dn","Hn","ca","In","kn","ba","Wn","jn","ha","ka","fa","Fn","da","Yn","ea","Un","la","asm","sb","ub","Va","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Wa","_OrtCreateSessionOptions","Xa","_OrtAppendExecutionProvider","Ya","_OrtAddSessionConfigEntry","Za","_OrtReleaseSessionOptions","_a","_OrtCreateSession","$a","_OrtReleaseSession","ab","_OrtGetInputCount","bb","_OrtGetOutputCount","cb","_OrtGetInputName","db","_OrtGetOutputName","eb","_OrtFree","fb","_OrtCreateTensor","gb","_OrtGetTensorData","hb","_OrtReleaseTensor","ib","_OrtCreateRunOptions","jb","_OrtAddRunConfigEntry","kb","_OrtReleaseRunOptions","lb","_OrtRun","mb","_OrtEndProfiling","nb","_pthread_self","ob","_malloc","pb","_free","qb","_fflush","rb","__emscripten_tls_init","___funcs_on_exit","tb","__emscripten_thread_init","vb","__emscripten_thread_crashed","wb","_n","_emscripten_run_in_main_runtime_thread_js","xb","__emscripten_proxy_execute_task_queue","yb","__emscripten_thread_free_data","zb","__emscripten_thread_exit","Ab","_setThrew","Bb","_emscripten_stack_set_limits","Cb","stackSave","Db","stackRestore","Eb","stackAlloc","Fb","___cxa_can_catch","Gb","___cxa_is_pointer_type","Hb","dynCall_j","Ib","dynCall_iiiiij","Jb","dynCall_jii","Kb","dynCall_viiiiij","Lb","dynCall_vjji","Mb","dynCall_viiijjjii","Nb","dynCall_iij","Ob","dynCall_ji","Pb","dynCall_iiiiiij","Qb","dynCall_iiij","Rb","qn","calledRun","onRuntimeInitialized","postRun","setStatus","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","ExitStatus","preInit","ortWasm","undefined","fs","ctx","params","offset","index","pending","reject","err","base64","string","charAt","ceil","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","args","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","__esModule","Guid","guid","TypeError","value","EMPTY","isGuid","validator","create","gen","createEmpty","parse","raw","count","out","random","equals","other","isEmpty","toJSON","Long","wasm","Instance","Module","low","high","unsigned","isLong","obj","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","result","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","bytes","fromBytesLE","fromBytesBE","valuesById","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","type","newBuffer","emptyArray","writer","hasOwnProperty","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","int32","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","object","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","version","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","finish","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","stack","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","init","createSessionHandler","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","handler","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","attributes","_attributes","Map","attr","Attribute","getValue","getType","delete","getFloat","defaultValue","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","width","height","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","glsl","getGlsl","floatTextureSetRGBASource","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","line1","line2","texture2D","programInfo","inputNames","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","swapLastDimsSnippet","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","isLittleEndian","decodeUint8","ArrayBuffer","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","run","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","cast","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","concat","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scaleWidth","scaleHeight","scale","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","to","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","inputCount","metadata","fill","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","fetchDataFromCorrectTextureMethod","getFetchDataFromCorrectTextureMethod","getSizeInConcatAxisValueFromIndexMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","searchAxis","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActivationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","computeTotalPad","inDim","adj","kernel","dilation","outSize","distributePadding","totalPad","smallPad","convTranspose2d","adjustedAttributes","getAdjustedConvTransposeAttributes","convTranspose2DUnpacked","valueInit","inputChannelsPerGroup","createUnpackedConvTransposeProgramInfo","createUnpackedConvTransposeProgramInfoLoader","outputPadding","spatialRank","updateShape","calculateOutputShapeAndPads","newAttributes","activationAttributes","parseInternalActivationAttributes","featureMaps","adjustPads","batchSize","inputSpatialShape","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","MIN_CLIP","MAX_CLIP","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","orank","irank","iDrank","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","alpha","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","declareC","broadcastC","calculateC","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","bias","imageScalerProgramMetadata","getBiasMethod","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","getOutputCoordsSnippet","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","validateInputsV2","createPadProgramInfo","validateInputsV11","attrubutes","generatePadAttributesFromInputs","integerData","padShape","padFunction","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","getAdjustedPoolAttributesAndOutputShape","op2","poolingCode","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","hasDilations","adjustPoolAttributes","computePoolOutputShape","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","padCode","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","oRank","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","logicalRowCount","sizeToDimension","featureCount","sizeFromDimension","computeSoftmax","transposeAttribute","isTransposeRequired","transposedInputShape","transposedInputs","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","validateInputsV13","sumProgramMetadata","createSumProgramInfo","sumLine","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","generateClipAttributesFromInputs","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","position","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","allocate","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","byteOffset","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","canvas","OffscreenCanvas","createElement","createCanvas","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","getContext","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","isFramebufferReady","getActiveTexture","getParameter","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","load","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","flatbuffers","ByteBuffer","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","bb_pos","__init","getRootAsShape","Shape","readInt32","getSizePrefixedRootAsShape","setPosition","SIZE_PREFIX_LENGTH","__offset","__indirect","__vector","__vector_len","startShape","builder","startObject","addDim","addFieldOffset","createDimVector","startVector","addOffset","endVector","startDimVector","numElems","endShape","endObject","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","__string","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","readInt8","UNKNOWN","readInt64","createLong","startDimensionValue","addDimType","addFieldInt8","addDimValue","addFieldInt64","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addFieldInt32","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","readUint32","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","prep","writeInt32","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","addInt32","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","readUint8","NONE","__union","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","addInt64","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","addInt8","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","readFloat32","floatsLength","graphsLength","startAttribute","addF","addFieldFloat32","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","addFloat32","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","readUint64","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","requiredField","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","__has_identifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","promisify","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","dataBuffer","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","pad","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSessionAllocate","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","path","modelData","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","epName","epNameDataOffset","setExecutionProviders","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","ortWasmFactoryThreaded","getWasmFileName","useSimd","useThreads","flags","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","opt_initial_size","initial_size","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","voffset","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","table","field","table_start","vtable_start","elem_size","num_elems","alignment","createString","codePoint","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","vtable_offset","opt_encoding","ident","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}