{"version":3,"file":"ort-web.node.js","mappings":";;;;;8CAAA,IAAIA,WAAWC,GAAsID,YAAnIA,WAAW,oBAAoBE,UAAUA,SAASC,cAAcD,SAASC,cAAcC,SAAI,IAA+DC,WAAY,SAASJ,GAAG,SAASK,IAAI,OAAOC,EAAEC,QAAQC,GAAGC,EAAEH,EAAEC,QAAQG,CAAC,CAAC,SAASC,IAAI,OAAOL,EAAEC,QAAQC,GAAGC,EAAEH,EAAEC,QAAQK,CAAC,CAAC,SAASC,IAAI,OAAOP,EAAEC,QAAQC,GAAGC,EAAEH,EAAEC,QAAQO,CAAC,CAAC,SAASC,IAAI,OAAOT,EAAEC,QAAQC,GAAGC,EAAEH,EAAEC,QAAQS,CAAC,CAAC,SAASC,IAAI,OAAOX,EAAEC,QAAQC,GAAGC,EAAEH,EAAEC,QAAQW,CAAC,CAAC,IAAIC,EAAEC,EAAEC,EAAErB,EAAEA,GAAG,CAAC,EAAEmB,IAAIA,OAAE,IAASnB,EAAEA,EAAE,CAAC,GAAGmB,EAAEG,MAAM,IAAIC,SAAQ,SAAUvB,EAAEK,GAAGe,EAAEpB,EAAEqB,EAAEhB,CAAE,IAAG,IAAImB,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,OAAOC,OAAO,CAAC,EAAEb,GAAGc,EAAE,iBAAiBC,EAAE,CAAClC,EAAEK,KAAK,MAAMA,GAAG8B,EAAE,iBAAiBC,OAAOC,EAAE,mBAAmBC,cAAcC,EAAE,iBAAiBC,SAAS,iBAAiBA,QAAQC,UAAU,iBAAiBD,QAAQC,SAASC,KAAKC,EAAExB,EAAEyB,yBAAwB,EAAGC,EAAE,GAAG,SAASC,EAAE9C,GAAG,OAAOmB,EAAE4B,WAAW5B,EAAE4B,WAAW/C,EAAE6C,GAAGA,EAAE7C,CAAC,CAAC,GAAGuC,EAAE,CAAC,IAAIvC,EAAE6C,EAAER,EAAE,gBAAwBQ,GAAG,IAAIG,UAAU,IAAInB,EAAE,KAAKD,IAAID,EAAE,EAAQ,MAAMC,EAAE,EAAQ,MAAO,EAAGJ,EAAE,SAASxB,EAAEK,GAAG,OAAOwB,IAAI7B,EAAE4B,EAAEqB,UAAUjD,GAAG2B,EAAEuB,aAAalD,EAAEK,OAAE,EAAO,OAAO,EAAEqB,EAAE1B,KAAKA,EAAEwB,EAAExB,GAAE,IAAKO,SAASP,EAAE,IAAImD,WAAWnD,IAAIA,GAAGyB,EAAE,CAACzB,EAAEK,EAAEM,KAAKkB,IAAI7B,EAAE4B,EAAEqB,UAAUjD,GAAG2B,EAAEyB,SAASpD,GAAE,SAAUA,EAAEa,GAAGb,EAAEW,EAAEX,GAAGK,EAAEQ,EAAEN,OAAQ,GAAC,EAAG,EAAEiC,QAAQa,KAAKC,SAASrB,EAAEO,QAAQa,KAAK,GAAGE,QAAQ,MAAM,MAAMf,QAAQa,KAAKG,MAAM,GAAGhB,QAAQiB,GAAG,qBAAoB,SAAUzD,GAAG,KAAKA,aAAa0D,IAAI,MAAM1D,CAAE,IAAGwC,QAAQiB,GAAG,sBAAqB,SAAUzD,GAAG,MAAMA,CAAE,IAAGkC,EAAE,CAAClC,EAAEK,KAAK,GAAGsD,IAAI,MAAMnB,QAAQoB,SAAS5D,EAAEK,EAAEA,aAAaqD,IAAIG,EAAE,6BAA6BxD,GAAGmC,QAAQsB,KAAK9D,EAAC,EAAGmB,EAAE4C,QAAQ,WAAW,MAAM,4BAA4B,EAAE,IAAI/D,EAAE,EAAQ,KAA2J,CAAzI,MAAMA,GAAG,MAAMgE,QAAQC,MAAM,2GAA2GjE,CAAC,CAACkE,OAAOC,OAAOnE,EAAEmE,MAAM,MAAMhC,GAAGE,KAAKA,EAAEQ,EAAEuB,KAAKC,SAASC,KAAK,oBAAoBrE,UAAUA,SAASC,gBAAgB2C,EAAE5C,SAASC,cAAcC,KAAKJ,aAAa8C,EAAE9C,YAAY8C,EAAE,IAAIA,EAAE0B,QAAQ,SAAS1B,EAAE2B,OAAO,EAAE3B,EAAEU,QAAQ,SAAS,IAAIkB,YAAY,KAAK,GAAG,GAAGlC,IAAIf,EAAExB,IAAI,IAAIK,EAAE,IAAIqE,eAAe,OAAOrE,EAAEsE,KAAK,MAAM3E,GAAE,GAAIK,EAAEuE,KAAK,MAAMvE,EAAEwE,cAAcxC,IAAIX,EAAE1B,IAAI,IAAIK,EAAE,IAAIqE,eAAe,OAAOrE,EAAEsE,KAAK,MAAM3E,GAAE,GAAIK,EAAEyE,aAAa,cAAczE,EAAEuE,KAAK,MAAM,IAAIzB,WAAW9C,EAAE0E,SAAQ,GAAItD,EAAE,CAACzB,EAAEK,EAAEM,KAAK,IAAIE,EAAE,IAAI6D,eAAe7D,EAAE8D,KAAK,MAAM3E,GAAE,GAAIa,EAAEiE,aAAa,cAAcjE,EAAEmE,OAAO,KAAK,KAAKnE,EAAEoE,QAAQ,GAAGpE,EAAEoE,QAAQpE,EAAEkE,SAAS1E,EAAEQ,EAAEkE,UAAUpE,GAAE,EAAGE,EAAEqE,QAAQvE,EAAEE,EAAE+D,KAAK,KAAI,IAAKrC,GAAG,oBAAoB4C,cAAcjB,OAAOiB,YAAY,oBAAmC,IAAIC,EAAEpB,QAAQqB,IAAIC,KAAKtB,SAASuB,EAAEvB,QAAQwB,KAAKF,KAAKtB,SAASzB,IAAIV,IAAIuD,EAAEpF,GAAG2B,EAAE8D,UAAU,EAAEzF,EAAE,MAAMuF,EAAEvF,GAAG2B,EAAE8D,UAAU,EAAEzF,EAAE,OAAO,IAAI0F,EAAEC,EAAExE,EAAEyE,OAAOR,EAAEvB,EAAE1C,EAAE0E,UAAUN,EAAExD,OAAOC,OAAOb,EAAEW,GAAGA,EAAE,KAAKX,EAAE2E,cAAc7D,EAAEd,EAAE2E,aAAa3E,EAAE4E,OAAO7D,EAAEf,EAAE4E,MAAM5E,EAAE6E,aAAaN,EAAEvE,EAAE6E,YAAY,IAAIC,EAAE9E,EAAE+E,gBAAe,EAAG,iBAAiBC,aAAaC,GAAG,mCAAmC,IAAI9F,EAAE+F,EAAE7F,EAAEE,EAAEE,EAAEE,EAAEE,EAAEE,EAAEoF,GAAE,EAAGC,EAAE,oBAAoBC,YAAY,IAAIA,YAAY,aAAQ,EAAO,SAASC,EAAEzG,EAAEK,EAAEM,GAAG,IAAIE,GAAGR,KAAK,GAAGM,EAAE,IAAIA,EAAEN,EAAEL,EAAEW,MAAMA,GAAGE,MAAMF,EAAE,GAAG,GAAGA,EAAEN,GAAGL,EAAEO,QAAQgG,EAAE,OAAOA,EAAEG,OAAO1G,EAAEO,kBAAkBoG,kBAAkB3G,EAAEwD,MAAMnD,EAAEM,GAAGX,EAAE4G,SAASvG,EAAEM,IAAI,IAAIE,EAAE,GAAGR,EAAEM,GAAG,CAAC,IAAII,EAAEf,EAAEK,KAAK,GAAG,IAAIU,EAAE,CAAC,IAAIE,EAAE,GAAGjB,EAAEK,KAAK,GAAG,MAAM,IAAIU,GAAGF,GAAGgG,OAAOC,cAAc,GAAG/F,IAAI,EAAEE,OAAO,CAAC,IAAIE,EAAE,GAAGnB,EAAEK,KAAK,OAAOU,EAAE,MAAM,IAAIA,IAAI,GAAGA,IAAI,GAAGE,GAAG,EAAEE,GAAG,EAAEJ,IAAI,GAAGE,GAAG,GAAGE,GAAG,EAAE,GAAGnB,EAAEK,MAAMQ,GAAGgG,OAAOC,aAAa/F,IAAIA,GAAG,MAAMF,GAAGgG,OAAOC,aAAa,MAAM/F,GAAG,GAAG,MAAM,KAAKA,GAAG,CAAC,MAAMF,GAAGgG,OAAOC,aAAa/F,EAAE,CAAC,OAAOF,CAAC,CAAC,SAASkG,EAAE/G,EAAEK,GAAG,OAAOL,KAAK,GAAGyG,EAAE9F,IAAIX,EAAEK,GAAG,EAAE,CAAC,SAAS2G,EAAEhH,EAAEK,EAAEM,EAAEE,GAAG,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAIE,EAAEJ,KAAK,EAAEE,EAAEF,EAAEE,EAAE,EAAE,IAAI,IAAII,EAAE,EAAEA,EAAEjB,EAAEsD,SAASrC,EAAE,CAAC,IAAIE,EAAEnB,EAAEiH,WAAWhG,GAAG,GAAG,OAAOE,GAAG,OAAOA,IAAIA,EAAE,QAAQ,KAAKA,IAAI,IAAI,KAAKnB,EAAEiH,aAAahG,IAAI,KAAKE,EAAE,CAAC,GAAGR,GAAGE,EAAE,MAAMR,EAAEM,MAAM,GAAGQ,CAAC,KAAK,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGR,EAAE,GAAGE,EAAE,MAAMR,EAAEM,MAAM,GAAG,IAAIQ,GAAG,CAAC,KAAK,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGR,EAAE,GAAGE,EAAE,MAAMR,EAAEM,MAAM,GAAG,IAAIQ,GAAG,EAAE,KAAK,CAAC,GAAGR,EAAE,GAAGE,EAAE,MAAMR,EAAEM,MAAM,GAAG,IAAIQ,GAAG,GAAGd,EAAEM,MAAM,GAAG,IAAIQ,GAAG,GAAG,EAAE,CAACd,EAAEM,MAAM,GAAG,IAAIQ,GAAG,EAAE,EAAE,CAACd,EAAEM,MAAM,GAAG,IAAI,GAAGQ,CAAC,CAAC,CAAC,OAAOd,EAAEM,IAAI,GAAG,EAAEA,EAAEI,CAAC,CAAC,SAASmG,EAAElH,GAAG,IAAI,IAAIK,EAAE,EAAEM,EAAE,EAAEA,EAAEX,EAAEsD,SAAS3C,EAAE,CAAC,IAAIE,EAAEb,EAAEiH,WAAWtG,GAAG,KAAKE,EAAER,IAAI,MAAMQ,EAAER,GAAG,EAAE,OAAOQ,GAAG,OAAOA,GAAGR,GAAG,IAAIM,GAAGN,GAAG,CAAC,CAAC,OAAOA,CAAC,CAAC,SAASI,EAAET,GAAGQ,EAAER,EAAEmB,EAAEgG,MAAMzG,EAAE,IAAI0G,UAAUpH,GAAGmB,EAAEkG,OAAO,IAAIC,WAAWtH,GAAGmB,EAAEoG,OAAOzG,EAAE,IAAI0G,WAAWxH,GAAGmB,EAAEsG,OAAO7G,EAAE,IAAIuC,WAAWnD,GAAGmB,EAAEuG,QAAQ,IAAIC,YAAY3H,GAAGmB,EAAEyG,QAAQ5G,EAAE,IAAI6G,YAAY7H,GAAGmB,EAAE2G,QAAQ,IAAIC,aAAa/H,GAAGmB,EAAE6G,QAAQ9G,EAAE,IAAI+G,aAAajI,EAAE,CAAC2C,IAAInC,EAAEW,EAAEZ,QAAQ,IAAI2H,EAAE/G,EAAEgH,gBAAgB,SAAS,GAAGxF,EAAErC,EAAEa,EAAEiH,WAAW5H,EAAEW,EAAEZ,YAAY,GAAGY,EAAEiH,WAAW9H,EAAEa,EAAEiH,gBAAgB,MAAM9H,EAAE,IAAI6F,YAAYkC,OAAO,CAACC,QAAQJ,EAAE,MAAMK,QAAQ,MAAMC,QAAO,KAAMjI,kBAAkBoG,mBAAmB,MAAM9C,EAAE,+NAA+NtB,GAAGyB,QAAQqB,IAAI,qHAAqHoD,MAAM,cAAcnI,IAAIE,EAAEF,EAAEC,QAAQ2H,EAAE1H,EAAEkI,WAAWjI,EAAED,GAAG,IAAImI,EAAEC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAG,SAASpF,IAAI,OAAOsC,IAAG,CAAE,CAAC,SAAS+C,IAAI,IAAIhJ,EAAEmB,EAAE8H,OAAOC,QAAQN,EAAEO,QAAQnJ,EAAE,CAAC,IAAIoJ,GAAEC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAK,SAASnD,GAAGpG,GAAG,MAAM2C,EAAE6G,YAAY,CAACC,IAAI,UAAUC,IAAI1J,IAAImB,EAAEwI,SAASxI,EAAEwI,QAAQ3J,GAAG6D,EAAE7D,EAAE,WAAWA,EAAE,KAAKsG,GAAE,EAAGtG,EAAE,IAAImG,YAAYyD,aAAa5J,EAAE,4CAA4CqB,EAAErB,GAAGA,CAAC,CAAC,SAAS6J,KAAK,OAAOT,GAAEU,WAAW,wCAAwC,CAAC,SAASC,KAAK,IAAI/J,EAAEoJ,GAAE,IAAI,GAAGpJ,GAAGoJ,IAAG1D,EAAE,OAAO,IAAIvC,WAAWuC,GAAG,GAAGhE,EAAE,OAAOA,EAAE1B,GAAG,KAAK,iDAAgE,CAAd,MAAMA,GAAGoG,GAAGpG,EAAE,CAAC,CAACoJ,GAAE,yBAAyBS,OAAOT,GAAEtG,EAAEsG,KAAI,IAAIY,GAAG,CAAC,EAAE,SAAStG,GAAG1D,GAAGiK,KAAKC,KAAK,aAAaD,KAAKE,QAAQ,gCAAgCnK,EAAE,IAAIiK,KAAKhF,OAAOjF,CAAC,CAAC,SAASoK,GAAGpK,IAAIA,EAAEqK,GAAGC,GAAGtK,KAAKoG,KAAKiE,GAAGE,GAAGvK,EAAE,CAAC,SAASwK,GAAGxK,GAAG,IAAIK,EAAEgK,GAAGI,KAAK,IAAIpK,EAAE,OAAO,EAAEgK,GAAGK,GAAGC,KAAKtK,GAAGgK,GAAGC,GAAGtK,EAAE4K,IAAIvK,EAAEA,EAAEuK,GAAG5K,EAAE4K,GAAG,IAAIjK,EAAE,CAAC8I,IAAI,MAAMoB,cAAc7K,EAAE8K,GAAGpB,IAAI1J,EAAE+K,GAAGC,YAAYhL,EAAE4K,IAAI,OAAOvK,EAAE4K,GAAG,KAAKtK,EAAEuK,KAAK/F,YAAYgG,MAAM9K,EAAEmJ,YAAY7I,EAAEX,EAAEoL,GAAE,EAAG/K,EAAEgL,SAAShL,EAAE4K,YAAY5K,EAAE4K,IAAI,CAAC,CAAC,SAASK,GAAGtL,GAAG,GAAG2C,EAAE,OAAO4I,GAAG,EAAE,EAAEvL,GAAG2D,MAAM0G,GAAGmB,KAAKrK,EAAEsK,QAAQtK,EAAEsK,OAAOzL,GAAGsG,GAAE,GAAIpE,EAAElC,EAAE,IAAI0D,GAAG1D,GAAG,CAAC,SAAS0L,GAAG1L,EAAEK,GAAG,IAAIA,GAAGsC,EAAE,MAAMgJ,GAAG3L,GAAG,SAAS2D,KAAKhB,IAAIiJ,KAAKC,GAAG/C,GAAGgD,GAAG,GAAGC,GAAG,GAAGzI,QAAQ0I,GAAG,EAAE,IAAID,GAAG,GAAGzI,QAAQ0I,GAAG,EAAE,IAAI3B,GAAGmB,MAAMF,GAAGtL,EAAE,CAAC,IAAIqK,GAAG,CAAC4B,GAAG,GAAGvB,GAAG,GAAGwB,GAAG,GAAG5B,GAAG,CAAC,EAAE6B,GAAG,WAAWxJ,GAAG0H,GAAG+B,IAAI,EAAEC,GAAG,WAAW,EAAED,GAAG,WAAW/B,GAAGiC,sBAAsBjC,GAAGkC,GAAGlC,GAAGmC,cAAcnC,GAAGoC,GAAGpC,GAAGqC,cAAcrC,GAAGsC,GAAG1G,GAAE,CAAE,EAAE0G,GAAG,WAAW,EAAEnB,GAAG,WAAW,IAAI,IAAIxL,KAAK+B,OAAO6K,OAAOvC,GAAGC,IAAID,GAAGE,GAAGvK,GAAG,IAAIA,KAAKqK,GAAG4B,GAAGjM,EAAE6M,YAAYxC,GAAG4B,GAAG,EAAE,EAAE1B,GAAG,SAASvK,GAAG,IAAIK,EAAEL,EAAE4K,UAAUP,GAAGC,GAAGjK,GAAGgK,GAAG4B,GAAGtB,KAAK3K,GAAGqK,GAAGK,GAAGoC,OAAOzC,GAAGK,GAAGnG,QAAQvE,GAAG,GAAGA,EAAE4K,GAAG,EAAEmC,GAAG1M,EAAE,EAAEkM,GAAG,WAAW,EAAEE,GAAG,WAAWpC,GAAG6B,GAAGc,SAAShN,GAAGA,KAAK,EAAEiN,GAAG,SAASjN,EAAEK,GAAGL,EAAEkN,UAAUvM,IAAI,IAAIE,GAAGF,EAAEA,EAAEwM,MAAM1D,IAAI,GAAGzJ,EAAE4K,KAAKP,GAAG+C,GAAGpN,EAAE4K,IAAIjK,EAAE0M,cAAc1M,EAAE0M,cAAcC,KAAK,CAAC,IAAIvM,EAAEsJ,GAAGC,GAAG3J,EAAE4M,IAAIxM,EAAEA,EAAEyI,YAAY7I,EAAEA,EAAE6M,cAAc3J,EAAE,0CAA0ChD,EAAE,uBAAuBF,EAAE0M,aAAa,sCAAsC,KAAK,yBAAyBxM,EAAE4M,GAAG9M,EAAE+M,OAAO,gBAAgB7M,EAAE2J,GAAG7J,GAAG,kBAAkBE,EAAEuJ,GAAGzJ,EAAEgN,QAAQ,eAAe9M,GAAGF,EAAEA,EAAEgN,OAAO9M,EAAEwJ,GAAGC,GAAG3J,UAAU0J,GAAGC,GAAG3J,GAAGE,EAAEgM,YAAYE,GAAGpM,GAAG0J,GAAGK,GAAGoC,OAAOzC,GAAGK,GAAGnG,QAAQ1D,GAAG,GAAGA,EAAE+J,GAAG,GAAG,iBAAiB/J,EAAEwJ,GAAGC,GAAG3J,EAAEgN,QAAQnE,YAAY,CAACC,IAAI,WAAW,WAAW5I,GAAGb,EAAEqL,QAAO,EAAGhL,GAAGA,EAAEL,GAAGA,EAAEiL,KAAKjL,EAAEiL,YAAYjL,EAAEiL,KAAK,UAAUpK,EAAE8E,EAAE,UAAUhF,EAAEiN,SAAS,KAAKjN,EAAEkN,MAAM,aAAahN,EAAEgD,EAAE,UAAUlD,EAAEiN,SAAS,KAAKjN,EAAEkN,MAAM,UAAUhN,EAAEiN,MAAM,UAAUnN,EAAEiN,SAAS,KAAKjN,EAAEkN,MAAM,iBAAiBlN,EAAEoN,OAAO/N,EAAEwJ,YAAY7I,GAAG,YAAYE,EAAEM,EAAEwI,SAASxI,EAAEwI,QAAQhJ,EAAE+I,KAAK7I,GAAGgD,EAAE,kCAAkChD,GAAGwJ,GAAG+C,QAAG,CAAK,EAAGpN,EAAEkF,QAAQlF,IAAI,MAAM6D,EAAE,yBAAyB7D,EAAEgO,SAAS,IAAIhO,EAAEiO,OAAO,KAAKjO,EAAEmK,SAASnK,GAAGuC,IAAIvC,EAAEyD,GAAG,WAAU,SAAUpD,GAAGL,EAAEkN,UAAU,CAACC,KAAK9M,GAAI,IAAGL,EAAEyD,GAAG,SAAQ,SAAUpD,GAAGL,EAAEkF,QAAQ7E,EAAG,IAAGL,EAAEyD,GAAG,gBAAe,WAAa,KAAIzD,EAAEwJ,YAAY,CAACC,IAAI,OAAOyE,UAAU/M,EAAEgN,qBAAqBpO,WAAWqI,WAAW9H,EAAE8N,WAAW/H,GAAG,EAAEgI,GAAG,WAAW,IAAIrO,EAAE8C,EAAE,+BAA+BuH,GAAG4B,GAAGtB,KAAK,IAAIxG,OAAOnE,GAAG,EAAEyK,GAAG,WAAW,OAAO,GAAGJ,GAAG4B,GAAG3I,SAAS+G,GAAGgE,KAAKhE,GAAG4C,GAAG5C,GAAG4B,GAAG,KAAK5B,GAAG4B,GAAGqC,KAAK,GAAG,SAASzC,GAAG7L,GAAG,KAAK,EAAEA,EAAEsD,QAAQtD,EAAEkJ,OAAFlJ,CAAUmB,EAAE,CAAC,SAASoN,GAAGvO,GAAG,IAAIK,EAAEmO,KAAK,OAAOxO,EAAEA,IAAIyO,GAAGpO,GAAGL,CAAC,CAAC,SAAS2L,GAAG3L,GAAG,GAAG2C,EAAE,OAAO4I,GAAG,EAAE,EAAEvL,GAAG,IAAI0L,GAAG1L,EAAgD,CAA7C,MAAMA,GAAGA,aAAa0D,IAAI,UAAU1D,GAAGkC,EAAE,EAAElC,EAAE,CAAC,CAACmB,EAAEuN,QAAQrE,GAAGlJ,EAAEwN,oBAAoB,WAAW,IAAI3O,EAAEsN,KAAKjN,EAAEQ,IAAIb,EAAE,IAAI,IAAI,GAAGA,EAAEa,IAAIb,EAAE,IAAI,IAAI,GAAG4O,GAAGvO,EAAEA,EAAEL,GAAGyO,GAAGpO,EAAE,EAAE,IAAIwO,GAAG,GAAG,SAASC,GAAG9O,GAAG,IAAIK,EAAEwO,GAAG7O,GAAG,OAAOK,IAAIL,GAAG6O,GAAGvL,SAASuL,GAAGvL,OAAOtD,EAAE,GAAG6O,GAAG7O,GAAGK,EAAEsI,EAAEoG,IAAI/O,IAAIK,CAAC,CAACc,EAAE6N,iBAAiB,SAAShP,EAAEK,GAAGL,EAAE8O,GAAG9O,EAAH8O,CAAMzO,GAAGsD,IAAI0G,GAAGsC,GAAG3M,GAAGiP,GAAGjP,EAAE,EAAE,IAAIkP,GAAGC,GAAGC,GAAG,GAAGC,GAAG,EAAEC,GAAG,EAAE,SAASC,GAAGvP,GAAGiK,KAAKuF,GAAGxP,EAAEiK,KAAKwF,GAAGzP,EAAE,GAAGiK,KAAKyF,GAAG,SAAS1P,GAAGe,IAAIkJ,KAAKwF,GAAG,GAAG,IAAI,GAAGzP,CAAC,EAAEiK,KAAK0F,GAAG,WAAW,OAAO5O,IAAIkJ,KAAKwF,GAAG,GAAG,IAAI,EAAE,EAAExF,KAAK2F,GAAG,SAAS5P,GAAGe,IAAIkJ,KAAKwF,GAAG,GAAG,IAAI,GAAGzP,CAAC,EAAEiK,KAAK4F,GAAG,WAAW,OAAO9O,IAAIkJ,KAAKwF,GAAG,GAAG,IAAI,EAAE,EAAExF,KAAK6F,GAAG,WAAWjP,IAAIoJ,KAAKwF,IAAI,IAAI,GAAG,CAAC,EAAExF,KAAK8F,GAAG,SAAS/P,GAAGA,EAAEA,EAAE,EAAE,EAAEK,IAAI4J,KAAKwF,GAAG,IAAI,IAAI,GAAGzP,CAAC,EAAEiK,KAAK+F,GAAG,WAAW,OAAO,GAAG3P,IAAI4J,KAAKwF,GAAG,IAAI,IAAI,EAAE,EAAExF,KAAKgG,GAAG,SAASjQ,GAAGA,EAAEA,EAAE,EAAE,EAAEK,IAAI4J,KAAKwF,GAAG,IAAI,IAAI,GAAGzP,CAAC,EAAEiK,KAAKiG,GAAG,WAAW,OAAO,GAAG7P,IAAI4J,KAAKwF,GAAG,IAAI,IAAI,EAAE,EAAExF,KAAKkC,GAAG,SAASnM,EAAEK,GAAG4J,KAAKkG,GAAG,GAAGlG,KAAKyF,GAAG1P,GAAGiK,KAAK2F,GAAGvP,GAAG4J,KAAK6F,KAAK7F,KAAK8F,IAAG,GAAI9F,KAAKgG,IAAG,EAAG,EAAEhG,KAAKmG,GAAG,WAAWC,QAAQC,IAAIzP,IAAIoJ,KAAKwF,IAAI,EAAE,EAAE,EAAExF,KAAKsG,GAAG,WAAW,OAAO,IAAIF,QAAQG,IAAI3P,IAAIoJ,KAAKwF,IAAI,EAAE,EAAE,EAAExF,KAAKkG,GAAG,SAASnQ,GAAGe,IAAIkJ,KAAKwF,GAAG,IAAI,IAAI,GAAGzP,CAAC,EAAEiK,KAAKwG,GAAG,WAAW,OAAO1P,IAAIkJ,KAAKwF,GAAG,IAAI,IAAI,EAAE,EAAExF,KAAKyG,GAAG,WAAW,GAAGC,GAAG1G,KAAK0F,MAAM,OAAO5O,IAAIkJ,KAAKuF,IAAI,IAAI,GAAG,IAAIxP,EAAEiK,KAAKwG,KAAK,OAAO,IAAIzQ,EAAEA,EAAEiK,KAAKuF,EAAE,CAAC,CAAC,SAASoB,GAAG5Q,GAAG,OAAO6Q,GAAG,IAAItB,GAAGvP,GAAGyP,GAAG,CAAC,SAASqB,GAAG9Q,EAAEK,EAAEM,EAAEE,GAAG,OAAO8B,EAAE4I,GAAG,EAAE,EAAEvL,EAAEK,EAAEM,EAAEE,GAAGkQ,GAAG/Q,EAAEK,EAAEM,EAAEE,EAAE,CAAC,SAASkQ,GAAG/Q,EAAEK,EAAEM,EAAEE,GAAG,GAAG,oBAAoB8F,kBAAkB,OAAO9C,EAAE,uFAAuF,EAAE,IAAI9C,EAAE,GAAG,OAAO4B,GAAG,IAAI5B,EAAEuC,OAAOwN,GAAG9Q,EAAEK,EAAEM,EAAEE,IAAIb,EAAE,CAAC8K,GAAGnK,EAAEiK,GAAG5K,EAAE+K,GAAGlK,EAAEuK,GAAGrK,GAAG4B,GAAG3C,EAAEgR,GAAG,cAAcxH,YAAYxJ,EAAEe,GAAG,GAAGyJ,GAAGxK,GAAG,CAAC,SAASiR,GAAGjR,EAAEK,EAAEM,GAAG,OAAOgC,EAAE4I,GAAG,EAAE,EAAEvL,EAAEK,EAAEM,GAAG,CAAC,CAAC,SAASuQ,GAAGlR,EAAEK,GAAG,GAAGsC,EAAE,OAAO4I,GAAG,EAAE,EAAEvL,EAAEK,EAAE,CAAC,SAAS8Q,GAAGnR,EAAEK,GAAG,GAAGsC,EAAE,OAAO4I,GAAG,EAAE,EAAEvL,EAAEK,EAAE,CAAC,SAAS+Q,GAAGpR,EAAEK,EAAEM,GAAG,GAAGgC,EAAE,OAAO4I,GAAG,EAAE,EAAEvL,EAAEK,EAAEM,EAAE,CAAC,SAAS0Q,GAAGrR,EAAEK,EAAEM,GAAG,OAAOgC,EAAE4I,GAAG,EAAE,EAAEvL,EAAEK,EAAEM,GAAG,CAAC,CAAC,SAAS2Q,GAAGtR,EAAEK,GAAG,GAAGsC,EAAE,OAAO4I,GAAG,EAAE,EAAEvL,EAAEK,EAAE,CAAC,SAASkR,GAAGvR,EAAEK,EAAEM,GAAG,GAAGgC,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAE,CAAC,SAAS6Q,GAAGxR,EAAEK,EAAEM,EAAEE,GAAG,GAAG8B,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,EAAE,CAAC,SAAS4Q,GAAGzR,EAAEK,EAAEM,EAAEE,GAAG,GAAG8B,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,EAAE,CAAC,SAAS6Q,GAAG1R,EAAEK,EAAEM,EAAEE,GAAG,GAAG8B,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,EAAE,CAAC,SAAS8Q,GAAG3R,GAAG,GAAG2C,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAE,CAAC,SAAS4R,GAAG5R,EAAEK,GAAG,GAAGsC,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAE,CAAC,SAASwR,GAAG7R,EAAEK,EAAEM,GAAG,GAAGgC,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAE,CAAC,SAAS8M,GAAGzN,GAAGqQ,QAAQyB,MAAMjR,IAAIb,GAAG,EAAE,GAAGsN,MAAMyE,GAAG/R,GAAGqQ,QAAQ2B,gBAAgBnR,IAAIb,GAAG,EAAE,EAAE,EAAE,CAAC,SAASiS,GAAGjS,GAAG,OAAOe,IAAIf,IAAI,GAAG,WAAWa,IAAIb,EAAE,IAAI,EAAE,CAAC,SAASkS,GAAGlS,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,GAAG,OAAO0B,EAAE4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,IAAI,EAAE,CAAC,SAASkR,GAAGnS,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,GAAG,GAAG0B,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAE,CAAC,SAASmR,GAAGpS,GAAG,IAAIW,EAAEuG,EAAElH,GAAG,EAAEa,EAAEwR,GAAG1R,GAAG,OAAOE,GAAGmG,EAAEhH,EAAEK,IAAIQ,EAAEF,GAAGE,CAAC,CAAC,SAASyR,GAAGtS,EAAEK,EAAEM,GAAG,SAASM,EAAEjB,GAAG,OAAOA,EAAEA,EAAEuS,eAAeC,MAAM,sBAAsBxS,EAAE,GAAG,KAAK,CAAC,GAAG2C,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,GAAG,IAAIQ,GAAE,IAAKsR,MAAMC,cAActR,EAAE,IAAIqR,KAAKtR,EAAE,EAAE,GAAGE,EAAE,IAAIoR,KAAKtR,EAAE,EAAE,GAAGA,EAAEC,EAAEuR,oBAAoB,IAAInR,EAAEH,EAAEsR,oBAAoBlR,EAAEmR,KAAKC,IAAI1R,EAAEK,GAAGX,IAAIb,GAAG,IAAI,GAAG,GAAGyB,EAAEZ,IAAIR,GAAG,IAAI,GAAGyS,OAAO3R,GAAGK,GAAGxB,EAAEiB,EAAEG,GAAGf,EAAEY,EAAEI,GAAGrB,EAAEoS,GAAGpS,GAAGK,EAAE+R,GAAG/R,GAAGmB,EAAEL,GAAGJ,IAAIJ,GAAG,IAAI,GAAGX,EAAEe,IAAIJ,EAAE,GAAG,IAAI,GAAGN,IAAIU,IAAIJ,GAAG,IAAI,GAAGN,EAAEU,IAAIJ,EAAE,GAAG,IAAI,GAAGX,EAAE,CAAC,SAASuL,GAAGvL,EAAEK,GAAG,IAAIM,EAAEoS,UAAUzP,OAAO,EAAEzC,EAAEkS,UAAU,OAAOxE,IAAG,KAAM,IAAI,IAAIxN,EAAEiS,GAAG,EAAErS,GAAGQ,EAAEJ,GAAG,EAAEK,EAAE,EAAEA,EAAET,EAAES,IAAI,CAAC,IAAIC,EAAER,EAAE,EAAEO,GAAGH,IAAIE,EAAEC,IAAI,GAAGC,CAAC,CAAC,OAAO4R,GAAGjT,EAAEW,EAAEI,EAAEV,EAAG,GAAE,CAACc,EAAE+R,6BAA6BzF,GAAG0B,GAAG5M,EAAE,KAAK,IAAIvC,EAAEwC,QAAQ2Q,SAAS,OAAO,IAAInT,EAAE,GAAGA,EAAE,GAAG,KAAK2C,EAAE,IAAIwC,YAAYgG,MAAMhK,EAAEiS,8BAA8B,IAAIjO,YAAYgG,MAAM,IAAIkI,GAAGC,GAAG,GAAGC,GAAG,CAAC,EAAE,SAASC,KAAK,IAAIH,GAAG,CAAC,IAAIrT,EAAEK,EAAE,CAACoT,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBC,WAAWA,UAAUC,WAAWD,UAAUC,UAAU,IAAI,KAAKzQ,QAAQ,IAAI,KAAK,SAASlB,EAAEJ,GAAG,kBAAkB,IAAIjC,KAAKuT,QAAG,IAASA,GAAGvT,UAAUK,EAAEL,GAAGK,EAAEL,GAAGuT,GAAGvT,GAAG,IAAIW,EAAE,GAAG,IAAIX,KAAKK,EAAEM,EAAEgK,KAAK3K,EAAE,IAAIK,EAAEL,IAAIqT,GAAG1S,CAAC,CAAC,OAAO0S,EAAE,CAAC,SAASY,GAAGjU,EAAEW,GAAG,GAAGgC,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEW,GAAG,IAAIE,EAAE,EAAE,OAAO2S,KAAKxG,SAAQ,SAAU/L,EAAEE,GAAG,IAAIC,EAAET,EAAEE,EAAE,IAAIM,EAAEJ,IAAIf,EAAE,EAAEmB,GAAG,IAAI,GAAGC,EAAEA,EAAE,EAAEA,EAAEH,EAAEqC,SAASlC,EAAEf,IAAIc,KAAK,IAAI,GAAGF,EAAEgG,WAAW7F,GAAGf,IAAIc,GAAG,IAAI,GAAG,EAAEN,GAAGI,EAAEqC,OAAO,CAAE,IAAG,CAAC,CAAC,SAAS4Q,GAAGlU,EAAEK,GAAG,GAAGsC,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,GAAG,IAAIM,EAAE6S,KAAKzS,IAAIf,GAAG,IAAI,GAAGW,EAAE2C,OAAO,IAAIzC,EAAE,EAAE,OAAOF,EAAEqM,SAAQ,SAAUhN,GAAGa,GAAGb,EAAEsD,OAAO,CAAE,IAAGvC,IAAIV,GAAG,IAAI,GAAGQ,EAAE,CAAC,CAAC,SAASsT,GAAGnU,GAAG,OAAO2C,EAAE4I,GAAG,GAAG,EAAEvL,GAAG,EAAE,CAAC,SAASoU,GAAGpU,EAAEK,EAAEM,EAAEE,GAAG,OAAO8B,EAAE4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,GAAG,EAAE,CAAC,SAASwT,GAAGrU,EAAEK,EAAEM,EAAEE,EAAEE,GAAG,OAAO4B,EAAE4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEM,EAAEE,EAAEE,GAAG,EAAE,CAAC,IAAIgL,GAAG,CAAC,KAAK,GAAG,IAAI,SAASC,GAAGhM,EAAEK,GAAG,IAAIM,EAAEoL,GAAG/L,GAAG,IAAIK,GAAG,KAAKA,IAAI,IAAIL,EAAE2F,EAAE9B,GAAG4C,EAAE9F,EAAE,IAAIA,EAAE2C,OAAO,GAAG3C,EAAEgK,KAAKtK,EAAE,CAAC,SAASiU,GAAGtU,EAAEK,EAAEQ,EAAEI,GAAG,GAAG0B,EAAE,OAAO4I,GAAG,GAAG,EAAEvL,EAAEK,EAAEQ,EAAEI,GAAG,IAAI,IAAIE,EAAE,EAAEC,EAAE,EAAEA,EAAEP,EAAEO,IAAI,CAAC,IAAIC,EAAEN,IAAIV,GAAG,IAAI,GAAGmB,EAAET,IAAIV,EAAE,GAAG,IAAI,GAAGA,GAAG,EAAE,IAAI,IAAIoB,EAAE,EAAEA,EAAED,EAAEC,IAAIuK,GAAGhM,EAAEW,IAAIU,EAAEI,IAAI,IAAIN,GAAGK,CAAC,CAAC,OAAOT,IAAIE,GAAG,IAAI,GAAGE,EAAE,CAAC,CAAC,IAAIoT,GAAG,EAAE,SAAS9Q,GAAGzD,GAAG,OAAO,GAAGA,EAAE,IAAI,GAAGA,EAAE,KAAK,GAAGA,EAAE,IAAI,CAAC,IAAIwU,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,SAASC,GAAG1U,EAAEW,EAAEI,EAAEE,GAAG,SAASE,EAAEnB,EAAEK,EAAEM,GAAG,IAAIX,EAAE,iBAAiBA,EAAEA,EAAE2U,WAAW3U,GAAG,GAAGA,EAAEsD,OAAOjD,GAAGL,EAAEW,EAAE,GAAGX,EAAE,OAAOA,CAAC,CAAC,SAASoB,EAAEpB,EAAEK,GAAG,OAAOc,EAAEnB,EAAEK,EAAE,IAAI,CAAC,SAASgB,EAAErB,EAAEK,GAAG,SAASM,EAAEX,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,CAAC,CAAC,IAAIa,EAAE,OAAO,KAAKA,EAAEF,EAAEX,EAAE0S,cAAcrS,EAAEqS,iBAAiB,KAAK7R,EAAEF,EAAEX,EAAE4U,WAAWvU,EAAEuU,eAAe/T,EAAEF,EAAEX,EAAE6U,UAAUxU,EAAEwU,YAAYhU,CAAC,CAAC,SAASW,EAAExB,GAAG,OAAOA,EAAE8U,UAAU,KAAK,EAAE,OAAO,IAAIrC,KAAKzS,EAAE0S,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO1S,EAAE,KAAK,EAAE,OAAO,IAAIyS,KAAKzS,EAAE0S,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAID,KAAKzS,EAAE0S,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAID,KAAKzS,EAAE0S,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAID,KAAKzS,EAAE0S,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAID,KAAKzS,EAAE0S,cAAc,EAAE,GAAG,IAAI,CAAC,SAASjR,EAAEzB,GAAG,IAAIK,EAAEL,EAAE+U,GAAG,IAAI/U,EAAE,IAAIyS,KAAK,IAAIA,KAAKzS,EAAEgV,GAAG,KAAK,EAAE,GAAGC,WAAW,EAAE5U,GAAG,CAAC,IAAIM,EAAEX,EAAE4U,WAAW/T,GAAG4C,GAAGzD,EAAE0S,eAAe8B,GAAGC,IAAI9T,GAAG,KAAKN,EAAEQ,EAAEb,EAAE6U,WAAW,CAAC7U,EAAEkV,QAAQlV,EAAE6U,UAAUxU,GAAG,KAAK,CAACA,GAAGQ,EAAEb,EAAE6U,UAAU,EAAE7U,EAAEkV,QAAQ,GAAG,GAAGvU,EAAEX,EAAEmV,SAASxU,EAAE,IAAIX,EAAEmV,SAAS,GAAGnV,EAAEoV,YAAYpV,EAAE0S,cAAc,GAAG,CAAC,OAAO/R,EAAE,IAAI8R,KAAKzS,EAAE0S,cAAc,EAAE,EAAE,GAAGrS,EAAEmB,EAAE,IAAIiR,KAAKzS,EAAE0S,cAAc,EAAE,IAAI/R,EAAEa,EAAEb,GAAG,GAAGU,EAAEhB,EAAEL,GAAG,GAAGqB,EAAEV,EAAEX,GAAGA,EAAE0S,cAAc,EAAE1S,EAAE0S,cAAc1S,EAAE0S,cAAc,CAAC,CAAC,IAAIhR,EAAEb,IAAII,EAAE,IAAI,IAAI,GAAG,IAAI,IAAIU,KAAKV,EAAE,CAACoU,GAAGxU,IAAII,GAAG,IAAI,GAAGqU,GAAGzU,IAAII,EAAE,GAAG,IAAI,GAAGsU,GAAG1U,IAAII,EAAE,GAAG,IAAI,GAAGuU,GAAG3U,IAAII,EAAE,IAAI,IAAI,GAAGwU,GAAG5U,IAAII,EAAE,IAAI,IAAI,GAAG+T,GAAGnU,IAAII,EAAE,IAAI,IAAI,GAAGyU,GAAG7U,IAAII,EAAE,IAAI,IAAI,GAAG8T,GAAGlU,IAAII,EAAE,IAAI,IAAI,GAAG0U,GAAG9U,IAAII,EAAE,IAAI,IAAI,GAAG2U,GAAG/U,IAAII,EAAE,IAAI,IAAI,GAAG4U,GAAGnU,EAAEqF,EAAErF,GAAG,IAAIX,EAAEgG,EAAEhG,GAAGW,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAMX,EAAEA,EAAEwC,QAAQ,IAAIuS,OAAOnU,EAAE,KAAKD,EAAEC,IAAI,IAAIC,EAAE,2DAA2DmU,MAAM,KAAKlU,EAAE,wFAAwFkU,MAAM,KAAK,IAAIpU,KAAKD,EAAE,CAAC,KAAK,SAAS1B,GAAG,OAAO4B,EAAE5B,EAAE0V,IAAIM,UAAU,EAAE,EAAE,EAAE,KAAK,SAAShW,GAAG,OAAO4B,EAAE5B,EAAE0V,GAAG,EAAE,KAAK,SAAS1V,GAAG,OAAO6B,EAAE7B,EAAEyV,IAAIO,UAAU,EAAE,EAAE,EAAE,KAAK,SAAShW,GAAG,OAAO6B,EAAE7B,EAAEyV,GAAG,EAAE,KAAK,SAASzV,GAAG,OAAOoB,GAAGpB,EAAEgV,GAAG,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,SAAShV,GAAG,OAAOoB,EAAEpB,EAAEwV,GAAG,EAAE,EAAE,KAAK,SAASxV,GAAG,OAAOmB,EAAEnB,EAAEwV,GAAG,EAAE,IAAI,EAAE,KAAK,SAASxV,GAAG,OAAOyB,EAAEzB,GAAG2U,WAAWqB,UAAU,EAAE,EAAE,KAAK,SAAShW,GAAG,OAAOyB,EAAEzB,EAAE,EAAE,KAAK,SAASA,GAAG,OAAOoB,EAAEpB,EAAEuV,GAAG,EAAE,EAAE,KAAK,SAASvV,GAAG,OAAO,IAAIA,EAAEA,EAAEuV,IAAIvV,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAIoB,EAAEpB,EAAE,EAAE,EAAE,KAAK,SAASA,GAAG,IAAI,IAAIK,EAAE,EAAEM,EAAE,EAAEA,GAAGX,EAAEyV,GAAG,EAAEpV,IAAIoD,GAAGzD,EAAEgV,GAAG,MAAMR,GAAGC,IAAI9T,MAAM,OAAOS,EAAEpB,EAAEwV,GAAGnV,EAAE,EAAE,EAAE,KAAK,SAASL,GAAG,OAAOoB,EAAEpB,EAAEyV,GAAG,EAAE,EAAE,EAAE,KAAK,SAASzV,GAAG,OAAOoB,EAAEpB,EAAEsV,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAAStV,GAAG,OAAO,GAAGA,EAAEuV,IAAI,GAAGvV,EAAEuV,GAAG,KAAK,IAAI,EAAE,KAAK,SAASvV,GAAG,OAAOoB,EAAEpB,EAAEqV,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASrV,GAAG,OAAOA,EAAE0V,IAAI,CAAC,EAAE,KAAK,SAAS1V,GAAG,OAAOoB,EAAEwR,KAAKqD,OAAOjW,EAAE+U,GAAG,EAAE/U,EAAE0V,IAAI,GAAG,EAAE,EAAE,KAAK,SAAS1V,GAAG,IAAIK,EAAEuS,KAAKqD,OAAOjW,EAAE+U,GAAG,GAAG/U,EAAE0V,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI1V,EAAE0V,GAAG,IAAI1V,EAAE+U,GAAG,GAAG,GAAG1U,IAAIA,EAAE,IAAIA,IAAI,IAAIM,GAAGX,EAAE0V,GAAG,IAAI1V,EAAE+U,IAAI,IAAI,GAAGpU,GAAG8C,GAAGzD,EAAEgV,MAAM3U,EAAE,QAAQ,CAACA,EAAE,GAAG,IAAIM,GAAGX,EAAE0V,GAAG,EAAE1V,EAAE+U,GAAG,GAAG,GAAG,GAAGpU,GAAG,GAAGA,GAAG8C,GAAGzD,EAAEgV,GAAG,IAAI,KAAK3U,GAAG,CAAC,OAAOe,EAAEf,EAAE,EAAE,EAAE,KAAK,SAASL,GAAG,OAAOA,EAAE0V,EAAE,EAAE,KAAK,SAAS1V,GAAG,OAAOoB,EAAEwR,KAAKqD,OAAOjW,EAAE+U,GAAG,GAAG/U,EAAE0V,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,SAAS1V,GAAG,OAAOA,EAAEgV,GAAG,MAAML,WAAWqB,UAAU,EAAE,EAAE,KAAK,SAAShW,GAAG,OAAOA,EAAEgV,GAAG,IAAI,EAAE,KAAK,SAAShV,GAAG,IAAIK,EAAE,IAAIL,EAAEA,EAAE4V,IAAI,OAAO5V,EAAE4S,KAAKsD,IAAIlW,GAAG,IAAIK,EAAE,IAAI,KAAKwG,OAAO,QAAQ7G,EAAE,GAAG,IAAIA,EAAE,KAAKwD,OAAO,EAAE,EAAE,KAAK,SAASxD,GAAG,OAAOA,EAAE6V,EAAE,EAAE,KAAK,WAAW,MAAM,GAAG,GAAG9U,EAAEA,EAAEwC,QAAQ,MAAM,QAAQ7B,EAAEX,EAAEoV,SAASxU,KAAKZ,EAAEA,EAAEwC,QAAQ,IAAIuS,OAAOnU,EAAE,KAAKD,EAAEC,GAAGV,KAAK,OAAOU,EAAE,SAAS3B,GAAG,IAAIK,EAAE+V,MAAMlP,EAAElH,GAAG,GAAG,OAAOgH,EAAEhH,EAAEK,EAAE,EAAEA,EAAEiD,QAAQjD,CAAC,CAA1D,CAA4DU,EAAEA,EAAEwC,QAAQ,QAAQ,MAAM5B,EAAE2B,OAAO3C,EAAE,GAAG,SAASX,EAAEW,GAAGN,IAAIgW,IAAIrW,EAAEW,IAAI,EAAE,CAA9B,CAAgCgB,EAAE3B,GAAG2B,EAAE2B,OAAO,EAAE,CAAC+G,GAAG8B,KAAK,IAAImK,GAAG,CAAC,KAAKhL,GAAGK,GAAGmF,GAAGG,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGK,GAAGC,GAAGG,GAAG2B,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,IAAIiC,GAAG,CAACrU,EAAE,SAASlC,GAAG,OAAOqS,GAAGrS,EAAE,IAAI,EAAE,EAAEK,EAAE,SAASL,GAAG,OAAOA,EAAE,IAAIuP,GAAGvP,IAAIgQ,OAAOhQ,EAAE+P,IAAG,GAAIV,MAAMrP,EAAEiQ,IAAG,GAAIb,GAAGzE,KAAK3K,GAAGA,EAAEoQ,KAAKpQ,EAAE0Q,IAAI,EAAE8F,GAAG,SAASxW,GAAG,MAAM6D,EAAE,0EAA0EyC,GAAE,EAAGtG,CAAC,EAAE6D,EAAE,WAAW4S,GAAG,GAAG,IAAIzW,EAAEoP,GAAGd,MAAM,GAAGtO,EAAEuQ,OAAOvQ,EAAEkQ,KAAK,CAAC,IAAI7P,EAAEL,EAAE6P,KAAKxP,GAAGyO,GAAGzO,EAAHyO,CAAM9O,EAAEwP,IAAIoB,GAAG5Q,EAAEwP,GAAG,CAACF,GAAG,CAAC,EAAE3O,EAAE,WAAW,IAAIX,EAAEsP,GAAG,IAAItP,EAAE,OAAOuU,GAAG,EAAE,IAAIlU,EAAE,IAAIkP,GAAGvP,GAAGK,EAAE8P,GAAGnQ,GAAG,IAAIW,EAAEN,EAAEsP,KAAK,IAAIhP,EAAE,OAAO4T,GAAG,EAAEvU,EAAE,IAAI,IAAIa,EAAEuV,MAAMM,UAAUlT,MAAMmT,KAAK5D,WAAWhS,EAAE,EAAEA,EAAEF,EAAEyC,OAAOvC,IAAI,CAAC,IAAIE,EAAEJ,EAAEE,GAAG,GAAG,IAAIE,GAAGA,IAAIN,EAAE,MAAM,GAAGiW,GAAG3V,EAAEN,EAAEN,EAAEoP,GAAG,IAAI,OAAO8E,GAAGtT,EAAEjB,CAAC,CAAC,OAAOuU,GAAG5T,EAAEX,CAAC,EAAE0B,EAAE,WAAW,IAAI1B,EAAEsP,GAAG,IAAItP,EAAE,OAAOuU,GAAG,EAAE,IAAIlU,EAAE,IAAIkP,GAAGvP,GAAGK,EAAE8P,GAAGnQ,GAAG,IAAIW,EAAEN,EAAEsP,KAAK,IAAIhP,EAAE,OAAO4T,GAAG,EAAEvU,EAAE,IAAI,IAAIa,EAAEuV,MAAMM,UAAUlT,MAAMmT,KAAK5D,WAAWhS,EAAE,EAAEA,EAAEF,EAAEyC,OAAOvC,IAAI,CAAC,IAAIE,EAAEJ,EAAEE,GAAG,GAAG,IAAIE,GAAGA,IAAIN,EAAE,MAAM,GAAGiW,GAAG3V,EAAEN,EAAEN,EAAEoP,GAAG,IAAI,OAAO8E,GAAGtT,EAAEjB,CAAC,CAAC,OAAOuU,GAAG5T,EAAEX,CAAC,EAAE4B,EAAE,WAAW,IAAI5B,EAAEsP,GAAG,IAAItP,EAAE,OAAOuU,GAAG,EAAE,IAAIlU,EAAE,IAAIkP,GAAGvP,GAAGK,EAAE8P,GAAGnQ,GAAG,IAAIW,EAAEN,EAAEsP,KAAK,IAAIhP,EAAE,OAAO4T,GAAG,EAAEvU,EAAE,IAAI,IAAIa,EAAEuV,MAAMM,UAAUlT,MAAMmT,KAAK5D,WAAWhS,EAAE,EAAEA,EAAEF,EAAEyC,OAAOvC,IAAI,CAAC,IAAIE,EAAEJ,EAAEE,GAAG,GAAG,IAAIE,GAAGA,IAAIN,EAAE,MAAM,GAAGiW,GAAG3V,EAAEN,EAAEN,EAAEoP,GAAG,IAAI,OAAO8E,GAAGtT,EAAEjB,CAAC,CAAC,OAAOuU,GAAG5T,EAAEX,CAAC,EAAEA,EAAE4Q,GAAGlL,EAAE,WAAW,IAAI1F,EAAEoP,GAAGd,MAAMtO,GAAGoG,GAAG,yBAAyB,IAAI/F,EAAEL,EAAEwP,GAAG,MAAMxP,EAAEkQ,OAAOd,GAAGzE,KAAK3K,GAAGA,EAAEiQ,IAAG,GAAIjQ,EAAE+P,IAAG,GAAIV,MAAMC,GAAGjP,EAAEA,CAAC,EAAEgB,EAAE,SAASrB,EAAEK,EAAEM,GAAG,MAAM,IAAI4O,GAAGvP,GAAGmM,GAAG9L,EAAEM,GAAG2O,GAAGtP,EAAEqP,KAAKrP,CAAC,EAAE6W,GAAG,WAAW,OAAOxH,EAAE,EAAEyH,GAAG,SAAS9W,GAAG+W,GAAG/W,GAAGqC,EAAE,GAAGF,GAAGkI,GAAGoC,IAAI,EAAE5J,EAAE,SAAS7C,GAAG2C,EAAE6G,YAAY,CAACC,IAAI,gBAAgBkE,OAAO3N,IAAIoK,GAAGpK,EAAE,EAAEgX,GAAGjG,GAAGrQ,EAAE,SAASV,GAAG,MAAMsP,KAAKA,GAAGtP,GAAGA,CAAC,EAAEyG,EAAEwK,GAAGgG,GAAG/F,GAAGgG,GAAG/F,GAAGgG,GAAG/F,GAAGgG,GAAG/F,GAAGgG,GAAG/F,GAAGgG,GAAG/F,GAAGgG,GAAG/F,GAAG7I,EAAE8I,GAAG+F,GAAG9F,GAAG+F,GAAG9F,GAAG+F,GAAG9F,GAAG+F,GAAG9F,GAAG+F,GAAG,WAAW,EAAE/O,EAAE,WAAWzC,GAAG,iHAAiH,EAAEyR,GAAG,WAAWzR,GAAG,iHAAiH,EAAEE,EAAE,WAAW,OAAOmM,KAAKtH,KAAK,EAAE2M,GAAG,WAAW,OAAO,OAAO,EAAEC,GAAG,WAAW,OAAM,CAAE,EAAEC,GAAG,SAAShY,EAAEK,EAAEM,EAAEE,GAAG,GAAGb,GAAGK,EAAE4X,YAAW,IAAKxK,GAAG5M,UAAU,GAAG8B,EAAE6G,YAAY,CAAC6D,aAAarN,EAAEyJ,IAAI,uBAAuBiE,MAAM7M,QAAQ,CAAC,KAAKb,EAAEqK,GAAGC,GAAGtK,IAAI,OAAOA,EAAEwJ,YAAY,CAACC,IAAI,uBAAuBiE,MAAM7M,GAAG,CAAC,OAAO,CAAC,EAAEqX,GAAG,WAAW,OAAO,CAAC,EAAEC,GAAG,SAASnY,EAAEK,GAAGL,EAAE,IAAIyS,KAAK,IAAIR,GAAGjS,IAAIa,IAAIR,GAAG,IAAI,GAAGL,EAAEoY,gBAAgBvX,IAAIR,EAAE,GAAG,IAAI,GAAGL,EAAEqY,gBAAgBxX,IAAIR,EAAE,GAAG,IAAI,GAAGL,EAAEsY,cAAczX,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAEuY,aAAa1X,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAEwY,cAAc3X,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAEyY,iBAAiB,KAAK5X,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAE0Y,YAAY1Y,GAAGA,EAAEiV,UAAUxC,KAAKkG,IAAI3Y,EAAEyY,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,EAAE5X,IAAIR,EAAE,IAAI,IAAI,GAAGL,CAAC,EAAE4Y,GAAG,SAAS5Y,EAAEK,GAAGL,EAAE,IAAIyS,KAAK,IAAIR,GAAGjS,IAAIa,IAAIR,GAAG,IAAI,GAAGL,EAAE6Y,aAAahY,IAAIR,EAAE,GAAG,IAAI,GAAGL,EAAE8Y,aAAajY,IAAIR,EAAE,GAAG,IAAI,GAAGL,EAAE+Y,WAAWlY,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAE6U,UAAUhU,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAE4U,WAAW/T,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAE0S,cAAc,KAAK7R,IAAIR,EAAE,IAAI,IAAI,GAAGL,EAAE8U,SAAS,IAAInU,EAAE,IAAI8R,KAAKzS,EAAE0S,cAAc,EAAE,GAAG3R,GAAGf,EAAEiV,UAAUtU,EAAEsU,WAAW,MAAM,EAAEpU,IAAIR,EAAE,IAAI,IAAI,GAAGU,EAAEF,IAAIR,EAAE,IAAI,IAAI,IAAI,GAAGL,EAAE2S,oBAAoB5R,EAAE,IAAI0R,KAAKzS,EAAE0S,cAAc,EAAE,GAAGC,oBAAoB3S,EAAE,GAAGe,IAAIJ,EAAEA,EAAEgS,sBAAsB3S,EAAE2S,qBAAqBC,KAAKoG,IAAIrY,EAAEI,IAAIF,IAAIR,EAAE,IAAI,IAAI,GAAGL,CAAC,EAAEiZ,GAAG,SAASjZ,GAAG,IAAIK,EAAE,IAAIoS,KAAK5R,IAAIb,EAAE,IAAI,IAAI,GAAG,KAAKa,IAAIb,EAAE,IAAI,IAAI,GAAGa,IAAIb,EAAE,IAAI,IAAI,GAAGa,IAAIb,EAAE,GAAG,IAAI,GAAGa,IAAIb,EAAE,GAAG,IAAI,GAAGa,IAAIb,GAAG,IAAI,GAAG,GAAGW,EAAEE,IAAIb,EAAE,IAAI,IAAI,GAAGe,EAAEV,EAAEsS,oBAAoB1R,EAAE,IAAIwR,KAAKpS,EAAEqS,cAAc,EAAE,GAAGvR,EAAE,IAAIsR,KAAKpS,EAAEqS,cAAc,EAAE,GAAGC,oBAAoBvR,EAAEH,EAAE0R,oBAAoBtR,EAAEuR,KAAKoG,IAAI5X,EAAED,GAAG,OAAO,EAAER,EAAEE,IAAIb,EAAE,IAAI,IAAI,GAAG8S,OAAO3R,GAAGC,GAAGC,GAAGN,GAAG,EAAEJ,IAAIU,GAAGN,KAAKI,EAAEyR,KAAKC,IAAIzR,EAAED,GAAGd,EAAE6Y,QAAQ7Y,EAAE4U,UAAU,MAAM,EAAEtU,EAAEU,EAAEF,GAAGJ,KAAKF,IAAIb,EAAE,IAAI,IAAI,GAAGK,EAAEyU,SAASnU,GAAGN,EAAE4U,UAAUhU,EAAEgU,WAAW,MAAM,EAAEpU,IAAIb,EAAE,IAAI,IAAI,GAAGW,EAAEE,IAAIb,GAAG,IAAI,GAAGK,EAAEwY,aAAahY,IAAIb,EAAE,GAAG,IAAI,GAAGK,EAAEyY,aAAajY,IAAIb,EAAE,GAAG,IAAI,GAAGK,EAAE0Y,WAAWlY,IAAIb,EAAE,IAAI,IAAI,GAAGK,EAAEwU,UAAUhU,IAAIb,EAAE,IAAI,IAAI,GAAGK,EAAEuU,WAAWvU,EAAE4U,UAAU,IAAI,CAAC,EAAEkE,GAAGjH,GAAGkH,GAAGjH,GAAGkH,GAAG,SAASrZ,EAAEK,EAAEM,EAAEE,GAAGb,EAAEsZ,KAAKtZ,EAAEsZ,IAAG,EAAGhH,GAAGjS,EAAEM,EAAEE,GAAG,EAAEoB,EAAE,WAAWmE,GAAG,GAAG,EAAEtF,EAAE,WAAW,IAAIyB,IAAIF,EAAE,CAAC,IAAIrC,EAAE,2IAA2IkP,KAAKA,GAAG,CAAC,GAAGA,GAAGlP,KAAKkP,GAAGlP,GAAG,EAAEuC,IAAIvC,EAAE,YAAYA,GAAG6D,EAAE7D,GAAG,CAAC,EAAEuZ,GAAG,WAAW,OAAO,UAAU,EAAEvS,EAAEmI,GAAGqK,GAAG,SAASxZ,EAAEK,EAAEQ,GAAGF,IAAI8Y,WAAWzZ,IAAI,EAAEK,IAAI,EAAEA,EAAEQ,IAAI,EAAE,EAAED,EAAE,WAAW,OAAO2B,EAAE,eAAqBe,OAAOyQ,UAAU2F,mBAAmB,EAAEC,GAAG,SAAS3Z,EAAEK,EAAEM,GAAG2S,GAAGhQ,OAAOjD,EAAEM,IAAI,EAAE,IAAI,IAAIE,EAAE,EAAEA,EAAER,EAAEQ,IAAIyS,GAAGzS,GAAGI,IAAIN,EAAEE,IAAI,GAAG,OAAO,EAAEb,EAAEgK,IAAIhK,EAAE,GAAGsW,GAAGtW,IAAI4Z,MAAM,KAAKtG,GAAG,EAAEuG,GAAG,SAAS7Z,GAAG,IAAIK,EAAEM,IAAI2C,OAAO,IAAItD,KAAK,IAAIK,GAAG,WAAWL,EAAE,OAAM,EAAG,IAAI,IAAIa,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAIE,EAAEV,GAAG,EAAE,GAAGQ,GAAGE,EAAE6R,KAAKoG,IAAIjY,EAAEf,EAAE,WAAW,IAAIiB,EAAE2R,KAAK7R,EAAE6R,KAAKC,IAAI7S,EAAEe,GAAGE,EAAEA,EAAE+X,IAAIrC,KAAK1V,EAAE,WAAWF,GAAG,MAAMA,EAAE,OAAO,OAAOf,EAAE,CAAC,IAAIM,EAAEwZ,KAAK7Y,EAAET,EAAEkI,WAAW,QAAQ,IAAIjI,EAAEH,EAAEC,QAAQ,IAAIY,EAAE,EAAE,MAAMnB,CAAW,CAAT,MAAMA,GAAG,CAACmB,OAAE,CAAM,CAAC,GAAGA,EAAE,OAAM,CAAE,CAAC,OAAM,CAAE,EAAE4Y,GAAG,WAAW,KAAK,QAAQ,EAAEC,GAAG/F,GAAGgG,GAAG/F,GAAGvQ,EAAE+H,GAAGxK,EAAEiT,GAAG/O,EAAEgP,GAAG8F,GAAG7F,GAAGpO,EAAEqO,GAAGxS,EAAE,WAAW,OAAOyS,EAAE,EAAE4F,GAAG,SAASna,EAAEW,EAAEE,GAAGb,EAAEoa,KAAKpa,EAAEoa,GAAG,WAAW,GAAG,iBAAiBC,QAAQ,mBAAmBA,OAAOC,gBAAgB,CAAC,IAAIta,EAAE,IAAImD,WAAW,GAAG,MAAM,KAAKkX,OAAOC,gBAAgBta,GAAGA,EAAE,GAAG,CAAC,GAAGuC,EAAE,IAAI,IAAIlC,EAAE,EAAQ,MAAU,MAAM,IAAIA,EAAEka,YAAY,GAAG,EAAY,CAAT,MAAMva,GAAG,CAAC,MAAM,IAAIoG,GAAG,eAAe,CAA1P,IAA+P,IAAI,IAAIrF,EAAE,EAAEA,EAAEF,EAAEE,IAAIV,IAAIM,EAAEI,GAAG,IAAI,GAAGf,EAAEoa,KAAK,OAAO,CAAC,EAAEI,GAAG,SAASxa,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEgE,GAAG,SAASza,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAErN,EAAE,SAASpJ,GAAG,IAAIK,EAAEmO,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,EAAiD,CAAzC,MAAM9O,GAAG,GAAGyO,GAAGpO,GAAGL,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEjV,EAAE,SAASxB,EAAEK,GAAG,IAAIM,EAAE6N,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAA4C,CAAzC,MAAML,GAAG,GAAGyO,GAAG9N,GAAGX,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAElQ,EAAE,SAASvG,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEzN,EAAE,SAAShJ,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEpQ,EAAE,SAASrG,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE9U,EAAE,SAAS3B,EAAEK,EAAEM,EAAEE,GAAG,IAAIE,EAAEyN,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAA4C,CAAzC,MAAMb,GAAG,GAAGyO,GAAG1N,GAAGf,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE1P,EAAE,SAAS/G,EAAEK,EAAEM,EAAEE,EAAEE,GAAG,IAAIE,EAAEuN,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAA4C,CAAzC,MAAMf,GAAG,GAAGyO,GAAGxN,GAAGjB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEvO,EAAE,SAASlI,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,GAAG,IAAIE,EAAEqN,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMjB,GAAG,GAAGyO,GAAGtN,GAAGnB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEhV,EAAE,SAASzB,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,GAAG,IAAIE,EAAEqN,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMjB,GAAG,GAAGyO,GAAGtN,GAAGnB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE9T,EAAE,SAAS3C,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,GAAG,IAAIC,EAAEoN,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMnB,GAAG,GAAGyO,GAAGrN,GAAGpB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE7N,EAAE,SAAS5I,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,GAAG,IAAIC,EAAEmN,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAA4C,CAAzC,MAAMpB,GAAG,GAAGyO,GAAGpN,GAAGrB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEnW,EAAE,SAASN,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,GAAG,IAAIC,EAAE6M,KAAK,IAAI,OAAOM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,EAA4C,CAAzC,MAAM1B,GAAG,GAAGyO,GAAG9M,GAAG3B,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEiE,GAAG,SAAS1a,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,GAAG,IAAIC,EAAEmN,KAAK,IAAI,OAAOmM,GAAG3a,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAA4C,CAAzC,MAAMpB,GAAG,GAAGyO,GAAGpN,GAAGrB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEpU,EAAE,SAASrC,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,GAAG,IAAIC,EAAEoN,KAAK,IAAI,OAAOoM,GAAG5a,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMnB,GAAG,GAAGyO,GAAGrN,GAAGpB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE3N,EAAE,SAAS9I,EAAEK,EAAEM,EAAEE,EAAEE,GAAG,IAAIE,EAAEuN,KAAK,IAAI,OAAOqM,GAAG7a,EAAEK,EAAEM,EAAEE,EAAEE,EAA4C,CAAzC,MAAMf,GAAG,GAAGyO,GAAGxN,GAAGjB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEqE,GAAG,SAAS9a,EAAEK,EAAEM,EAAEE,GAAG,IAAIE,EAAEyN,KAAK,IAAI,OAAOuM,GAAG/a,EAAEK,EAAEM,EAAEE,EAA4C,CAAzC,MAAMb,GAAG,GAAGyO,GAAG1N,GAAGf,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE1N,EAAE,SAAS/I,GAAG,IAAIK,EAAEmO,KAAK,IAAI,OAAOwM,GAAGhb,EAA4C,CAAzC,MAAMA,GAAG,GAAGyO,GAAGpO,GAAGL,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEwE,GAAG,SAASjb,EAAEK,GAAG,IAAIM,EAAE6N,KAAK,IAAI,OAAO0M,GAAGlb,EAAEK,EAA4C,CAAzC,MAAML,GAAG,GAAGyO,GAAG9N,GAAGX,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEzV,EAAE,SAAShB,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAI,OAAO2M,GAAGnb,EAAEK,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEtU,EAAE,SAASnC,GAAG,IAAIK,EAAEmO,KAAK,IAAIM,GAAG9O,EAAH8O,EAAiD,CAAzC,MAAM9O,GAAG,GAAGyO,GAAGpO,GAAGL,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE5V,EAAE,SAASb,EAAEK,GAAG,IAAIM,EAAE6N,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAA4C,CAAzC,MAAML,GAAG,GAAGyO,GAAG9N,GAAGX,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE1V,EAAE,SAASf,EAAEK,EAAEM,GAAG,IAAIE,EAAE2N,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAA4C,CAAzC,MAAMX,GAAG,GAAGyO,GAAG5N,GAAGb,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE2E,GAAG,SAASpb,EAAEK,EAAEM,EAAEE,GAAG,IAAIE,EAAEyN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAA4C,CAAzC,MAAMb,GAAG,GAAGyO,GAAG1N,GAAGf,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE5U,EAAE,SAAS7B,EAAEK,EAAEM,EAAEE,GAAG,IAAIE,EAAEyN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAA4C,CAAzC,MAAMb,GAAG,GAAGyO,GAAG1N,GAAGf,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAElU,EAAE,SAASvC,EAAEK,EAAEM,EAAEE,EAAEE,GAAG,IAAIE,EAAEuN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAA4C,CAAzC,MAAMf,GAAG,GAAGyO,GAAGxN,GAAGjB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEtV,EAAE,SAASnB,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,GAAG,IAAIE,EAAEqN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMjB,GAAG,GAAGyO,GAAGtN,GAAGnB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE3T,EAAE,SAAS9C,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,GAAG,IAAIC,EAAEoN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMnB,GAAG,GAAGyO,GAAGrN,GAAGpB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAElR,EAAE,SAASvF,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,GAAG,IAAIC,EAAEmN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAA4C,CAAzC,MAAMpB,GAAG,GAAGyO,GAAGpN,GAAGrB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE4E,GAAG,SAASrb,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,GAAG,IAAIG,EAAEgN,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAA4C,CAAzC,MAAMrB,GAAG,GAAGyO,GAAGjN,GAAGxB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE9Q,EAAE,SAAS3F,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,GAAG,IAAIC,EAAE8M,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAA4C,CAAzC,MAAMzB,GAAG,GAAGyO,GAAG/M,GAAG1B,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEjW,EAAE,SAASR,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,GAAG,IAAIG,EAAEuM,KAAK,IAAIM,GAAG9O,EAAH8O,CAAMzO,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAA4C,CAAzC,MAAM9B,GAAG,GAAGyO,GAAGxM,GAAGjC,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE6E,GAAG,SAAStb,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,GAAG,IAAIC,EAAEmN,KAAK,IAAI+M,GAAGvb,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAA4C,CAAzC,MAAMpB,GAAG,GAAGyO,GAAGpN,GAAGrB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAE+E,GAAG,SAASxb,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,GAAG,IAAIC,EAAE6M,KAAK,IAAIiN,GAAGzb,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAAEE,EAAEC,EAAEC,EAAEG,EAAEC,EAAEC,EAA4C,CAAzC,MAAM1B,GAAG,GAAGyO,GAAG9M,GAAG3B,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAEiF,GAAG,SAAS1b,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,GAAG,IAAIE,EAAEqN,KAAK,IAAImN,GAAG3b,EAAEK,EAAEM,EAAEE,EAAEE,EAAEE,EAA4C,CAAzC,MAAMjB,GAAG,GAAGyO,GAAGtN,GAAGnB,IAAIA,EAAE,EAAE,MAAMA,EAAEyW,GAAG,EAAE,EAAE,CAAC,EAAErV,EAAE,SAASpB,GAAG,OAAOA,CAAC,EAAEiB,EAAEX,GAAGa,EAAEiH,WAAWlB,EAAE,SAASlH,GAAGuU,GAAGvU,CAAC,EAAE4b,GAAGlH,GAAGjU,EAAE,SAAST,EAAEK,EAAEM,EAAEE,GAAG,OAAO6T,GAAG1U,EAAEK,EAAEM,EAAEE,EAAE,IAAI,WAAW,SAASb,EAAEA,EAAEK,GAAGc,EAAE0a,IAAI7b,EAAE8b,QAAQzR,GAAG6B,GAAGvB,KAAKxJ,EAAE0a,IAAIE,IAAIpT,EAAExH,EAAE0a,IAAIG,GAAGnT,EAAEM,QAAQhI,EAAE0a,IAAII,IAAI5V,EAAEhG,EAAEsC,IAAI0G,KAAKlI,EAAE+a,wBAAwB/a,EAAE+a,uBAAuB7S,IAAI,GAAGA,KAAK,OAAOC,KAAK6S,cAAc7S,IAAIA,GAAG,MAAMC,KAAKvJ,EAAEuJ,GAAGA,GAAG,KAAKvJ,MAAM,CAAC,SAASK,EAAEA,GAAGL,EAAEK,EAAE+b,SAAS/b,EAAEgc,OAAO,CAAC,SAAS1b,EAAEX,GAAG,OAAO,WAAW,IAAI0F,IAAIvD,GAAGE,GAAG,CAAC,GAAG,mBAAmBia,QAAQlT,GAAEU,WAAW,WAAW,OAAOwS,MAAMlT,GAAE,CAACmT,YAAY,gBAAgBC,MAAK,SAAUxc,GAAG,IAAIA,EAAEyc,GAAG,KAAK,uCAAuCrT,GAAE,IAAI,OAAOpJ,EAAE0c,aAAc,IAAGC,OAAM,WAAY,OAAO5S,IAAK,IAAG,GAAGtI,EAAE,OAAO,IAAIF,SAAQ,SAAUvB,EAAEK,GAAGoB,EAAE2H,IAAE,SAAU/I,GAAGL,EAAE,IAAImD,WAAW9C,GAAI,GAAEA,EAAG,GAAE,CAAC,OAAOkB,QAAQqb,UAAUJ,MAAK,WAAY,OAAOzS,IAAK,GAAE,CAAjZ,GAAqZyS,MAAK,SAAUxc,GAAG,OAAOmG,YAAY0W,YAAY7c,EAAEa,EAAG,IAAG2b,MAAK,SAAUxc,GAAG,OAAOA,CAAE,IAAGwc,KAAKxc,GAAE,SAAUA,GAAG6D,EAAE,0CAA0C7D,GAAGoG,GAAGpG,EAAG,GAAE,CAAC,IAAIa,EAAE,CAACI,EAAEsV,IAAI,GAAG5T,IAAI0G,KAAKlI,EAAE+a,wBAAwB/a,EAAE+a,uBAAuB7S,KAAKlI,EAAE2b,gBAAgB,IAAI,OAAO3b,EAAE2b,gBAAgBjc,EAAEb,EAAgF,CAA7E,MAAMA,GAAG,OAAO6D,EAAE,sDAAsD7D,IAAG,CAAE,EAAE0F,GAAG,mBAAmBS,YAAY4W,sBAAsBlT,MAAMT,GAAEU,WAAW,YAAYvH,GAAG,mBAAmB+Z,MAAM3b,EAAEN,GAAGic,MAAMlT,GAAE,CAACmT,YAAY,gBAAgBC,MAAK,SAAUxc,GAAG,OAAOmG,YAAY4W,qBAAqB/c,EAAEa,GAAG2b,KAAKnc,GAAE,SAAUL,GAAG,OAAO6D,EAAE,kCAAkC7D,GAAG6D,EAAE,6CAA6ClD,EAAEN,EAAG,GAAG,KAAIsc,MAAMtb,EAAE,CAAl5C,GAAs5CF,EAAE6b,mBAAmB,WAAW,OAAO7b,EAAE6b,mBAAmB7b,EAAE0a,IAAII,IAAIrC,MAAM,KAAK7G,UAAU,EAAE5R,EAAE8b,SAAS,WAAW,OAAO9b,EAAE8b,SAAS9b,EAAE0a,IAAIqB,IAAItD,MAAM,KAAK7G,UAAU,EAAE5R,EAAEgc,yBAAyB,WAAW,OAAOhc,EAAEgc,yBAAyBhc,EAAE0a,IAAIuB,IAAIxD,MAAM,KAAK7G,UAAU,EAAE5R,EAAEkc,4BAA4B,WAAW,OAAOlc,EAAEkc,4BAA4Blc,EAAE0a,IAAIyB,IAAI1D,MAAM,KAAK7G,UAAU,EAAE5R,EAAEoc,0BAA0B,WAAW,OAAOpc,EAAEoc,0BAA0Bpc,EAAE0a,IAAI2B,IAAI5D,MAAM,KAAK7G,UAAU,EAAE5R,EAAEsc,0BAA0B,WAAW,OAAOtc,EAAEsc,0BAA0Btc,EAAE0a,IAAI6B,IAAI9D,MAAM,KAAK7G,UAAU,EAAE5R,EAAEwc,kBAAkB,WAAW,OAAOxc,EAAEwc,kBAAkBxc,EAAE0a,IAAI+B,IAAIhE,MAAM,KAAK7G,UAAU,EAAE5R,EAAE0c,mBAAmB,WAAW,OAAO1c,EAAE0c,mBAAmB1c,EAAE0a,IAAIiC,IAAIlE,MAAM,KAAK7G,UAAU,EAAE5R,EAAE4c,kBAAkB,WAAW,OAAO5c,EAAE4c,kBAAkB5c,EAAE0a,IAAImC,IAAIpE,MAAM,KAAK7G,UAAU,EAAE5R,EAAE8c,mBAAmB,WAAW,OAAO9c,EAAE8c,mBAAmB9c,EAAE0a,IAAIqC,IAAItE,MAAM,KAAK7G,UAAU,EAAE5R,EAAEgd,iBAAiB,WAAW,OAAOhd,EAAEgd,iBAAiBhd,EAAE0a,IAAIuC,IAAIxE,MAAM,KAAK7G,UAAU,EAAE5R,EAAEkd,kBAAkB,WAAW,OAAOld,EAAEkd,kBAAkBld,EAAE0a,IAAIyC,IAAI1E,MAAM,KAAK7G,UAAU,EAAE5R,EAAEod,SAAS,WAAW,OAAOpd,EAAEod,SAASpd,EAAE0a,IAAI2C,IAAI5E,MAAM,KAAK7G,UAAU,EAAE5R,EAAEsd,iBAAiB,WAAW,OAAOtd,EAAEsd,iBAAiBtd,EAAE0a,IAAI6C,IAAI9E,MAAM,KAAK7G,UAAU,EAAE5R,EAAEwd,kBAAkB,WAAW,OAAOxd,EAAEwd,kBAAkBxd,EAAE0a,IAAI+C,IAAIhF,MAAM,KAAK7G,UAAU,EAAE5R,EAAE0d,kBAAkB,WAAW,OAAO1d,EAAE0d,kBAAkB1d,EAAE0a,IAAIiD,IAAIlF,MAAM,KAAK7G,UAAU,EAAE5R,EAAE4d,qBAAqB,WAAW,OAAO5d,EAAE4d,qBAAqB5d,EAAE0a,IAAImD,IAAIpF,MAAM,KAAK7G,UAAU,EAAE5R,EAAE8d,sBAAsB,WAAW,OAAO9d,EAAE8d,sBAAsB9d,EAAE0a,IAAIqD,IAAItF,MAAM,KAAK7G,UAAU,EAAE5R,EAAEge,sBAAsB,WAAW,OAAOhe,EAAEge,sBAAsBhe,EAAE0a,IAAIuD,IAAIxF,MAAM,KAAK7G,UAAU,EAAE5R,EAAEke,QAAQ,WAAW,OAAOle,EAAEke,QAAQle,EAAE0a,IAAIyD,IAAI1F,MAAM,KAAK7G,UAAU,EAAE5R,EAAEoe,iBAAiB,WAAW,OAAOpe,EAAEoe,iBAAiBpe,EAAE0a,IAAI2D,IAAI5F,MAAM,KAAK7G,UAAU,EAAE,IAAIzF,GAAGnM,EAAEse,cAAc,WAAW,OAAOnS,GAAGnM,EAAEse,cAActe,EAAE0a,IAAI6D,IAAI9F,MAAM,KAAK7G,UAAU,EAAEV,GAAGlR,EAAEwe,QAAQ,WAAW,OAAOtN,GAAGlR,EAAEwe,QAAQxe,EAAE0a,IAAI+D,IAAIhG,MAAM,KAAK7G,UAAU,EAAElC,GAAG1P,EAAE0e,MAAM,WAAW,OAAOhP,GAAG1P,EAAE0e,MAAM1e,EAAE0a,IAAIiE,IAAIlG,MAAM,KAAK7G,UAAU,EAAEjH,GAAG3K,EAAE4e,QAAQ,WAAW,OAAOjU,GAAG3K,EAAE4e,QAAQ5e,EAAE0a,IAAImE,IAAIpG,MAAM,KAAK7G,UAAU,EAAE5R,EAAE8e,sBAAsB,WAAW,OAAO9e,EAAE8e,sBAAsB9e,EAAE0a,IAAIE,IAAInC,MAAM,KAAK7G,UAAU,EAAE,IAAInH,GAAGzK,EAAE+e,iBAAiB,WAAW,OAAOtU,GAAGzK,EAAE+e,iBAAiB/e,EAAE0a,IAAIsE,IAAIvG,MAAM,KAAK7G,UAAU,EAAEgE,GAAG5V,EAAEif,yBAAyB,WAAW,OAAOrJ,GAAG5V,EAAEif,yBAAyBjf,EAAE0a,IAAIwE,IAAIzG,MAAM,KAAK7G,UAAU,EAAE5R,EAAEmf,4BAA4B,WAAW,OAAOnf,EAAEmf,4BAA4Bnf,EAAE0a,IAAI0E,IAAI3G,MAAM,KAAK7G,UAAU,EAAE,IAAIyN,GAAGvN,GAAG9R,EAAEsf,0CAA0C,WAAW,OAAOxN,GAAG9R,EAAEsf,0CAA0Ctf,EAAE0a,IAAI6E,IAAI9G,MAAM,KAAK7G,UAAU,EAAEhB,GAAG5Q,EAAEwf,sCAAsC,WAAW,OAAO5O,GAAG5Q,EAAEwf,sCAAsCxf,EAAE0a,IAAI+E,IAAIhH,MAAM,KAAK7G,UAAU,EAAEhG,GAAG5L,EAAE0f,8BAA8B,WAAW,OAAO9T,GAAG5L,EAAE0f,8BAA8B1f,EAAE0a,IAAIiF,IAAIlH,MAAM,KAAK7G,UAAU,EAAE9D,GAAG9N,EAAE4f,yBAAyB,WAAW,OAAO9R,GAAG9N,EAAE4f,yBAAyB5f,EAAE0a,IAAImF,IAAIpH,MAAM,KAAK7G,UAAU,EAAE0D,GAAGtV,EAAE8f,UAAU,WAAW,OAAOxK,GAAGtV,EAAE8f,UAAU9f,EAAE0a,IAAIqF,IAAItH,MAAM,KAAK7G,UAAU,EAAEnE,GAAGzN,EAAEggB,6BAA6B,WAAW,OAAOvS,GAAGzN,EAAEggB,6BAA6BhgB,EAAE0a,IAAIuF,IAAIxH,MAAM,KAAK7G,UAAU,EAAEvE,GAAGrN,EAAEkgB,UAAU,WAAW,OAAO7S,GAAGrN,EAAEkgB,UAAUlgB,EAAE0a,IAAIyF,IAAI1H,MAAM,KAAK7G,UAAU,EAAEtE,GAAGtN,EAAEogB,aAAa,WAAW,OAAO9S,GAAGtN,EAAEogB,aAAapgB,EAAE0a,IAAI2F,IAAI5H,MAAM,KAAK7G,UAAU,EAAEC,GAAG7R,EAAEsgB,WAAW,WAAW,OAAOzO,GAAG7R,EAAEsgB,WAAWtgB,EAAE0a,IAAI6F,IAAI9H,MAAM,KAAK7G,UAAU,EAAE6D,GAAGzV,EAAEwgB,iBAAiB,WAAW,OAAO/K,GAAGzV,EAAEwgB,iBAAiBxgB,EAAE0a,IAAI+F,IAAIhI,MAAM,KAAK7G,UAAU,EAAEpC,GAAGxP,EAAE0gB,uBAAuB,WAAW,OAAOlR,GAAGxP,EAAE0gB,uBAAuB1gB,EAAE0a,IAAIiG,IAAIlI,MAAM,KAAK7G,UAAU,EAAEiI,GAAG7Z,EAAE4gB,UAAU,WAAW,OAAO/G,GAAG7Z,EAAE4gB,UAAU5gB,EAAE0a,IAAImG,IAAIpI,MAAM,KAAK7G,UAAU,EAAE6H,GAAGzZ,EAAE8gB,eAAe,WAAW,OAAOrH,GAAGzZ,EAAE8gB,eAAe9gB,EAAE0a,IAAIqG,IAAItI,MAAM,KAAK7G,UAAU,EAAEoI,GAAGha,EAAEghB,YAAY,WAAW,OAAOhH,GAAGha,EAAEghB,YAAYhhB,EAAE0a,IAAIuG,IAAIxI,MAAM,KAAK7G,UAAU,EAAEwI,GAAGpa,EAAEkhB,gBAAgB,WAAW,OAAO9G,GAAGpa,EAAEkhB,gBAAgBlhB,EAAE0a,IAAIyG,IAAI1I,MAAM,KAAK7G,UAAU,EAAE4I,GAAGxa,EAAEohB,aAAa,WAAW,OAAO5G,GAAGxa,EAAEohB,aAAaphB,EAAE0a,IAAI2G,IAAI5I,MAAM,KAAK7G,UAAU,EAAE0I,GAAGta,EAAEshB,kBAAkB,WAAW,OAAOhH,GAAGta,EAAEshB,kBAAkBthB,EAAE0a,IAAI6G,IAAI9I,MAAM,KAAK7G,UAAU,EAAEgI,GAAG5Z,EAAEwhB,YAAY,WAAW,OAAO5H,GAAG5Z,EAAEwhB,YAAYxhB,EAAE0a,IAAI+G,IAAIhJ,MAAM,KAAK7G,UAAU,EAAEmI,GAAG/Z,EAAE0hB,WAAW,WAAW,OAAO3H,GAAG/Z,EAAE0hB,WAAW1hB,EAAE0a,IAAIiH,IAAIlJ,MAAM,KAAK7G,UAAU,EAAE4H,GAAGxZ,EAAE4hB,gBAAgB,WAAW,OAAOpI,GAAGxZ,EAAE4hB,gBAAgB5hB,EAAE0a,IAAImH,IAAIpJ,MAAM,KAAK7G,UAAU,EAAE8H,GAAG1Z,EAAE8hB,aAAa,WAAW,OAAOpI,GAAG1Z,EAAE8hB,aAAa9hB,EAAE0a,IAAIqH,IAAItJ,MAAM,KAAK7G,UAAU,EAAE,SAASoQ,KAAK,SAASnjB,IAAI,IAAIwgB,KAAKA,IAAG,EAAGrf,EAAEiiB,WAAU,GAAI9c,KAAK3D,GAAGkJ,GAAGhD,GAAGzH,EAAED,GAAGA,EAAEkiB,sBAAsBliB,EAAEkiB,wBAAwB1gB,GAAG,CAAC,GAAGxB,EAAEmiB,QAAQ,IAAI,mBAAmBniB,EAAEmiB,UAAUniB,EAAEmiB,QAAQ,CAACniB,EAAEmiB,UAAUniB,EAAEmiB,QAAQhgB,QAAQ,CAAC,IAAItD,EAAEmB,EAAEmiB,QAAQpa,QAAQH,EAAEI,QAAQnJ,EAAE,CAAC6L,GAAG9C,EAAE,CAAC,CAAC,KAAK,EAAEM,IAAI,GAAG1G,EAAEvB,EAAED,GAAGwB,GAAGkJ,GAAGhD,GAAGW,YAAY,CAACC,IAAI,eAAe,CAAC,GAAGtI,EAAE8H,OAAO,IAAI,mBAAmB9H,EAAE8H,SAAS9H,EAAE8H,OAAO,CAAC9H,EAAE8H,SAAS9H,EAAE8H,OAAO3F,QAAQ0F,IAAI6C,GAAGjD,GAAG,EAAES,KAAKlI,EAAEoiB,WAAWpiB,EAAEoiB,UAAU,cAActL,YAAW,WAAYA,YAAW,WAAY9W,EAAEoiB,UAAU,GAAI,GAAE,GAAGvjB,GAAI,GAAE,IAAIA,IAAI,CAAC,CAAC,GAAGmB,EAAEqiB,aAAazc,EAAE5F,EAAEsiB,aAAa,SAASzjB,EAAEK,EAAEQ,GAAG,OAAOmG,EAAEhH,EAAEW,IAAIN,EAAEQ,EAAE,EAAEM,EAAEuiB,gBAAgBxc,EAAE/F,EAAEwiB,iBAAiBhgB,EAAExC,EAAEiH,WAAW9H,EAAEa,EAAEkgB,UAAU7S,GAAGrN,EAAEogB,aAAa9S,GAAGtN,EAAEsgB,WAAWzO,GAAG7R,EAAEyiB,WAAWlgB,GAAGvC,EAAEuN,QAAQrE,GAAGd,GAAG,SAASvJ,IAAIwgB,IAAI2C,KAAK3C,KAAKjX,GAAGvJ,EAAE,EAAEmB,EAAE0iB,QAAQ,IAAI,mBAAmB1iB,EAAE0iB,UAAU1iB,EAAE0iB,QAAQ,CAAC1iB,EAAE0iB,UAAU,EAAE1iB,EAAE0iB,QAAQvgB,QAAQnC,EAAE0iB,QAAQvV,KAAVnN,GAAkB,OAAOgiB,KAAKnjB,EAAEsB,KAAK,GAAqD+a,EAAOP,QAAQ9b,C,gBCClr/B,IACMD,WADF+jB,GAEqC/jB,YADnCA,WAAiC,oBAAbE,UAA4BA,SAASC,cAAgBD,SAASC,cAAcC,SAAM4jB,IACxC3jB,WAC3D,SACA0jB,GAIT,IAAIhiB,EAA2D4Y,EAAGO,EAHhE6I,EAAUA,GAAW,CAAC,EAGlBhiB,IAAIA,OAAqB,IAAZgiB,EAA0BA,EAAU,CAAC,GAAahiB,EAAER,MAAM,IAAIC,SAAQ,SAASN,EAAEiB,GAAGwY,EAAGzZ,EAAEga,EAAG/Y,CAAC,IAAG,IAA6OkZ,EAAGva,EAAE0B,EAAEyhB,EAAG/hB,EAAEuY,EAArPM,EAAG/Y,OAAOC,OAAO,CAAC,EAAEF,GAAG0Z,EAAG,iBAAiBE,EAAG,CAACza,EAAEiB,KAAK,MAAMA,CAAC,EAAGoZ,EAAG,iBAAiBlZ,OAAOP,EAAE,mBAAmBS,cAAcX,EAAE,iBAAiBa,SAAS,iBAAiBA,QAAQC,UAAU,iBAAiBD,QAAQC,SAASC,KAAKqE,EAAE,GAC1VpF,GAAEoF,EAAElF,EAAE,gBAAwBkF,GAAG,IAAI/D,UAAU,IAAIwX,EAAG,KAAKvY,IAAI+hB,EAAG,EAAQ,MAAM/hB,EAAE,EAAQ,MAAO,EAAGmZ,EAAG,SAASna,EAAEiB,GAAyB,OAAtBsY,IAAKvZ,EAAEgB,EAAEgB,UAAUhC,GAAU+iB,EAAG9gB,aAAajC,EAAEiB,OAAE,EAAO,OAAO,EAAEK,EAAEtB,KAAIA,EAAEma,EAAGna,GAAE,IAAMV,SAASU,EAAE,IAAIkC,WAAWlC,IAAWA,GAAGJ,EAAE,CAACI,EAAEiB,EAAEb,KAAKmZ,IAAKvZ,EAAEgB,EAAEgB,UAAUhC,GAAG+iB,EAAG5gB,SAASnC,GAAE,SAASN,EAAEa,GAAGb,EAAEU,EAAEV,GAAGuB,EAAEV,EAAEjB,OAAO,GAAC,EAAG,EAAEiC,QAAQa,KAAKC,SAASkY,EAAGhZ,QAAQa,KAAK,GAAGE,QAAQ,MAAM,MAAMf,QAAQa,KAAKG,MAAM,GAAGhB,QAAQiB,GAAG,qBAAoB,SAASxC,GAAG,KAAKA,aAAawZ,GAAI,MAAMxZ,CAAE,IAAGuB,QAAQiB,GAAG,sBACpf,SAASxC,GAAG,MAAMA,CAAE,IAAGya,EAAG,CAACza,EAAEiB,KAAK,GAAGgE,GAAe,EAAEmV,EAAG,MAAM7Y,QAAQoB,SAAS3C,EAAEiB,EAAEA,aAAauY,GAAIha,EAAE,6BAA6ByB,GAAGM,QAAQsB,KAAK7C,EAAC,EAAGa,EAAEiC,QAAQ,WAAW,MAAM,4BAA4B,IAAUuX,GAAIzZ,KAAEA,EAAEkF,EAAE3C,KAAKC,SAASC,KAAK,oBAAoBrE,UAAUA,SAASC,gBAAgB6G,EAAE9G,SAASC,cAAcC,KAAKJ,aAAagH,EAAEhH,YAAmCgH,EAAvB,IAAIA,EAAExC,QAAQ,SAAWwC,EAAEvC,OAAO,EAAEuC,EAAExD,QAAQ,SAAS,IAAIkB,YAAY,KAAK,GAAK,GAAG2W,EAAGna,IAAI,IAAIiB,EAAE,IAAIwC,eAC3c,OAD0dxC,EAAEyC,KAAK,MAAM1D,GAAE,GAAIiB,EAAE0C,KAAK,MAC7e1C,EAAE2C,cAAchD,IAAIU,EAAEtB,IAAI,IAAIiB,EAAE,IAAIwC,eAA4E,OAA7DxC,EAAEyC,KAAK,MAAM1D,GAAE,GAAIiB,EAAE4C,aAAa,cAAc5C,EAAE0C,KAAK,MAAa,IAAIzB,WAAWjB,EAAE6C,SAAQ,GAAIlE,EAAE,CAACI,EAAEiB,EAAEb,KAAK,IAAIV,EAAE,IAAI+D,eAAe/D,EAAEgE,KAAK,MAAM1D,GAAE,GAAIN,EAAEmE,aAAa,cAAcnE,EAAEqE,OAAO,KAAK,KAAKrE,EAAEsE,QAAQ,GAAGtE,EAAEsE,QAAQtE,EAAEoE,SAAS7C,EAAEvB,EAAEoE,UAAU1D,GAAE,EAAGV,EAAEuE,QAAQ7D,EAAEV,EAAEiE,KAAK,KAAI,GAAG,IAC9UW,EADkVqW,EAAG9Z,EAAE8D,OAAO5B,QAAQqB,IAAIC,KAAKtB,SAASvD,EAAEqB,EAAE+D,UAAU7B,QAAQwB,KAAKF,KAAKtB,SAASjC,OAAOC,OAAOF,EAAEgZ,GAAIA,EAAG,KAAKhZ,EAAEgE,cAAc0V,EAAG1Z,EAAEgE,aAAahE,EAAEiE,OAAO2V,EAAG5Z,EAAEiE,MAC3ejE,EAAEkE,aAAaT,EAAEzD,EAAEkE,YAAY,IAAIE,EAAcpE,EAAEoE,gBAAe,EAAG,iBAAiBC,aAAaa,EAAE,mCAAmC,IAAIwP,EAGLiB,EAAGhR,EAAES,EAAEhG,EAAEyC,EAHDnD,GAAE,EAAG2Z,EAAG,oBAAoB3T,YAAY,IAAIA,YAAY,aAAQ,EACrN,SAAS4Q,EAAGnW,EAAEiB,EAAEb,GAAU,IAAIV,GAAXuB,KAAK,GAAUb,EAAE,IAAIA,EAAEa,EAAEjB,EAAEI,MAAMA,GAAGV,MAAMU,EAAE,GAAG,GAAGA,EAAEa,GAAGjB,EAAEV,QAAQ4Z,EAAG,OAAOA,EAAGzT,OAAOzF,EAAE2F,SAAS1E,EAAEb,IAAI,IAAIV,EAAE,GAAGuB,EAAEb,GAAG,CAAC,IAAIG,EAAEP,EAAEiB,KAAK,GAAK,IAAFV,EAAM,CAAC,IAAII,EAAS,GAAPX,EAAEiB,KAAQ,GAAG,MAAQ,IAAFV,GAAOb,GAAGkG,OAAOC,cAAgB,GAAFtF,IAAO,EAAEI,OAAO,CAAC,IAAIyE,EAAS,GAAPpF,EAAEiB,KAAwE,OAAhEV,EAAE,MAAQ,IAAFA,IAAU,GAAFA,IAAO,GAAGI,GAAG,EAAEyE,GAAK,EAAF7E,IAAM,GAAGI,GAAG,GAAGyE,GAAG,EAAS,GAAPpF,EAAEiB,MAAgBvB,GAAGkG,OAAOC,aAAatF,IAAIA,GAAG,MAAMb,GAAGkG,OAAOC,aAAa,MAAMtF,GAAG,GAAG,MAAQ,KAAFA,GAAQ,CAAC,MAAMb,GAAGkG,OAAOC,aAAatF,EAAE,CAAC,OAAOb,CAAC,CAAC,SAASkW,EAAG5V,EAAEiB,GAAG,OAAOjB,KAAK,GAAGmW,EAAGlQ,EAAEjG,EAAEiB,GAAG,EAAE,CAC3e,SAAS2X,EAAG5Y,EAAEiB,EAAEb,EAAEV,GAAU,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAIa,EAA9BH,KAAK,EAA6BV,EAAEU,EAAEV,EAAE,EAAE,IAAI,IAAIiB,EAAE,EAAEA,EAAEX,EAAEqC,SAAS1B,EAAE,CAAC,IAAIyE,EAAEpF,EAAEgG,WAAWrF,GAAgF,GAA1E,OAAOyE,GAAG,OAAOA,IAA2BA,EAAE,QAAU,KAAFA,IAAS,IAAM,KAA3CpF,EAAEgG,aAAarF,IAAoC,KAAKyE,EAAE,CAAC,GAAGhF,GAAGV,EAAE,MAAMuB,EAAEb,MAAM,GAAGgF,CAAC,KAAK,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGhF,EAAE,GAAGV,EAAE,MAAMuB,EAAEb,MAAM,GAAG,IAAIgF,GAAG,CAAC,KAAK,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGhF,EAAE,GAAGV,EAAE,MAAMuB,EAAEb,MAAM,GAAG,IAAIgF,GAAG,EAAE,KAAK,CAAC,GAAGhF,EAAE,GAAGV,EAAE,MAAMuB,EAAEb,MAAM,GAAG,IAAIgF,GAAG,GAAGnE,EAAEb,MAAM,GAAG,IAAIgF,GAAG,GAAG,EAAE,CAACnE,EAAEb,MAAM,GAAG,IAAIgF,GAAG,EAAE,EAAE,CAACnE,EAAEb,MAAM,GAAG,IAAM,GAAFgF,CAAI,CAAC,CAAY,OAAXnE,EAAEb,IAAI,GAAG,EAASA,EAAEG,CAAC,CACnd,SAAS+X,EAAGtY,GAAG,IAAI,IAAIiB,EAAE,EAAEb,EAAE,EAAEA,EAAEJ,EAAEqC,SAASjC,EAAE,CAAC,IAAIV,EAAEM,EAAEgG,WAAW5F,GAAG,KAAKV,EAAEuB,IAAI,MAAMvB,EAAEuB,GAAG,EAAE,OAAOvB,GAAG,OAAOA,GAAGuB,GAAG,IAAIb,GAAGa,GAAG,CAAC,CAAC,OAAOA,CAAC,CAAgB,SAASyV,IAAK,IAAI1W,EAAEuV,EAAGjW,OAAOkX,EAAGxW,EAAEa,EAAEqF,MAAMV,EAAE,IAAIW,UAAUnG,GAAGa,EAAEuF,OAAO,IAAIC,WAAWrG,GAAGa,EAAEyF,OAAOrG,EAAE,IAAIsG,WAAWvG,GAAGa,EAAE2F,OAAOP,EAAE,IAAI/D,WAAWlC,GAAGa,EAAE4F,QAAQ,IAAIC,YAAY1G,GAAGa,EAAE8F,QAAQjE,EAAE,IAAIkE,YAAY5G,GAAGa,EAAEgG,QAAQ,IAAIC,aAAa9G,GAAGa,EAAEkG,QAAQ,IAAIC,aAAahH,EAAE,CAAC,IAAIiW,EAAGM,EAAG,GAAGL,EAAG,GAAGH,EAAG,GAAGc,EAAG,GAAGuD,EAAG,EACrc,SAASrD,IAAK,IAAI/W,EAAEa,EAAEmH,OAAOC,QAAQsO,EAAGrO,QAAQlI,EAAE,CAAC,IAAuQiH,EAAnQkB,EAAE,EAAE+P,EAAG,KAAKvQ,EAAE,KAAK,SAAS5B,EAAE/F,GAA6I,MAAvIa,EAAE6H,SAAQ7H,EAAE6H,QAAQ1I,GAAsBR,EAAnBQ,EAAE,WAAWA,EAAE,KAAST,GAAE,EAAGS,EAAE,IAAIkF,YAAYyD,aAAa3I,EAAE,4CAA4Cga,EAAGha,GAASA,CAAE,CAAC,SAASmY,IAAK,OAAOlR,EAAE4B,WAAW,wCAAwC,CAAyB,GAAlB5B,EAAE,iBAAoBkR,IAAK,CAAC,IAAI9B,EAAGpP,EAAEA,EAAEpG,EAAEiB,WAAWjB,EAAEiB,WAAWuU,EAAGvQ,GAAGA,EAAEuQ,CAAE,CACvY,SAASqC,IAAK,IAAI1Y,EAAEiH,EAAE,IAAI,GAAGjH,GAAGiH,GAAG3C,EAAE,OAAO,IAAIpC,WAAWoC,GAAG,GAAGhD,EAAE,OAAOA,EAAEtB,GAAG,KAAK,iDAAgE,CAAb,MAAMiB,GAAG8E,EAAE9E,EAAE,CAAC,CACuP,SAASuY,EAAGxZ,GAAGgJ,KAAKC,KAAK,aAAaD,KAAKE,QAAQ,gCAAgClJ,EAAE,IAAIgJ,KAAKhF,OAAOhE,CAAC,CAClf,SAAS6B,EAAE7B,GAAG,KAAK,EAAEA,EAAEqC,QAAQrC,EAAEiI,OAAFjI,CAAUa,EAAE,CAAC,IAAIyE,EAAE,GAAGyC,EAAE,EAAE/C,GAAE,EAC3D,SAASb,GAAEnE,GAAGgJ,KAAKqX,GAAGrgB,EAAEgJ,KAAK6W,GAAG7f,EAAE,GAAGgJ,KAAKW,GAAG,SAAS1I,GAAGyB,EAAEsG,KAAK6W,GAAG,GAAG,IAAI,GAAG5e,CAAC,EAAE+H,KAAKuX,GAAG,WAAW,OAAO7d,EAAEsG,KAAK6W,GAAG,GAAG,IAAI,EAAE,EAAE7W,KAAKwF,GAAG,SAASvN,GAAGyB,EAAEsG,KAAK6W,GAAG,GAAG,IAAI,GAAG5e,CAAC,EAAE+H,KAAK8K,GAAG,WAAW,OAAOpR,EAAEsG,KAAK6W,GAAG,GAAG,IAAI,EAAE,EAAE7W,KAAKyL,GAAG,WAAWxU,EAAE+I,KAAK6W,IAAI,IAAI,GAAG,CAAC,EAAE7W,KAAK+X,GAAG,SAAS9f,GAAGuE,EAAEwD,KAAK6W,GAAG,IAAI,IAAI,GAAG5e,EAAE,EAAE,CAAC,EAAE+H,KAAK6Y,GAAG,WAAW,OAAO,GAAGrc,EAAEwD,KAAK6W,GAAG,IAAI,IAAI,EAAE,EAAE7W,KAAKiY,GAAG,SAAShgB,GAAGuE,EAAEwD,KAAK6W,GAAG,IAAI,IAAI,GAAG5e,EAAE,EAAE,CAAC,EAAE+H,KAAKqY,GAAG,WAAW,OAAO,GAAG7b,EAAEwD,KAAK6W,GAAG,IAAI,IAAI,EAAE,EAAE7W,KAAKiZ,GAAG,SAAShhB,EAAEb,GAAG4I,KAAKyX,GAAG,GAAGzX,KAAKW,GAAG1I,GAAG+H,KAAKwF,GAAGpO,GAC3f4I,KAAKyL,KAAKzL,KAAK+X,IAAG,GAAI/X,KAAKiY,IAAG,EAAG,EAAEjY,KAAKyY,GAAG,WAAWxhB,EAAE+I,KAAK6W,IAAI,IAAI,IAAI,CAAC,EAAE7W,KAAK+K,GAAG,WAAW,IAAI9S,EAAEhB,EAAE+I,KAAK6W,IAAI,IAAI,GAAyB,OAAtB5f,EAAE+I,KAAK6W,IAAI,IAAI,GAAG5e,EAAE,EAAS,IAAIA,CAAC,EAAE+H,KAAKyX,GAAG,SAASxf,GAAGyB,EAAEsG,KAAK6W,GAAG,IAAI,IAAI,GAAG5e,CAAC,EAAE+H,KAAK2Y,GAAG,WAAW,OAAOjf,EAAEsG,KAAK6W,GAAG,IAAI,IAAI,EAAE,EAAE7W,KAAK+Y,GAAG,WAAW,GAAGlM,GAAG7M,KAAKuX,MAAM,OAAO7d,EAAEsG,KAAKqX,IAAI,IAAI,GAAG,IAAIpf,EAAE+H,KAAK2Y,KAAK,OAAO,IAAI1gB,EAAEA,EAAE+H,KAAKqX,EAAE,CAAC,CAAC,SAAStH,GAAG/Y,GAAG,OAAOgZ,GAAG,IAAK7U,GAAEnE,GAAI6f,GAAG,CAAC,IAAIje,GAAE,GAAG,SAAS/B,GAAEG,GAAG,IAAIiB,EAAEW,GAAE5B,GAAqD,OAAlDiB,IAAIjB,GAAG4B,GAAES,SAAST,GAAES,OAAOrC,EAAE,GAAG4B,GAAE5B,GAAGiB,EAAEgV,EAAGnI,IAAI9N,IAAWiB,CAAC,CAChe,SAASsX,GAAGvY,GAAG,IAAIiB,EAAEqX,EAAGtY,GAAG,EAAEI,EAAEkW,GAAGrV,GAAkB,OAAfb,GAAGwY,EAAG5Y,EAAEwF,EAAEpF,EAAEa,GAAUb,CAAC,CAAia,IAAI4V,GAAG,CAAC,EACre,SAAS8C,KAAK,IAAIhC,GAAG,CAAC,IAAuN7V,EAAnNjB,EAAE,CAACwS,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBC,WAAWA,UAAUC,WAAWD,UAAUC,UAAU,IAAI,KAAKzQ,QAAQ,IAAI,KAAK,SAASlB,EAAEmZ,GAAI,kBAAoB,IAAItZ,KAAK+U,QAAG,IAASA,GAAG/U,UAAUjB,EAAEiB,GAAGjB,EAAEiB,GAAG+U,GAAG/U,GAAG,IAAIb,EAAE,GAAG,IAAIa,KAAKjB,EAAEI,EAAEsJ,KAAKzI,EAAE,IAAIjB,EAAEiB,IAAI6V,GAAG1W,CAAC,CAAC,OAAO0W,EAAE,CAAC,IAAIA,GAAGI,GAAG,CAAC,KAAK,GAAG,IAAI,SAASS,GAAG3X,EAAEiB,GAAG,IAAIb,EAAE8W,GAAGlX,GAAG,IAAIiB,GAAG,KAAKA,IAAI,IAAIjB,EAAE2a,EAAGnb,GAAG2W,EAAG/V,EAAE,IAAIA,EAAEiC,OAAO,GAAGjC,EAAEsJ,KAAKzI,EAAE,CAAC,IAAIyG,GAAE,EACpH,SAAS0Q,GAAGpY,GAAG,OAAO,GAAIA,EAAE,IAAI,GAAIA,EAAE,KAAK,GAAIA,EAAE,IAAI,CAAC,IAAI2W,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAEhe,SAASqF,GAAGjc,EAAEiB,EAAEb,EAAEV,GAAG,SAASa,EAAEW,EAAEhB,EAAEwB,GAAG,IAAIR,EAAE,iBAAiBA,EAAEA,EAAEwS,WAAWxS,GAAG,GAAGA,EAAEmB,OAAOnC,GAAGgB,EAAEQ,EAAE,GAAGR,EAAE,OAAOA,CAAC,CAAC,SAASP,EAAEO,EAAEhB,GAAG,OAAOK,EAAEW,EAAEhB,EAAE,IAAI,CAAC,SAASkF,EAAElE,EAAEhB,GAAG,SAASwB,EAAE+C,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,CAAC,CAAC,IAAI9E,EAAmH,OAAjH,KAAKA,EAAE+B,EAAER,EAAEuQ,cAAcvR,EAAEuR,iBAAiB,KAAK9R,EAAE+B,EAAER,EAAEyS,WAAWzT,EAAEyT,eAAehU,EAAE+B,EAAER,EAAE0S,UAAU1T,EAAE0T,YAAmBjU,CAAC,CAAC,SAASc,EAAES,GAAG,OAAOA,EAAE2S,UAAU,KAAK,EAAE,OAAO,IAAIrC,KAAKtQ,EAAEuQ,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOvQ,EAAE,KAAK,EAAE,OAAO,IAAIsQ,KAAKtQ,EAAEuQ,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAID,KAAKtQ,EAAEuQ,cAC7e,EAAE,GAAG,KAAK,EAAE,OAAO,IAAID,KAAKtQ,EAAEuQ,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAID,KAAKtQ,EAAEuQ,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAID,KAAKtQ,EAAEuQ,cAAc,EAAE,GAAG,IAAI,CAAC,SAASrS,EAAE8B,GAAG,IAAIhB,EAAEgB,EAAE+e,GAAG,IAAI/e,EAAE,IAAIsQ,KAAK,IAAKA,KAAKtQ,EAAEif,GAAG,KAAK,EAAE,GAAInM,WAAW,EAAE9T,GAAG,CAAC,IAAIwB,EAAER,EAAEyS,WAAWhU,GAAGyY,GAAGlX,EAAEuQ,eAAekF,GAAGC,IAAIlV,GAAG,KAAGxB,EAAEP,EAAEuB,EAAE0S,WAAoH,CAAC1S,EAAE+S,QAAQ/S,EAAE0S,UAAU1T,GAAG,KAAK,CAAzIA,GAAGP,EAAEuB,EAAE0S,UAAU,EAAE1S,EAAE+S,QAAQ,GAAG,GAAGvS,EAAER,EAAEgT,SAASxS,EAAE,IAAIR,EAAEgT,SAAS,GAAGhT,EAAEiT,YAAYjT,EAAEuQ,cAAc,GAAwC,CACza,OAD0a/P,EAAE,IAAI8P,KAAKtQ,EAAEuQ,cAAc,EAAE,EAAE,GAAGvR,EAAEO,EAAE,IAAI+Q,KAAKtQ,EAAEuQ,cACxe,EAAE,IAAI/P,EAAEjB,EAAEiB,GAAU,GAAG0D,EAAElF,EAAEgB,GAAG,GAAGkE,EAAE1D,EAAER,GAAGA,EAAEuQ,cAAc,EAAEvQ,EAAEuQ,cAAcvQ,EAAEuQ,cAAc,CAAC,CAAC,IAAI1S,EAAEkB,EAAEP,EAAE,IAAI,IAAI,GACyE,IAAI,IAAIkD,KAD9ElD,EAAE,CAACsK,GAAG/J,EAAEP,GAAG,IAAI,GAAG6O,GAAGtO,EAAEP,EAAE,GAAG,IAAI,GAAGihB,GAAG1gB,EAAEP,EAAE,GAAG,IAAI,GAAGyhB,GAAGlhB,EAAEP,EAAE,IAAI,IAAI,GAAGmhB,GAAG5gB,EAAEP,EAAE,IAAI,IAAI,GAAGygB,GAAGlgB,EAAEP,EAAE,IAAI,IAAI,GAAGqgB,GAAG9f,EAAEP,EAAE,IAAI,IAAI,GAAGugB,GAAGhgB,EAAEP,EAAE,IAAI,IAAI,GAAGgP,GAAGzO,EAAEP,EAAE,IAAI,IAAI,GAAGsL,GAAG/K,EAAEP,EAAE,IAAI,IAAI,GAAG+J,GAAG1K,EAAE6W,EAAG7W,GAAG,IAAIqB,EAAEwV,EAAGxV,GAAGrB,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAC/e,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAqBqB,EAAEA,EAAEkC,QAAQ,IAAIuS,OAAOjS,EAAE,KAAK7D,EAAE6D,IAAI,IAAIvD,EAAE,2DAA2DyV,MAAM,KAAKpQ,EAAE,wFAAwFoQ,MAAM,KAG1F,IAAIlS,KAH2F7D,EAAE,CAAC,KAAK,SAASmC,GAAG,OAAO7B,EAAE6B,EAAE6e,IAAIhL,UAAU,EAAE,EAAE,EAAE,KAAK,SAAS7T,GAAG,OAAO7B,EAAE6B,EAAE6e,GAAG,EAAE,KAAK,SAAS7e,GAAG,OAAOwD,EAAExD,EAAE2f,IAAI9L,UAAU,EACzhB,EAAE,EAAE,KAAK,SAAS7T,GAAG,OAAOwD,EAAExD,EAAE2f,GAAG,EAAE,KAAK,SAAS3f,GAAG,OAAOP,GAAGO,EAAEif,GAAG,MAAM,IAAI,EAAE,EAAE,EAAE,KAAK,SAASjf,GAAG,OAAOP,EAAEO,EAAEigB,GAAG,EAAE,EAAE,KAAK,SAASjgB,GAAG,OAAOX,EAAEW,EAAEigB,GAAG,EAAE,IAAI,EAAE,KAAK,SAASjgB,GAAG,OAAO9B,EAAE8B,GAAGwS,WAAWqB,UAAU,EAAE,EAAE,KAAK,SAAS7T,GAAG,OAAO9B,EAAE8B,EAAE,EAAE,KAAK,SAASA,GAAG,OAAOP,EAAEO,EAAEyf,GAAG,EAAE,EAAE,KAAK,SAASzf,GAAkC,OAAxB,IAAPA,EAAEA,EAAEyf,IAAQzf,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAWP,EAAEO,EAAE,EAAE,EAAE,KAAK,SAASA,GAAG,IAAI,IAAIhB,EAAE,EAAEwB,EAAE,EAAEA,GAAGR,EAAE2f,GAAG,EAAE3gB,IAAIkY,GAAGlX,EAAEif,GAAG,MAAMxJ,GAAGC,IAAIlV,MAAM,OAAOf,EAAEO,EAAEigB,GAAGjhB,EAAE,EAAE,EAAE,KAAK,SAASgB,GAAG,OAAOP,EAAEO,EAAE2f,GAAG,EAAE,EAAE,EAAE,KAAK,SAAS3f,GAAG,OAAOP,EAAEO,EAAEqN,GACpf,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAASrN,GAAG,OAAO,GAAGA,EAAEyf,IAAI,GAAGzf,EAAEyf,GAAG,KAAK,IAAI,EAAE,KAAK,SAASzf,GAAG,OAAOP,EAAEO,EAAE8I,GAAG,EAAE,EAAE,KAAK,WAAW,MAAM,IAAI,EAAE,KAAK,SAAS9I,GAAG,OAAOA,EAAE6e,IAAI,CAAC,EAAE,KAAK,SAAS7e,GAAG,OAAOP,EAAEgR,KAAKqD,OAAO9T,EAAE+e,GAAG,EAAE/e,EAAE6e,IAAI,GAAG,EAAE,EAAE,KAAK,SAAS7e,GAAG,IAAIhB,EAAEyR,KAAKqD,OAAO9T,EAAE+e,GAAG,GAAG/e,EAAE6e,GAAG,GAAG,GAAG,GAA+B,GAA5B,IAAI7e,EAAE6e,GAAG,IAAI7e,EAAE+e,GAAG,GAAG,GAAG/f,IAAOA,EAAE,IAAIA,IAAwB,IAApBwB,GAAGR,EAAE6e,GAAG,IAAI7e,EAAE+e,IAAI,IAAQ,GAAGve,GAAG0W,GAAGlX,EAAEif,MAAMjgB,EAAE,QAAQ,CAACA,EAAE,GAAG,IAAIwB,GAAGR,EAAE6e,GAAG,EAAE7e,EAAE+e,GAAG,GAAG,GAAG,GAAGve,GAAG,GAAGA,GAAG0W,GAAGlX,EAAEif,GAAG,IAAI,KAAKjgB,GAAG,CAAC,OAAOS,EAAET,EAAE,EAAE,EAAE,KAAK,SAASgB,GAAG,OAAOA,EAAE6e,EAAE,EAAE,KAAK,SAAS7e,GAAG,OAAOP,EAAEgR,KAAKqD,OAAO9T,EAAE+e,GAC1hB,GAAG/e,EAAE6e,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,SAAS7e,GAAG,OAAOA,EAAEif,GAAG,MAAMzM,WAAWqB,UAAU,EAAE,EAAE,KAAK,SAAS7T,GAAG,OAAOA,EAAEif,GAAG,IAAI,EAAE,KAAK,SAASjf,GAAU,IAAIhB,EAAE,IAAbgB,EAAEA,EAAE8J,IAA+B,OAAjB9J,EAAEyQ,KAAKsD,IAAI/T,GAAG,IAAUhB,EAAE,IAAI,KAAK0F,OAAO,QAAQ1E,EAAE,GAAG,IAAIA,EAAE,KAAKqB,OAAO,EAAE,EAAE,KAAK,SAASrB,GAAG,OAAOA,EAAEuI,EAAE,EAAE,KAAK,WAAW,MAAM,GAAG,GAAGrJ,EAAEA,EAAEkC,QAAQ,MAAM,QAAqBvD,EAAEqB,EAAE8U,SAAStS,KAAKxC,EAAEA,EAAEkC,QAAQ,IAAIuS,OAAOjS,EAAE,KAAK7D,EAAE6D,GAAGlD,KAAsC,OAARkD,EAPxZ,SAAY5C,GAAG,IAAIiB,EAAEkU,MAAMmD,EAAGtY,GAAG,GAAsB,OAAnB4Y,EAAG5Y,EAAEiB,EAAE,EAAEA,EAAEoB,QAAepB,CAAC,CAO2V+Z,CAA3B5a,EAAEA,EAAEkC,QAAQ,QAAQ,MAAgBM,EAAEP,OAAOpB,EAAS,GAAEuE,EAAE4P,IAAIxS,EAAE5C,IAAI,GAAU4C,EAAEP,OAAO,EAAC,CACvd,IAAI4e,GAAG,CAACjhB,EAAE,SAASA,GAAG,OAAOsW,GAAGtW,EAAE,IAAI,EAAE,EAAEY,EAAE,SAASZ,GAA+D,OAA5DA,EAAE,IAAImE,GAAEnE,IAAK6hB,OAAO7hB,EAAE+gB,IAAG,GAAIhZ,KAAK/H,EAAEihB,IAAG,GAAI3b,EAAEoE,KAAK1J,GAAGA,EAAEyhB,KAAYzhB,EAAE+hB,IAAI,EAAExI,GAAG,SAASvZ,GAAoF,MAAjFR,EAAE,0EAA0ED,GAAE,EAASS,CAAE,EAAE0B,EAAE,WAAWkG,GAAE,GAAG,IAAI5H,EAAEsF,EAAE+H,MAAM,GAAGrN,EAAE+T,OAAO/T,EAAEqhB,KAAK,CAAC,IAAIpgB,EAAEjB,EAAE8T,KAAK7S,GAAGpB,GAAEoB,EAAFpB,CAAKG,EAAEqgB,IAAItH,GAAG/Y,EAAEqgB,GAAG,CAACrb,GAAE,CAAC,EAAEnE,EAAE,WAAW,IAAIb,EAAEgF,GAAE,IAAIhF,EAAE,OAAO0H,GAAE,EAAE,IAAIzG,EAAE,IAAIkD,GAAEnE,GAAGiB,EAAEwf,GAAGzgB,GAAG,IAAII,EAAEa,EAAEsf,KAAK,IAAIngB,EAAE,OAAOsH,GAAE,EAAE1H,EAAE,IAAI,IAAIN,EAAEyV,MAAMM,UAAUlT,MAAMmT,KAAK5D,WAAWvR,EAAE,EAAEA,EAAEb,EAAE2C,OAAO9B,IAAI,CAAC,IAAII,EAAEjB,EAAEa,GACnf,GAAG,IAAII,GAAGA,IAAIP,EAAE,MAAM,GAAG+b,GAAGxb,EAAEP,EAAEa,EAAE4e,GAAG,IAAI,OAAOnY,GAAE/G,EAAEX,CAAC,CAAK,OAAJ0H,GAAEtH,EAASJ,CAAC,EAAEoF,EAAE,WAAW,IAAIpF,EAAEgF,GAAE,IAAIhF,EAAE,OAAO0H,GAAE,EAAE,IAAIzG,EAAE,IAAIkD,GAAEnE,GAAGiB,EAAEwf,GAAGzgB,GAAG,IAAII,EAAEa,EAAEsf,KAAK,IAAIngB,EAAE,OAAOsH,GAAE,EAAE1H,EAAE,IAAI,IAAIN,EAAEyV,MAAMM,UAAUlT,MAAMmT,KAAK5D,WAAWvR,EAAE,EAAEA,EAAEb,EAAE2C,OAAO9B,IAAI,CAAC,IAAII,EAAEjB,EAAEa,GAAG,GAAG,IAAII,GAAGA,IAAIP,EAAE,MAAM,GAAG+b,GAAGxb,EAAEP,EAAEa,EAAE4e,GAAG,IAAI,OAAOnY,GAAE/G,EAAEX,CAAC,CAAK,OAAJ0H,GAAEtH,EAASJ,CAAC,EAAEkB,EAAE,WAAW,IAAIlB,EAAEgF,GAAE,IAAIhF,EAAE,OAAO0H,GAAE,EAAE,IAAIzG,EAAE,IAAIkD,GAAEnE,GAAGiB,EAAEwf,GAAGzgB,GAAG,IAAII,EAAEa,EAAEsf,KAAK,IAAIngB,EAAE,OAAOsH,GAAE,EAAE1H,EAAE,IAAI,IAAIN,EAAEyV,MAAMM,UAAUlT,MAAMmT,KAAK5D,WAAWvR,EAAE,EAAEA,EAAEb,EAAE2C,OAAO9B,IAAI,CAAC,IAAII,EAAEjB,EAAEa,GAAG,GAAG,IAAII,GAAGA,IAAIP,EAAE,MAChf,GAAG+b,GAAGxb,EAAEP,EAAEa,EAAE4e,GAAG,IAAI,OAAOnY,GAAE/G,EAAEX,CAAC,CAAK,OAAJ0H,GAAEtH,EAASJ,CAAC,EAAEQ,EAAEuY,GAAGpR,EAAE,WAAW,IAAI3H,EAAEsF,EAAE+H,MAAMrN,GAAG+F,EAAE,yBAAyB,IAAI9E,EAAEjB,EAAEqgB,GAAiD,MAA9CrgB,EAAEqhB,OAAO/b,EAAEoE,KAAK1J,GAAGA,EAAEihB,IAAG,GAAIjhB,EAAE+gB,IAAG,GAAIhZ,KAAK/C,GAAE/D,EAAQA,CAAE,EAAEA,EAAE,SAASjB,EAAEiB,EAAEb,GAA8B,MAA3B,IAAK+D,GAAEnE,GAAIiiB,GAAGhhB,EAAEb,GAAG4E,GAAEhF,EAAE+H,IAAU/H,CAAE,EAAE2a,GAAG,WAAW,OAAO5S,CAAC,EAAEjI,EAAE,SAASE,GAAY,MAATgF,KAAIA,GAAEhF,GAASA,CAAE,EAAEwF,EAAE,WAAW,OAAO,CAAC,EAAE2S,GAAG,WAAW,EAAEvC,GAAG,WAAW,EAAE0C,GAAG,WAAW,EAAE8B,GAAG,WAAW,OAAO,CAAC,EAAErD,GAAG,WAAW,EAAEd,GAAG,WAAW,EAAEY,GAAG,WAAW,EAAE7R,EAAE,WAAW,EAAE4T,GAAG,WAAW,EAAEM,GAAG,WAAW,EAAEhB,GAAG,WAAW,EAAE/B,GAAG,WAAW,EAC3f6C,GAAG,WAAW,EAAE1C,GAAG,WAAWvQ,EAAE,iHAAiH,EAAEwS,GAAG,WAAWxS,EAAE,iHAAiH,EAAE5B,EAAE,WAAW,OAAOqN,KAAKtH,KAAK,EAAEmM,GAAG,WAAW,OAAM,CAAE,EAAEqC,GAAG,SAAS1Y,EAAEiB,GAAGjB,EAAE,IAAIwR,KAAK,KAAK9O,EAAE1C,IAAI,GAAG,WAAWC,EAAED,EAAE,IAAI,KAAKC,EAAEgB,GAAG,IAAI,GAAGjB,EAAEmX,gBAAgBlX,EAAEgB,EAAE,GAAG,IAAI,GAAGjB,EAAEoX,gBAAgBnX,EAAEgB,EAAE,GAAG,IAAI,GAAGjB,EAAEqX,cAAcpX,EAAEgB,EAAE,IAAI,IACpf,GAAGjB,EAAEsX,aAAarX,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAEuX,cAActX,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAEwX,iBAAiB,KAAKvX,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAEyX,YAAYxX,EAAEgB,EAAE,IAAI,IAAI,IAAIjB,EAAEgU,UAAUxC,KAAKkG,IAAI1X,EAAEwX,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,CAAC,EAAEP,GAAG,SAASjX,EAAEiB,GAAGjB,EAAE,IAAIwR,KAAK,KAAK9O,EAAE1C,IAAI,GAAG,WAAWC,EAAED,EAAE,IAAI,KAAKC,EAAEgB,GAAG,IAAI,GAAGjB,EAAE4X,aAAa3X,EAAEgB,EAAE,GAAG,IAAI,GAAGjB,EAAE6X,aAAa5X,EAAEgB,EAAE,GAAG,IAAI,GAAGjB,EAAE8X,WAAW7X,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAE4T,UAAU3T,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAE2T,WAAW1T,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAEyR,cAAc,KAAKxR,EAAEgB,EAAE,IAAI,IAAI,GAAGjB,EAAE6T,SAAS,IAAIzT,EAAE,IAAIoR,KAAKxR,EAAEyR,cAAc,EAAE,GAAGxR,EAAEgB,EACpf,IAAI,IAAI,IAAIjB,EAAEgU,UAAU5T,EAAE4T,WAAW,MAAM,EAAE/T,EAAEgB,EAAE,IAAI,IAAI,IAAK,GAAGjB,EAAE0R,oBAAqB,IAAIhS,EAAE,IAAK8R,KAAKxR,EAAEyR,cAAc,EAAE,GAAIC,oBAAoBtR,EAAEA,EAAEsR,oBAAoBzR,EAAEgB,EAAE,IAAI,IAAI,GAAgD,GAA5CvB,GAAGU,GAAGJ,EAAE0R,qBAAqBC,KAAKoG,IAAI3X,EAAEV,GAAK,EAAEmW,GAAG,SAAS7V,GAAG,IAAIiB,EAAE,IAAIuQ,KAAKvR,EAAED,EAAE,IAAI,IAAI,GAAG,KAAKC,EAAED,EAAE,IAAI,IAAI,GAAGC,EAAED,EAAE,IAAI,IAAI,GAAGC,EAAED,EAAE,GAAG,IAAI,GAAGC,EAAED,EAAE,GAAG,IAAI,GAAGC,EAAED,GAAG,IAAI,GAAG,GAAGI,EAAEH,EAAED,EAAE,IAAI,IAAI,GAAGN,EAAEuB,EAAEyQ,oBAAoBnR,EAAE,IAAIiR,KAAKvQ,EAAEwQ,cAAc,EAAE,GAAG9Q,EAAE,IAAK6Q,KAAKvQ,EAAEwQ,cAAc,EAAE,GAAIC,oBAAoBtM,EAAE7E,EAAEmR,oBACvejR,EAAEkR,KAAKoG,IAAI3S,EAAEzE,GAAsU,OAAnU,EAAEP,EAAEH,EAAED,EAAE,IAAI,IAAI,GAAG6R,OAAOlR,GAAGyE,GAAG3E,GAAGf,GAAG,EAAEU,IAAIK,GAAGf,KAAKiB,EAAEgR,KAAKC,IAAIxM,EAAEzE,GAAGM,EAAEgX,QAAQhX,EAAE+S,UAAU,MAAM,EAAE5T,EAAEK,EAAEE,GAAGjB,KAAKO,EAAED,EAAE,IAAI,IAAI,GAAGiB,EAAE4S,SAAS5T,EAAED,EAAE,IAAI,IAAI,IAAIiB,EAAE+S,UAAUzT,EAAEyT,WAAW,MAAM,EAAE/T,EAAED,GAAG,IAAI,GAAGiB,EAAE2W,aAAa3X,EAAED,EAAE,GAAG,IAAI,GAAGiB,EAAE4W,aAAa5X,EAAED,EAAE,GAAG,IAAI,GAAGiB,EAAE6W,WAAW7X,EAAED,EAAE,IAAI,IAAI,GAAGiB,EAAE2S,UAAU3T,EAAED,EAAE,IAAI,IAAI,GAAGiB,EAAE0S,WAAkB1S,EAAE+S,UAAU,IAAI,CAAC,EAAEwC,GAAG,WAAW,OAAO,EAAE,EAAEE,GAAG,WAAW,EAAEqC,GAjBwB,SAAStC,EAAGzW,EAAEiB,EAAEb,GAAGqW,EAAGpN,KAAKoN,EAAGpN,IAAG,EAAlZ,SAAYrJ,EAAEiB,EAAEb,GAAG,SAASV,EAAEN,GAAG,OAAOA,EAAEA,EAAEkS,eAAeC,MAAM,sBAAsBnS,EAAE,GAAG,KAAK,CAAC,IAAImB,GAAE,IAAKiR,MAAMC,cAAc9Q,EAAE,IAAI6Q,KAAKjR,EAAE,EAAE,GAAG6E,EAAE,IAAIoM,KAAKjR,EAAE,EAAE,GAAGA,EAAEI,EAAE+Q,oBAAoB,IAAIjR,EAAE2E,EAAEsM,oBAAoBzR,EAAED,GAAG,IAAI,GAAG,GAAG2R,KAAKC,IAAIrR,EAAEE,GAAGR,EAAEgB,GAAG,IAAI,GAAG4Q,OAAOtR,GAAGE,GAAGT,EAAEN,EAAEiB,GAAGM,EAAEvB,EAAE0F,GAAGpF,EAAEuY,GAAGvY,GAAGiB,EAAEsX,GAAGtX,GAAGR,EAAEF,GAAGmC,EAAEtC,GAAG,IAAI,GAAGJ,EAAE0C,EAAEtC,EAAE,GAAG,IAAI,GAAGa,IAAIyB,EAAEtC,GAAG,IAAI,GAAGa,EAAEyB,EAAEtC,EAAE,GAAG,IAAI,GAAGJ,EAAE,CAAqCoW,CAAGpW,EAAEiB,EAAEb,GAAG,EAiBhE2F,EAAE,WAAWA,EAAE,GAAG,EAAEwP,GAAG,WAAW,OAAO,UAAU,EAAEtV,EAAES,EAAE,KAAK,IAAIV,EAAEuB,QAAQ2Q,SAAS,OAAO,IACxflS,EAAE,GAAGA,EAAE,GAAG,KAAK,IAAIkE,YAAYgG,MAAM6L,GAAG,SAAS/V,EAAEiB,EAAEb,GAAG6F,EAAEuS,WAAWxY,IAAI,EAAEiB,IAAI,EAAEA,EAAEb,IAAI,EAAE,EAAE6F,EAAE,SAASjG,GAAG,IAAIiB,EAAEgF,EAAE5D,OAAc,GAAG,YAAVrC,KAAK,GAAkB,OAAM,EAAG,IAAI,IAAII,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAIV,EAAEuB,GAAG,EAAE,GAAGb,GAAGV,EAAEiS,KAAKoG,IAAIrY,EAAEM,EAAE,WAAW,IAAIO,EAAEoR,KAAKjS,EAAEiS,KAAKC,IAAI5R,EAAEN,GAAGa,EAAEA,EAAEwX,IAAIrC,KAAKnV,EAAE,WAAWb,GAAG,MAAMA,EAAE,OAAO,OAAOM,EAAE,CAAC,IAAIuV,EAAGsD,KAAKtY,EAAEiW,EAAG/O,WAAW,QAAQ,IAAIiP,IAAK,IAAI/V,EAAE,EAAE,MAAMX,CAAW,CAAT,MAAMoF,GAAG,CAACzE,OAAE,CAAM,CAAC,GAAGA,EAAE,OAAM,CAAE,CAAC,OAAM,CAAE,EAAE4V,GAAG,SAASvW,EAAEiB,GAAG,IAAIb,EAAE,EACrX,OADuX0Y,KAAK/M,SAAQ,SAASrM,EAAEa,GAAG,IAAII,EAAEM,EAAEb,EAAsB,IAApBG,EAAEmC,EAAE1C,EAAE,EAAEO,GAAG,IAAI,GAAGI,EAAMA,EAAE,EAAEA,EAAEjB,EAAE2C,SAAS1B,EAAE6E,EAAEjF,KAC9f,IAAI,GAAGb,EAAEsG,WAAWrF,GAAG6E,EAAEjF,GAAG,IAAI,GAAG,EAAEH,GAAGV,EAAE2C,OAAO,CAAC,IAAU,CAAC,EAAE6T,GAAG,SAASlW,EAAEiB,GAAG,IAAIb,EAAE0Y,KAAKpW,EAAE1C,GAAG,IAAI,GAAGI,EAAEiC,OAAO,IAAI3C,EAAE,EAAsD,OAApDU,EAAE2L,SAAQ,SAASxL,GAAGb,GAAGa,EAAE8B,OAAO,CAAC,IAAGK,EAAEzB,GAAG,IAAI,GAAGvB,EAAS,CAAC,EAAEsa,GAAG,SAASha,GAAGiF,GAAe,EAAEmV,IAAKiC,KAAKxa,EAAEkU,GAAIwG,GAAG,GAAGrF,GAAG,GAAG7U,QAAQsV,GAAG,EAAE,IAAIT,GAAG,GAAG7U,QAAQsV,GAAG,EAAE,KAAU1S,GAAe,EAAEmV,IAAQvZ,EAAE2J,QAAO3J,EAAE2J,OAAOxK,GAAGT,GAAE,GAAGkb,EAAGza,EAAE,IAAIwZ,EAAGxZ,GAAG,EAAEX,EAAE,WAAW,OAAO,EAAE,EAAE0I,EAAE,WAAW,OAAO,EAAE,EAAE8R,GAAG,WAAW,OAAO,EAAE,EAAEvU,EAAE,SAAStF,EAAEiB,EAAEb,EAAEV,GAAG,IAAI,IAAIa,EAAE,EAAEI,EAAE,EAAEA,EAAEP,EAAEO,IAAI,CAAC,IAAIyE,EAAE1C,EAAEzB,GAAG,IAAI,GAAGR,EAAEiC,EAAEzB,EAAE,GAClf,IAAI,GAAGA,GAAG,EAAE,IAAI,IAAI7B,EAAE,EAAEA,EAAEqB,EAAErB,IAAIuY,GAAG3X,EAAEiG,EAAEb,EAAEhG,IAAI,IAAImB,GAAGE,CAAC,CAAe,OAAdiC,EAAEhD,GAAG,IAAI,GAAGa,EAAS,CAAC,EAAEH,EAAE,WAAW,OAAOsH,EAAC,EAAE8R,GAlB+J,SAASnU,EAAErF,EAAEiB,GAAGoE,EAAEkc,KAAKlc,EAAEkc,GAA7R,WAAc,GAAG,iBAAiBnI,QAAQ,mBAAmBA,OAAOC,gBAAgB,CAAC,IAAIrZ,EAAE,IAAIkC,WAAW,GAAG,MAAM,KAAKkX,OAAOC,gBAAgBrZ,GAAUA,EAAE,GAAG,CAAC,GAAGU,EAAE,IAAI,IAAIO,EAAE,EAAQ,MAAU,MAAM,IAAIA,EAAEqY,YAAY,GAAG,EAAY,CAAT,MAAMlZ,GAAG,CAAC,MAAM,IAAI2F,EAAE,eAAe,CAA6BiS,IAAM,IAAI,IAAI5X,EAAE,EAAEA,EAAEa,EAAEb,IAAIoF,EAAExF,EAAEI,GAAG,IAAI,GAAGiF,EAAEkc,KAAK,OAAO,CAAC,EAkB7O9G,GAgBqE,SAAYza,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAhBzJyS,GAgB5B,SAAYra,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAhBxDlF,EAgBtH,SAAY1C,GAAG,IAAIiB,EAAElB,KAAI,IAAI,OAAOF,GAAEG,EAAFH,EAA8C,CAAvC,MAAMO,GAAQ,GAALyH,GAAE5G,GAAMb,IAAIA,EAAE,EAAE,MAAMA,EAAEwH,GAAE,EAAE,EAAE,CAAC,EAhBwClI,EAW0F,SAAYM,EAAEiB,GAAG,IAAIb,EAAEL,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAA0C,CAAvC,MAAMvB,GAAQ,GAALmI,GAAEzH,GAAMV,IAAIA,EAAE,EAAE,MAAMA,EAAEkI,GAAE,EAAE,EAAE,CAAC,EAX3KX,EAcmE,SAAYjH,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAdxJ/F,EAc7B,SAAY7B,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAdxDnI,EAY1I,SAAYO,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAZqDzH,EAYpD,SAAYH,EAAEiB,EAAEb,EAAEV,GAAG,IAAIa,EAAER,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAA0C,CAAvC,MAAMiB,GAAQ,GAALkH,GAAEtH,GAAMI,IAAIA,EAAE,EAAE,MAAMA,EAAEiH,GAAE,EAAE,EAAE,CAAC,EAZrClH,EAapJ,SAAYV,EAAEiB,EAAEb,EAAEV,EAAEa,GAAG,IAAII,EAAEZ,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAA0C,CAAvC,MAAM6E,GAAQ,GAALyC,GAAElH,GAAMyE,IAAIA,EAAE,EAAE,MAAMA,EAAEwC,GAAE,EAAE,EAAE,CAAC,EAbuDnD,EAciP,SAAYzE,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,GAAG,IAAIyE,EAAErF,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAA0C,CAAvC,MAAMF,GAAQ,GAALoH,GAAEzC,GAAM3E,IAAIA,EAAE,EAAE,MAAMA,EAAEmH,GAAE,EAAE,EAAE,CAAC,EAdlVhI,EAYoN,SAAYI,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,GAAG,IAAIyE,EAAErF,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAA0C,CAAvC,MAAMF,GAAQ,GAALoH,GAAEzC,GAAM3E,IAAIA,EAAE,EAAE,MAAMA,EAAEmH,GAAE,EAAE,EAAE,CAAC,EAZrTtG,EAYuB,SAAYtB,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,GAAG,IAAI3E,EAAEV,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAA0C,CAAvC,MAAMhG,GAAQ,GAALyI,GAAEpH,GAAMrB,IAAIA,EAAE,EAAE,MAAMA,EAAEwI,GAAE,EAAE,EAAE,CAAC,EAZ5HO,EAexK,SAAYnI,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,GAAG,IAAIrB,EAAEW,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAA0C,CAAvC,MAAM1B,GAAQ,GAAL8I,GAAEzI,GAAML,IAAIA,EAAE,EAAE,MAAMA,EAAE6I,GAAE,EAAE,EAAE,CAAC,EAf+DrI,EAe9D,SAAYS,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAAEvD,GAAG,IAAIqF,EAAE3E,KAAI,IAAI,OAAOF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAAEvD,EAA0C,CAAvC,MAAM6B,GAAQ,GAAL2G,GAAEnD,GAAMxD,IAAIA,EAAE,EAAE,MAAMA,EAAE0G,GAAE,EAAE,EAAE,CAAC,EAf3DA,EAkBlL,SAAY5H,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,GAAG,IAAIrB,EAAEW,KAAI,IAAI,OAAO0U,GAAGzU,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAA0C,CAAvC,MAAM1B,GAAQ,GAAL8I,GAAEzI,GAAML,IAAIA,EAAE,EAAE,MAAMA,EAAE6I,GAAE,EAAE,EAAE,CAAC,EAlByEF,EAkBW,SAAY1H,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,GAAG,IAAI3E,EAAEV,KAAI,IAAI,OAAOwhB,GAAGvhB,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAA0C,CAAvC,MAAMhG,GAAQ,GAALyI,GAAEpH,GAAMrB,IAAIA,EAAE,EAAE,MAAMA,EAAEwI,GAAE,EAAE,EAAE,CAAC,EAlBhH/H,EAkBiH,SAAYG,EAAEiB,EAAEb,EAAEV,EAAEa,GAAG,IAAII,EAAEZ,KAAI,IAAI,OAAO4J,GAAG3J,EAAEiB,EAAEb,EAAEV,EAAEa,EAA0C,CAAvC,MAAM6E,GAAQ,GAALyC,GAAElH,GAAMyE,IAAIA,EAAE,EAAE,MAAMA,EAAEwC,GAAE,EAAE,EAAE,CAAC,EAlB9MC,EAiBuB,SAAY7H,EAAEiB,EAAEb,EAAEV,GAAG,IAAIa,EAAER,KAAI,IAAI,OAAOkiB,GAAGjiB,EAAEiB,EAAEb,EAAEV,EAA0C,CAAvC,MAAMiB,GAAQ,GAALkH,GAAEtH,GAAMI,IAAIA,EAAE,EAAE,MAAMA,EAAEiH,GAAE,EAAE,EAAE,CAAC,EAjBhHvC,EAkBvF,SAAYrF,GAAG,IAAIiB,EAAElB,KAAI,IAAI,OAAOshB,GAAGrhB,EAA0C,CAAvC,MAAMI,GAAQ,GAALyH,GAAE5G,GAAMb,IAAIA,EAAE,EAAE,MAAMA,EAAEwH,GAAE,EAAE,EAAE,CAAC,EAlBU7H,EAiB4G,SAAYC,EAAEiB,GAAG,IAAIb,EAAEL,KAAI,IAAI,OAAOyO,GAAGxO,EAAEiB,EAA0C,CAAvC,MAAMvB,GAAQ,GAALmI,GAAEzH,GAAMV,IAAIA,EAAE,EAAE,MAAMA,EAAEkI,GAAE,EAAE,EAAE,CAAC,EAjB7LhG,EAkBgM,SAAY5B,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAI,OAAO0hB,GAAGzhB,EAAEiB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAlBrRrH,EAYgF,SAAYP,GAAG,IAAIiB,EAAElB,KAAI,IAAIF,GAAEG,EAAFH,EAA8C,CAAvC,MAAMO,GAAQ,GAALyH,GAAE5G,GAAMb,IAAIA,EAAE,EAAE,MAAMA,EAAEwH,GAAE,EAAE,EAAE,CAAC,EAZvJ9B,EAWkF,SAAY9F,EAAEiB,GAAG,IAAIb,EAAEL,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAA0C,CAAvC,MAAMvB,GAAQ,GAALmI,GAAEzH,GAAMV,IAAIA,EAAE,EAAE,MAAMA,EAAEkI,GAAE,EAAE,EAAE,CAAC,EAX5JjH,EAW6J,SAAYX,EAAEiB,EAAEb,GAAG,IAAIV,EAAEK,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAA0C,CAAvC,MAAMG,GAAQ,GAALsH,GAAEnI,GAAMa,IAAIA,EAAE,EAAE,MAAMA,EAAEqH,GAAE,EAAE,EAAE,CAAC,EAX3O2S,GAgBsC,SAAYva,EAAEiB,EAAEb,EAAEV,GAAG,IAAIa,EAAER,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAA0C,CAAvC,MAAMiB,GAAQ,GAALkH,GAAEtH,GAAMI,IAAIA,EAAE,EAAE,MAAMA,EAAEiH,GAAE,EAAE,EAAE,CAAC,EAhBvHnH,EAavI,SAAYT,EAAEiB,EAAEb,EAAEV,GAAG,IAAIa,EAAER,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAA0C,CAAvC,MAAMiB,GAAQ,GAALkH,GAAEtH,GAAMI,IAAIA,EAAE,EAAE,MAAMA,EAAEiH,GAAE,EAAE,EAAE,CAAC,EAbqD7I,EAa4C,SAAYiB,EAAEiB,EAAEb,EAAEV,EAAEa,GAAG,IAAII,EAAEZ,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAA0C,CAAvC,MAAM6E,GAAQ,GAALyC,GAAElH,GAAMyE,IAAIA,EAAE,EAAE,MAAMA,EAAEwC,GAAE,EAAE,EAAE,CAAC,EAblI1H,EAazD,SAAYF,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,GAAG,IAAIyE,EAAErF,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAA0C,CAAvC,MAAMF,GAAQ,GAALoH,GAAEzC,GAAM3E,IAAIA,EAAE,EAAE,MAAMA,EAAEmH,GAAE,EAAE,EAAE,CAAC,EAbjChF,EAa8H,SAAY5C,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,GAAG,IAAI3E,EAAEV,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAA0C,CAAvC,MAAMhG,GAAQ,GAALyI,GAAEpH,GAAMrB,IAAIA,EAAE,EAAE,MAAMA,EAAEwI,GAAE,EAAE,EAAE,CAAC,EAb5NpI,EAc9P,SAAYQ,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,GAAG,IAAIrB,EAAEW,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAA0C,CAAvC,MAAM1B,GAAQ,GAAL8I,GAAEzI,GAAML,IAAIA,EAAE,EAAE,MAAMA,EAAE6I,GAAE,EAAE,EAAE,CAAC,EAd4JqR,GAc2B,SAAYjZ,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,GAAG,IAAIL,EAAEgB,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAA0C,CAAvC,MAAMwD,GAAQ,GAALiF,GAAE9I,GAAM6D,IAAIA,EAAE,EAAE,MAAMA,EAAEgF,GAAE,EAAE,EAAE,CAAC,EAdhItD,EAe3B,SAAYtE,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,GAAG,IAAIvD,EAAEU,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAA0C,CAAvC,MAAM8B,GAAQ,GAALmD,GAAExI,GAAMqF,IAAIA,EAAE,EAAE,MAAMA,EAAEkD,GAAE,EAAE,EAAE,CAAC,EAfnFlD,EAeoF,SAAY1E,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAAEvD,EAAEqF,EAAExD,EAAEhB,EAAEwB,GAAG,IAAI/B,EAAEI,KAAI,IAAIF,GAAEG,EAAFH,CAAKoB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAAEvD,EAAEqF,EAAExD,EAAEhB,EAAEwB,EAA0C,CAAvC,MAAM+C,GAAQ,GAALoD,GAAElI,GAAM8E,IAAIA,EAAE,EAAE,MAAMA,EAAEmD,GAAE,EAAE,EAAE,CAAC,EAftN6R,GAgB+E,SAAYzZ,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,GAAG,IAAIrB,EAAEW,KAAI,IAAI4hB,GAAG3hB,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAA0C,CAAvC,MAAM1B,GAAQ,GAAL8I,GAAEzI,GAAML,IAAIA,EAAE,EAAE,MAAMA,EAAE6I,GAAE,EAAE,EAAE,CAAC,EAhBhLxG,EAiBzL,SAAYpB,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAAEvD,GAAG,IAAIqF,EAAE3E,KAAI,IAAIgiB,GAAG/hB,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAAEyE,EAAE3E,EAAErB,EAAEL,EAAE6D,EAAEvD,EAA0C,CAAvC,MAAM6B,GAAQ,GAAL2G,GAAEnD,GAAMxD,IAAIA,EAAE,EAAE,MAAMA,EAAE0G,GAAE,EAAE,EAAE,CAAC,EAjBuEE,EAiB9R,SAAY9H,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,GAAG,IAAIyE,EAAErF,KAAI,IAAI8hB,GAAG7hB,EAAEiB,EAAEb,EAAEV,EAAEa,EAAEI,EAA0C,CAAvC,MAAMF,GAAQ,GAALoH,GAAEzC,GAAM3E,IAAIA,EAAE,EAAE,MAAMA,EAAEmH,GAAE,EAAE,EAAE,CAAC,EAjBoMxI,EAAE,SAASY,GAAG,OAAOA,CAAC,EAAEL,EAAE,SAASK,GAAG0H,GAAE1H,CAAC,EAAEma,GAAG8B,GAAGjb,EAAE,SAAShB,EAAEiB,EAAEb,EAAEV,GAAG,OAAOuc,GAAGjc,EAAEiB,EAAEb,EAAEV,EAAE,IAC1X,WAAY,SAASM,EAAEO,GAAGM,EAAE+Z,IAAIra,EAAEsa,QAAQtF,EAAG1U,EAAE+Z,IAAIxE,GAAGM,IAAKT,EAAGpV,EAAE+Z,IAAIiD,GAAG3H,EAAGhO,QAAQrH,EAAE+Z,IAAInE,IAAItO,IAAItH,EAAEoa,wBAAwBpa,EAAEoa,uBAAuB9S,GAAG,GAAGA,IAAI,OAAO+P,IAAKgD,cAAchD,GAAIA,EAAG,MAAMvQ,IAAIpH,EAAEoH,EAAEA,EAAE,KAAKpH,KAAK,CAAC,SAASU,EAAEV,GAAGP,EAAEO,EAAE4a,SAAS,CAAC,SAAS/a,EAAEG,GAAG,OAzBnQ,WAAc,IAAI+D,IAAI+V,GAAIzZ,GAAG,CAAC,GAAG,mBAAmBya,QAAQpU,EAAE4B,WAAW,WAAW,OAAOwS,MAAMpU,EAAE,CAACqU,YAAY,gBAAgBC,MAAK,SAASvb,GAAG,IAAIA,EAAEwb,GAAG,KAAK,uCAAuCvU,EAAE,IAAI,OAAOjH,EAAEyb,aAAa,IAAGC,OAAM,WAAW,OAAOhD,GAAI,IAAG,GAAG9Y,EAAE,OAAO,IAAIU,SAAQ,SAASN,EAAEiB,GAAGrB,EAAEqH,GAAE,SAAS7G,GAAGJ,EAAE,IAAIkC,WAAW9B,GAAG,GAAEa,EAAE,GAAE,CAAC,OAAOX,QAAQqb,UAAUJ,MAAK,WAAW,OAAO7C,GAAI,GAAE,CAyBjIzB,GAAKsE,MAAK,SAAS5a,GAAG,OAAOuE,YAAY0W,YAAYjb,EAAEjB,EAAE,IAAG6b,MAAK,SAAS5a,GAAG,OAAOA,CAAC,IAAG4a,KAAKhb,GAAE,SAASI,GAAGnB,EAAE,0CAA0CmB,GAAGoF,EAAEpF,EAAE,GAAE,CAAC,IAAIjB,EAAE,CAACM,EAAEihB,IAA8D,GAA1D9Y,IAAItH,EAAEoa,wBAAwBpa,EAAEoa,uBAAuB9S,GAAMtH,EAAEgb,gBAAgB,IAAI,OAAOhb,EAAEgb,gBAAgBnc,EACpiBM,EAAgF,CAA7E,MAAMO,GAAG,OAAOf,EAAE,sDAAsDe,IAAG,CAAE,EAAoB+D,GAAG,mBAAmBY,YAAY4W,sBAAsB3D,KAAMlR,EAAE4B,WAAW,YAAYnI,GAAG,mBAAmB2a,MAAMjb,EAAEa,GAAGoa,MAAMpU,EAAE,CAACqU,YAAY,gBAAgBC,MAAK,SAAShb,GAAG,OAAO2E,YAAY4W,qBAAqBvb,EAAEb,GAAG6b,KAAKta,GAAE,SAASN,GAAyF,OAAtFnB,EAAE,kCAAkCmB,GAAGnB,EAAE,6CAAoDY,EAAEa,EAAE,GAAE,KAAOya,MAAM1B,EAAa,CAD/c,GAEAnZ,EAAEkb,mBAAmB,WAAW,OAAOlb,EAAEkb,mBAAmBlb,EAAE+Z,IAAInE,IAAIkC,MAAM,KAAK7G,UAAU,EAAEjR,EAAEmb,SAAS,WAAW,OAAOnb,EAAEmb,SAASnb,EAAE+Z,IAAI5E,IAAI2C,MAAM,KAAK7G,UAAU,EAAEjR,EAAEqb,yBAAyB,WAAW,OAAOrb,EAAEqb,yBAAyBrb,EAAE+Z,IAAI9B,IAAIH,MAAM,KAAK7G,UAAU,EAAEjR,EAAEub,4BAA4B,WAAW,OAAOvb,EAAEub,4BAA4Bvb,EAAE+Z,IAAI9D,IAAI6B,MAAM,KAAK7G,UAAU,EAAEjR,EAAEyb,0BAA0B,WAAW,OAAOzb,EAAEyb,0BAA0Bzb,EAAE+Z,IAAI1D,IAAIyB,MAAM,KAAK7G,UAAU,EACvejR,EAAE2b,0BAA0B,WAAW,OAAO3b,EAAE2b,0BAA0B3b,EAAE+Z,IAAIjD,IAAIgB,MAAM,KAAK7G,UAAU,EAAEjR,EAAE6b,kBAAkB,WAAW,OAAO7b,EAAE6b,kBAAkB7b,EAAE+Z,IAAI5C,IAAIW,MAAM,KAAK7G,UAAU,EAAEjR,EAAE+b,mBAAmB,WAAW,OAAO/b,EAAE+b,mBAAmB/b,EAAE+Z,IAAIxC,IAAIO,MAAM,KAAK7G,UAAU,EAAEjR,EAAEic,kBAAkB,WAAW,OAAOjc,EAAEic,kBAAkBjc,EAAE+Z,IAAIjE,IAAIgC,MAAM,KAAK7G,UAAU,EAAEjR,EAAEmc,mBAAmB,WAAW,OAAOnc,EAAEmc,mBAAmBnc,EAAE+Z,IAAIhE,IAAI+B,MAAM,KAAK7G,UAAU,EACzdjR,EAAEqc,iBAAiB,WAAW,OAAOrc,EAAEqc,iBAAiBrc,EAAE+Z,IAAII,IAAIrC,MAAM,KAAK7G,UAAU,EAAEjR,EAAEuc,kBAAkB,WAAW,OAAOvc,EAAEuc,kBAAkBvc,EAAE+Z,IAAIqB,IAAItD,MAAM,KAAK7G,UAAU,EAAEjR,EAAEyc,SAAS,WAAW,OAAOzc,EAAEyc,SAASzc,EAAE+Z,IAAIuB,IAAIxD,MAAM,KAAK7G,UAAU,EAAEjR,EAAE2c,iBAAiB,WAAW,OAAO3c,EAAE2c,iBAAiB3c,EAAE+Z,IAAIyB,IAAI1D,MAAM,KAAK7G,UAAU,EAAEjR,EAAE6c,kBAAkB,WAAW,OAAO7c,EAAE6c,kBAAkB7c,EAAE+Z,IAAI2B,IAAI5D,MAAM,KAAK7G,UAAU,EAC/ajR,EAAE+c,kBAAkB,WAAW,OAAO/c,EAAE+c,kBAAkB/c,EAAE+Z,IAAI6B,IAAI9D,MAAM,KAAK7G,UAAU,EAAEjR,EAAEid,qBAAqB,WAAW,OAAOjd,EAAEid,qBAAqBjd,EAAE+Z,IAAI+B,IAAIhE,MAAM,KAAK7G,UAAU,EAAEjR,EAAEmd,sBAAsB,WAAW,OAAOnd,EAAEmd,sBAAsBnd,EAAE+Z,IAAIiC,IAAIlE,MAAM,KAAK7G,UAAU,EAAEjR,EAAEqd,sBAAsB,WAAW,OAAOrd,EAAEqd,sBAAsBrd,EAAE+Z,IAAImC,IAAIpE,MAAM,KAAK7G,UAAU,EAAEjR,EAAEud,QAAQ,WAAW,OAAOvd,EAAEud,QAAQvd,EAAE+Z,IAAIqC,IAAItE,MAAM,KAAK7G,UAAU,EACvcjR,EAAEyd,iBAAiB,WAAW,OAAOzd,EAAEyd,iBAAiBzd,EAAE+Z,IAAIuC,IAAIxE,MAAM,KAAK7G,UAAU,EACvF,IAW6IzI,GAXzIiN,GAAGzV,EAAE6d,QAAQ,WAAW,OAAOpI,GAAGzV,EAAE6d,QAAQ7d,EAAE+Z,IAAIyC,IAAI1E,MAAM,KAAK7G,UAAU,EAAEkH,GAAGnY,EAAE+d,MAAM,WAAW,OAAO5F,GAAGnY,EAAE+d,MAAM/d,EAAE+Z,IAAI2C,IAAI5E,MAAM,KAAK7G,UAAU,EAAEyK,GAAG1b,EAAEie,QAAQ,WAAW,OAAOvC,GAAG1b,EAAEie,QAAQje,EAAE+Z,IAAI6C,IAAI9E,MAAM,KAAK7G,UAAU,EAAEuK,GAAGxb,EAAEoe,iBAAiB,WAAW,OAAO5C,GAAGxb,EAAEoe,iBAAiBpe,EAAE+Z,IAAI+C,IAAIhF,MAAM,KAAK7G,UAAU,EAAElK,GAAE/G,EAAEmf,UAAU,WAAW,OAAOpY,GAAE/G,EAAEmf,UAAUnf,EAAE+Z,IAAImD,IAAIpF,MAAM,KAAK7G,UAAU,EAAE/R,GAAEc,EAAEuf,UAAU,WAAW,OAAOrgB,GAAEc,EAAEuf,UAAUvf,EAAE+Z,IAAIqD,IAAItF,MAAM,KAAK7G,UAAU,EAAEjK,GAAEhH,EAAEyf,aACxe,WAAW,OAAOzY,GAAEhH,EAAEyf,aAAazf,EAAE+Z,IAAIuD,IAAIxF,MAAM,KAAK7G,UAAU,EAAEqP,GAAGtgB,EAAE2f,WAAW,WAAW,OAAOW,GAAGtgB,EAAE2f,WAAW3f,EAAE+Z,IAAIyD,IAAI1F,MAAM,KAAK7G,UAAU,EAAEqK,GAAGtb,EAAE6f,iBAAiB,WAAW,OAAOvE,GAAGtb,EAAE6f,iBAAiB7f,EAAE+Z,IAAI2D,IAAI5F,MAAM,KAAK7G,UAAU,EAAE+D,GAAGhV,EAAE+f,uBAAuB,WAAW,OAAO/K,GAAGhV,EAAE+f,uBAAuB/f,EAAE+Z,IAAI6D,IAAI9F,MAAM,KAAK7G,UAAU,EAAEuP,GAAGxgB,EAAEigB,UAAU,WAAW,OAAOO,GAAGxgB,EAAEigB,UAAUjgB,EAAE+Z,IAAI+D,IAAIhG,MAAM,KAAK7G,UAAU,EAAEyP,GAAG1gB,EAAEmgB,eAAe,WAAW,OAAOO,GAAG1gB,EAAEmgB,eAAengB,EAAE+Z,IAAIiE,IAAIlG,MAAM,KAC5f7G,UAAU,EAAE2P,GAAG5gB,EAAEqgB,YAAY,WAAW,OAAOO,GAAG5gB,EAAEqgB,YAAYrgB,EAAE+Z,IAAImE,IAAIpG,MAAM,KAAK7G,UAAU,EAAE6P,GAAG9gB,EAAEugB,gBAAgB,WAAW,OAAOO,GAAG9gB,EAAEugB,gBAAgBvgB,EAAE+Z,IAAIE,IAAInC,MAAM,KAAK7G,UAAU,EAAE+P,GAAGhhB,EAAEygB,aAAa,WAAW,OAAOO,GAAGhhB,EAAEygB,aAAazgB,EAAE+Z,IAAIsE,IAAIvG,MAAM,KAAK7G,UAAU,EAAEiQ,GAAGlhB,EAAE2gB,kBAAkB,WAAW,OAAOO,GAAGlhB,EAAE2gB,kBAAkB3gB,EAAE+Z,IAAIG,IAAIpC,MAAM,KAAK7G,UAAU,EAAEmQ,GAAGphB,EAAE6gB,YAAY,WAAW,OAAOO,GAAGphB,EAAE6gB,YAAY7gB,EAAE+Z,IAAIwE,IAAIzG,MAAM,KAAK7G,UAAU,EAAEtD,GAAG3N,EAAE+gB,WAAW,WAAW,OAAOpT,GAAG3N,EAAE+gB,WAClf/gB,EAAE+Z,IAAI0E,IAAI3G,MAAM,KAAK7G,UAAU,EAAE2C,GAAG5T,EAAEihB,gBAAgB,WAAW,OAAOrN,GAAG5T,EAAEihB,gBAAgBjhB,EAAE+Z,IAAI6E,IAAI9G,MAAM,KAAK7G,UAAU,EAAEnI,GAAG9I,EAAEmhB,aAAa,WAAW,OAAOrY,GAAG9I,EAAEmhB,aAAanhB,EAAE+Z,IAAI+E,IAAIhH,MAAM,KAAK7G,UAAU,EASnN,SAASiC,KAAK,SAAS/T,IAAI,IAAIqJ,KAAKA,IAAG,EAAGxI,EAAEshB,WAAU,GAAI5iB,GAAG,CAAgE,GAA/DsC,EAAEqU,GAAIuD,EAAG5Y,GAAMA,EAAEuhB,sBAAqBvhB,EAAEuhB,uBAA0BvhB,EAAEwhB,QAAQ,IAAI,mBAAmBxhB,EAAEwhB,UAAUxhB,EAAEwhB,QAAQ,CAACxhB,EAAEwhB,UAAUxhB,EAAEwhB,QAAQhgB,QAAQ,CAAC,IAAIpB,EAAEJ,EAAEwhB,QAAQpa,QAAQ4O,EAAG3O,QAAQjH,EAAE,CAACY,EAAEgV,EAAG,CAAC,CAAC,KAAK,EAAE1O,GAAG,CAAC,GAAGtH,EAAEmH,OAAO,IAAI,mBAAmBnH,EAAEmH,SAASnH,EAAEmH,OAAO,CAACnH,EAAEmH,SAASnH,EAAEmH,OAAO3F,QAAQ0U,IAAKlV,EAAE0U,GAAI,EAAEpO,IAAItH,EAAEyhB,WAAWzhB,EAAEyhB,UAAU,cAActL,YAAW,WAAWA,YAAW,WAAWnW,EAAEyhB,UAAU,GAAG,GAAE,GAAGtiB,GAAG,GAAE,IAAIA,IAAI,CAAC,CACze,GAFAa,EAAE0hB,aAAa3M,EAAG/U,EAAE2hB,aAAa,SAASxiB,EAAEiB,EAAEb,GAAG,OAAOwY,EAAG5Y,EAAEiG,EAAEhF,EAAEb,EAAE,EAAES,EAAE4hB,gBAAgBnK,EAAGzX,EAAEuf,UAAUrgB,GAAEc,EAAEyf,aAAazY,GAAEhH,EAAE2f,WAAWW,GAAUxZ,EAAE,SAASmM,IAAKzK,IAAI0K,KAAK1K,KAAK1B,EAAEmM,EAAG,EAEhLjT,EAAE+hB,QAAQ,IAAI,mBAAmB/hB,EAAE+hB,UAAU/hB,EAAE+hB,QAAQ,CAAC/hB,EAAE+hB,UAAU,EAAE/hB,EAAE+hB,QAAQvgB,QAAQxB,EAAE+hB,QAAQvV,KAAVxM,GAGzF,OAH2GkT,KAGpG8O,EAAQxiB,KAEjB,GAGE+a,EAAOP,QAAUgI,C,wBCvEnBzH,EAAOP,QAmBP,SAAmBrH,EAAIwP,GAKnB,IAJA,IAAIC,EAAU,IAAI9N,MAAMrD,UAAUzP,OAAS,GACvC6gB,EAAU,EACVC,EAAU,EACVC,GAAU,EACPD,EAAQrR,UAAUzP,QACrB4gB,EAAOC,KAAYpR,UAAUqR,KACjC,OAAO,IAAI7iB,SAAQ,SAAkBqb,EAAS0H,GAC1CJ,EAAOC,GAAU,SAAkBI,GAC/B,GAAIF,EAEA,GADAA,GAAU,EACNE,EACAD,EAAOC,OACN,CAGD,IAFA,IAAIL,EAAS,IAAI9N,MAAMrD,UAAUzP,OAAS,GACtC6gB,EAAS,EACNA,EAASD,EAAO5gB,QACnB4gB,EAAOC,KAAYpR,UAAUoR,GACjCvH,EAAQhD,MAAM,KAAMsK,EACxB,CAER,EACA,IACIzP,EAAGmF,MAAMqK,GAAO,KAAMC,EAM1B,CALE,MAAOK,GACDF,IACAA,GAAU,EACVC,EAAOC,GAEf,CACJ,GACJ,C,4BC5CA,IAAIC,EAAS1I,EAOb0I,EAAOlhB,OAAS,SAAgBmhB,GAC5B,IAAI9iB,EAAI8iB,EAAOnhB,OACf,IAAK3B,EACD,OAAO,EAEX,IADA,IAAItB,EAAI,IACCsB,EAAI,EAAI,GAA0B,MAArB8iB,EAAOC,OAAO/iB,MAC9BtB,EACN,OAAOuS,KAAK+R,KAAqB,EAAhBF,EAAOnhB,QAAc,EAAIjD,CAC9C,EASA,IANA,IAAIukB,EAAM,IAAIxO,MAAM,IAGhByO,EAAM,IAAIzO,MAAM,KAGXrV,EAAI,EAAGA,EAAI,IAChB8jB,EAAID,EAAI7jB,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EAAIA,EAAI,GAAK,IAAMA,IASrFyjB,EAAOM,OAAS,SAAgBvkB,EAAQwkB,EAAOC,GAM3C,IALA,IAIIhlB,EAJAilB,EAAQ,KACRC,EAAQ,GACRnkB,EAAI,EACJL,EAAI,EAEDqkB,EAAQC,GAAK,CAChB,IAAI9iB,EAAI3B,EAAOwkB,KACf,OAAQrkB,GACJ,KAAK,EACDwkB,EAAMnkB,KAAO6jB,EAAI1iB,GAAK,GACtBlC,GAAS,EAAJkC,IAAU,EACfxB,EAAI,EACJ,MACJ,KAAK,EACDwkB,EAAMnkB,KAAO6jB,EAAI5kB,EAAIkC,GAAK,GAC1BlC,GAAS,GAAJkC,IAAW,EAChBxB,EAAI,EACJ,MACJ,KAAK,EACDwkB,EAAMnkB,KAAO6jB,EAAI5kB,EAAIkC,GAAK,GAC1BgjB,EAAMnkB,KAAO6jB,EAAQ,GAAJ1iB,GACjBxB,EAAI,EAGRK,EAAI,QACHkkB,IAAUA,EAAQ,KAAKta,KAAK9D,OAAOC,aAAa8S,MAAM/S,OAAQqe,IAC/DnkB,EAAI,EAEZ,CAOA,OANIL,IACAwkB,EAAMnkB,KAAO6jB,EAAI5kB,GACjBklB,EAAMnkB,KAAO,GACH,IAANL,IACAwkB,EAAMnkB,KAAO,KAEjBkkB,GACIlkB,GACAkkB,EAAMta,KAAK9D,OAAOC,aAAa8S,MAAM/S,OAAQqe,EAAM1hB,MAAM,EAAGzC,KACzDkkB,EAAME,KAAK,KAEfte,OAAOC,aAAa8S,MAAM/S,OAAQqe,EAAM1hB,MAAM,EAAGzC,GAC5D,EAEA,IAAIqkB,EAAkB,mBAUtBZ,EAAO9d,OAAS,SAAgB+d,EAAQlkB,EAAQ4jB,GAI5C,IAHA,IAEInkB,EAFA+kB,EAAQZ,EACRzjB,EAAI,EAECK,EAAI,EAAGA,EAAI0jB,EAAOnhB,QAAS,CAChC,IAAIjC,EAAIojB,EAAOxd,WAAWlG,KAC1B,GAAU,KAANM,GAAYX,EAAI,EAChB,MACJ,QAAqBqjB,KAAhB1iB,EAAIwjB,EAAIxjB,IACT,MAAMoH,MAAM2c,GAChB,OAAQ1kB,GACJ,KAAK,EACDV,EAAIqB,EACJX,EAAI,EACJ,MACJ,KAAK,EACDH,EAAO4jB,KAAYnkB,GAAK,GAAS,GAAJqB,IAAW,EACxCrB,EAAIqB,EACJX,EAAI,EACJ,MACJ,KAAK,EACDH,EAAO4jB,MAAiB,GAAJnkB,IAAW,GAAS,GAAJqB,IAAW,EAC/CrB,EAAIqB,EACJX,EAAI,EACJ,MACJ,KAAK,EACDH,EAAO4jB,MAAiB,EAAJnkB,IAAU,EAAIqB,EAClCX,EAAI,EAGhB,CACA,GAAU,IAANA,EACA,MAAM+H,MAAM2c,GAChB,OAAOjB,EAASY,CACpB,EAOAP,EAAOa,KAAO,SAAcZ,GACxB,MAAO,mEAAmEY,KAAKZ,EACnF,C,wBCjIA,SAASa,IAOLrb,KAAKsb,WAAa,CAAC,CACvB,CAhBAlJ,EAAOP,QAAUwJ,EAyBjBA,EAAa5O,UAAUjT,GAAK,SAAY+hB,EAAK/Q,EAAIwP,GAK7C,OAJCha,KAAKsb,WAAWC,KAASvb,KAAKsb,WAAWC,GAAO,KAAK7a,KAAK,CACvD8J,GAAMA,EACNwP,IAAMA,GAAOha,OAEVA,IACX,EAQAqb,EAAa5O,UAAU+O,IAAM,SAAaD,EAAK/Q,GAC3C,QAAYsP,IAARyB,EACAvb,KAAKsb,WAAa,CAAC,OAEnB,QAAWxB,IAAPtP,EACAxK,KAAKsb,WAAWC,GAAO,QAGvB,IADA,IAAIE,EAAYzb,KAAKsb,WAAWC,GACvBzkB,EAAI,EAAGA,EAAI2kB,EAAUpiB,QACtBoiB,EAAU3kB,GAAG0T,KAAOA,EACpBiR,EAAU5Y,OAAO/L,EAAG,KAElBA,EAGlB,OAAOkJ,IACX,EAQAqb,EAAa5O,UAAUiP,KAAO,SAAcH,GACxC,IAAIE,EAAYzb,KAAKsb,WAAWC,GAChC,GAAIE,EAAW,CAGX,IAFA,IAAIE,EAAO,GACP7kB,EAAI,EACDA,EAAIgS,UAAUzP,QACjBsiB,EAAKjb,KAAKoI,UAAUhS,MACxB,IAAKA,EAAI,EAAGA,EAAI2kB,EAAUpiB,QACtBoiB,EAAU3kB,GAAG0T,GAAGmF,MAAM8L,EAAU3kB,KAAKkjB,IAAK2B,EAClD,CACA,OAAO3b,IACX,C,uBCYA,SAAS4b,EAAQ/J,GAwNb,MArN4B,oBAAjB/T,aAA8B,WAErC,IAAI+d,EAAM,IAAI/d,aAAa,EAAG,IAC1Bge,EAAM,IAAI5iB,WAAW2iB,EAAIvlB,QACzBylB,EAAiB,MAAXD,EAAI,GAEd,SAASE,EAAmBC,EAAKC,EAAKC,GAClCN,EAAI,GAAKI,EACTC,EAAIC,GAAWL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,EACvB,CAEA,SAASM,EAAmBH,EAAKC,EAAKC,GAClCN,EAAI,GAAKI,EACTC,EAAIC,GAAWL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,EACvB,CAOA,SAASO,EAAkBH,EAAKC,GAK5B,OAJAL,EAAI,GAAKI,EAAIC,GACbL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACZN,EAAI,EACf,CAEA,SAASS,EAAkBJ,EAAKC,GAK5B,OAJAL,EAAI,GAAKI,EAAIC,GACbL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACZN,EAAI,EACf,CAlBAhK,EAAQ0K,aAAeR,EAAKC,EAAqBI,EAEjDvK,EAAQ2K,aAAeT,EAAKK,EAAqBJ,EAmBjDnK,EAAQ4K,YAAcV,EAAKM,EAAoBC,EAE/CzK,EAAQ6K,YAAcX,EAAKO,EAAoBD,CAGlD,CAjDwC,GAiD9B,WAEP,SAASM,EAAmBC,EAAWX,EAAKC,EAAKC,GAC7C,IAAIU,EAAOZ,EAAM,EAAI,EAAI,EAGzB,GAFIY,IACAZ,GAAOA,GACC,IAARA,EACAW,EAAU,EAAIX,EAAM,EAAmB,EAAqB,WAAYC,EAAKC,QAC5E,GAAIW,MAAMb,GACXW,EAAU,WAAYV,EAAKC,QAC1B,GAAIF,EAAM,qBACXW,GAAWC,GAAQ,GAAK,cAAgB,EAAGX,EAAKC,QAC/C,GAAIF,EAAM,sBACXW,GAAWC,GAAQ,GAAKlU,KAAKoU,MAAMd,EAAM,yBAA4B,EAAGC,EAAKC,OAC5E,CACD,IAAIa,EAAWrU,KAAKqD,MAAMrD,KAAKvN,IAAI6gB,GAAOtT,KAAKsU,KAE/CL,GAAWC,GAAQ,GAAKG,EAAW,KAAO,GAD0B,QAArDrU,KAAKoU,MAAMd,EAAMtT,KAAKuU,IAAI,GAAIF,GAAY,YACI,EAAGd,EAAKC,EACzE,CACJ,CAKA,SAASgB,EAAkBC,EAAUlB,EAAKC,GACtC,IAAIkB,EAAOD,EAASlB,EAAKC,GACrBU,EAAsB,GAAdQ,GAAQ,IAAU,EAC1BL,EAAWK,IAAS,GAAK,IACzBC,EAAkB,QAAPD,EACf,OAAoB,MAAbL,EACDM,EACAC,IACAV,GAAOW,KACM,IAAbR,EACO,qBAAPH,EAA+BS,EAC/BT,EAAOlU,KAAKuU,IAAI,EAAGF,EAAW,MAAQM,EAAW,QAC3D,CAfAzL,EAAQ0K,aAAeI,EAAmBthB,KAAK,KAAMoiB,GACrD5L,EAAQ2K,aAAeG,EAAmBthB,KAAK,KAAMqiB,GAgBrD7L,EAAQ4K,YAAcU,EAAkB9hB,KAAK,KAAMsiB,GACnD9L,EAAQ6K,YAAcS,EAAkB9hB,KAAK,KAAMuiB,EAEtD,CAzCU,GA4CiB,oBAAjB5f,aAA8B,WAErC,IAAI6f,EAAM,IAAI7f,aAAa,EAAE,IACzB8d,EAAM,IAAI5iB,WAAW2kB,EAAIvnB,QACzBylB,EAAiB,MAAXD,EAAI,GAEd,SAASgC,EAAoB7B,EAAKC,EAAKC,GACnC0B,EAAI,GAAK5B,EACTC,EAAIC,GAAWL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,EACvB,CAEA,SAASiC,EAAoB9B,EAAKC,EAAKC,GACnC0B,EAAI,GAAK5B,EACTC,EAAIC,GAAWL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,GACnBI,EAAIC,EAAM,GAAKL,EAAI,EACvB,CAOA,SAASkC,EAAmB9B,EAAKC,GAS7B,OARAL,EAAI,GAAKI,EAAIC,GACbL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACZ0B,EAAI,EACf,CAEA,SAASI,EAAmB/B,EAAKC,GAS7B,OARAL,EAAI,GAAKI,EAAIC,GACbL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACnBL,EAAI,GAAKI,EAAIC,EAAM,GACZ0B,EAAI,EACf,CA1BAhM,EAAQqM,cAAgBnC,EAAK+B,EAAsBC,EAEnDlM,EAAQsM,cAAgBpC,EAAKgC,EAAsBD,EA2BnDjM,EAAQuM,aAAerC,EAAKiC,EAAqBC,EAEjDpM,EAAQwM,aAAetC,EAAKkC,EAAqBD,CAGpD,CAjEwC,GAiE9B,WAEP,SAASM,EAAoB1B,EAAW2B,EAAMC,EAAMvC,EAAKC,EAAKC,GAC1D,IAAIU,EAAOZ,EAAM,EAAI,EAAI,EAGzB,GAFIY,IACAZ,GAAOA,GACC,IAARA,EACAW,EAAU,EAAGV,EAAKC,EAAMoC,GACxB3B,EAAU,EAAIX,EAAM,EAAmB,EAAqB,WAAYC,EAAKC,EAAMqC,QAChF,GAAI1B,MAAMb,GACbW,EAAU,EAAGV,EAAKC,EAAMoC,GACxB3B,EAAU,WAAYV,EAAKC,EAAMqC,QAC9B,GAAIvC,EAAM,sBACbW,EAAU,EAAGV,EAAKC,EAAMoC,GACxB3B,GAAWC,GAAQ,GAAK,cAAgB,EAAGX,EAAKC,EAAMqC,OACnD,CACH,IAAIlB,EACJ,GAAIrB,EAAM,uBAENW,GADAU,EAAWrB,EAAM,UACM,EAAGC,EAAKC,EAAMoC,GACrC3B,GAAWC,GAAQ,GAAKS,EAAW,cAAgB,EAAGpB,EAAKC,EAAMqC,OAC9D,CACH,IAAIxB,EAAWrU,KAAKqD,MAAMrD,KAAKvN,IAAI6gB,GAAOtT,KAAKsU,KAC9B,OAAbD,IACAA,EAAW,MAEfJ,EAAqB,kBADrBU,EAAWrB,EAAMtT,KAAKuU,IAAI,GAAIF,MACY,EAAGd,EAAKC,EAAMoC,GACxD3B,GAAWC,GAAQ,GAAKG,EAAW,MAAQ,GAAgB,QAAXM,EAAqB,WAAa,EAAGpB,EAAKC,EAAMqC,EACpG,CACJ,CACJ,CAKA,SAASC,EAAmBrB,EAAUmB,EAAMC,EAAMtC,EAAKC,GACnD,IAAIuC,EAAKtB,EAASlB,EAAKC,EAAMoC,GACzBI,EAAKvB,EAASlB,EAAKC,EAAMqC,GACzB3B,EAAoB,GAAZ8B,GAAM,IAAU,EACxB3B,EAAW2B,IAAO,GAAK,KACvBrB,EAAW,YAAmB,QAALqB,GAAgBD,EAC7C,OAAoB,OAAb1B,EACDM,EACAC,IACAV,GAAOW,KACM,IAAbR,EACO,OAAPH,EAAgBS,EAChBT,EAAOlU,KAAKuU,IAAI,EAAGF,EAAW,OAASM,EAAW,iBAC5D,CAhBAzL,EAAQqM,cAAgBI,EAAoBjjB,KAAK,KAAMoiB,EAAa,EAAG,GACvE5L,EAAQsM,cAAgBG,EAAoBjjB,KAAK,KAAMqiB,EAAa,EAAG,GAiBvE7L,EAAQuM,aAAeK,EAAmBpjB,KAAK,KAAMsiB,EAAY,EAAG,GACpE9L,EAAQwM,aAAeI,EAAmBpjB,KAAK,KAAMuiB,EAAY,EAAG,EAEvE,CArDU,GAuDJ/L,CACX,CAIA,SAAS4L,EAAYxB,EAAKC,EAAKC,GAC3BD,EAAIC,GAAyB,IAAbF,EAChBC,EAAIC,EAAM,GAAMF,IAAQ,EAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,GAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,EAC5B,CAEA,SAASyB,EAAYzB,EAAKC,EAAKC,GAC3BD,EAAIC,GAAYF,IAAQ,GACxBC,EAAIC,EAAM,GAAMF,IAAQ,GAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,EAAK,IAC7BC,EAAIC,EAAM,GAAmB,IAAbF,CACpB,CAEA,SAAS0B,EAAWzB,EAAKC,GACrB,OAAQD,EAAIC,GACJD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,MAAQ,CACpC,CAEA,SAASyB,EAAW1B,EAAKC,GACrB,OAAQD,EAAIC,IAAY,GAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,MAAQ,CAC9B,CA5UA/J,EAAOP,QAAU+J,EAAQA,E,6BCOzB,SAASgD,QAAQC,YACb,IACI,IAAIC,IAAMC,KAAK,QAAQzlB,QAAQ,IAAI,MAAzBylB,CAAgCF,YAC1C,GAAIC,MAAQA,IAAIzlB,QAAUvB,OAAOknB,KAAKF,KAAKzlB,QACvC,OAAOylB,GACF,CAAX,MAAOpoB,GAAI,CACb,OAAO,IACX,CAfA0b,OAAOP,QAAU+M,O,wBCAjBxM,EAAOP,QA6BP,SAAcoN,EAAO1lB,EAAO2lB,GACxB,IAAIC,EAASD,GAAQ,KACjBE,EAASD,IAAS,EAClBE,EAAS,KACTnF,EAASiF,EACb,OAAO,SAAoBD,GACvB,GAAIA,EAAO,GAAKA,EAAOE,EACnB,OAAOH,EAAMC,GACbhF,EAASgF,EAAOC,IAChBE,EAAOJ,EAAME,GACbjF,EAAS,GAEb,IAAIgC,EAAM3iB,EAAMmT,KAAK2S,EAAMnF,EAAQA,GAAUgF,GAG7C,OAFa,EAAThF,IACAA,EAAwB,GAAL,EAATA,IACPgC,CACX,CACJ,C,4BCxCA,IAAIoD,EAAOzN,EAOXyN,EAAKjmB,OAAS,SAAqBmhB,GAG/B,IAFA,IAAI+E,EAAM,EACNnoB,EAAI,EACCN,EAAI,EAAGA,EAAI0jB,EAAOnhB,SAAUvC,GACjCM,EAAIojB,EAAOxd,WAAWlG,IACd,IACJyoB,GAAO,EACFnoB,EAAI,KACTmoB,GAAO,EACe,QAAZ,MAAJnoB,IAAkE,QAAZ,MAA3BojB,EAAOxd,WAAWlG,EAAI,OACrDA,EACFyoB,GAAO,GAEPA,GAAO,EAEf,OAAOA,CACX,EASAD,EAAKE,KAAO,SAAmBlpB,EAAQwkB,EAAOC,GAE1C,GADUA,EAAMD,EACN,EACN,MAAO,GAKX,IAJA,IAGI/kB,EAHAilB,EAAQ,KACRC,EAAQ,GACRnkB,EAAI,EAEDgkB,EAAQC,IACXhlB,EAAIO,EAAOwkB,MACH,IACJG,EAAMnkB,KAAOf,EACRA,EAAI,KAAOA,EAAI,IACpBklB,EAAMnkB,MAAY,GAAJf,IAAW,EAAsB,GAAlBO,EAAOwkB,KAC/B/kB,EAAI,KAAOA,EAAI,KACpBA,IAAU,EAAJA,IAAU,IAAwB,GAAlBO,EAAOwkB,OAAkB,IAAwB,GAAlBxkB,EAAOwkB,OAAkB,EAAsB,GAAlBxkB,EAAOwkB,MAAiB,MAC1GG,EAAMnkB,KAAO,OAAUf,GAAK,IAC5BklB,EAAMnkB,KAAO,OAAc,KAAJf,IAEvBklB,EAAMnkB,MAAY,GAAJf,IAAW,IAAwB,GAAlBO,EAAOwkB,OAAkB,EAAsB,GAAlBxkB,EAAOwkB,KACnEhkB,EAAI,QACHkkB,IAAUA,EAAQ,KAAKta,KAAK9D,OAAOC,aAAa8S,MAAM/S,OAAQqe,IAC/DnkB,EAAI,GAGZ,OAAIkkB,GACIlkB,GACAkkB,EAAMta,KAAK9D,OAAOC,aAAa8S,MAAM/S,OAAQqe,EAAM1hB,MAAM,EAAGzC,KACzDkkB,EAAME,KAAK,KAEfte,OAAOC,aAAa8S,MAAM/S,OAAQqe,EAAM1hB,MAAM,EAAGzC,GAC5D,EASAwoB,EAAKG,MAAQ,SAAoBjF,EAAQlkB,EAAQ4jB,GAI7C,IAHA,IACIwF,EACAC,EAFA7E,EAAQZ,EAGHpjB,EAAI,EAAGA,EAAI0jB,EAAOnhB,SAAUvC,GACjC4oB,EAAKlF,EAAOxd,WAAWlG,IACd,IACLR,EAAO4jB,KAAYwF,EACZA,EAAK,MACZppB,EAAO4jB,KAAYwF,GAAM,EAAU,IACnCppB,EAAO4jB,KAAuB,GAAXwF,EAAgB,KACV,QAAZ,MAALA,IAA0E,QAAZ,OAAjCC,EAAKnF,EAAOxd,WAAWlG,EAAI,MAChE4oB,EAAK,QAAiB,KAALA,IAAgB,KAAY,KAALC,KACtC7oB,EACFR,EAAO4jB,KAAYwF,GAAM,GAAU,IACnCppB,EAAO4jB,KAAYwF,GAAM,GAAK,GAAK,IACnCppB,EAAO4jB,KAAYwF,GAAM,EAAK,GAAK,IACnCppB,EAAO4jB,KAAuB,GAAXwF,EAAgB,MAEnCppB,EAAO4jB,KAAYwF,GAAM,GAAU,IACnCppB,EAAO4jB,KAAYwF,GAAM,EAAK,GAAK,IACnCppB,EAAO4jB,KAAuB,GAAXwF,EAAgB,KAG3C,OAAOxF,EAASY,CACpB,C,4BCvGAjJ,EAAQ+N,YAAa,EACrB,IAAIC,EAAsB,WACtB,SAASA,EAAKC,GACV,IAAKA,EACD,MAAM,IAAIC,UAAU,2CAExB/f,KAAKggB,MAAQH,EAAKI,MACdH,GAAQD,EAAKK,OAAOJ,KACpB9f,KAAKggB,MAAQF,EAErB,CA2CA,OA1CAD,EAAKK,OAAS,SAAUJ,GACpB,IAAIE,EAAQF,EAAKpV,WACjB,OAAOoV,IAASA,aAAgBD,GAAQA,EAAKM,UAAU/E,KAAK4E,GAChE,EACAH,EAAKO,OAAS,WACV,OAAO,IAAIP,EAAK,CAACA,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,IAAInF,KAAK,KAC3F,EACA2E,EAAKS,YAAc,WACf,OAAO,IAAIT,EAAK,YACpB,EACAA,EAAKU,MAAQ,SAAUT,GACnB,OAAO,IAAID,EAAKC,EACpB,EACAD,EAAKW,IAAM,WACP,MAAO,CAACX,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,GAAIR,EAAKQ,IAAI,IAAInF,KAAK,IAClF,EACA2E,EAAKQ,IAAM,SAAUI,GAEjB,IADA,IAAIC,EAAM,GACD5pB,EAAI,EAAGA,EAAI2pB,EAAO3pB,IAEvB4pB,IAA+B,OAArB,EAAI/X,KAAKgY,UAAuB,GAAGjW,SAAS,IAAIqB,UAAU,GAExE,OAAO2U,CACX,EACAb,EAAKpT,UAAUmU,OAAS,SAAUC,GAG9B,OAAOhB,EAAKK,OAAOW,IAAU7gB,KAAKggB,QAAUa,EAAMnW,UACtD,EACAmV,EAAKpT,UAAUqU,QAAU,WACrB,OAAO9gB,KAAKggB,QAAUH,EAAKI,KAC/B,EACAJ,EAAKpT,UAAU/B,SAAW,WACtB,OAAO1K,KAAKggB,KAChB,EACAH,EAAKpT,UAAUsU,OAAS,WACpB,MAAO,CACHf,MAAOhgB,KAAKggB,MAEpB,EACAH,EAAKM,UAAY,IAAItU,OAAO,iEAAkE,KAC9FgU,EAAKI,MAAQ,uCACNJ,CACX,CArDyB,GAsDzBhO,EAAQgO,KAAOA,C,WCxDfzN,EAAOP,QAAUmP,EAKjB,IAAIC,EAAO,KAEX,IACEA,EAAO,IAAI/kB,YAAYglB,SAAS,IAAIhlB,YAAYilB,OAAO,IAAIjoB,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACvnC,CAAC,GAAG2Y,OAGX,CAFE,MAAOnb,GAET,CAYA,SAASsqB,EAAKI,EAAKC,EAAMC,GAMrBthB,KAAKohB,IAAY,EAANA,EAMXphB,KAAKqhB,KAAc,EAAPA,EAMZrhB,KAAKshB,WAAaA,CACtB,CAmCA,SAASC,EAAOC,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,WACnC,CAZAR,EAAKvU,UAAUgV,WAEf3pB,OAAO4pB,eAAeV,EAAKvU,UAAW,aAAc,CAAEuT,OAAO,IAkB7DgB,EAAKO,OAASA,EAOd,IAAII,EAAY,CAAC,EAObC,EAAa,CAAC,EAQlB,SAASC,EAAQ7B,EAAOsB,GACpB,IAAIE,EAAKM,EAAWC,EACpB,OAAIT,GAEIS,EAAS,IADb/B,KAAW,IACgBA,EAAQ,OAC/B8B,EAAYF,EAAW5B,IAEZ8B,GAEfN,EAAMQ,EAAShC,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5C+B,IACAH,EAAW5B,GAASwB,GACjBA,IAGHO,GAAU,MADd/B,GAAS,IACqBA,EAAQ,OAClC8B,EAAYH,EAAU3B,IAEX8B,GAEfN,EAAMQ,EAAShC,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtC+B,IACAJ,EAAU3B,GAASwB,GAChBA,EAEf,CAiBA,SAASS,EAAWjC,EAAOsB,GACvB,GAAIxE,MAAMkD,GACN,OAAOsB,EAAWY,EAAQC,EAC9B,GAAIb,EAAU,CACV,GAAItB,EAAQ,EACR,OAAOkC,EACX,GAAIlC,GAASoC,EACT,OAAOC,CACf,KAAO,CACH,GAAIrC,IAAUsC,EACV,OAAOC,EACX,GAAIvC,EAAQ,GAAKsC,EACb,OAAOE,CACf,CACA,OAAIxC,EAAQ,EACDiC,GAAYjC,EAAOsB,GAAUmB,MACjCT,EAAUhC,EAAQ0C,EAAkB,EAAI1C,EAAQ0C,EAAkB,EAAGpB,EAChF,CAkBA,SAASU,EAASW,EAASC,EAAUtB,GACjC,OAAO,IAAIN,EAAK2B,EAASC,EAAUtB,EACvC,CA7CAN,EAAKa,QAAUA,EAkCfb,EAAKiB,WAAaA,EAsBlBjB,EAAKgB,SAAWA,EAShB,IAAIa,EAAUla,KAAKuU,IASnB,SAAS4F,EAAWC,EAAKzB,EAAU0B,GAC/B,GAAmB,IAAfD,EAAI1pB,OACJ,MAAMmF,MAAM,gBAChB,GAAY,QAARukB,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAOZ,EASX,GARwB,iBAAbb,GAEP0B,EAAQ1B,EACRA,GAAW,GAEXA,IAAcA,GAElB0B,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMC,WAAW,SAErB,IAAIvrB,EACJ,IAAKA,EAAIqrB,EAAIzoB,QAAQ,MAAQ,EACzB,MAAMkE,MAAM,mBACX,GAAU,IAAN9G,EACL,OAAOorB,EAAWC,EAAIhX,UAAU,GAAIuV,EAAU0B,GAAOP,MAQzD,IAHA,IAAIS,EAAejB,EAAWY,EAAQG,EAAO,IAEzCG,EAAShB,EACJrrB,EAAI,EAAGA,EAAIisB,EAAI1pB,OAAQvC,GAAK,EAAG,CACpC,IAAIooB,EAAOvW,KAAKoG,IAAI,EAAGgU,EAAI1pB,OAASvC,GAChCkpB,EAAQoD,SAASL,EAAIhX,UAAUjV,EAAGA,EAAIooB,GAAO8D,GACjD,GAAI9D,EAAO,EAAG,CACV,IAAImE,EAAQpB,EAAWY,EAAQG,EAAO9D,IACtCiE,EAASA,EAAOG,IAAID,GAAOhd,IAAI4b,EAAWjC,GAC9C,MAEImD,GADAA,EAASA,EAAOG,IAAIJ,IACJ7c,IAAI4b,EAAWjC,GAEvC,CAEA,OADAmD,EAAO7B,SAAWA,EACX6B,CACX,CAmBA,SAASI,EAAUtH,EAAKqF,GACpB,MAAmB,iBAARrF,EACAgG,EAAWhG,EAAKqF,GACR,iBAARrF,EACA6G,EAAW7G,EAAKqF,GAEpBU,EAAS/F,EAAImF,IAAKnF,EAAIoF,KAA0B,kBAAbC,EAAyBA,EAAWrF,EAAIqF,SACtF,CAhBAN,EAAK8B,WAAaA,EAyBlB9B,EAAKuC,UAAYA,EAUjB,IAcIb,EAAiBc,WAOjBpB,EAAiBM,EAAiBA,EAOlCJ,EAAiBF,EAAiB,EAOlCqB,EAAa5B,EA5BI,GAAK,IAkCtBM,EAAON,EAAQ,GAMnBb,EAAKmB,KAAOA,EAMZ,IAAID,EAAQL,EAAQ,GAAG,GAMvBb,EAAKkB,MAAQA,EAMb,IAAIwB,EAAM7B,EAAQ,GAMlBb,EAAK0C,IAAMA,EAMX,IAAIC,EAAO9B,EAAQ,GAAG,GAMtBb,EAAK2C,KAAOA,EAMZ,IAAIC,EAAU/B,GAAS,GAMvBb,EAAK4C,QAAUA,EAMf,IAAIpB,EAAYR,GAAS,EAAc,YAAc,GAMrDhB,EAAKwB,UAAYA,EAMjB,IAAIH,EAAqBL,GAAS,GAAc,GAAc,GAM9DhB,EAAKqB,mBAAqBA,EAM1B,IAAIE,EAAYP,EAAS,GAAG,YAAc,GAM1ChB,EAAKuB,UAAYA,EAMjB,IAAIsB,EAAgB7C,EAAKvU,UAMzBoX,EAAcC,MAAQ,WAClB,OAAO9jB,KAAKshB,SAAWthB,KAAKohB,MAAQ,EAAIphB,KAAKohB,GACjD,EAMAyC,EAAcE,SAAW,WACrB,OAAI/jB,KAAKshB,UACIthB,KAAKqhB,OAAS,GAAKqB,GAAmB1iB,KAAKohB,MAAQ,GACzDphB,KAAKqhB,KAAOqB,GAAkB1iB,KAAKohB,MAAQ,EACtD,EASAyC,EAAcnZ,SAAW,SAAkBsY,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMC,WAAW,SACrB,GAAIjjB,KAAKgkB,SACL,MAAO,IACX,GAAIhkB,KAAKikB,aAAc,CACnB,GAAIjkB,KAAKkkB,GAAG3B,GAAY,CAGpB,IAAI4B,EAAYlC,EAAWe,GACvBoB,EAAMpkB,KAAKokB,IAAID,GACfE,EAAOD,EAAId,IAAIa,GAAW5d,IAAIvG,MAClC,OAAOokB,EAAI1Z,SAASsY,GAASqB,EAAKP,QAAQpZ,SAASsY,EACvD,CACI,MAAO,IAAMhjB,KAAKyiB,MAAM/X,SAASsY,EACzC,CAOA,IAHA,IAAIE,EAAejB,EAAWY,EAAQG,EAAO,GAAIhjB,KAAKshB,UAClDgD,EAAMtkB,KACNmjB,EAAS,KACA,CACT,IAAIoB,EAASD,EAAIF,IAAIlB,GAEjBsB,GADSF,EAAI/d,IAAIge,EAAOjB,IAAIJ,IAAeY,UAAY,GACvCpZ,SAASsY,GAE7B,IADAsB,EAAMC,GACEP,SACJ,OAAOQ,EAASrB,EAEhB,KAAOqB,EAAOnrB,OAAS,GACnBmrB,EAAS,IAAMA,EACnBrB,EAAS,GAAKqB,EAASrB,CAE/B,CACJ,EAMAU,EAAcY,YAAc,WACxB,OAAOzkB,KAAKqhB,IAChB,EAMAwC,EAAca,oBAAsB,WAChC,OAAO1kB,KAAKqhB,OAAS,CACzB,EAMAwC,EAAcc,WAAa,WACvB,OAAO3kB,KAAKohB,GAChB,EAMAyC,EAAce,mBAAqB,WAC/B,OAAO5kB,KAAKohB,MAAQ,CACxB,EAMAyC,EAAcgB,cAAgB,WAC1B,GAAI7kB,KAAKikB,aACL,OAAOjkB,KAAKkkB,GAAG3B,GAAa,GAAKviB,KAAKyiB,MAAMoC,gBAEhD,IADA,IAAI5I,EAAmB,GAAbjc,KAAKqhB,KAAYrhB,KAAKqhB,KAAOrhB,KAAKohB,IACnC0D,EAAM,GAAIA,EAAM,GACK,IAArB7I,EAAO,GAAK6I,GADOA,KAG5B,OAAoB,GAAb9kB,KAAKqhB,KAAYyD,EAAM,GAAKA,EAAM,CAC7C,EAMAjB,EAAcG,OAAS,WACnB,OAAqB,IAAdhkB,KAAKqhB,MAA2B,IAAbrhB,KAAKohB,GACnC,EAMAyC,EAAckB,IAAMlB,EAAcG,OAMlCH,EAAcI,WAAa,WACvB,OAAQjkB,KAAKshB,UAAYthB,KAAKqhB,KAAO,CACzC,EAMAwC,EAAcmB,WAAa,WACvB,OAAOhlB,KAAKshB,UAAYthB,KAAKqhB,MAAQ,CACzC,EAMAwC,EAAcoB,MAAQ,WAClB,OAA0B,IAAP,EAAXjlB,KAAKohB,IACjB,EAMAyC,EAAcqB,OAAS,WACnB,OAA0B,IAAP,EAAXllB,KAAKohB,IACjB,EAOAyC,EAAcjD,OAAS,SAAgBC,GAGnC,OAFKU,EAAOV,KACRA,EAAQ0C,EAAU1C,KAClB7gB,KAAKshB,WAAaT,EAAMS,UAAathB,KAAKqhB,OAAS,IAAQ,GAAMR,EAAMQ,OAAS,IAAQ,IAErFrhB,KAAKqhB,OAASR,EAAMQ,MAAQrhB,KAAKohB,MAAQP,EAAMO,GAC1D,EAQAyC,EAAcK,GAAKL,EAAcjD,OAOjCiD,EAAcsB,UAAY,SAAmBtE,GACzC,OAAQ7gB,KAAKkkB,GAAmBrD,EACpC,EAQAgD,EAAcuB,IAAMvB,EAAcsB,UAQlCtB,EAAcwB,GAAKxB,EAAcsB,UAOjCtB,EAAcyB,SAAW,SAAkBzE,GACvC,OAAO7gB,KAAKulB,KAAqB1E,GAAS,CAC9C,EAQAgD,EAAcpiB,GAAKoiB,EAAcyB,SAOjCzB,EAAc2B,gBAAkB,SAAyB3E,GACrD,OAAO7gB,KAAKulB,KAAqB1E,IAAU,CAC/C,EAQAgD,EAAc4B,IAAM5B,EAAc2B,gBAQlC3B,EAAc9H,GAAK8H,EAAc2B,gBAOjC3B,EAAc6B,YAAc,SAAqB7E,GAC7C,OAAO7gB,KAAKulB,KAAqB1E,GAAS,CAC9C,EAQAgD,EAAc5e,GAAK4e,EAAc6B,YAOjC7B,EAAc8B,mBAAqB,SAA4B9E,GAC3D,OAAO7gB,KAAKulB,KAAqB1E,IAAU,CAC/C,EAQAgD,EAAc+B,IAAM/B,EAAc8B,mBAQlC9B,EAAcgC,GAAKhC,EAAc8B,mBAQjC9B,EAAciC,QAAU,SAAiBjF,GAGrC,GAFKU,EAAOV,KACRA,EAAQ0C,EAAU1C,IAClB7gB,KAAKkkB,GAAGrD,GACR,OAAO,EACX,IAAIkF,EAAU/lB,KAAKikB,aACf+B,EAAWnF,EAAMoD,aACrB,OAAI8B,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENhmB,KAAKshB,SAGFT,EAAMQ,OAAS,EAAMrhB,KAAKqhB,OAAS,GAAOR,EAAMQ,OAASrhB,KAAKqhB,MAASR,EAAMO,MAAQ,EAAMphB,KAAKohB,MAAQ,GAAO,EAAI,EAFhHphB,KAAKuG,IAAIsa,GAAOoD,cAAgB,EAAI,CAGnD,EASAJ,EAAc0B,KAAO1B,EAAciC,QAMnCjC,EAAcoC,OAAS,WACnB,OAAKjmB,KAAKshB,UAAYthB,KAAKkkB,GAAG3B,GACnBA,EACJviB,KAAKkmB,MAAM7f,IAAIqd,EAC1B,EAOAG,EAAcpB,IAAMoB,EAAcoC,OAOlCpC,EAAcxd,IAAM,SAAa8f,GACxB5E,EAAO4E,KACRA,EAAS5C,EAAU4C,IAIvB,IAAIC,EAAMpmB,KAAKqhB,OAAS,GACpBgF,EAAkB,MAAZrmB,KAAKqhB,KACXiF,EAAMtmB,KAAKohB,MAAQ,GACnBmF,EAAiB,MAAXvmB,KAAKohB,IAEXoF,EAAML,EAAO9E,OAAS,GACtBoF,EAAoB,MAAdN,EAAO9E,KACbqF,EAAMP,EAAO/E,MAAQ,GAGrBuF,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbJ,EAAO/E,QAIF,GAGfwF,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAENxE,GANP6E,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C5mB,KAAKshB,SAC/D,EAOAuC,EAAckD,SAAW,SAAkBC,GAGvC,OAFKzF,EAAOyF,KACRA,EAAazD,EAAUyD,IACpBhnB,KAAKqG,IAAI2gB,EAAWvE,MAC/B,EAQAoB,EAActd,IAAMsd,EAAckD,SAOlClD,EAAcoD,SAAW,SAAkBC,GACvC,GAAIlnB,KAAKgkB,SACL,OAAO7B,EAKX,GAJKZ,EAAO2F,KACRA,EAAa3D,EAAU2D,IAGvBjG,EAKA,OAAOe,EAJGf,EAAKqC,IAAItjB,KAAKohB,IACLphB,KAAKqhB,KACL6F,EAAW9F,IACX8F,EAAW7F,MACTJ,EAAKkG,WAAYnnB,KAAKshB,UAG/C,GAAI4F,EAAWlD,SACX,OAAO7B,EACX,GAAIniB,KAAKkkB,GAAG3B,GACR,OAAO2E,EAAWjC,QAAU1C,EAAYJ,EAC5C,GAAI+E,EAAWhD,GAAG3B,GACd,OAAOviB,KAAKilB,QAAU1C,EAAYJ,EAEtC,GAAIniB,KAAKikB,aACL,OAAIiD,EAAWjD,aACJjkB,KAAKyiB,MAAMa,IAAI4D,EAAWzE,OAE1BziB,KAAKyiB,MAAMa,IAAI4D,GAAYzE,MACnC,GAAIyE,EAAWjD,aAClB,OAAOjkB,KAAKsjB,IAAI4D,EAAWzE,OAAOA,MAGtC,GAAIziB,KAAKyB,GAAGgiB,IAAeyD,EAAWzlB,GAAGgiB,GACrC,OAAOxB,EAAWjiB,KAAK+jB,WAAamD,EAAWnD,WAAY/jB,KAAKshB,UAKpE,IAAI8E,EAAMpmB,KAAKqhB,OAAS,GACpBgF,EAAkB,MAAZrmB,KAAKqhB,KACXiF,EAAMtmB,KAAKohB,MAAQ,GACnBmF,EAAiB,MAAXvmB,KAAKohB,IAEXoF,EAAMU,EAAW7F,OAAS,GAC1BoF,EAAwB,MAAlBS,EAAW7F,KACjBqF,EAAMQ,EAAW9F,MAAQ,GACzBgG,EAAuB,MAAjBF,EAAW9F,IAEjBuF,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMa,KACE,GAGfR,IADAC,GAAOP,EAAMc,KACE,GACfP,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMe,KACE,GACfR,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMgB,EAAMf,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1CxE,GAZP6E,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C5mB,KAAKshB,SAC/D,EAQAuC,EAAcP,IAAMO,EAAcoD,SAQlCpD,EAAcwD,OAAS,SAAgBC,GAGnC,GAFK/F,EAAO+F,KACRA,EAAU/D,EAAU+D,IACpBA,EAAQtD,SACR,MAAMxlB,MAAM,oBAaZ,IAWA+oB,EAAQjD,EAAKkD,EArBjB,GAAIvG,EAIA,OAAKjhB,KAAKshB,WACS,aAAfthB,KAAKqhB,OACY,IAAjBiG,EAAQlG,MAAgC,IAAlBkG,EAAQjG,KAU3BW,GANIhiB,KAAKshB,SAAWL,EAAKwG,MAAQxG,EAAKyG,OACzC1nB,KAAKohB,IACLphB,KAAKqhB,KACLiG,EAAQlG,IACRkG,EAAQjG,MAESJ,EAAKkG,WAAYnnB,KAAKshB,UARhCthB,KAWf,GAAIA,KAAKgkB,SACL,OAAOhkB,KAAKshB,SAAWY,EAAQC,EAEnC,GAAKniB,KAAKshB,SA6BH,CAKH,GAFKgG,EAAQhG,WACTgG,EAAUA,EAAQK,cAClBL,EAAQriB,GAAGjF,MACX,OAAOkiB,EACX,GAAIoF,EAAQriB,GAAGjF,KAAK4nB,KAAK,IACrB,OAAOjE,EACX6D,EAAMtF,CACV,KAvCoB,CAGhB,GAAIliB,KAAKkkB,GAAG3B,GACR,OAAI+E,EAAQpD,GAAGR,IAAQ4D,EAAQpD,GAAGN,GACvBrB,EACF+E,EAAQpD,GAAG3B,GACTmB,GAIP6D,EADevnB,KAAK6nB,IAAI,GACNzD,IAAIkD,GAASQ,IAAI,IACxB5D,GAAG/B,GACHmF,EAAQrD,aAAeP,EAAME,GAEpCU,EAAMtkB,KAAKuG,IAAI+gB,EAAQhE,IAAIiE,IAC3BC,EAAMD,EAAOlhB,IAAIie,EAAIF,IAAIkD,KAI9B,GAAIA,EAAQpD,GAAG3B,GAClB,OAAOviB,KAAKshB,SAAWY,EAAQC,EACnC,GAAIniB,KAAKikB,aACL,OAAIqD,EAAQrD,aACDjkB,KAAKyiB,MAAM2B,IAAIkD,EAAQ7E,OAC3BziB,KAAKyiB,MAAM2B,IAAIkD,GAAS7E,MAC5B,GAAI6E,EAAQrD,aACf,OAAOjkB,KAAKokB,IAAIkD,EAAQ7E,OAAOA,MACnC+E,EAAMrF,CACV,CAkBA,IADAmC,EAAMtkB,KACCskB,EAAIsB,IAAI0B,IAAU,CAGrBC,EAAS5e,KAAKC,IAAI,EAAGD,KAAKqD,MAAMsY,EAAIP,WAAauD,EAAQvD,aAWzD,IAPA,IAAIgE,EAAOpf,KAAK+R,KAAK/R,KAAKvN,IAAImsB,GAAU5e,KAAKsU,KACzC+K,EAASD,GAAQ,GAAM,EAAIlF,EAAQ,EAAGkF,EAAO,IAI7CE,EAAYhG,EAAWsF,GACvBW,EAAYD,EAAU3E,IAAIgE,GACvBY,EAAUjE,cAAgBiE,EAAUjjB,GAAGqf,IAG1C4D,GADAD,EAAYhG,EADZsF,GAAUS,EACqBhoB,KAAKshB,WACdgC,IAAIgE,GAK1BW,EAAUjE,WACViE,EAAYvE,GAEhB8D,EAAMA,EAAInhB,IAAI4hB,GACd3D,EAAMA,EAAI/d,IAAI2hB,EAClB,CACA,OAAOV,CACX,EAQA3D,EAAcO,IAAMP,EAAcwD,OAOlCxD,EAAcsE,OAAS,SAAgBb,GAKnC,OAJK/F,EAAO+F,KACRA,EAAU/D,EAAU+D,IAGpBrG,EAOOe,GANIhiB,KAAKshB,SAAWL,EAAKmH,MAAQnH,EAAKoH,OACzCroB,KAAKohB,IACLphB,KAAKqhB,KACLiG,EAAQlG,IACRkG,EAAQjG,MAESJ,EAAKkG,WAAYnnB,KAAKshB,UAGxCthB,KAAKuG,IAAIvG,KAAKokB,IAAIkD,GAAShE,IAAIgE,GAC1C,EAQAzD,EAAc/E,IAAM+E,EAAcsE,OAQlCtE,EAAcS,IAAMT,EAAcsE,OAMlCtE,EAAcqC,IAAM,WAChB,OAAOlE,GAAUhiB,KAAKohB,KAAMphB,KAAKqhB,KAAMrhB,KAAKshB,SAChD,EAOAuC,EAAcyE,IAAM,SAAazH,GAG7B,OAFKU,EAAOV,KACRA,EAAQ0C,EAAU1C,IACfmB,EAAShiB,KAAKohB,IAAMP,EAAMO,IAAKphB,KAAKqhB,KAAOR,EAAMQ,KAAMrhB,KAAKshB,SACvE,EAOAuC,EAAc0E,GAAK,SAAY1H,GAG3B,OAFKU,EAAOV,KACRA,EAAQ0C,EAAU1C,IACfmB,EAAShiB,KAAKohB,IAAMP,EAAMO,IAAKphB,KAAKqhB,KAAOR,EAAMQ,KAAMrhB,KAAKshB,SACvE,EAOAuC,EAAc2E,IAAM,SAAa3H,GAG7B,OAFKU,EAAOV,KACRA,EAAQ0C,EAAU1C,IACfmB,EAAShiB,KAAKohB,IAAMP,EAAMO,IAAKphB,KAAKqhB,KAAOR,EAAMQ,KAAMrhB,KAAKshB,SACvE,EAOAuC,EAAc4E,UAAY,SAAmBC,GAGzC,OAFInH,EAAOmH,KACPA,EAAUA,EAAQ5E,SACE,IAAnB4E,GAAW,IACL1oB,KACF0oB,EAAU,GACR1G,EAAShiB,KAAKohB,KAAOsH,EAAU1oB,KAAKqhB,MAAQqH,EAAY1oB,KAAKohB,MAAS,GAAKsH,EAAW1oB,KAAKshB,UAE3FU,EAAS,EAAGhiB,KAAKohB,KAAQsH,EAAU,GAAK1oB,KAAKshB,SAC5D,EAQAuC,EAAciE,IAAMjE,EAAc4E,UAOlC5E,EAAc8E,WAAa,SAAoBD,GAG3C,OAFInH,EAAOmH,KACPA,EAAUA,EAAQ5E,SACE,IAAnB4E,GAAW,IACL1oB,KACF0oB,EAAU,GACR1G,EAAUhiB,KAAKohB,MAAQsH,EAAY1oB,KAAKqhB,MAAS,GAAKqH,EAAW1oB,KAAKqhB,MAAQqH,EAAS1oB,KAAKshB,UAE5FU,EAAShiB,KAAKqhB,MAASqH,EAAU,GAAK1oB,KAAKqhB,MAAQ,EAAI,GAAK,EAAGrhB,KAAKshB,SACnF,EAQAuC,EAAcgE,IAAMhE,EAAc8E,WAOlC9E,EAAc+E,mBAAqB,SAA4BF,GAI3D,GAHInH,EAAOmH,KACPA,EAAUA,EAAQ5E,SAEN,IADhB4E,GAAW,IAEP,OAAO1oB,KAEP,IAAIqhB,EAAOrhB,KAAKqhB,KAChB,OAAIqH,EAAU,GAEH1G,EADGhiB,KAAKohB,MACUsH,EAAYrH,GAAS,GAAKqH,EAAWrH,IAASqH,EAAS1oB,KAAKshB,UAE9EU,EADY,KAAZ0G,EACSrH,EAEAA,IAAUqH,EAAU,GAFd,EAAG1oB,KAAKshB,SAI1C,EAQAuC,EAAc+D,KAAO/D,EAAc+E,mBAQnC/E,EAAcgF,MAAQhF,EAAc+E,mBAMpC/E,EAAciF,SAAW,WACrB,OAAK9oB,KAAKshB,SAEHU,EAAShiB,KAAKohB,IAAKphB,KAAKqhB,MAAM,GAD1BrhB,IAEf,EAMA6jB,EAAc8D,WAAa,WACvB,OAAI3nB,KAAKshB,SACEthB,KACJgiB,EAAShiB,KAAKohB,IAAKphB,KAAKqhB,MAAM,EACzC,EAOAwC,EAAckF,QAAU,SAAiBhN,GACrC,OAAOA,EAAK/b,KAAKgpB,YAAchpB,KAAKipB,WACxC,EAMApF,EAAcmF,UAAY,WACtB,IAAIrK,EAAK3e,KAAKqhB,KACV3C,EAAK1e,KAAKohB,IACd,MAAO,CACS,IAAZ1C,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GACK,IAAZC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GAEf,EAMAkF,EAAcoF,UAAY,WACtB,IAAItK,EAAK3e,KAAKqhB,KACV3C,EAAK1e,KAAKohB,IACd,MAAO,CACHzC,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EACAD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EAER,EASAsC,EAAKkI,UAAY,SAAmBC,EAAO7H,EAAUvF,GACjD,OAAOA,EAAKiF,EAAKoI,YAAYD,EAAO7H,GAAYN,EAAKqI,YAAYF,EAAO7H,EAC5E,EAQAN,EAAKoI,YAAc,SAAqBD,EAAO7H,GAC3C,OAAO,IAAIN,EACPmI,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZ7H,EAER,EAQAN,EAAKqI,YAAc,SAAqBF,EAAO7H,GAC3C,OAAO,IAAIN,EACPmI,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACN7H,EAER,C,8BCvyCA,IA6BYgI,EAAiB3mB,EAdrB4mB,EAfJC,EAAY,EAAQ,MAGpBC,EAAUD,EAAUE,OAAQC,EAAUH,EAAUI,OAAQC,EAAQL,EAAUM,KAG1EC,EAAQP,EAAUQ,MAAe,UAAMR,EAAUQ,MAAe,QAAI,CAAC,GAEzED,EAAMR,OAOEA,EAAO,CAAC,GAaPU,SACGX,EAAa,CAAC,GAAG3mB,EAAS7K,OAAOsoB,OAAOkJ,IACrCA,EAAW,GAAK,kBAAoB,EAC3C3mB,EAAO2mB,EAAW,GAAK,yBAA2B,EAClD3mB,EAAO2mB,EAAW,GAAK,yBAA2B,EAClD3mB,EAAO2mB,EAAW,GAAK,wBAA0B,EACjD3mB,EAAO2mB,EAAW,GAAK,wBAA0B,EACjD3mB,EAAO2mB,EAAW,GAAK,cAAgB,EAChC3mB,GAGX4mB,EAAKW,eAAiB,WA8BlB,SAASA,EAAeC,GAMpB,GALAnqB,KAAKoqB,OAAS,GACdpqB,KAAKqqB,KAAO,GACZrqB,KAAKsqB,QAAU,GACftqB,KAAKuqB,QAAU,GACfvqB,KAAKwqB,OAAS,GACVL,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAmqBA,OA3pBAozB,EAAezd,UAAUxM,KAAO,GAQhCiqB,EAAezd,UAAUge,YAAc,GAQvCP,EAAezd,UAAUie,UAAY,GAQrCR,EAAezd,UAAUke,KAAO,EAQhCT,EAAezd,UAAUlV,EAAI,EAQ7B2yB,EAAezd,UAAU3V,EAAI+yB,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAQ3EkI,EAAezd,UAAUjV,EAAIqyB,EAAMe,UAAU,IAQ7CV,EAAezd,UAAU1W,EAAI,KAQ7Bm0B,EAAezd,UAAUvU,EAAI,KAQ7BgyB,EAAezd,UAAU2d,OAASP,EAAMgB,WAQxCX,EAAezd,UAAU4d,KAAOR,EAAMgB,WAQtCX,EAAezd,UAAU6d,QAAUT,EAAMgB,WAQzCX,EAAezd,UAAU8d,QAAUV,EAAMgB,WAQzCX,EAAezd,UAAU+d,OAASX,EAAMgB,WAUxCX,EAAe9J,OAAS,SAAgB+J,GACpC,OAAO,IAAID,EAAeC,EAC9B,EAWAD,EAAerP,OAAS,SAAgB3a,EAAS4qB,GAe7C,GAdKA,IACDA,EAASnB,EAAQvJ,UACD,MAAhBlgB,EAAQD,MAAgBC,EAAQ6qB,eAAe,SAC/CD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQD,MAC3C,MAAbC,EAAQ3I,GAAa2I,EAAQ6qB,eAAe,MAC5CD,EAAOE,OAA8B,IAAIC,MAAM/qB,EAAQ3I,GAC1C,MAAb2I,EAAQpJ,GAAaoJ,EAAQ6qB,eAAe,MAC5CD,EAAOE,OAA8B,IAAIE,MAAMhrB,EAAQpJ,GAC1C,MAAboJ,EAAQ1I,GAAa0I,EAAQ6qB,eAAe,MAC5CD,EAAOE,OAA8B,IAAI7B,MAAMjpB,EAAQ1I,GAC1C,MAAb0I,EAAQnK,GAAamK,EAAQ6qB,eAAe,MAC5ChB,EAAMR,KAAK4B,YAAYtQ,OAAO3a,EAAQnK,EAAG+0B,EAAOE,OAA8B,IAAII,QAAQC,SAC7E,MAAbnrB,EAAQhI,GAAagI,EAAQ6qB,eAAe,MAC5ChB,EAAMR,KAAK+B,WAAWzQ,OAAO3a,EAAQhI,EAAG4yB,EAAOE,OAA8B,IAAII,QAAQC,SACvE,MAAlBnrB,EAAQkqB,QAAkBlqB,EAAQkqB,OAAO/wB,OAAQ,CACjDyxB,EAAOE,OAA8B,IAAII,OACzC,IAAK,IAAIt0B,EAAI,EAAGA,EAAIoJ,EAAQkqB,OAAO/wB,SAAUvC,EACzCg0B,EAAOG,MAAM/qB,EAAQkqB,OAAOtzB,IAChCg0B,EAAOO,QACX,CACA,GAAoB,MAAhBnrB,EAAQmqB,MAAgBnqB,EAAQmqB,KAAKhxB,OAAQ,CAE7C,IADAyxB,EAAOE,OAA8B,IAAII,OAChCt0B,EAAI,EAAGA,EAAIoJ,EAAQmqB,KAAKhxB,SAAUvC,EACvCg0B,EAAOI,MAAMhrB,EAAQmqB,KAAKvzB,IAC9Bg0B,EAAOO,QACX,CACA,GAAuB,MAAnBnrB,EAAQoqB,SAAmBpqB,EAAQoqB,QAAQjxB,OAC3C,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQoqB,QAAQjxB,SAAUvC,EAC1Cg0B,EAAOE,OAA8B,IAAI7B,MAAMjpB,EAAQoqB,QAAQxzB,IACvE,GAAuB,MAAnBoJ,EAAQqqB,SAAmBrqB,EAAQqqB,QAAQlxB,OAC3C,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQqqB,QAAQlxB,SAAUvC,EAC1CizB,EAAMR,KAAK4B,YAAYtQ,OAAO3a,EAAQqqB,QAAQzzB,GAAIg0B,EAAOE,OAA+B,IAAII,QAAQC,SAC5G,GAAsB,MAAlBnrB,EAAQsqB,QAAkBtqB,EAAQsqB,OAAOnxB,OACzC,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQsqB,OAAOnxB,SAAUvC,EACzCizB,EAAMR,KAAK+B,WAAWzQ,OAAO3a,EAAQsqB,OAAO1zB,GAAIg0B,EAAOE,OAA+B,IAAII,QAAQC,SAO1G,OANyB,MAArBnrB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA+B,KAAKxQ,OAAOta,EAAQwqB,WAC1C,MAAhBxqB,EAAQyqB,MAAgBzqB,EAAQ6qB,eAAe,SAC/CD,EAAOE,OAA+B,KAAKO,MAAMrrB,EAAQyqB,MAClC,MAAvBzqB,EAAQuqB,aAAuBvqB,EAAQ6qB,eAAe,gBACtDD,EAAOE,OAA+B,KAAKxQ,OAAOta,EAAQuqB,aACvDK,CACX,EAWAZ,EAAesB,gBAAkB,SAAyBtrB,EAAS4qB,GAC/D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAnB,EAAeztB,OAAS,SAAgBgvB,EAAQpyB,GACtCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAKW,eACrFuB,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQD,KAAOwrB,EAAOjR,SACtB,MACJ,KAAK,GACDta,EAAQuqB,YAAcgB,EAAOjR,SAC7B,MACJ,KAAK,GACDta,EAAQwqB,UAAYe,EAAOjR,SAC3B,MACJ,KAAK,GACDta,EAAQyqB,KAAOc,EAAOF,QACtB,MACJ,KAAK,EACDrrB,EAAQ3I,EAAIk0B,EAAOR,QACnB,MACJ,KAAK,EACD/qB,EAAQpJ,EAAI20B,EAAOP,QACnB,MACJ,KAAK,EACDhrB,EAAQ1I,EAAIi0B,EAAOtC,QACnB,MACJ,KAAK,EACDjpB,EAAQnK,EAAIg0B,EAAMR,KAAK4B,YAAY1uB,OAAOgvB,EAAQA,EAAOT,UACzD,MACJ,KAAK,EACD9qB,EAAQhI,EAAI6xB,EAAMR,KAAK+B,WAAW7uB,OAAOgvB,EAAQA,EAAOT,UACxD,MACJ,KAAK,EAGD,GAFM9qB,EAAQkqB,QAAUlqB,EAAQkqB,OAAO/wB,SACnC6G,EAAQkqB,OAAS,IACH,IAAP,EAANsB,GAED,IADA,IAAIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQkqB,OAAO1pB,KAAK+qB,EAAOR,cAE/B/qB,EAAQkqB,OAAO1pB,KAAK+qB,EAAOR,SAC/B,MACJ,KAAK,EAGD,GAFM/qB,EAAQmqB,MAAQnqB,EAAQmqB,KAAKhxB,SAC/B6G,EAAQmqB,KAAO,IACD,IAAP,EAANqB,GAED,IADIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQmqB,KAAK3pB,KAAK+qB,EAAOP,cAE7BhrB,EAAQmqB,KAAK3pB,KAAK+qB,EAAOP,SAC7B,MACJ,KAAK,EACKhrB,EAAQoqB,SAAWpqB,EAAQoqB,QAAQjxB,SACrC6G,EAAQoqB,QAAU,IACtBpqB,EAAQoqB,QAAQ5pB,KAAK+qB,EAAOtC,SAC5B,MACJ,KAAK,GACKjpB,EAAQqqB,SAAWrqB,EAAQqqB,QAAQlxB,SACrC6G,EAAQqqB,QAAU,IACtBrqB,EAAQqqB,QAAQ7pB,KAAKqpB,EAAMR,KAAK4B,YAAY1uB,OAAOgvB,EAAQA,EAAOT,WAClE,MACJ,KAAK,GACK9qB,EAAQsqB,QAAUtqB,EAAQsqB,OAAOnxB,SACnC6G,EAAQsqB,OAAS,IACrBtqB,EAAQsqB,OAAO9pB,KAAKqpB,EAAMR,KAAK+B,WAAW7uB,OAAOgvB,EAAQA,EAAOT,WAChE,MACJ,QACIS,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAgqB,EAAe2B,gBAAkB,SAAyBJ,GAGtD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAd,EAAe4B,OAAS,SAAgB5rB,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC1ClB,EAAMkC,SAAS7rB,EAAQD,MACxB,MAAO,wBACf,GAA2B,MAAvBC,EAAQuqB,aAAuBvqB,EAAQ6qB,eAAe,iBACjDlB,EAAMkC,SAAS7rB,EAAQuqB,aACxB,MAAO,+BACf,GAAyB,MAArBvqB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eAC/ClB,EAAMkC,SAAS7rB,EAAQwqB,WACxB,MAAO,6BACf,GAAoB,MAAhBxqB,EAAQyqB,MAAgBzqB,EAAQ6qB,eAAe,QAC/C,OAAQ7qB,EAAQyqB,MAChB,QACI,MAAO,4BACX,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,IAGT,GAAiB,MAAbzqB,EAAQ3I,GAAa2I,EAAQ6qB,eAAe,MACnB,iBAAd7qB,EAAQ3I,EACf,MAAO,qBACf,GAAiB,MAAb2I,EAAQpJ,GAAaoJ,EAAQ6qB,eAAe,QACvClB,EAAMmC,UAAU9rB,EAAQpJ,IAAQoJ,EAAQpJ,GAAK+yB,EAAMmC,UAAU9rB,EAAQpJ,EAAEsqB,MAAQyI,EAAMmC,UAAU9rB,EAAQpJ,EAAEuqB,OAC1G,MAAO,2BACf,GAAiB,MAAbnhB,EAAQ1I,GAAa0I,EAAQ6qB,eAAe,QACtC7qB,EAAQ1I,GAAiC,iBAArB0I,EAAQ1I,EAAE6B,QAAuBwwB,EAAMkC,SAAS7rB,EAAQ1I,IAC9E,MAAO,qBACf,GAAiB,MAAb0I,EAAQnK,GAAamK,EAAQ6qB,eAAe,OACxC/wB,EAAQ+vB,EAAMR,KAAK4B,YAAYW,OAAO5rB,EAAQnK,IAE9C,MAAO,KAAOiE,EAEtB,GAAiB,MAAbkG,EAAQhI,GAAagI,EAAQ6qB,eAAe,OACxC/wB,EAAQ+vB,EAAMR,KAAK+B,WAAWQ,OAAO5rB,EAAQhI,IAE7C,MAAO,KAAO8B,EAEtB,GAAsB,MAAlBkG,EAAQkqB,QAAkBlqB,EAAQ6qB,eAAe,UAAW,CAC5D,IAAK5e,MAAM8f,QAAQ/rB,EAAQkqB,QACvB,MAAO,yBACX,IAAK,IAAItzB,EAAI,EAAGA,EAAIoJ,EAAQkqB,OAAO/wB,SAAUvC,EACzC,GAAiC,iBAAtBoJ,EAAQkqB,OAAOtzB,GACtB,MAAO,2BACnB,CACA,GAAoB,MAAhBoJ,EAAQmqB,MAAgBnqB,EAAQ6qB,eAAe,QAAS,CACxD,IAAK5e,MAAM8f,QAAQ/rB,EAAQmqB,MACvB,MAAO,uBACX,IAASvzB,EAAI,EAAGA,EAAIoJ,EAAQmqB,KAAKhxB,SAAUvC,EACvC,KAAK+yB,EAAMmC,UAAU9rB,EAAQmqB,KAAKvzB,KAASoJ,EAAQmqB,KAAKvzB,IAAM+yB,EAAMmC,UAAU9rB,EAAQmqB,KAAKvzB,GAAGsqB,MAAQyI,EAAMmC,UAAU9rB,EAAQmqB,KAAKvzB,GAAGuqB,OAClI,MAAO,+BACnB,CACA,GAAuB,MAAnBnhB,EAAQoqB,SAAmBpqB,EAAQ6qB,eAAe,WAAY,CAC9D,IAAK5e,MAAM8f,QAAQ/rB,EAAQoqB,SACvB,MAAO,0BACX,IAASxzB,EAAI,EAAGA,EAAIoJ,EAAQoqB,QAAQjxB,SAAUvC,EAC1C,KAAMoJ,EAAQoqB,QAAQxzB,IAA2C,iBAA9BoJ,EAAQoqB,QAAQxzB,GAAGuC,QAAuBwwB,EAAMkC,SAAS7rB,EAAQoqB,QAAQxzB,KACxG,MAAO,4BACnB,CACA,GAAuB,MAAnBoJ,EAAQqqB,SAAmBrqB,EAAQ6qB,eAAe,WAAY,CAC9D,IAAK5e,MAAM8f,QAAQ/rB,EAAQqqB,SACvB,MAAO,0BACX,IAASzzB,EAAI,EAAGA,EAAIoJ,EAAQqqB,QAAQlxB,SAAUvC,EAE1C,GADIkD,EAAQ+vB,EAAMR,KAAK4B,YAAYW,OAAO5rB,EAAQqqB,QAAQzzB,IAEtD,MAAO,WAAakD,CAEhC,CACA,GAAsB,MAAlBkG,EAAQsqB,QAAkBtqB,EAAQ6qB,eAAe,UAAW,CAC5D,IAAK5e,MAAM8f,QAAQ/rB,EAAQsqB,QACvB,MAAO,yBACX,IAAS1zB,EAAI,EAAGA,EAAIoJ,EAAQsqB,OAAOnxB,SAAUvC,EAAG,CAC5C,IAAIkD,EACJ,GADIA,EAAQ+vB,EAAMR,KAAK+B,WAAWQ,OAAO5rB,EAAQsqB,OAAO1zB,IAEpD,MAAO,UAAYkD,CAC3B,CACJ,CACA,OAAO,IACX,EAUAkwB,EAAegC,WAAa,SAAoBC,GAC5C,GAAIA,aAAkBpC,EAAMR,KAAKW,eAC7B,OAAOiC,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAKW,eAO7B,OANmB,MAAfiC,EAAOlsB,OACPC,EAAQD,KAAOrD,OAAOuvB,EAAOlsB,OACP,MAAtBksB,EAAO1B,cACPvqB,EAAQuqB,YAAc7tB,OAAOuvB,EAAO1B,cAChB,MAApB0B,EAAOzB,YACPxqB,EAAQwqB,UAAY9tB,OAAOuvB,EAAOzB,YAC9ByB,EAAOxB,MACf,IAAK,YACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,MACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,OACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDzqB,EAAQyqB,KAAO,EACf,MACJ,IAAK,SACL,KAAK,GACDzqB,EAAQyqB,KAAO,GAmBnB,GAhBgB,MAAZwB,EAAO50B,IACP2I,EAAQ3I,EAAIsR,OAAOsjB,EAAO50B,IACd,MAAZ40B,EAAOr1B,IACH+yB,EAAM7I,MACL9gB,EAAQpJ,EAAI+yB,EAAM7I,KAAKuC,UAAU4I,EAAOr1B,IAAIwqB,UAAW,EAC/B,iBAAb6K,EAAOr1B,EACnBoJ,EAAQpJ,EAAIssB,SAAS+I,EAAOr1B,EAAG,IACN,iBAAbq1B,EAAOr1B,EACnBoJ,EAAQpJ,EAAIq1B,EAAOr1B,EACM,iBAAbq1B,EAAOr1B,IACnBoJ,EAAQpJ,EAAI,IAAI+yB,EAAMuC,SAASD,EAAOr1B,EAAEsqB,MAAQ,EAAG+K,EAAOr1B,EAAEuqB,OAAS,GAAG0C,aAChE,MAAZoI,EAAO30B,IACiB,iBAAb20B,EAAO30B,EACdqyB,EAAMtP,OAAO9d,OAAO0vB,EAAO30B,EAAG0I,EAAQ1I,EAAIqyB,EAAMe,UAAUf,EAAMtP,OAAOlhB,OAAO8yB,EAAO30B,IAAK,GACrF20B,EAAO30B,EAAE6B,SACd6G,EAAQ1I,EAAI20B,EAAO30B,IACX,MAAZ20B,EAAOp2B,EAAW,CAClB,GAAwB,iBAAbo2B,EAAOp2B,EACd,MAAMgqB,UAAU,2CACpB7f,EAAQnK,EAAIg0B,EAAMR,KAAK4B,YAAYe,WAAWC,EAAOp2B,EACzD,CACA,GAAgB,MAAZo2B,EAAOj0B,EAAW,CAClB,GAAwB,iBAAbi0B,EAAOj0B,EACd,MAAM6nB,UAAU,2CACpB7f,EAAQhI,EAAI6xB,EAAMR,KAAK+B,WAAWY,WAAWC,EAAOj0B,EACxD,CACA,GAAIi0B,EAAO/B,OAAQ,CACf,IAAKje,MAAM8f,QAAQE,EAAO/B,QACtB,MAAMrK,UAAU,+CACpB7f,EAAQkqB,OAAS,GACjB,IAAK,IAAItzB,EAAI,EAAGA,EAAIq1B,EAAO/B,OAAO/wB,SAAUvC,EACxCoJ,EAAQkqB,OAAOtzB,GAAK+R,OAAOsjB,EAAO/B,OAAOtzB,GACjD,CACA,GAAIq1B,EAAO9B,KAAM,CACb,IAAKle,MAAM8f,QAAQE,EAAO9B,MACtB,MAAMtK,UAAU,6CAEpB,IADA7f,EAAQmqB,KAAO,GACNvzB,EAAI,EAAGA,EAAIq1B,EAAO9B,KAAKhxB,SAAUvC,EAClC+yB,EAAM7I,MACL9gB,EAAQmqB,KAAKvzB,GAAK+yB,EAAM7I,KAAKuC,UAAU4I,EAAO9B,KAAKvzB,KAAKwqB,UAAW,EACrC,iBAAnB6K,EAAO9B,KAAKvzB,GACxBoJ,EAAQmqB,KAAKvzB,GAAKssB,SAAS+I,EAAO9B,KAAKvzB,GAAI,IACZ,iBAAnBq1B,EAAO9B,KAAKvzB,GACxBoJ,EAAQmqB,KAAKvzB,GAAKq1B,EAAO9B,KAAKvzB,GACC,iBAAnBq1B,EAAO9B,KAAKvzB,KACxBoJ,EAAQmqB,KAAKvzB,GAAK,IAAI+yB,EAAMuC,SAASD,EAAO9B,KAAKvzB,GAAGsqB,MAAQ,EAAG+K,EAAO9B,KAAKvzB,GAAGuqB,OAAS,GAAG0C,WACtG,CACA,GAAIoI,EAAO7B,QAAS,CAChB,IAAKne,MAAM8f,QAAQE,EAAO7B,SACtB,MAAMvK,UAAU,gDAEpB,IADA7f,EAAQoqB,QAAU,GACTxzB,EAAI,EAAGA,EAAIq1B,EAAO7B,QAAQjxB,SAAUvC,EACR,iBAAtBq1B,EAAO7B,QAAQxzB,GACtB+yB,EAAMtP,OAAO9d,OAAO0vB,EAAO7B,QAAQxzB,GAAIoJ,EAAQoqB,QAAQxzB,GAAK+yB,EAAMe,UAAUf,EAAMtP,OAAOlhB,OAAO8yB,EAAO7B,QAAQxzB,KAAM,GAChHq1B,EAAO7B,QAAQxzB,GAAGuC,SACvB6G,EAAQoqB,QAAQxzB,GAAKq1B,EAAO7B,QAAQxzB,GAChD,CACA,GAAIq1B,EAAO5B,QAAS,CAChB,IAAKpe,MAAM8f,QAAQE,EAAO5B,SACtB,MAAMxK,UAAU,gDAEpB,IADA7f,EAAQqqB,QAAU,GACTzzB,EAAI,EAAGA,EAAIq1B,EAAO5B,QAAQlxB,SAAUvC,EAAG,CAC5C,GAAiC,iBAAtBq1B,EAAO5B,QAAQzzB,GACtB,MAAMipB,UAAU,iDACpB7f,EAAQqqB,QAAQzzB,GAAKizB,EAAMR,KAAK4B,YAAYe,WAAWC,EAAO5B,QAAQzzB,GAC1E,CACJ,CACA,GAAIq1B,EAAO3B,OAAQ,CACf,IAAKre,MAAM8f,QAAQE,EAAO3B,QACtB,MAAMzK,UAAU,+CAEpB,IADA7f,EAAQsqB,OAAS,GACR1zB,EAAI,EAAGA,EAAIq1B,EAAO3B,OAAOnxB,SAAUvC,EAAG,CAC3C,GAAgC,iBAArBq1B,EAAO3B,OAAO1zB,GACrB,MAAMipB,UAAU,gDACpB7f,EAAQsqB,OAAO1zB,GAAKizB,EAAMR,KAAK+B,WAAWY,WAAWC,EAAO3B,OAAO1zB,GACvE,CACJ,CACA,OAAOoJ,CACX,EAWAgqB,EAAemC,SAAW,SAAkBnsB,EAASosB,GAC5CA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAQd,IAPIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAO/B,OAAS,GAChB+B,EAAO9B,KAAO,GACd8B,EAAO7B,QAAU,GACjB6B,EAAO5B,QAAU,GACjB4B,EAAO3B,OAAS,IAEhB8B,EAAQE,SAAU,CAGlB,GAFAL,EAAOlsB,KAAO,GACdksB,EAAO50B,EAAI,EACPsyB,EAAM7I,KAAM,CACZ,IAAIyL,EAAO,IAAI5C,EAAM7I,KAAK,EAAG,GAAG,GAChCmL,EAAOr1B,EAAIw1B,EAAQI,QAAU9vB,OAAS6vB,EAAK/hB,WAAa4hB,EAAQI,QAAU7jB,OAAS4jB,EAAK1I,WAAa0I,CACzG,MACIN,EAAOr1B,EAAIw1B,EAAQI,QAAU9vB,OAAS,IAAM,EAC5C0vB,EAAQnD,QAAUvsB,OAClBuvB,EAAO30B,EAAI,IAEX20B,EAAO30B,EAAI,GACP80B,EAAQnD,QAAUhd,QAClBggB,EAAO30B,EAAIqyB,EAAMe,UAAUuB,EAAO30B,KAE1C20B,EAAOp2B,EAAI,KACXo2B,EAAOj0B,EAAI,KACXi0B,EAAOzB,UAAY,GACnByB,EAAOxB,KAAO2B,EAAQK,QAAU/vB,OAAS,YAAc,EACvDuvB,EAAO1B,YAAc,EACzB,CAgBA,GAfoB,MAAhBvqB,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC/CoB,EAAOlsB,KAAOC,EAAQD,MACT,MAAbC,EAAQ3I,GAAa2I,EAAQ6qB,eAAe,OAC5CoB,EAAO50B,EAAI+0B,EAAQM,OAASC,SAAS3sB,EAAQ3I,GAAKqF,OAAOsD,EAAQ3I,GAAK2I,EAAQ3I,GACjE,MAAb2I,EAAQpJ,GAAaoJ,EAAQ6qB,eAAe,OACnB,iBAAd7qB,EAAQpJ,EACfq1B,EAAOr1B,EAAIw1B,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQpJ,GAAKoJ,EAAQpJ,EAElEq1B,EAAOr1B,EAAIw1B,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQpJ,GAAKw1B,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQpJ,EAAEsqB,MAAQ,EAAGlhB,EAAQpJ,EAAEuqB,OAAS,GAAG0C,WAAa7jB,EAAQpJ,GAC3L,MAAboJ,EAAQ1I,GAAa0I,EAAQ6qB,eAAe,OAC5CoB,EAAO30B,EAAI80B,EAAQnD,QAAUvsB,OAASitB,EAAMtP,OAAOM,OAAO3a,EAAQ1I,EAAG,EAAG0I,EAAQ1I,EAAE6B,QAAUizB,EAAQnD,QAAUhd,MAAQA,MAAMM,UAAUlT,MAAMmT,KAAKxM,EAAQ1I,GAAK0I,EAAQ1I,GACzJ,MAAb0I,EAAQnK,GAAamK,EAAQ6qB,eAAe,OAC5CoB,EAAOp2B,EAAIg0B,EAAMR,KAAK4B,YAAYkB,SAASnsB,EAAQnK,EAAGu2B,IACzC,MAAbpsB,EAAQhI,GAAagI,EAAQ6qB,eAAe,OAC5CoB,EAAOj0B,EAAI6xB,EAAMR,KAAK+B,WAAWe,SAASnsB,EAAQhI,EAAGo0B,IACrDpsB,EAAQkqB,QAAUlqB,EAAQkqB,OAAO/wB,OAAQ,CACzC8yB,EAAO/B,OAAS,GAChB,IAAK,IAAI3zB,EAAI,EAAGA,EAAIyJ,EAAQkqB,OAAO/wB,SAAU5C,EACzC01B,EAAO/B,OAAO3zB,GAAK61B,EAAQM,OAASC,SAAS3sB,EAAQkqB,OAAO3zB,IAAMmG,OAAOsD,EAAQkqB,OAAO3zB,IAAMyJ,EAAQkqB,OAAO3zB,EACrH,CACA,GAAIyJ,EAAQmqB,MAAQnqB,EAAQmqB,KAAKhxB,OAE7B,IADA8yB,EAAO9B,KAAO,GACL5zB,EAAI,EAAGA,EAAIyJ,EAAQmqB,KAAKhxB,SAAU5C,EACR,iBAApByJ,EAAQmqB,KAAK5zB,GACpB01B,EAAO9B,KAAK5zB,GAAK61B,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQmqB,KAAK5zB,IAAMyJ,EAAQmqB,KAAK5zB,GAEnF01B,EAAO9B,KAAK5zB,GAAK61B,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQmqB,KAAK5zB,IAAM61B,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQmqB,KAAK5zB,GAAG2qB,MAAQ,EAAGlhB,EAAQmqB,KAAK5zB,GAAG4qB,OAAS,GAAG0C,WAAa7jB,EAAQmqB,KAAK5zB,GAE7O,GAAIyJ,EAAQoqB,SAAWpqB,EAAQoqB,QAAQjxB,OAEnC,IADA8yB,EAAO7B,QAAU,GACR7zB,EAAI,EAAGA,EAAIyJ,EAAQoqB,QAAQjxB,SAAU5C,EAC1C01B,EAAO7B,QAAQ7zB,GAAK61B,EAAQnD,QAAUvsB,OAASitB,EAAMtP,OAAOM,OAAO3a,EAAQoqB,QAAQ7zB,GAAI,EAAGyJ,EAAQoqB,QAAQ7zB,GAAG4C,QAAUizB,EAAQnD,QAAUhd,MAAQA,MAAMM,UAAUlT,MAAMmT,KAAKxM,EAAQoqB,QAAQ7zB,IAAMyJ,EAAQoqB,QAAQ7zB,GAE1N,GAAIyJ,EAAQqqB,SAAWrqB,EAAQqqB,QAAQlxB,OAEnC,IADA8yB,EAAO5B,QAAU,GACR9zB,EAAI,EAAGA,EAAIyJ,EAAQqqB,QAAQlxB,SAAU5C,EAC1C01B,EAAO5B,QAAQ9zB,GAAKszB,EAAMR,KAAK4B,YAAYkB,SAASnsB,EAAQqqB,QAAQ9zB,GAAI61B,GAEhF,GAAIpsB,EAAQsqB,QAAUtqB,EAAQsqB,OAAOnxB,OAEjC,IADA8yB,EAAO3B,OAAS,GACP/zB,EAAI,EAAGA,EAAIyJ,EAAQsqB,OAAOnxB,SAAU5C,EACzC01B,EAAO3B,OAAO/zB,GAAKszB,EAAMR,KAAK+B,WAAWe,SAASnsB,EAAQsqB,OAAO/zB,GAAI61B,GAQ7E,OANyB,MAArBpsB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eACpDoB,EAAOzB,UAAYxqB,EAAQwqB,WACX,MAAhBxqB,EAAQyqB,MAAgBzqB,EAAQ6qB,eAAe,UAC/CoB,EAAOxB,KAAO2B,EAAQK,QAAU/vB,OAASmtB,EAAMR,KAAKW,eAAe4C,cAAc5sB,EAAQyqB,MAAQzqB,EAAQyqB,MAClF,MAAvBzqB,EAAQuqB,aAAuBvqB,EAAQ6qB,eAAe,iBACtDoB,EAAO1B,YAAcvqB,EAAQuqB,aAC1B0B,CACX,EASAjC,EAAezd,UAAUsU,OAAS,WAC9B,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAkBA9C,EAAe4C,cAAgB,WAC3B,IAAIxD,EAAa,CAAC,EAAG3mB,EAAS7K,OAAOsoB,OAAOkJ,GAY5C,OAXA3mB,EAAO2mB,EAAW,GAAK,aAAe,EACtC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,OAAS,EAChC3mB,EAAO2mB,EAAW,GAAK,UAAY,EACnC3mB,EAAO2mB,EAAW,GAAK,UAAY,EACnC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,UAAY,EACnC3mB,EAAO2mB,EAAW,GAAK,QAAU,EACjC3mB,EAAO2mB,EAAW,GAAK,WAAa,EACpC3mB,EAAO2mB,EAAW,GAAK,WAAa,EACpC3mB,EAAO2mB,EAAW,IAAM,UAAY,GAC7B3mB,CACV,CAd8B,GAgBxBunB,CACV,CA5sBqB,GA8sBtBX,EAAK0D,eAAiB,WAmBlB,SAASA,EAAe9C,GACpB,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAkNA,OA1MAm2B,EAAexgB,UAAUxM,KAAO,GAQhCgtB,EAAexgB,UAAUke,KAAO,KAQhCsC,EAAexgB,UAAUie,UAAY,GAUrCuC,EAAe7M,OAAS,SAAgB+J,GACpC,OAAO,IAAI8C,EAAe9C,EAC9B,EAWA8C,EAAepS,OAAS,SAAgB3a,EAAS4qB,GAS7C,OARKA,IACDA,EAASnB,EAAQvJ,UACD,MAAhBlgB,EAAQD,MAAgBC,EAAQ6qB,eAAe,SAC/CD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQD,MACxC,MAAhBC,EAAQyqB,MAAgBzqB,EAAQ6qB,eAAe,SAC/ChB,EAAMR,KAAK2D,UAAUrS,OAAO3a,EAAQyqB,KAAMG,EAAOE,OAA8B,IAAII,QAAQC,SACtE,MAArBnrB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQwqB,WACrDI,CACX,EAWAmC,EAAezB,gBAAkB,SAAyBtrB,EAAS4qB,GAC/D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaA4B,EAAexwB,OAAS,SAAgBgvB,EAAQpyB,GACtCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK0D,eACrFxB,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQD,KAAOwrB,EAAOjR,SACtB,MACJ,KAAK,EACDta,EAAQyqB,KAAOZ,EAAMR,KAAK2D,UAAUzwB,OAAOgvB,EAAQA,EAAOT,UAC1D,MACJ,KAAK,EACD9qB,EAAQwqB,UAAYe,EAAOjR,SAC3B,MACJ,QACIiR,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYA+sB,EAAepB,gBAAkB,SAAyBJ,GAGtD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAiC,EAAenB,OAAS,SAAgB5rB,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC1ClB,EAAMkC,SAAS7rB,EAAQD,MACxB,MAAO,wBACf,GAAoB,MAAhBC,EAAQyqB,MAAgBzqB,EAAQ6qB,eAAe,QAAS,CACxD,IAAI/wB,EAAQ+vB,EAAMR,KAAK2D,UAAUpB,OAAO5rB,EAAQyqB,MAChD,GAAI3wB,EACA,MAAO,QAAUA,CACzB,CACA,OAAyB,MAArBkG,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eAC/ClB,EAAMkC,SAAS7rB,EAAQwqB,WACjB,6BACR,IACX,EAUAuC,EAAef,WAAa,SAAoBC,GAC5C,GAAIA,aAAkBpC,EAAMR,KAAK0D,eAC7B,OAAOd,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK0D,eAG7B,GAFmB,MAAfd,EAAOlsB,OACPC,EAAQD,KAAOrD,OAAOuvB,EAAOlsB,OACd,MAAfksB,EAAOxB,KAAc,CACrB,GAA2B,iBAAhBwB,EAAOxB,KACd,MAAM5K,UAAU,8CACpB7f,EAAQyqB,KAAOZ,EAAMR,KAAK2D,UAAUhB,WAAWC,EAAOxB,KAC1D,CAGA,OAFwB,MAApBwB,EAAOzB,YACPxqB,EAAQwqB,UAAY9tB,OAAOuvB,EAAOzB,YAC/BxqB,CACX,EAWA+sB,EAAeZ,SAAW,SAAkBnsB,EAASosB,GAC5CA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAYd,OAXIG,EAAQE,WACRL,EAAOlsB,KAAO,GACdksB,EAAOxB,KAAO,KACdwB,EAAOzB,UAAY,IAEH,MAAhBxqB,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC/CoB,EAAOlsB,KAAOC,EAAQD,MACN,MAAhBC,EAAQyqB,MAAgBzqB,EAAQ6qB,eAAe,UAC/CoB,EAAOxB,KAAOZ,EAAMR,KAAK2D,UAAUb,SAASnsB,EAAQyqB,KAAM2B,IACrC,MAArBpsB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eACpDoB,EAAOzB,UAAYxqB,EAAQwqB,WACxByB,CACX,EASAc,EAAexgB,UAAUsU,OAAS,WAC9B,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOC,CACV,CA3OqB,GA6OtB1D,EAAK4D,UAAY,WAuBb,SAASA,EAAUhD,GAIf,GAHAnqB,KAAKotB,MAAQ,GACbptB,KAAKqtB,OAAS,GACdrtB,KAAKstB,UAAY,GACbnD,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAqVA,OA7UAq2B,EAAU1gB,UAAU2gB,MAAQvD,EAAMgB,WAQlCsC,EAAU1gB,UAAU4gB,OAASxD,EAAMgB,WAQnCsC,EAAU1gB,UAAUxM,KAAO,GAQ3BktB,EAAU1gB,UAAU8gB,OAAS,GAQ7BJ,EAAU1gB,UAAU+gB,OAAS,GAQ7BL,EAAU1gB,UAAU6gB,UAAYzD,EAAMgB,WAQtCsC,EAAU1gB,UAAUie,UAAY,GAUhCyC,EAAU/M,OAAS,SAAgB+J,GAC/B,OAAO,IAAIgD,EAAUhD,EACzB,EAWAgD,EAAUtS,OAAS,SAAgB3a,EAAS4qB,GAGxC,GAFKA,IACDA,EAASnB,EAAQvJ,UACA,MAAjBlgB,EAAQktB,OAAiBltB,EAAQktB,MAAM/zB,OACvC,IAAK,IAAIvC,EAAI,EAAGA,EAAIoJ,EAAQktB,MAAM/zB,SAAUvC,EACxCg0B,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQktB,MAAMt2B,IACtE,GAAsB,MAAlBoJ,EAAQmtB,QAAkBntB,EAAQmtB,OAAOh0B,OACzC,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQmtB,OAAOh0B,SAAUvC,EACzCg0B,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQmtB,OAAOv2B,IAKvE,GAJoB,MAAhBoJ,EAAQD,MAAgBC,EAAQ6qB,eAAe,SAC/CD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQD,MACtC,MAAlBC,EAAQqtB,QAAkBrtB,EAAQ6qB,eAAe,WACjDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQqtB,QACnC,MAArBrtB,EAAQotB,WAAqBptB,EAAQotB,UAAUj0B,OAC/C,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQotB,UAAUj0B,SAAUvC,EAC5CizB,EAAMR,KAAKW,eAAerP,OAAO3a,EAAQotB,UAAUx2B,GAAIg0B,EAAOE,OAA8B,IAAII,QAAQC,SAKhH,OAJyB,MAArBnrB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQwqB,WACtC,MAAlBxqB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,WACjDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQstB,QACrD1C,CACX,EAWAqC,EAAU3B,gBAAkB,SAAyBtrB,EAAS4qB,GAC1D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaA8B,EAAU1wB,OAAS,SAAgBgvB,EAAQpyB,GACjCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK4D,UACrF1B,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACKxrB,EAAQktB,OAASltB,EAAQktB,MAAM/zB,SACjC6G,EAAQktB,MAAQ,IACpBltB,EAAQktB,MAAM1sB,KAAK+qB,EAAOjR,UAC1B,MACJ,KAAK,EACKta,EAAQmtB,QAAUntB,EAAQmtB,OAAOh0B,SACnC6G,EAAQmtB,OAAS,IACrBntB,EAAQmtB,OAAO3sB,KAAK+qB,EAAOjR,UAC3B,MACJ,KAAK,EACDta,EAAQD,KAAOwrB,EAAOjR,SACtB,MACJ,KAAK,EACDta,EAAQqtB,OAAS9B,EAAOjR,SACxB,MACJ,KAAK,EACDta,EAAQstB,OAAS/B,EAAOjR,SACxB,MACJ,KAAK,EACKta,EAAQotB,WAAaptB,EAAQotB,UAAUj0B,SACzC6G,EAAQotB,UAAY,IACxBptB,EAAQotB,UAAU5sB,KAAKqpB,EAAMR,KAAKW,eAAeztB,OAAOgvB,EAAQA,EAAOT,WACvE,MACJ,KAAK,EACD9qB,EAAQwqB,UAAYe,EAAOjR,SAC3B,MACJ,QACIiR,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAitB,EAAUtB,gBAAkB,SAAyBJ,GAGjD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAmC,EAAUrB,OAAS,SAAgB5rB,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAqB,MAAjBA,EAAQktB,OAAiBltB,EAAQ6qB,eAAe,SAAU,CAC1D,IAAK5e,MAAM8f,QAAQ/rB,EAAQktB,OACvB,MAAO,wBACX,IAAK,IAAIt2B,EAAI,EAAGA,EAAIoJ,EAAQktB,MAAM/zB,SAAUvC,EACxC,IAAK+yB,EAAMkC,SAAS7rB,EAAQktB,MAAMt2B,IAC9B,MAAO,0BACnB,CACA,GAAsB,MAAlBoJ,EAAQmtB,QAAkBntB,EAAQ6qB,eAAe,UAAW,CAC5D,IAAK5e,MAAM8f,QAAQ/rB,EAAQmtB,QACvB,MAAO,yBACX,IAASv2B,EAAI,EAAGA,EAAIoJ,EAAQmtB,OAAOh0B,SAAUvC,EACzC,IAAK+yB,EAAMkC,SAAS7rB,EAAQmtB,OAAOv2B,IAC/B,MAAO,2BACnB,CACA,GAAoB,MAAhBoJ,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC1ClB,EAAMkC,SAAS7rB,EAAQD,MACxB,MAAO,wBACf,GAAsB,MAAlBC,EAAQqtB,QAAkBrtB,EAAQ6qB,eAAe,YAC5ClB,EAAMkC,SAAS7rB,EAAQqtB,QACxB,MAAO,0BACf,GAAsB,MAAlBrtB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,YAC5ClB,EAAMkC,SAAS7rB,EAAQstB,QACxB,MAAO,0BACf,GAAyB,MAArBttB,EAAQotB,WAAqBptB,EAAQ6qB,eAAe,aAAc,CAClE,IAAK5e,MAAM8f,QAAQ/rB,EAAQotB,WACvB,MAAO,4BACX,IAASx2B,EAAI,EAAGA,EAAIoJ,EAAQotB,UAAUj0B,SAAUvC,EAAG,CAC/C,IAAIkD,EAAQ+vB,EAAMR,KAAKW,eAAe4B,OAAO5rB,EAAQotB,UAAUx2B,IAC/D,GAAIkD,EACA,MAAO,aAAeA,CAC9B,CACJ,CACA,OAAyB,MAArBkG,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eAC/ClB,EAAMkC,SAAS7rB,EAAQwqB,WACjB,6BACR,IACX,EAUAyC,EAAUjB,WAAa,SAAoBC,GACvC,GAAIA,aAAkBpC,EAAMR,KAAK4D,UAC7B,OAAOhB,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK4D,UAC7B,GAAIhB,EAAOiB,MAAO,CACd,IAAKjhB,MAAM8f,QAAQE,EAAOiB,OACtB,MAAMrN,UAAU,yCACpB7f,EAAQktB,MAAQ,GAChB,IAAK,IAAIt2B,EAAI,EAAGA,EAAIq1B,EAAOiB,MAAM/zB,SAAUvC,EACvCoJ,EAAQktB,MAAMt2B,GAAK8F,OAAOuvB,EAAOiB,MAAMt2B,GAC/C,CACA,GAAIq1B,EAAOkB,OAAQ,CACf,IAAKlhB,MAAM8f,QAAQE,EAAOkB,QACtB,MAAMtN,UAAU,0CAEpB,IADA7f,EAAQmtB,OAAS,GACRv2B,EAAI,EAAGA,EAAIq1B,EAAOkB,OAAOh0B,SAAUvC,EACxCoJ,EAAQmtB,OAAOv2B,GAAK8F,OAAOuvB,EAAOkB,OAAOv2B,GACjD,CAOA,GANmB,MAAfq1B,EAAOlsB,OACPC,EAAQD,KAAOrD,OAAOuvB,EAAOlsB,OACZ,MAAjBksB,EAAOoB,SACPrtB,EAAQqtB,OAAS3wB,OAAOuvB,EAAOoB,SACd,MAAjBpB,EAAOqB,SACPttB,EAAQstB,OAAS5wB,OAAOuvB,EAAOqB,SAC/BrB,EAAOmB,UAAW,CAClB,IAAKnhB,MAAM8f,QAAQE,EAAOmB,WACtB,MAAMvN,UAAU,6CAEpB,IADA7f,EAAQotB,UAAY,GACXx2B,EAAI,EAAGA,EAAIq1B,EAAOmB,UAAUj0B,SAAUvC,EAAG,CAC9C,GAAmC,iBAAxBq1B,EAAOmB,UAAUx2B,GACxB,MAAMipB,UAAU,8CACpB7f,EAAQotB,UAAUx2B,GAAKizB,EAAMR,KAAKW,eAAegC,WAAWC,EAAOmB,UAAUx2B,GACjF,CACJ,CAGA,OAFwB,MAApBq1B,EAAOzB,YACPxqB,EAAQwqB,UAAY9tB,OAAOuvB,EAAOzB,YAC/BxqB,CACX,EAWAitB,EAAUd,SAAW,SAAkBnsB,EAASosB,GACvCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAYd,IAXIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAOiB,MAAQ,GACfjB,EAAOkB,OAAS,GAChBlB,EAAOmB,UAAY,IAEnBhB,EAAQE,WACRL,EAAOlsB,KAAO,GACdksB,EAAOoB,OAAS,GAChBpB,EAAOzB,UAAY,GACnByB,EAAOqB,OAAS,IAEhBttB,EAAQktB,OAASltB,EAAQktB,MAAM/zB,OAAQ,CACvC8yB,EAAOiB,MAAQ,GACf,IAAK,IAAI32B,EAAI,EAAGA,EAAIyJ,EAAQktB,MAAM/zB,SAAU5C,EACxC01B,EAAOiB,MAAM32B,GAAKyJ,EAAQktB,MAAM32B,EACxC,CACA,GAAIyJ,EAAQmtB,QAAUntB,EAAQmtB,OAAOh0B,OAEjC,IADA8yB,EAAOkB,OAAS,GACP52B,EAAI,EAAGA,EAAIyJ,EAAQmtB,OAAOh0B,SAAU5C,EACzC01B,EAAOkB,OAAO52B,GAAKyJ,EAAQmtB,OAAO52B,GAM1C,GAJoB,MAAhByJ,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC/CoB,EAAOlsB,KAAOC,EAAQD,MACJ,MAAlBC,EAAQqtB,QAAkBrtB,EAAQ6qB,eAAe,YACjDoB,EAAOoB,OAASrtB,EAAQqtB,QACxBrtB,EAAQotB,WAAaptB,EAAQotB,UAAUj0B,OAEvC,IADA8yB,EAAOmB,UAAY,GACV72B,EAAI,EAAGA,EAAIyJ,EAAQotB,UAAUj0B,SAAU5C,EAC5C01B,EAAOmB,UAAU72B,GAAKszB,EAAMR,KAAKW,eAAemC,SAASnsB,EAAQotB,UAAU72B,GAAI61B,GAMvF,OAJyB,MAArBpsB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eACpDoB,EAAOzB,UAAYxqB,EAAQwqB,WACT,MAAlBxqB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,YACjDoB,EAAOqB,OAASttB,EAAQstB,QACrBrB,CACX,EASAgB,EAAU1gB,UAAUsU,OAAS,WACzB,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOG,CACV,CArXgB,GAuXjB5D,EAAKkE,WAAa,WAyBd,SAASA,EAAWtD,GAGhB,GAFAnqB,KAAK0tB,YAAc,GACnB1tB,KAAK2tB,cAAgB,GACjBxD,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAsZA,OA9YA22B,EAAWhhB,UAAUmhB,UAAY/D,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAQ/EyL,EAAWhhB,UAAUihB,YAAc7D,EAAMgB,WAQzC4C,EAAWhhB,UAAUohB,aAAe,GAQpCJ,EAAWhhB,UAAUqhB,gBAAkB,GAQvCL,EAAWhhB,UAAU+gB,OAAS,GAQ9BC,EAAWhhB,UAAUshB,aAAelE,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAQlFyL,EAAWhhB,UAAUie,UAAY,GAQjC+C,EAAWhhB,UAAUuhB,MAAQ,KAQ7BP,EAAWhhB,UAAUkhB,cAAgB9D,EAAMgB,WAU3C4C,EAAWrN,OAAS,SAAgB+J,GAChC,OAAO,IAAIsD,EAAWtD,EAC1B,EAWAsD,EAAW5S,OAAS,SAAgB3a,EAAS4qB,GAiBzC,GAhBKA,IACDA,EAASnB,EAAQvJ,UACI,MAArBlgB,EAAQ0tB,WAAqB1tB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA8B,GAAGE,MAAMhrB,EAAQ0tB,WAC9B,MAAxB1tB,EAAQ2tB,cAAwB3tB,EAAQ6qB,eAAe,iBACvDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQ2tB,cAC7B,MAA3B3tB,EAAQ4tB,iBAA2B5tB,EAAQ6qB,eAAe,oBAC1DD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQ4tB,iBACtC,MAAlB5tB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,WACjDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQstB,QAChC,MAAxBttB,EAAQ6tB,cAAwB7tB,EAAQ6qB,eAAe,iBACvDD,EAAOE,OAA8B,IAAIE,MAAMhrB,EAAQ6tB,cAClC,MAArB7tB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQwqB,WACvC,MAAjBxqB,EAAQ8tB,OAAiB9tB,EAAQ6qB,eAAe,UAChDhB,EAAMR,KAAK+B,WAAWzQ,OAAO3a,EAAQ8tB,MAAOlD,EAAOE,OAA8B,IAAII,QAAQC,SACtE,MAAvBnrB,EAAQwtB,aAAuBxtB,EAAQwtB,YAAYr0B,OACnD,IAAK,IAAIvC,EAAI,EAAGA,EAAIoJ,EAAQwtB,YAAYr0B,SAAUvC,EAC9CizB,EAAMR,KAAK0E,mBAAmBpT,OAAO3a,EAAQwtB,YAAY52B,GAAIg0B,EAAOE,OAA8B,IAAII,QAAQC,SACtH,GAA6B,MAAzBnrB,EAAQytB,eAAyBztB,EAAQytB,cAAct0B,OACvD,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQytB,cAAct0B,SAAUvC,EAChDizB,EAAMR,KAAK2E,uBAAuBrT,OAAO3a,EAAQytB,cAAc72B,GAAIg0B,EAAOE,OAA+B,KAAKI,QAAQC,SAC9H,OAAOP,CACX,EAWA2C,EAAWjC,gBAAkB,SAAyBtrB,EAAS4qB,GAC3D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAoC,EAAWhxB,OAAS,SAAgBgvB,EAAQpyB,GAClCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAKkE,WACrFhC,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQ0tB,UAAYnC,EAAOP,QAC3B,MACJ,KAAK,EACKhrB,EAAQwtB,aAAextB,EAAQwtB,YAAYr0B,SAC7C6G,EAAQwtB,YAAc,IAC1BxtB,EAAQwtB,YAAYhtB,KAAKqpB,EAAMR,KAAK0E,mBAAmBxxB,OAAOgvB,EAAQA,EAAOT,WAC7E,MACJ,KAAK,EACD9qB,EAAQ2tB,aAAepC,EAAOjR,SAC9B,MACJ,KAAK,EACDta,EAAQ4tB,gBAAkBrC,EAAOjR,SACjC,MACJ,KAAK,EACDta,EAAQstB,OAAS/B,EAAOjR,SACxB,MACJ,KAAK,EACDta,EAAQ6tB,aAAetC,EAAOP,QAC9B,MACJ,KAAK,EACDhrB,EAAQwqB,UAAYe,EAAOjR,SAC3B,MACJ,KAAK,EACDta,EAAQ8tB,MAAQjE,EAAMR,KAAK+B,WAAW7uB,OAAOgvB,EAAQA,EAAOT,UAC5D,MACJ,KAAK,GACK9qB,EAAQytB,eAAiBztB,EAAQytB,cAAct0B,SACjD6G,EAAQytB,cAAgB,IAC5BztB,EAAQytB,cAAcjtB,KAAKqpB,EAAMR,KAAK2E,uBAAuBzxB,OAAOgvB,EAAQA,EAAOT,WACnF,MACJ,QACIS,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAutB,EAAW5B,gBAAkB,SAAyBJ,GAGlD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAyC,EAAW3B,OAAS,SAAgB5rB,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAyB,MAArBA,EAAQ0tB,WAAqB1tB,EAAQ6qB,eAAe,gBAC/ClB,EAAMmC,UAAU9rB,EAAQ0tB,YAAgB1tB,EAAQ0tB,WAAa/D,EAAMmC,UAAU9rB,EAAQ0tB,UAAUxM,MAAQyI,EAAMmC,UAAU9rB,EAAQ0tB,UAAUvM,OAC1I,MAAO,mCACf,GAA2B,MAAvBnhB,EAAQwtB,aAAuBxtB,EAAQ6qB,eAAe,eAAgB,CACtE,IAAK5e,MAAM8f,QAAQ/rB,EAAQwtB,aACvB,MAAO,8BACX,IAAK,IAAI52B,EAAI,EAAGA,EAAIoJ,EAAQwtB,YAAYr0B,SAAUvC,EAE9C,GADIkD,EAAQ+vB,EAAMR,KAAK0E,mBAAmBnC,OAAO5rB,EAAQwtB,YAAY52B,IAEjE,MAAO,eAAiBkD,CAEpC,CACA,GAA4B,MAAxBkG,EAAQ2tB,cAAwB3tB,EAAQ6qB,eAAe,kBAClDlB,EAAMkC,SAAS7rB,EAAQ2tB,cACxB,MAAO,gCACf,GAA+B,MAA3B3tB,EAAQ4tB,iBAA2B5tB,EAAQ6qB,eAAe,qBACrDlB,EAAMkC,SAAS7rB,EAAQ4tB,iBACxB,MAAO,mCACf,GAAsB,MAAlB5tB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,YAC5ClB,EAAMkC,SAAS7rB,EAAQstB,QACxB,MAAO,0BACf,GAA4B,MAAxBttB,EAAQ6tB,cAAwB7tB,EAAQ6qB,eAAe,mBAClDlB,EAAMmC,UAAU9rB,EAAQ6tB,eAAmB7tB,EAAQ6tB,cAAgBlE,EAAMmC,UAAU9rB,EAAQ6tB,aAAa3M,MAAQyI,EAAMmC,UAAU9rB,EAAQ6tB,aAAa1M,OACtJ,MAAO,sCACf,GAAyB,MAArBnhB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eAC/ClB,EAAMkC,SAAS7rB,EAAQwqB,WACxB,MAAO,6BACf,GAAqB,MAAjBxqB,EAAQ8tB,OAAiB9tB,EAAQ6qB,eAAe,WAC5C/wB,EAAQ+vB,EAAMR,KAAK+B,WAAWQ,OAAO5rB,EAAQ8tB,QAE7C,MAAO,SAAWh0B,EAE1B,GAA6B,MAAzBkG,EAAQytB,eAAyBztB,EAAQ6qB,eAAe,iBAAkB,CAC1E,IAAK5e,MAAM8f,QAAQ/rB,EAAQytB,eACvB,MAAO,gCACX,IAAS72B,EAAI,EAAGA,EAAIoJ,EAAQytB,cAAct0B,SAAUvC,EAAG,CACnD,IAAIkD,EACJ,GADIA,EAAQ+vB,EAAMR,KAAK2E,uBAAuBpC,OAAO5rB,EAAQytB,cAAc72B,IAEvE,MAAO,iBAAmBkD,CAClC,CACJ,CACA,OAAO,IACX,EAUAyzB,EAAWvB,WAAa,SAAoBC,GACxC,GAAIA,aAAkBpC,EAAMR,KAAKkE,WAC7B,OAAOtB,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAKkE,WAU7B,GATwB,MAApBtB,EAAOyB,YACH/D,EAAM7I,MACL9gB,EAAQ0tB,UAAY/D,EAAM7I,KAAKuC,UAAU4I,EAAOyB,YAAYtM,UAAW,EACvC,iBAArB6K,EAAOyB,UACnB1tB,EAAQ0tB,UAAYxK,SAAS+I,EAAOyB,UAAW,IACd,iBAArBzB,EAAOyB,UACnB1tB,EAAQ0tB,UAAYzB,EAAOyB,UACM,iBAArBzB,EAAOyB,YACnB1tB,EAAQ0tB,UAAY,IAAI/D,EAAMuC,SAASD,EAAOyB,UAAUxM,MAAQ,EAAG+K,EAAOyB,UAAUvM,OAAS,GAAG0C,aACpGoI,EAAOuB,YAAa,CACpB,IAAKvhB,MAAM8f,QAAQE,EAAOuB,aACtB,MAAM3N,UAAU,gDACpB7f,EAAQwtB,YAAc,GACtB,IAAK,IAAI52B,EAAI,EAAGA,EAAIq1B,EAAOuB,YAAYr0B,SAAUvC,EAAG,CAChD,GAAqC,iBAA1Bq1B,EAAOuB,YAAY52B,GAC1B,MAAMipB,UAAU,iDACpB7f,EAAQwtB,YAAY52B,GAAKizB,EAAMR,KAAK0E,mBAAmB/B,WAAWC,EAAOuB,YAAY52B,GACzF,CACJ,CAkBA,GAjB2B,MAAvBq1B,EAAO0B,eACP3tB,EAAQ2tB,aAAejxB,OAAOuvB,EAAO0B,eACX,MAA1B1B,EAAO2B,kBACP5tB,EAAQ4tB,gBAAkBlxB,OAAOuvB,EAAO2B,kBACvB,MAAjB3B,EAAOqB,SACPttB,EAAQstB,OAAS5wB,OAAOuvB,EAAOqB,SACR,MAAvBrB,EAAO4B,eACHlE,EAAM7I,MACL9gB,EAAQ6tB,aAAelE,EAAM7I,KAAKuC,UAAU4I,EAAO4B,eAAezM,UAAW,EAC1C,iBAAxB6K,EAAO4B,aACnB7tB,EAAQ6tB,aAAe3K,SAAS+I,EAAO4B,aAAc,IACjB,iBAAxB5B,EAAO4B,aACnB7tB,EAAQ6tB,aAAe5B,EAAO4B,aACM,iBAAxB5B,EAAO4B,eACnB7tB,EAAQ6tB,aAAe,IAAIlE,EAAMuC,SAASD,EAAO4B,aAAa3M,MAAQ,EAAG+K,EAAO4B,aAAa1M,OAAS,GAAG0C,aACzF,MAApBoI,EAAOzB,YACPxqB,EAAQwqB,UAAY9tB,OAAOuvB,EAAOzB,YAClB,MAAhByB,EAAO6B,MAAe,CACtB,GAA4B,iBAAjB7B,EAAO6B,MACd,MAAMjO,UAAU,2CACpB7f,EAAQ8tB,MAAQjE,EAAMR,KAAK+B,WAAWY,WAAWC,EAAO6B,MAC5D,CACA,GAAI7B,EAAOwB,cAAe,CACtB,IAAKxhB,MAAM8f,QAAQE,EAAOwB,eACtB,MAAM5N,UAAU,kDAEpB,IADA7f,EAAQytB,cAAgB,GACf72B,EAAI,EAAGA,EAAIq1B,EAAOwB,cAAct0B,SAAUvC,EAAG,CAClD,GAAuC,iBAA5Bq1B,EAAOwB,cAAc72B,GAC5B,MAAMipB,UAAU,mDACpB7f,EAAQytB,cAAc72B,GAAKizB,EAAMR,KAAK2E,uBAAuBhC,WAAWC,EAAOwB,cAAc72B,GACjG,CACJ,CACA,OAAOoJ,CACX,EAWAutB,EAAWpB,SAAW,SAAkBnsB,EAASosB,GACxCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAKd,IAJIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAOuB,YAAc,GACrBvB,EAAOwB,cAAgB,IAEvBrB,EAAQE,SAAU,CAClB,GAAI3C,EAAM7I,KAAM,CACZ,IAAIyL,EAAO,IAAI5C,EAAM7I,KAAK,EAAG,GAAG,GAChCmL,EAAOyB,UAAYtB,EAAQI,QAAU9vB,OAAS6vB,EAAK/hB,WAAa4hB,EAAQI,QAAU7jB,OAAS4jB,EAAK1I,WAAa0I,CACjH,MACIN,EAAOyB,UAAYtB,EAAQI,QAAU9vB,OAAS,IAAM,EACxDuvB,EAAO0B,aAAe,GACtB1B,EAAO2B,gBAAkB,GACzB3B,EAAOqB,OAAS,GACZ3D,EAAM7I,MACFyL,EAAO,IAAI5C,EAAM7I,KAAK,EAAG,GAAG,GAChCmL,EAAO4B,aAAezB,EAAQI,QAAU9vB,OAAS6vB,EAAK/hB,WAAa4hB,EAAQI,QAAU7jB,OAAS4jB,EAAK1I,WAAa0I,GAEhHN,EAAO4B,aAAezB,EAAQI,QAAU9vB,OAAS,IAAM,EAC3DuvB,EAAOzB,UAAY,GACnByB,EAAO6B,MAAQ,IACnB,CAqBA,GApByB,MAArB9tB,EAAQ0tB,WAAqB1tB,EAAQ6qB,eAAe,eACnB,iBAAtB7qB,EAAQ0tB,UACfzB,EAAOyB,UAAYtB,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQ0tB,WAAa1tB,EAAQ0tB,UAElFzB,EAAOyB,UAAYtB,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQ0tB,WAAatB,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQ0tB,UAAUxM,MAAQ,EAAGlhB,EAAQ0tB,UAAUvM,OAAS,GAAG0C,WAAa7jB,EAAQ0tB,WAChN,MAAxB1tB,EAAQ2tB,cAAwB3tB,EAAQ6qB,eAAe,kBACvDoB,EAAO0B,aAAe3tB,EAAQ2tB,cACH,MAA3B3tB,EAAQ4tB,iBAA2B5tB,EAAQ6qB,eAAe,qBAC1DoB,EAAO2B,gBAAkB5tB,EAAQ4tB,iBACf,MAAlB5tB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,YACjDoB,EAAOqB,OAASttB,EAAQstB,QACA,MAAxBttB,EAAQ6tB,cAAwB7tB,EAAQ6qB,eAAe,kBACnB,iBAAzB7qB,EAAQ6tB,aACf5B,EAAO4B,aAAezB,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQ6tB,cAAgB7tB,EAAQ6tB,aAExF5B,EAAO4B,aAAezB,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQ6tB,cAAgBzB,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQ6tB,aAAa3M,MAAQ,EAAGlhB,EAAQ6tB,aAAa1M,OAAS,GAAG0C,WAAa7jB,EAAQ6tB,cAC/N,MAArB7tB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eACpDoB,EAAOzB,UAAYxqB,EAAQwqB,WACV,MAAjBxqB,EAAQ8tB,OAAiB9tB,EAAQ6qB,eAAe,WAChDoB,EAAO6B,MAAQjE,EAAMR,KAAK+B,WAAWe,SAASnsB,EAAQ8tB,MAAO1B,IAC7DpsB,EAAQwtB,aAAextB,EAAQwtB,YAAYr0B,OAAQ,CACnD8yB,EAAOuB,YAAc,GACrB,IAAK,IAAIj3B,EAAI,EAAGA,EAAIyJ,EAAQwtB,YAAYr0B,SAAU5C,EAC9C01B,EAAOuB,YAAYj3B,GAAKszB,EAAMR,KAAK0E,mBAAmB5B,SAASnsB,EAAQwtB,YAAYj3B,GAAI61B,EAC/F,CACA,GAAIpsB,EAAQytB,eAAiBztB,EAAQytB,cAAct0B,OAE/C,IADA8yB,EAAOwB,cAAgB,GACdl3B,EAAI,EAAGA,EAAIyJ,EAAQytB,cAAct0B,SAAU5C,EAChD01B,EAAOwB,cAAcl3B,GAAKszB,EAAMR,KAAK2E,uBAAuB7B,SAASnsB,EAAQytB,cAAcl3B,GAAI61B,GAEvG,OAAOH,CACX,EASAsB,EAAWhhB,UAAUsU,OAAS,WAC1B,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOS,CACV,CAvbiB,GAyblBlE,EAAK2E,uBAAyB,WAkB1B,SAASA,EAAuB/D,GAC5B,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAwLA,OAhLAo3B,EAAuBzhB,UAAU0hB,IAAM,GAQvCD,EAAuBzhB,UAAUuT,MAAQ,GAUzCkO,EAAuB9N,OAAS,SAAgB+J,GAC5C,OAAO,IAAI+D,EAAuB/D,EACtC,EAWA+D,EAAuBrT,OAAS,SAAgB3a,EAAS4qB,GAOrD,OANKA,IACDA,EAASnB,EAAQvJ,UACF,MAAflgB,EAAQiuB,KAAejuB,EAAQ6qB,eAAe,QAC9CD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQiuB,KACvC,MAAjBjuB,EAAQ8f,OAAiB9f,EAAQ6qB,eAAe,UAChDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQ8f,OACrD8K,CACX,EAWAoD,EAAuB1C,gBAAkB,SAAyBtrB,EAAS4qB,GACvE,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaA6C,EAAuBzxB,OAAS,SAAgBgvB,EAAQpyB,GAC9CoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK2E,uBACrFzC,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQiuB,IAAM1C,EAAOjR,SACrB,MACJ,KAAK,EACDta,EAAQ8f,MAAQyL,EAAOjR,SACvB,MACJ,QACIiR,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAguB,EAAuBrC,gBAAkB,SAAyBJ,GAG9D,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAkD,EAAuBpC,OAAS,SAAgB5rB,GAC5C,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACQ,MAAfA,EAAQiuB,KAAejuB,EAAQ6qB,eAAe,SACzClB,EAAMkC,SAAS7rB,EAAQiuB,KACjB,uBACM,MAAjBjuB,EAAQ8f,OAAiB9f,EAAQ6qB,eAAe,WAC3ClB,EAAMkC,SAAS7rB,EAAQ8f,OACjB,yBACR,IACX,EAUAkO,EAAuBhC,WAAa,SAAoBC,GACpD,GAAIA,aAAkBpC,EAAMR,KAAK2E,uBAC7B,OAAO/B,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK2E,uBAK7B,OAJkB,MAAd/B,EAAOgC,MACPjuB,EAAQiuB,IAAMvxB,OAAOuvB,EAAOgC,MACZ,MAAhBhC,EAAOnM,QACP9f,EAAQ8f,MAAQpjB,OAAOuvB,EAAOnM,QAC3B9f,CACX,EAWAguB,EAAuB7B,SAAW,SAAkBnsB,EAASosB,GACpDA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EASd,OARIG,EAAQE,WACRL,EAAOgC,IAAM,GACbhC,EAAOnM,MAAQ,IAEA,MAAf9f,EAAQiuB,KAAejuB,EAAQ6qB,eAAe,SAC9CoB,EAAOgC,IAAMjuB,EAAQiuB,KACJ,MAAjBjuB,EAAQ8f,OAAiB9f,EAAQ6qB,eAAe,WAChDoB,EAAOnM,MAAQ9f,EAAQ8f,OACpBmM,CACX,EASA+B,EAAuBzhB,UAAUsU,OAAS,WACtC,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOkB,CACV,CAhN6B,GAkN9B3E,EAAK6E,iBAAmB,WAkBpB,SAASA,EAAiBjE,GAEtB,GADAnqB,KAAKquB,0BAA4B,GAC7BlE,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CA4MA,OApMAs3B,EAAiB3hB,UAAU6hB,WAAa,GAQxCF,EAAiB3hB,UAAU4hB,0BAA4BxE,EAAMgB,WAU7DuD,EAAiBhO,OAAS,SAAgB+J,GACtC,OAAO,IAAIiE,EAAiBjE,EAChC,EAWAiE,EAAiBvT,OAAS,SAAgB3a,EAAS4qB,GAK/C,GAJKA,IACDA,EAASnB,EAAQvJ,UACK,MAAtBlgB,EAAQouB,YAAsBpuB,EAAQ6qB,eAAe,eACrDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQouB,YACnB,MAArCpuB,EAAQmuB,2BAAqCnuB,EAAQmuB,0BAA0Bh1B,OAC/E,IAAK,IAAIvC,EAAI,EAAGA,EAAIoJ,EAAQmuB,0BAA0Bh1B,SAAUvC,EAC5DizB,EAAMR,KAAK2E,uBAAuBrT,OAAO3a,EAAQmuB,0BAA0Bv3B,GAAIg0B,EAAOE,OAA8B,IAAII,QAAQC,SACxI,OAAOP,CACX,EAWAsD,EAAiB5C,gBAAkB,SAAyBtrB,EAAS4qB,GACjE,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaA+C,EAAiB3xB,OAAS,SAAgBgvB,EAAQpyB,GACxCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK6E,iBACrF3C,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQouB,WAAa7C,EAAOjR,SAC5B,MACJ,KAAK,EACKta,EAAQmuB,2BAA6BnuB,EAAQmuB,0BAA0Bh1B,SACzE6G,EAAQmuB,0BAA4B,IACxCnuB,EAAQmuB,0BAA0B3tB,KAAKqpB,EAAMR,KAAK2E,uBAAuBzxB,OAAOgvB,EAAQA,EAAOT,WAC/F,MACJ,QACIS,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAkuB,EAAiBvC,gBAAkB,SAAyBJ,GAGxD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAoD,EAAiBtC,OAAS,SAAgB5rB,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAA0B,MAAtBA,EAAQouB,YAAsBpuB,EAAQ6qB,eAAe,gBAChDlB,EAAMkC,SAAS7rB,EAAQouB,YACxB,MAAO,8BACf,GAAyC,MAArCpuB,EAAQmuB,2BAAqCnuB,EAAQ6qB,eAAe,6BAA8B,CAClG,IAAK5e,MAAM8f,QAAQ/rB,EAAQmuB,2BACvB,MAAO,4CACX,IAAK,IAAIv3B,EAAI,EAAGA,EAAIoJ,EAAQmuB,0BAA0Bh1B,SAAUvC,EAAG,CAC/D,IAAIkD,EAAQ+vB,EAAMR,KAAK2E,uBAAuBpC,OAAO5rB,EAAQmuB,0BAA0Bv3B,IACvF,GAAIkD,EACA,MAAO,6BAA+BA,CAC9C,CACJ,CACA,OAAO,IACX,EAUAo0B,EAAiBlC,WAAa,SAAoBC,GAC9C,GAAIA,aAAkBpC,EAAMR,KAAK6E,iBAC7B,OAAOjC,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK6E,iBAG7B,GAFyB,MAArBjC,EAAOmC,aACPpuB,EAAQouB,WAAa1xB,OAAOuvB,EAAOmC,aACnCnC,EAAOkC,0BAA2B,CAClC,IAAKliB,MAAM8f,QAAQE,EAAOkC,2BACtB,MAAMtO,UAAU,oEACpB7f,EAAQmuB,0BAA4B,GACpC,IAAK,IAAIv3B,EAAI,EAAGA,EAAIq1B,EAAOkC,0BAA0Bh1B,SAAUvC,EAAG,CAC9D,GAAmD,iBAAxCq1B,EAAOkC,0BAA0Bv3B,GACxC,MAAMipB,UAAU,qEACpB7f,EAAQmuB,0BAA0Bv3B,GAAKizB,EAAMR,KAAK2E,uBAAuBhC,WAAWC,EAAOkC,0BAA0Bv3B,GACzH,CACJ,CACA,OAAOoJ,CACX,EAWAkuB,EAAiB/B,SAAW,SAAkBnsB,EAASosB,GAC9CA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAOd,IANIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAOkC,0BAA4B,IACnC/B,EAAQE,WACRL,EAAOmC,WAAa,IACE,MAAtBpuB,EAAQouB,YAAsBpuB,EAAQ6qB,eAAe,gBACrDoB,EAAOmC,WAAapuB,EAAQouB,YAC5BpuB,EAAQmuB,2BAA6BnuB,EAAQmuB,0BAA0Bh1B,OAAQ,CAC/E8yB,EAAOkC,0BAA4B,GACnC,IAAK,IAAI53B,EAAI,EAAGA,EAAIyJ,EAAQmuB,0BAA0Bh1B,SAAU5C,EAC5D01B,EAAOkC,0BAA0B53B,GAAKszB,EAAMR,KAAK2E,uBAAuB7B,SAASnsB,EAAQmuB,0BAA0B53B,GAAI61B,EAC/H,CACA,OAAOH,CACX,EASAiC,EAAiB3hB,UAAUsU,OAAS,WAChC,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOoB,CACV,CArOuB,GAuOxB7E,EAAK+B,WAAa,WAwBd,SAASA,EAAWnB,GAOhB,GANAnqB,KAAKvH,KAAO,GACZuH,KAAKuuB,YAAc,GACnBvuB,KAAKotB,MAAQ,GACbptB,KAAKqtB,OAAS,GACdrtB,KAAKwuB,UAAY,GACjBxuB,KAAKyuB,uBAAyB,GAC1BtE,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAgbA,OAxaAw0B,EAAW7e,UAAUhU,KAAOoxB,EAAMgB,WAQlCS,EAAW7e,UAAUxM,KAAO,GAQ5BqrB,EAAW7e,UAAU8hB,YAAc1E,EAAMgB,WAQzCS,EAAW7e,UAAUie,UAAY,GAQjCY,EAAW7e,UAAU2gB,MAAQvD,EAAMgB,WAQnCS,EAAW7e,UAAU4gB,OAASxD,EAAMgB,WAQpCS,EAAW7e,UAAU+hB,UAAY3E,EAAMgB,WAQvCS,EAAW7e,UAAUgiB,uBAAyB5E,EAAMgB,WAUpDS,EAAWlL,OAAS,SAAgB+J,GAChC,OAAO,IAAImB,EAAWnB,EAC1B,EAWAmB,EAAWzQ,OAAS,SAAgB3a,EAAS4qB,GAGzC,GAFKA,IACDA,EAASnB,EAAQvJ,UACD,MAAhBlgB,EAAQzH,MAAgByH,EAAQzH,KAAKY,OACrC,IAAK,IAAIvC,EAAI,EAAGA,EAAIoJ,EAAQzH,KAAKY,SAAUvC,EACvCizB,EAAMR,KAAK4D,UAAUtS,OAAO3a,EAAQzH,KAAK3B,GAAIg0B,EAAOE,OAA8B,IAAII,QAAQC,SAGtG,GAFoB,MAAhBnrB,EAAQD,MAAgBC,EAAQ6qB,eAAe,SAC/CD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQD,MACjC,MAAvBC,EAAQquB,aAAuBruB,EAAQquB,YAAYl1B,OACnD,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQquB,YAAYl1B,SAAUvC,EAC9CizB,EAAMR,KAAK4B,YAAYtQ,OAAO3a,EAAQquB,YAAYz3B,GAAIg0B,EAAOE,OAA8B,IAAII,QAAQC,SAG/G,GAFyB,MAArBnrB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA+B,IAAIxQ,OAAOta,EAAQwqB,WACxC,MAAjBxqB,EAAQktB,OAAiBltB,EAAQktB,MAAM/zB,OACvC,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQktB,MAAM/zB,SAAUvC,EACxCizB,EAAMR,KAAK0D,eAAepS,OAAO3a,EAAQktB,MAAMt2B,GAAIg0B,EAAOE,OAA+B,IAAII,QAAQC,SAC7G,GAAsB,MAAlBnrB,EAAQmtB,QAAkBntB,EAAQmtB,OAAOh0B,OACzC,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQmtB,OAAOh0B,SAAUvC,EACzCizB,EAAMR,KAAK0D,eAAepS,OAAO3a,EAAQmtB,OAAOv2B,GAAIg0B,EAAOE,OAA+B,IAAII,QAAQC,SAC9G,GAAyB,MAArBnrB,EAAQsuB,WAAqBtuB,EAAQsuB,UAAUn1B,OAC/C,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQsuB,UAAUn1B,SAAUvC,EAC5CizB,EAAMR,KAAK0D,eAAepS,OAAO3a,EAAQsuB,UAAU13B,GAAIg0B,EAAOE,OAA+B,KAAKI,QAAQC,SAClH,GAAsC,MAAlCnrB,EAAQuuB,wBAAkCvuB,EAAQuuB,uBAAuBp1B,OACzE,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQuuB,uBAAuBp1B,SAAUvC,EACzDizB,EAAMR,KAAK6E,iBAAiBvT,OAAO3a,EAAQuuB,uBAAuB33B,GAAIg0B,EAAOE,OAA+B,KAAKI,QAAQC,SACjI,OAAOP,CACX,EAWAQ,EAAWE,gBAAkB,SAAyBtrB,EAAS4qB,GAC3D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAC,EAAW7uB,OAAS,SAAgBgvB,EAAQpyB,GAClCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK+B,WACrFG,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACKxrB,EAAQzH,MAAQyH,EAAQzH,KAAKY,SAC/B6G,EAAQzH,KAAO,IACnByH,EAAQzH,KAAKiI,KAAKqpB,EAAMR,KAAK4D,UAAU1wB,OAAOgvB,EAAQA,EAAOT,WAC7D,MACJ,KAAK,EACD9qB,EAAQD,KAAOwrB,EAAOjR,SACtB,MACJ,KAAK,EACKta,EAAQquB,aAAeruB,EAAQquB,YAAYl1B,SAC7C6G,EAAQquB,YAAc,IAC1BruB,EAAQquB,YAAY7tB,KAAKqpB,EAAMR,KAAK4B,YAAY1uB,OAAOgvB,EAAQA,EAAOT,WACtE,MACJ,KAAK,GACD9qB,EAAQwqB,UAAYe,EAAOjR,SAC3B,MACJ,KAAK,GACKta,EAAQktB,OAASltB,EAAQktB,MAAM/zB,SACjC6G,EAAQktB,MAAQ,IACpBltB,EAAQktB,MAAM1sB,KAAKqpB,EAAMR,KAAK0D,eAAexwB,OAAOgvB,EAAQA,EAAOT,WACnE,MACJ,KAAK,GACK9qB,EAAQmtB,QAAUntB,EAAQmtB,OAAOh0B,SACnC6G,EAAQmtB,OAAS,IACrBntB,EAAQmtB,OAAO3sB,KAAKqpB,EAAMR,KAAK0D,eAAexwB,OAAOgvB,EAAQA,EAAOT,WACpE,MACJ,KAAK,GACK9qB,EAAQsuB,WAAatuB,EAAQsuB,UAAUn1B,SACzC6G,EAAQsuB,UAAY,IACxBtuB,EAAQsuB,UAAU9tB,KAAKqpB,EAAMR,KAAK0D,eAAexwB,OAAOgvB,EAAQA,EAAOT,WACvE,MACJ,KAAK,GACK9qB,EAAQuuB,wBAA0BvuB,EAAQuuB,uBAAuBp1B,SACnE6G,EAAQuuB,uBAAyB,IACrCvuB,EAAQuuB,uBAAuB/tB,KAAKqpB,EAAMR,KAAK6E,iBAAiB3xB,OAAOgvB,EAAQA,EAAOT,WACtF,MACJ,QACIS,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAorB,EAAWO,gBAAkB,SAAyBJ,GAGlD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAM,EAAWQ,OAAS,SAAgB5rB,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQzH,MAAgByH,EAAQ6qB,eAAe,QAAS,CACxD,IAAK5e,MAAM8f,QAAQ/rB,EAAQzH,MACvB,MAAO,uBACX,IAAK,IAAI3B,EAAI,EAAGA,EAAIoJ,EAAQzH,KAAKY,SAAUvC,EAEvC,GADIkD,EAAQ+vB,EAAMR,KAAK4D,UAAUrB,OAAO5rB,EAAQzH,KAAK3B,IAEjD,MAAO,QAAUkD,CAE7B,CACA,GAAoB,MAAhBkG,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC1ClB,EAAMkC,SAAS7rB,EAAQD,MACxB,MAAO,wBACf,GAA2B,MAAvBC,EAAQquB,aAAuBruB,EAAQ6qB,eAAe,eAAgB,CACtE,IAAK5e,MAAM8f,QAAQ/rB,EAAQquB,aACvB,MAAO,8BACX,IAASz3B,EAAI,EAAGA,EAAIoJ,EAAQquB,YAAYl1B,SAAUvC,EAE9C,GADIkD,EAAQ+vB,EAAMR,KAAK4B,YAAYW,OAAO5rB,EAAQquB,YAAYz3B,IAE1D,MAAO,eAAiBkD,CAEpC,CACA,GAAyB,MAArBkG,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eAC/ClB,EAAMkC,SAAS7rB,EAAQwqB,WACxB,MAAO,6BACf,GAAqB,MAAjBxqB,EAAQktB,OAAiBltB,EAAQ6qB,eAAe,SAAU,CAC1D,IAAK5e,MAAM8f,QAAQ/rB,EAAQktB,OACvB,MAAO,wBACX,IAASt2B,EAAI,EAAGA,EAAIoJ,EAAQktB,MAAM/zB,SAAUvC,EAExC,GADIkD,EAAQ+vB,EAAMR,KAAK0D,eAAenB,OAAO5rB,EAAQktB,MAAMt2B,IAEvD,MAAO,SAAWkD,CAE9B,CACA,GAAsB,MAAlBkG,EAAQmtB,QAAkBntB,EAAQ6qB,eAAe,UAAW,CAC5D,IAAK5e,MAAM8f,QAAQ/rB,EAAQmtB,QACvB,MAAO,yBACX,IAASv2B,EAAI,EAAGA,EAAIoJ,EAAQmtB,OAAOh0B,SAAUvC,EAEzC,GADIkD,EAAQ+vB,EAAMR,KAAK0D,eAAenB,OAAO5rB,EAAQmtB,OAAOv2B,IAExD,MAAO,UAAYkD,CAE/B,CACA,GAAyB,MAArBkG,EAAQsuB,WAAqBtuB,EAAQ6qB,eAAe,aAAc,CAClE,IAAK5e,MAAM8f,QAAQ/rB,EAAQsuB,WACvB,MAAO,4BACX,IAAS13B,EAAI,EAAGA,EAAIoJ,EAAQsuB,UAAUn1B,SAAUvC,EAE5C,GADIkD,EAAQ+vB,EAAMR,KAAK0D,eAAenB,OAAO5rB,EAAQsuB,UAAU13B,IAE3D,MAAO,aAAekD,CAElC,CACA,GAAsC,MAAlCkG,EAAQuuB,wBAAkCvuB,EAAQ6qB,eAAe,0BAA2B,CAC5F,IAAK5e,MAAM8f,QAAQ/rB,EAAQuuB,wBACvB,MAAO,yCACX,IAAS33B,EAAI,EAAGA,EAAIoJ,EAAQuuB,uBAAuBp1B,SAAUvC,EAAG,CAC5D,IAAIkD,EACJ,GADIA,EAAQ+vB,EAAMR,KAAK6E,iBAAiBtC,OAAO5rB,EAAQuuB,uBAAuB33B,IAE1E,MAAO,0BAA4BkD,CAC3C,CACJ,CACA,OAAO,IACX,EAUAsxB,EAAWY,WAAa,SAAoBC,GACxC,GAAIA,aAAkBpC,EAAMR,KAAK+B,WAC7B,OAAOa,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK+B,WAC7B,GAAIa,EAAO1zB,KAAM,CACb,IAAK0T,MAAM8f,QAAQE,EAAO1zB,MACtB,MAAMsnB,UAAU,yCACpB7f,EAAQzH,KAAO,GACf,IAAK,IAAI3B,EAAI,EAAGA,EAAIq1B,EAAO1zB,KAAKY,SAAUvC,EAAG,CACzC,GAA8B,iBAAnBq1B,EAAO1zB,KAAK3B,GACnB,MAAMipB,UAAU,0CACpB7f,EAAQzH,KAAK3B,GAAKizB,EAAMR,KAAK4D,UAAUjB,WAAWC,EAAO1zB,KAAK3B,GAClE,CACJ,CAGA,GAFmB,MAAfq1B,EAAOlsB,OACPC,EAAQD,KAAOrD,OAAOuvB,EAAOlsB,OAC7BksB,EAAOoC,YAAa,CACpB,IAAKpiB,MAAM8f,QAAQE,EAAOoC,aACtB,MAAMxO,UAAU,gDAEpB,IADA7f,EAAQquB,YAAc,GACbz3B,EAAI,EAAGA,EAAIq1B,EAAOoC,YAAYl1B,SAAUvC,EAAG,CAChD,GAAqC,iBAA1Bq1B,EAAOoC,YAAYz3B,GAC1B,MAAMipB,UAAU,iDACpB7f,EAAQquB,YAAYz3B,GAAKizB,EAAMR,KAAK4B,YAAYe,WAAWC,EAAOoC,YAAYz3B,GAClF,CACJ,CAGA,GAFwB,MAApBq1B,EAAOzB,YACPxqB,EAAQwqB,UAAY9tB,OAAOuvB,EAAOzB,YAClCyB,EAAOiB,MAAO,CACd,IAAKjhB,MAAM8f,QAAQE,EAAOiB,OACtB,MAAMrN,UAAU,0CAEpB,IADA7f,EAAQktB,MAAQ,GACPt2B,EAAI,EAAGA,EAAIq1B,EAAOiB,MAAM/zB,SAAUvC,EAAG,CAC1C,GAA+B,iBAApBq1B,EAAOiB,MAAMt2B,GACpB,MAAMipB,UAAU,2CACpB7f,EAAQktB,MAAMt2B,GAAKizB,EAAMR,KAAK0D,eAAef,WAAWC,EAAOiB,MAAMt2B,GACzE,CACJ,CACA,GAAIq1B,EAAOkB,OAAQ,CACf,IAAKlhB,MAAM8f,QAAQE,EAAOkB,QACtB,MAAMtN,UAAU,2CAEpB,IADA7f,EAAQmtB,OAAS,GACRv2B,EAAI,EAAGA,EAAIq1B,EAAOkB,OAAOh0B,SAAUvC,EAAG,CAC3C,GAAgC,iBAArBq1B,EAAOkB,OAAOv2B,GACrB,MAAMipB,UAAU,4CACpB7f,EAAQmtB,OAAOv2B,GAAKizB,EAAMR,KAAK0D,eAAef,WAAWC,EAAOkB,OAAOv2B,GAC3E,CACJ,CACA,GAAIq1B,EAAOqC,UAAW,CAClB,IAAKriB,MAAM8f,QAAQE,EAAOqC,WACtB,MAAMzO,UAAU,8CAEpB,IADA7f,EAAQsuB,UAAY,GACX13B,EAAI,EAAGA,EAAIq1B,EAAOqC,UAAUn1B,SAAUvC,EAAG,CAC9C,GAAmC,iBAAxBq1B,EAAOqC,UAAU13B,GACxB,MAAMipB,UAAU,+CACpB7f,EAAQsuB,UAAU13B,GAAKizB,EAAMR,KAAK0D,eAAef,WAAWC,EAAOqC,UAAU13B,GACjF,CACJ,CACA,GAAIq1B,EAAOsC,uBAAwB,CAC/B,IAAKtiB,MAAM8f,QAAQE,EAAOsC,wBACtB,MAAM1O,UAAU,2DAEpB,IADA7f,EAAQuuB,uBAAyB,GACxB33B,EAAI,EAAGA,EAAIq1B,EAAOsC,uBAAuBp1B,SAAUvC,EAAG,CAC3D,GAAgD,iBAArCq1B,EAAOsC,uBAAuB33B,GACrC,MAAMipB,UAAU,4DACpB7f,EAAQuuB,uBAAuB33B,GAAKizB,EAAMR,KAAK6E,iBAAiBlC,WAAWC,EAAOsC,uBAAuB33B,GAC7G,CACJ,CACA,OAAOoJ,CACX,EAWAorB,EAAWe,SAAW,SAAkBnsB,EAASosB,GACxCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAad,IAZIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAO1zB,KAAO,GACd0zB,EAAOoC,YAAc,GACrBpC,EAAOiB,MAAQ,GACfjB,EAAOkB,OAAS,GAChBlB,EAAOqC,UAAY,GACnBrC,EAAOsC,uBAAyB,IAEhCnC,EAAQE,WACRL,EAAOlsB,KAAO,GACdksB,EAAOzB,UAAY,IAEnBxqB,EAAQzH,MAAQyH,EAAQzH,KAAKY,OAAQ,CACrC8yB,EAAO1zB,KAAO,GACd,IAAK,IAAIhC,EAAI,EAAGA,EAAIyJ,EAAQzH,KAAKY,SAAU5C,EACvC01B,EAAO1zB,KAAKhC,GAAKszB,EAAMR,KAAK4D,UAAUd,SAASnsB,EAAQzH,KAAKhC,GAAI61B,EACxE,CAGA,GAFoB,MAAhBpsB,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC/CoB,EAAOlsB,KAAOC,EAAQD,MACtBC,EAAQquB,aAAeruB,EAAQquB,YAAYl1B,OAE3C,IADA8yB,EAAOoC,YAAc,GACZ93B,EAAI,EAAGA,EAAIyJ,EAAQquB,YAAYl1B,SAAU5C,EAC9C01B,EAAOoC,YAAY93B,GAAKszB,EAAMR,KAAK4B,YAAYkB,SAASnsB,EAAQquB,YAAY93B,GAAI61B,GAIxF,GAFyB,MAArBpsB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eACpDoB,EAAOzB,UAAYxqB,EAAQwqB,WAC3BxqB,EAAQktB,OAASltB,EAAQktB,MAAM/zB,OAE/B,IADA8yB,EAAOiB,MAAQ,GACN32B,EAAI,EAAGA,EAAIyJ,EAAQktB,MAAM/zB,SAAU5C,EACxC01B,EAAOiB,MAAM32B,GAAKszB,EAAMR,KAAK0D,eAAeZ,SAASnsB,EAAQktB,MAAM32B,GAAI61B,GAE/E,GAAIpsB,EAAQmtB,QAAUntB,EAAQmtB,OAAOh0B,OAEjC,IADA8yB,EAAOkB,OAAS,GACP52B,EAAI,EAAGA,EAAIyJ,EAAQmtB,OAAOh0B,SAAU5C,EACzC01B,EAAOkB,OAAO52B,GAAKszB,EAAMR,KAAK0D,eAAeZ,SAASnsB,EAAQmtB,OAAO52B,GAAI61B,GAEjF,GAAIpsB,EAAQsuB,WAAatuB,EAAQsuB,UAAUn1B,OAEvC,IADA8yB,EAAOqC,UAAY,GACV/3B,EAAI,EAAGA,EAAIyJ,EAAQsuB,UAAUn1B,SAAU5C,EAC5C01B,EAAOqC,UAAU/3B,GAAKszB,EAAMR,KAAK0D,eAAeZ,SAASnsB,EAAQsuB,UAAU/3B,GAAI61B,GAEvF,GAAIpsB,EAAQuuB,wBAA0BvuB,EAAQuuB,uBAAuBp1B,OAEjE,IADA8yB,EAAOsC,uBAAyB,GACvBh4B,EAAI,EAAGA,EAAIyJ,EAAQuuB,uBAAuBp1B,SAAU5C,EACzD01B,EAAOsC,uBAAuBh4B,GAAKszB,EAAMR,KAAK6E,iBAAiB/B,SAASnsB,EAAQuuB,uBAAuBh4B,GAAI61B,GAEnH,OAAOH,CACX,EASAb,EAAW7e,UAAUsU,OAAS,WAC1B,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEO1B,CACV,CApdiB,GAsdlB/B,EAAK4B,YAAc,WA8Bf,SAASA,EAAYhB,GASjB,GARAnqB,KAAK0uB,KAAO,GACZ1uB,KAAK2uB,UAAY,GACjB3uB,KAAK4uB,UAAY,GACjB5uB,KAAK6uB,WAAa,GAClB7uB,KAAK8uB,UAAY,GACjB9uB,KAAK+uB,aAAe,GACpB/uB,KAAKgvB,WAAa,GAClBhvB,KAAKivB,WAAa,GACd9E,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAu8BA,OA/7BAq0B,EAAY1e,UAAUiiB,KAAO7E,EAAMgB,WAQnCM,EAAY1e,UAAUyiB,SAAW,EAQjC/D,EAAY1e,UAAU0iB,QAAU,KAQhChE,EAAY1e,UAAUkiB,UAAY9E,EAAMgB,WAQxCM,EAAY1e,UAAUmiB,UAAY/E,EAAMgB,WAQxCM,EAAY1e,UAAUoiB,WAAahF,EAAMgB,WAQzCM,EAAY1e,UAAUqiB,UAAYjF,EAAMgB,WAQxCM,EAAY1e,UAAUxM,KAAO,GAQ7BkrB,EAAY1e,UAAUie,UAAY,GAQlCS,EAAY1e,UAAU2iB,QAAUvF,EAAMe,UAAU,IAQhDO,EAAY1e,UAAUsiB,aAAelF,EAAMgB,WAQ3CM,EAAY1e,UAAU4iB,aAAe,EAQrClE,EAAY1e,UAAUuiB,WAAanF,EAAMgB,WAQzCM,EAAY1e,UAAUwiB,WAAapF,EAAMgB,WAUzCM,EAAY/K,OAAS,SAAgB+J,GACjC,OAAO,IAAIgB,EAAYhB,EAC3B,EAWAgB,EAAYtQ,OAAS,SAAgB3a,EAAS4qB,GAG1C,GAFKA,IACDA,EAASnB,EAAQvJ,UACD,MAAhBlgB,EAAQwuB,MAAgBxuB,EAAQwuB,KAAKr1B,OAAQ,CAC7CyxB,EAAOE,OAA8B,IAAII,OACzC,IAAK,IAAIt0B,EAAI,EAAGA,EAAIoJ,EAAQwuB,KAAKr1B,SAAUvC,EACvCg0B,EAAOI,MAAMhrB,EAAQwuB,KAAK53B,IAC9Bg0B,EAAOO,QACX,CAKA,GAJwB,MAApBnrB,EAAQgvB,UAAoBhvB,EAAQ6qB,eAAe,aACnDD,EAAOE,OAA8B,IAAIO,MAAMrrB,EAAQgvB,UACpC,MAAnBhvB,EAAQivB,SAAmBjvB,EAAQ6qB,eAAe,YAClDhB,EAAMR,KAAK4B,YAAYmE,QAAQzU,OAAO3a,EAAQivB,QAASrE,EAAOE,OAA8B,IAAII,QAAQC,SACnF,MAArBnrB,EAAQyuB,WAAqBzuB,EAAQyuB,UAAUt1B,OAAQ,CAEvD,IADAyxB,EAAOE,OAA8B,IAAII,OAChCt0B,EAAI,EAAGA,EAAIoJ,EAAQyuB,UAAUt1B,SAAUvC,EAC5Cg0B,EAAOG,MAAM/qB,EAAQyuB,UAAU73B,IACnCg0B,EAAOO,QACX,CACA,GAAyB,MAArBnrB,EAAQ0uB,WAAqB1uB,EAAQ0uB,UAAUv1B,OAAQ,CAEvD,IADAyxB,EAAOE,OAA8B,IAAII,OAChCt0B,EAAI,EAAGA,EAAIoJ,EAAQ0uB,UAAUv1B,SAAUvC,EAC5Cg0B,EAAOS,MAAMrrB,EAAQ0uB,UAAU93B,IACnCg0B,EAAOO,QACX,CACA,GAA0B,MAAtBnrB,EAAQ2uB,YAAsB3uB,EAAQ2uB,WAAWx1B,OACjD,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQ2uB,WAAWx1B,SAAUvC,EAC7Cg0B,EAAOE,OAA8B,IAAI7B,MAAMjpB,EAAQ2uB,WAAW/3B,IAC1E,GAAyB,MAArBoJ,EAAQ4uB,WAAqB5uB,EAAQ4uB,UAAUz1B,OAAQ,CAEvD,IADAyxB,EAAOE,OAA8B,IAAII,OAChCt0B,EAAI,EAAGA,EAAIoJ,EAAQ4uB,UAAUz1B,SAAUvC,EAC5Cg0B,EAAOI,MAAMhrB,EAAQ4uB,UAAUh4B,IACnCg0B,EAAOO,QACX,CAKA,GAJoB,MAAhBnrB,EAAQD,MAAgBC,EAAQ6qB,eAAe,SAC/CD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQD,MACrC,MAAnBC,EAAQkvB,SAAmBlvB,EAAQ6qB,eAAe,YAClDD,EAAOE,OAA8B,IAAI7B,MAAMjpB,EAAQkvB,SACjC,MAAtBlvB,EAAQ8uB,YAAsB9uB,EAAQ8uB,WAAW31B,OAAQ,CAEzD,IADAyxB,EAAOE,OAA+B,IAAII,OACjCt0B,EAAI,EAAGA,EAAIoJ,EAAQ8uB,WAAW31B,SAAUvC,EAC7Cg0B,EAAOyE,OAAOrvB,EAAQ8uB,WAAWl4B,IACrCg0B,EAAOO,QACX,CACA,GAA0B,MAAtBnrB,EAAQ+uB,YAAsB/uB,EAAQ+uB,WAAW51B,OAAQ,CAEzD,IADAyxB,EAAOE,OAA+B,IAAII,OACjCt0B,EAAI,EAAGA,EAAIoJ,EAAQ+uB,WAAW51B,SAAUvC,EAC7Cg0B,EAAO0E,OAAOtvB,EAAQ+uB,WAAWn4B,IACrCg0B,EAAOO,QACX,CAGA,GAFyB,MAArBnrB,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,cACpDD,EAAOE,OAA+B,IAAIxQ,OAAOta,EAAQwqB,WACjC,MAAxBxqB,EAAQ6uB,cAAwB7uB,EAAQ6uB,aAAa11B,OACrD,IAASvC,EAAI,EAAGA,EAAIoJ,EAAQ6uB,aAAa11B,SAAUvC,EAC/CizB,EAAMR,KAAK2E,uBAAuBrT,OAAO3a,EAAQ6uB,aAAaj4B,GAAIg0B,EAAOE,OAA+B,KAAKI,QAAQC,SAG7H,OAF4B,MAAxBnrB,EAAQmvB,cAAwBnvB,EAAQ6qB,eAAe,iBACvDD,EAAOE,OAA+B,KAAKO,MAAMrrB,EAAQmvB,cACtDvE,CACX,EAWAK,EAAYK,gBAAkB,SAAyBtrB,EAAS4qB,GAC5D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAF,EAAY1uB,OAAS,SAAgBgvB,EAAQpyB,GACnCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK4B,YACrFM,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EAGD,GAFMxrB,EAAQwuB,MAAQxuB,EAAQwuB,KAAKr1B,SAC/B6G,EAAQwuB,KAAO,IACD,IAAP,EAANhD,GAED,IADA,IAAIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQwuB,KAAKhuB,KAAK+qB,EAAOP,cAE7BhrB,EAAQwuB,KAAKhuB,KAAK+qB,EAAOP,SAC7B,MACJ,KAAK,EACDhrB,EAAQgvB,SAAWzD,EAAOF,QAC1B,MACJ,KAAK,EACDrrB,EAAQivB,QAAUpF,EAAMR,KAAK4B,YAAYmE,QAAQ7yB,OAAOgvB,EAAQA,EAAOT,UACvE,MACJ,KAAK,EAGD,GAFM9qB,EAAQyuB,WAAazuB,EAAQyuB,UAAUt1B,SACzC6G,EAAQyuB,UAAY,IACN,IAAP,EAANjD,GAED,IADIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQyuB,UAAUjuB,KAAK+qB,EAAOR,cAElC/qB,EAAQyuB,UAAUjuB,KAAK+qB,EAAOR,SAClC,MACJ,KAAK,EAGD,GAFM/qB,EAAQ0uB,WAAa1uB,EAAQ0uB,UAAUv1B,SACzC6G,EAAQ0uB,UAAY,IACN,IAAP,EAANlD,GAED,IADIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQ0uB,UAAUluB,KAAK+qB,EAAOF,cAElCrrB,EAAQ0uB,UAAUluB,KAAK+qB,EAAOF,SAClC,MACJ,KAAK,EACKrrB,EAAQ2uB,YAAc3uB,EAAQ2uB,WAAWx1B,SAC3C6G,EAAQ2uB,WAAa,IACzB3uB,EAAQ2uB,WAAWnuB,KAAK+qB,EAAOtC,SAC/B,MACJ,KAAK,EAGD,GAFMjpB,EAAQ4uB,WAAa5uB,EAAQ4uB,UAAUz1B,SACzC6G,EAAQ4uB,UAAY,IACN,IAAP,EAANpD,GAED,IADIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQ4uB,UAAUpuB,KAAK+qB,EAAOP,cAElChrB,EAAQ4uB,UAAUpuB,KAAK+qB,EAAOP,SAClC,MACJ,KAAK,EACDhrB,EAAQD,KAAOwrB,EAAOjR,SACtB,MACJ,KAAK,GACDta,EAAQwqB,UAAYe,EAAOjR,SAC3B,MACJ,KAAK,EACDta,EAAQkvB,QAAU3D,EAAOtC,QACzB,MACJ,KAAK,GACKjpB,EAAQ6uB,cAAgB7uB,EAAQ6uB,aAAa11B,SAC/C6G,EAAQ6uB,aAAe,IAC3B7uB,EAAQ6uB,aAAaruB,KAAKqpB,EAAMR,KAAK2E,uBAAuBzxB,OAAOgvB,EAAQA,EAAOT,WAClF,MACJ,KAAK,GACD9qB,EAAQmvB,aAAe5D,EAAOF,QAC9B,MACJ,KAAK,GAGD,GAFMrrB,EAAQ8uB,YAAc9uB,EAAQ8uB,WAAW31B,SAC3C6G,EAAQ8uB,WAAa,IACP,IAAP,EAANtD,GAED,IADIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQ8uB,WAAWtuB,KAAK+qB,EAAO8D,eAEnCrvB,EAAQ8uB,WAAWtuB,KAAK+qB,EAAO8D,UACnC,MACJ,KAAK,GAGD,GAFMrvB,EAAQ+uB,YAAc/uB,EAAQ+uB,WAAW51B,SAC3C6G,EAAQ+uB,WAAa,IACP,IAAP,EAANvD,GAED,IADIC,EAAOF,EAAOT,SAAWS,EAAOtP,IAC7BsP,EAAOtP,IAAMwP,GAChBzrB,EAAQ+uB,WAAWvuB,KAAK+qB,EAAO+D,eAEnCtvB,EAAQ+uB,WAAWvuB,KAAK+qB,EAAO+D,UACnC,MACJ,QACI/D,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAirB,EAAYU,gBAAkB,SAAyBJ,GAGnD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAG,EAAYW,OAAS,SAAgB5rB,GACjC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQwuB,MAAgBxuB,EAAQ6qB,eAAe,QAAS,CACxD,IAAK5e,MAAM8f,QAAQ/rB,EAAQwuB,MACvB,MAAO,uBACX,IAAK,IAAI53B,EAAI,EAAGA,EAAIoJ,EAAQwuB,KAAKr1B,SAAUvC,EACvC,KAAK+yB,EAAMmC,UAAU9rB,EAAQwuB,KAAK53B,KAASoJ,EAAQwuB,KAAK53B,IAAM+yB,EAAMmC,UAAU9rB,EAAQwuB,KAAK53B,GAAGsqB,MAAQyI,EAAMmC,UAAU9rB,EAAQwuB,KAAK53B,GAAGuqB,OAClI,MAAO,+BACnB,CACA,GAAwB,MAApBnhB,EAAQgvB,UAAoBhvB,EAAQ6qB,eAAe,cAC9ClB,EAAMmC,UAAU9rB,EAAQgvB,UACzB,MAAO,6BACf,GAAuB,MAAnBhvB,EAAQivB,SAAmBjvB,EAAQ6qB,eAAe,aAC9C/wB,EAAQ+vB,EAAMR,KAAK4B,YAAYmE,QAAQxD,OAAO5rB,EAAQivB,UAEtD,MAAO,WAAan1B,EAE5B,GAAyB,MAArBkG,EAAQyuB,WAAqBzuB,EAAQ6qB,eAAe,aAAc,CAClE,IAAK5e,MAAM8f,QAAQ/rB,EAAQyuB,WACvB,MAAO,4BACX,IAAS73B,EAAI,EAAGA,EAAIoJ,EAAQyuB,UAAUt1B,SAAUvC,EAC5C,GAAoC,iBAAzBoJ,EAAQyuB,UAAU73B,GACzB,MAAO,8BACnB,CACA,GAAyB,MAArBoJ,EAAQ0uB,WAAqB1uB,EAAQ6qB,eAAe,aAAc,CAClE,IAAK5e,MAAM8f,QAAQ/rB,EAAQ0uB,WACvB,MAAO,4BACX,IAAS93B,EAAI,EAAGA,EAAIoJ,EAAQ0uB,UAAUv1B,SAAUvC,EAC5C,IAAK+yB,EAAMmC,UAAU9rB,EAAQ0uB,UAAU93B,IACnC,MAAO,+BACnB,CACA,GAA0B,MAAtBoJ,EAAQ2uB,YAAsB3uB,EAAQ6qB,eAAe,cAAe,CACpE,IAAK5e,MAAM8f,QAAQ/rB,EAAQ2uB,YACvB,MAAO,6BACX,IAAS/3B,EAAI,EAAGA,EAAIoJ,EAAQ2uB,WAAWx1B,SAAUvC,EAC7C,KAAMoJ,EAAQ2uB,WAAW/3B,IAA8C,iBAAjCoJ,EAAQ2uB,WAAW/3B,GAAGuC,QAAuBwwB,EAAMkC,SAAS7rB,EAAQ2uB,WAAW/3B,KACjH,MAAO,+BACnB,CACA,GAAyB,MAArBoJ,EAAQ4uB,WAAqB5uB,EAAQ6qB,eAAe,aAAc,CAClE,IAAK5e,MAAM8f,QAAQ/rB,EAAQ4uB,WACvB,MAAO,4BACX,IAASh4B,EAAI,EAAGA,EAAIoJ,EAAQ4uB,UAAUz1B,SAAUvC,EAC5C,KAAK+yB,EAAMmC,UAAU9rB,EAAQ4uB,UAAUh4B,KAASoJ,EAAQ4uB,UAAUh4B,IAAM+yB,EAAMmC,UAAU9rB,EAAQ4uB,UAAUh4B,GAAGsqB,MAAQyI,EAAMmC,UAAU9rB,EAAQ4uB,UAAUh4B,GAAGuqB,OACtJ,MAAO,oCACnB,CACA,GAAoB,MAAhBnhB,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC1ClB,EAAMkC,SAAS7rB,EAAQD,MACxB,MAAO,wBACf,GAAyB,MAArBC,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eAC/ClB,EAAMkC,SAAS7rB,EAAQwqB,WACxB,MAAO,6BACf,GAAuB,MAAnBxqB,EAAQkvB,SAAmBlvB,EAAQ6qB,eAAe,cAC5C7qB,EAAQkvB,SAA6C,iBAA3BlvB,EAAQkvB,QAAQ/1B,QAAuBwwB,EAAMkC,SAAS7rB,EAAQkvB,UAC1F,MAAO,2BACf,GAA4B,MAAxBlvB,EAAQ6uB,cAAwB7uB,EAAQ6qB,eAAe,gBAAiB,CACxE,IAAK5e,MAAM8f,QAAQ/rB,EAAQ6uB,cACvB,MAAO,+BACX,IAASj4B,EAAI,EAAGA,EAAIoJ,EAAQ6uB,aAAa11B,SAAUvC,EAAG,CAClD,IAAIkD,EACJ,GADIA,EAAQ+vB,EAAMR,KAAK2E,uBAAuBpC,OAAO5rB,EAAQ6uB,aAAaj4B,IAEtE,MAAO,gBAAkBkD,CACjC,CACJ,CACA,GAA4B,MAAxBkG,EAAQmvB,cAAwBnvB,EAAQ6qB,eAAe,gBACvD,OAAQ7qB,EAAQmvB,cAChB,QACI,MAAO,oCACX,KAAK,EACL,KAAK,GAGT,GAA0B,MAAtBnvB,EAAQ8uB,YAAsB9uB,EAAQ6qB,eAAe,cAAe,CACpE,IAAK5e,MAAM8f,QAAQ/rB,EAAQ8uB,YACvB,MAAO,6BACX,IAASl4B,EAAI,EAAGA,EAAIoJ,EAAQ8uB,WAAW31B,SAAUvC,EAC7C,GAAqC,iBAA1BoJ,EAAQ8uB,WAAWl4B,GAC1B,MAAO,+BACnB,CACA,GAA0B,MAAtBoJ,EAAQ+uB,YAAsB/uB,EAAQ6qB,eAAe,cAAe,CACpE,IAAK5e,MAAM8f,QAAQ/rB,EAAQ+uB,YACvB,MAAO,6BACX,IAASn4B,EAAI,EAAGA,EAAIoJ,EAAQ+uB,WAAW51B,SAAUvC,EAC7C,KAAK+yB,EAAMmC,UAAU9rB,EAAQ+uB,WAAWn4B,KAASoJ,EAAQ+uB,WAAWn4B,IAAM+yB,EAAMmC,UAAU9rB,EAAQ+uB,WAAWn4B,GAAGsqB,MAAQyI,EAAMmC,UAAU9rB,EAAQ+uB,WAAWn4B,GAAGuqB,OAC1J,MAAO,qCACnB,CACA,OAAO,IACX,EAUA8J,EAAYe,WAAa,SAAoBC,GACzC,GAAIA,aAAkBpC,EAAMR,KAAK4B,YAC7B,OAAOgB,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK4B,YAC7B,GAAIgB,EAAOuC,KAAM,CACb,IAAKviB,MAAM8f,QAAQE,EAAOuC,MACtB,MAAM3O,UAAU,0CACpB7f,EAAQwuB,KAAO,GACf,IAAK,IAAI53B,EAAI,EAAGA,EAAIq1B,EAAOuC,KAAKr1B,SAAUvC,EAClC+yB,EAAM7I,MACL9gB,EAAQwuB,KAAK53B,GAAK+yB,EAAM7I,KAAKuC,UAAU4I,EAAOuC,KAAK53B,KAAKwqB,UAAW,EACrC,iBAAnB6K,EAAOuC,KAAK53B,GACxBoJ,EAAQwuB,KAAK53B,GAAKssB,SAAS+I,EAAOuC,KAAK53B,GAAI,IACZ,iBAAnBq1B,EAAOuC,KAAK53B,GACxBoJ,EAAQwuB,KAAK53B,GAAKq1B,EAAOuC,KAAK53B,GACC,iBAAnBq1B,EAAOuC,KAAK53B,KACxBoJ,EAAQwuB,KAAK53B,GAAK,IAAI+yB,EAAMuC,SAASD,EAAOuC,KAAK53B,GAAGsqB,MAAQ,EAAG+K,EAAOuC,KAAK53B,GAAGuqB,OAAS,GAAG0C,WACtG,CAGA,GAFuB,MAAnBoI,EAAO+C,WACPhvB,EAAQgvB,SAA6B,EAAlB/C,EAAO+C,UACR,MAAlB/C,EAAOgD,QAAiB,CACxB,GAA8B,iBAAnBhD,EAAOgD,QACd,MAAMpP,UAAU,8CACpB7f,EAAQivB,QAAUpF,EAAMR,KAAK4B,YAAYmE,QAAQpD,WAAWC,EAAOgD,QACvE,CACA,GAAIhD,EAAOwC,UAAW,CAClB,IAAKxiB,MAAM8f,QAAQE,EAAOwC,WACtB,MAAM5O,UAAU,+CAEpB,IADA7f,EAAQyuB,UAAY,GACX73B,EAAI,EAAGA,EAAIq1B,EAAOwC,UAAUt1B,SAAUvC,EAC3CoJ,EAAQyuB,UAAU73B,GAAK+R,OAAOsjB,EAAOwC,UAAU73B,GACvD,CACA,GAAIq1B,EAAOyC,UAAW,CAClB,IAAKziB,MAAM8f,QAAQE,EAAOyC,WACtB,MAAM7O,UAAU,+CAEpB,IADA7f,EAAQ0uB,UAAY,GACX93B,EAAI,EAAGA,EAAIq1B,EAAOyC,UAAUv1B,SAAUvC,EAC3CoJ,EAAQ0uB,UAAU93B,GAA2B,EAAtBq1B,EAAOyC,UAAU93B,EAChD,CACA,GAAIq1B,EAAO0C,WAAY,CACnB,IAAK1iB,MAAM8f,QAAQE,EAAO0C,YACtB,MAAM9O,UAAU,gDAEpB,IADA7f,EAAQ2uB,WAAa,GACZ/3B,EAAI,EAAGA,EAAIq1B,EAAO0C,WAAWx1B,SAAUvC,EACR,iBAAzBq1B,EAAO0C,WAAW/3B,GACzB+yB,EAAMtP,OAAO9d,OAAO0vB,EAAO0C,WAAW/3B,GAAIoJ,EAAQ2uB,WAAW/3B,GAAK+yB,EAAMe,UAAUf,EAAMtP,OAAOlhB,OAAO8yB,EAAO0C,WAAW/3B,KAAM,GACzHq1B,EAAO0C,WAAW/3B,GAAGuC,SAC1B6G,EAAQ2uB,WAAW/3B,GAAKq1B,EAAO0C,WAAW/3B,GACtD,CACA,GAAIq1B,EAAO2C,UAAW,CAClB,IAAK3iB,MAAM8f,QAAQE,EAAO2C,WACtB,MAAM/O,UAAU,+CAEpB,IADA7f,EAAQ4uB,UAAY,GACXh4B,EAAI,EAAGA,EAAIq1B,EAAO2C,UAAUz1B,SAAUvC,EACvC+yB,EAAM7I,MACL9gB,EAAQ4uB,UAAUh4B,GAAK+yB,EAAM7I,KAAKuC,UAAU4I,EAAO2C,UAAUh4B,KAAKwqB,UAAW,EAC1C,iBAAxB6K,EAAO2C,UAAUh4B,GAC7BoJ,EAAQ4uB,UAAUh4B,GAAKssB,SAAS+I,EAAO2C,UAAUh4B,GAAI,IACjB,iBAAxBq1B,EAAO2C,UAAUh4B,GAC7BoJ,EAAQ4uB,UAAUh4B,GAAKq1B,EAAO2C,UAAUh4B,GACJ,iBAAxBq1B,EAAO2C,UAAUh4B,KAC7BoJ,EAAQ4uB,UAAUh4B,GAAK,IAAI+yB,EAAMuC,SAASD,EAAO2C,UAAUh4B,GAAGsqB,MAAQ,EAAG+K,EAAO2C,UAAUh4B,GAAGuqB,OAAS,GAAG0C,WACrH,CAUA,GATmB,MAAfoI,EAAOlsB,OACPC,EAAQD,KAAOrD,OAAOuvB,EAAOlsB,OACT,MAApBksB,EAAOzB,YACPxqB,EAAQwqB,UAAY9tB,OAAOuvB,EAAOzB,YAChB,MAAlByB,EAAOiD,UACuB,iBAAnBjD,EAAOiD,QACdvF,EAAMtP,OAAO9d,OAAO0vB,EAAOiD,QAASlvB,EAAQkvB,QAAUvF,EAAMe,UAAUf,EAAMtP,OAAOlhB,OAAO8yB,EAAOiD,UAAW,GACvGjD,EAAOiD,QAAQ/1B,SACpB6G,EAAQkvB,QAAUjD,EAAOiD,UAC7BjD,EAAO4C,aAAc,CACrB,IAAK5iB,MAAM8f,QAAQE,EAAO4C,cACtB,MAAMhP,UAAU,kDAEpB,IADA7f,EAAQ6uB,aAAe,GACdj4B,EAAI,EAAGA,EAAIq1B,EAAO4C,aAAa11B,SAAUvC,EAAG,CACjD,GAAsC,iBAA3Bq1B,EAAO4C,aAAaj4B,GAC3B,MAAMipB,UAAU,mDACpB7f,EAAQ6uB,aAAaj4B,GAAKizB,EAAMR,KAAK2E,uBAAuBhC,WAAWC,EAAO4C,aAAaj4B,GAC/F,CACJ,CACA,OAAQq1B,EAAOkD,cACf,IAAK,UACL,KAAK,EACDnvB,EAAQmvB,aAAe,EACvB,MACJ,IAAK,WACL,KAAK,EACDnvB,EAAQmvB,aAAe,EAG3B,GAAIlD,EAAO6C,WAAY,CACnB,IAAK7iB,MAAM8f,QAAQE,EAAO6C,YACtB,MAAMjP,UAAU,gDAEpB,IADA7f,EAAQ8uB,WAAa,GACZl4B,EAAI,EAAGA,EAAIq1B,EAAO6C,WAAW31B,SAAUvC,EAC5CoJ,EAAQ8uB,WAAWl4B,GAAK+R,OAAOsjB,EAAO6C,WAAWl4B,GACzD,CACA,GAAIq1B,EAAO8C,WAAY,CACnB,IAAK9iB,MAAM8f,QAAQE,EAAO8C,YACtB,MAAMlP,UAAU,gDAEpB,IADA7f,EAAQ+uB,WAAa,GACZn4B,EAAI,EAAGA,EAAIq1B,EAAO8C,WAAW51B,SAAUvC,EACxC+yB,EAAM7I,MACL9gB,EAAQ+uB,WAAWn4B,GAAK+yB,EAAM7I,KAAKuC,UAAU4I,EAAO8C,WAAWn4B,KAAKwqB,UAAW,EAC3C,iBAAzB6K,EAAO8C,WAAWn4B,GAC9BoJ,EAAQ+uB,WAAWn4B,GAAKssB,SAAS+I,EAAO8C,WAAWn4B,GAAI,IAClB,iBAAzBq1B,EAAO8C,WAAWn4B,GAC9BoJ,EAAQ+uB,WAAWn4B,GAAKq1B,EAAO8C,WAAWn4B,GACL,iBAAzBq1B,EAAO8C,WAAWn4B,KAC9BoJ,EAAQ+uB,WAAWn4B,GAAK,IAAI+yB,EAAMuC,SAASD,EAAO8C,WAAWn4B,GAAGsqB,MAAQ,EAAG+K,EAAO8C,WAAWn4B,GAAGuqB,OAAS,GAAG0C,UAAS,GACjI,CACA,OAAO7jB,CACX,EAWAirB,EAAYkB,SAAW,SAAkBnsB,EAASosB,GACzCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAyBd,IAxBIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAOuC,KAAO,GACdvC,EAAOwC,UAAY,GACnBxC,EAAOyC,UAAY,GACnBzC,EAAO0C,WAAa,GACpB1C,EAAO2C,UAAY,GACnB3C,EAAO6C,WAAa,GACpB7C,EAAO8C,WAAa,GACpB9C,EAAO4C,aAAe,IAEtBzC,EAAQE,WACRL,EAAO+C,SAAW,EAClB/C,EAAOgD,QAAU,KACjBhD,EAAOlsB,KAAO,GACVqsB,EAAQnD,QAAUvsB,OAClBuvB,EAAOiD,QAAU,IAEjBjD,EAAOiD,QAAU,GACb9C,EAAQnD,QAAUhd,QAClBggB,EAAOiD,QAAUvF,EAAMe,UAAUuB,EAAOiD,WAEhDjD,EAAOzB,UAAY,GACnByB,EAAOkD,aAAe/C,EAAQK,QAAU/vB,OAAS,UAAY,GAE7DsD,EAAQwuB,MAAQxuB,EAAQwuB,KAAKr1B,OAAQ,CACrC8yB,EAAOuC,KAAO,GACd,IAAK,IAAIj4B,EAAI,EAAGA,EAAIyJ,EAAQwuB,KAAKr1B,SAAU5C,EACR,iBAApByJ,EAAQwuB,KAAKj4B,GACpB01B,EAAOuC,KAAKj4B,GAAK61B,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQwuB,KAAKj4B,IAAMyJ,EAAQwuB,KAAKj4B,GAEnF01B,EAAOuC,KAAKj4B,GAAK61B,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQwuB,KAAKj4B,IAAM61B,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQwuB,KAAKj4B,GAAG2qB,MAAQ,EAAGlhB,EAAQwuB,KAAKj4B,GAAG4qB,OAAS,GAAG0C,WAAa7jB,EAAQwuB,KAAKj4B,EAC7O,CAKA,GAJwB,MAApByJ,EAAQgvB,UAAoBhvB,EAAQ6qB,eAAe,cACnDoB,EAAO+C,SAAWhvB,EAAQgvB,UACP,MAAnBhvB,EAAQivB,SAAmBjvB,EAAQ6qB,eAAe,aAClDoB,EAAOgD,QAAUpF,EAAMR,KAAK4B,YAAYmE,QAAQjD,SAASnsB,EAAQivB,QAAS7C,IAC1EpsB,EAAQyuB,WAAazuB,EAAQyuB,UAAUt1B,OAEvC,IADA8yB,EAAOwC,UAAY,GACVl4B,EAAI,EAAGA,EAAIyJ,EAAQyuB,UAAUt1B,SAAU5C,EAC5C01B,EAAOwC,UAAUl4B,GAAK61B,EAAQM,OAASC,SAAS3sB,EAAQyuB,UAAUl4B,IAAMmG,OAAOsD,EAAQyuB,UAAUl4B,IAAMyJ,EAAQyuB,UAAUl4B,GAEjI,GAAIyJ,EAAQ0uB,WAAa1uB,EAAQ0uB,UAAUv1B,OAEvC,IADA8yB,EAAOyC,UAAY,GACVn4B,EAAI,EAAGA,EAAIyJ,EAAQ0uB,UAAUv1B,SAAU5C,EAC5C01B,EAAOyC,UAAUn4B,GAAKyJ,EAAQ0uB,UAAUn4B,GAEhD,GAAIyJ,EAAQ2uB,YAAc3uB,EAAQ2uB,WAAWx1B,OAEzC,IADA8yB,EAAO0C,WAAa,GACXp4B,EAAI,EAAGA,EAAIyJ,EAAQ2uB,WAAWx1B,SAAU5C,EAC7C01B,EAAO0C,WAAWp4B,GAAK61B,EAAQnD,QAAUvsB,OAASitB,EAAMtP,OAAOM,OAAO3a,EAAQ2uB,WAAWp4B,GAAI,EAAGyJ,EAAQ2uB,WAAWp4B,GAAG4C,QAAUizB,EAAQnD,QAAUhd,MAAQA,MAAMM,UAAUlT,MAAMmT,KAAKxM,EAAQ2uB,WAAWp4B,IAAMyJ,EAAQ2uB,WAAWp4B,GAEzO,GAAIyJ,EAAQ4uB,WAAa5uB,EAAQ4uB,UAAUz1B,OAEvC,IADA8yB,EAAO2C,UAAY,GACVr4B,EAAI,EAAGA,EAAIyJ,EAAQ4uB,UAAUz1B,SAAU5C,EACR,iBAAzByJ,EAAQ4uB,UAAUr4B,GACzB01B,EAAO2C,UAAUr4B,GAAK61B,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQ4uB,UAAUr4B,IAAMyJ,EAAQ4uB,UAAUr4B,GAElG01B,EAAO2C,UAAUr4B,GAAK61B,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQ4uB,UAAUr4B,IAAM61B,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQ4uB,UAAUr4B,GAAG2qB,MAAQ,EAAGlhB,EAAQ4uB,UAAUr4B,GAAG4qB,OAAS,GAAG0C,WAAa7jB,EAAQ4uB,UAAUr4B,GAMtQ,GAJoB,MAAhByJ,EAAQD,MAAgBC,EAAQ6qB,eAAe,UAC/CoB,EAAOlsB,KAAOC,EAAQD,MACH,MAAnBC,EAAQkvB,SAAmBlvB,EAAQ6qB,eAAe,aAClDoB,EAAOiD,QAAU9C,EAAQnD,QAAUvsB,OAASitB,EAAMtP,OAAOM,OAAO3a,EAAQkvB,QAAS,EAAGlvB,EAAQkvB,QAAQ/1B,QAAUizB,EAAQnD,QAAUhd,MAAQA,MAAMM,UAAUlT,MAAMmT,KAAKxM,EAAQkvB,SAAWlvB,EAAQkvB,SAC9LlvB,EAAQ8uB,YAAc9uB,EAAQ8uB,WAAW31B,OAEzC,IADA8yB,EAAO6C,WAAa,GACXv4B,EAAI,EAAGA,EAAIyJ,EAAQ8uB,WAAW31B,SAAU5C,EAC7C01B,EAAO6C,WAAWv4B,GAAK61B,EAAQM,OAASC,SAAS3sB,EAAQ8uB,WAAWv4B,IAAMmG,OAAOsD,EAAQ8uB,WAAWv4B,IAAMyJ,EAAQ8uB,WAAWv4B,GAErI,GAAIyJ,EAAQ+uB,YAAc/uB,EAAQ+uB,WAAW51B,OAEzC,IADA8yB,EAAO8C,WAAa,GACXx4B,EAAI,EAAGA,EAAIyJ,EAAQ+uB,WAAW51B,SAAU5C,EACR,iBAA1ByJ,EAAQ+uB,WAAWx4B,GAC1B01B,EAAO8C,WAAWx4B,GAAK61B,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQ+uB,WAAWx4B,IAAMyJ,EAAQ+uB,WAAWx4B,GAErG01B,EAAO8C,WAAWx4B,GAAK61B,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQ+uB,WAAWx4B,IAAM61B,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQ+uB,WAAWx4B,GAAG2qB,MAAQ,EAAGlhB,EAAQ+uB,WAAWx4B,GAAG4qB,OAAS,GAAG0C,UAAS,GAAQ7jB,EAAQ+uB,WAAWx4B,GAI/Q,GAFyB,MAArByJ,EAAQwqB,WAAqBxqB,EAAQ6qB,eAAe,eACpDoB,EAAOzB,UAAYxqB,EAAQwqB,WAC3BxqB,EAAQ6uB,cAAgB7uB,EAAQ6uB,aAAa11B,OAE7C,IADA8yB,EAAO4C,aAAe,GACbt4B,EAAI,EAAGA,EAAIyJ,EAAQ6uB,aAAa11B,SAAU5C,EAC/C01B,EAAO4C,aAAat4B,GAAKszB,EAAMR,KAAK2E,uBAAuB7B,SAASnsB,EAAQ6uB,aAAat4B,GAAI61B,GAIrG,OAF4B,MAAxBpsB,EAAQmvB,cAAwBnvB,EAAQ6qB,eAAe,kBACvDoB,EAAOkD,aAAe/C,EAAQK,QAAU/vB,OAASmtB,EAAMR,KAAK4B,YAAYsE,aAAavvB,EAAQmvB,cAAgBnvB,EAAQmvB,cAClHlD,CACX,EASAhB,EAAY1e,UAAUsU,OAAS,WAC3B,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAwBA7B,EAAYuE,SAAW,WACnB,IAAIpG,EAAa,CAAC,EAAG3mB,EAAS7K,OAAOsoB,OAAOkJ,GAkB5C,OAjBA3mB,EAAO2mB,EAAW,GAAK,aAAe,EACtC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,QAAU,EACjC3mB,EAAO2mB,EAAW,GAAK,UAAY,EACnC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,SAAW,EAClC3mB,EAAO2mB,EAAW,GAAK,UAAY,EACnC3mB,EAAO2mB,EAAW,GAAK,QAAU,EACjC3mB,EAAO2mB,EAAW,IAAM,WAAa,GACrC3mB,EAAO2mB,EAAW,IAAM,UAAY,GACpC3mB,EAAO2mB,EAAW,IAAM,UAAY,GACpC3mB,EAAO2mB,EAAW,IAAM,UAAY,GACpC3mB,EAAO2mB,EAAW,IAAM,aAAe,GACvC3mB,EAAO2mB,EAAW,IAAM,cAAgB,GACxC3mB,EAAO2mB,EAAW,IAAM,YAAc,GAC/B3mB,CACV,CApBsB,GAsBvBwoB,EAAYmE,QAAU,WAkBlB,SAASA,EAAQnF,GACb,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAoNA,OA5MAw4B,EAAQ7iB,UAAUkjB,MAAQ9F,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAQxEsN,EAAQ7iB,UAAUsO,IAAM8O,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAUtEsN,EAAQlP,OAAS,SAAgB+J,GAC7B,OAAO,IAAImF,EAAQnF,EACvB,EAWAmF,EAAQzU,OAAS,SAAgB3a,EAAS4qB,GAOtC,OANKA,IACDA,EAASnB,EAAQvJ,UACA,MAAjBlgB,EAAQyvB,OAAiBzvB,EAAQ6qB,eAAe,UAChDD,EAAOE,OAA8B,GAAGE,MAAMhrB,EAAQyvB,OACvC,MAAfzvB,EAAQ6a,KAAe7a,EAAQ6qB,eAAe,QAC9CD,EAAOE,OAA8B,IAAIE,MAAMhrB,EAAQ6a,KACpD+P,CACX,EAWAwE,EAAQ9D,gBAAkB,SAAyBtrB,EAAS4qB,GACxD,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAiE,EAAQ7yB,OAAS,SAAgBgvB,EAAQpyB,GAC/BoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK4B,YAAYmE,QACjG7D,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQyvB,MAAQlE,EAAOP,QACvB,MACJ,KAAK,EACDhrB,EAAQ6a,IAAM0Q,EAAOP,QACrB,MACJ,QACIO,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAovB,EAAQzD,gBAAkB,SAAyBJ,GAG/C,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAsE,EAAQxD,OAAS,SAAgB5rB,GAC7B,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACU,MAAjBA,EAAQyvB,OAAiBzvB,EAAQ6qB,eAAe,YAC3ClB,EAAMmC,UAAU9rB,EAAQyvB,QAAYzvB,EAAQyvB,OAAS9F,EAAMmC,UAAU9rB,EAAQyvB,MAAMvO,MAAQyI,EAAMmC,UAAU9rB,EAAQyvB,MAAMtO,OACnH,+BACI,MAAfnhB,EAAQ6a,KAAe7a,EAAQ6qB,eAAe,UACzClB,EAAMmC,UAAU9rB,EAAQ6a,MAAU7a,EAAQ6a,KAAO8O,EAAMmC,UAAU9rB,EAAQ6a,IAAIqG,MAAQyI,EAAMmC,UAAU9rB,EAAQ6a,IAAIsG,OAC3G,6BACR,IACX,EAUAiO,EAAQpD,WAAa,SAAoBC,GACrC,GAAIA,aAAkBpC,EAAMR,KAAK4B,YAAYmE,QACzC,OAAOnD,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK4B,YAAYmE,QAmBzC,OAlBoB,MAAhBnD,EAAOwD,QACH9F,EAAM7I,MACL9gB,EAAQyvB,MAAQ9F,EAAM7I,KAAKuC,UAAU4I,EAAOwD,QAAQrO,UAAW,EACnC,iBAAjB6K,EAAOwD,MACnBzvB,EAAQyvB,MAAQvM,SAAS+I,EAAOwD,MAAO,IACV,iBAAjBxD,EAAOwD,MACnBzvB,EAAQyvB,MAAQxD,EAAOwD,MACM,iBAAjBxD,EAAOwD,QACnBzvB,EAAQyvB,MAAQ,IAAI9F,EAAMuC,SAASD,EAAOwD,MAAMvO,MAAQ,EAAG+K,EAAOwD,MAAMtO,OAAS,GAAG0C,aAC1E,MAAdoI,EAAOpR,MACH8O,EAAM7I,MACL9gB,EAAQ6a,IAAM8O,EAAM7I,KAAKuC,UAAU4I,EAAOpR,MAAMuG,UAAW,EACjC,iBAAf6K,EAAOpR,IACnB7a,EAAQ6a,IAAMqI,SAAS+I,EAAOpR,IAAK,IACR,iBAAfoR,EAAOpR,IACnB7a,EAAQ6a,IAAMoR,EAAOpR,IACM,iBAAfoR,EAAOpR,MACnB7a,EAAQ6a,IAAM,IAAI8O,EAAMuC,SAASD,EAAOpR,IAAIqG,MAAQ,EAAG+K,EAAOpR,IAAIsG,OAAS,GAAG0C,aAC/E7jB,CACX,EAWAovB,EAAQjD,SAAW,SAAkBnsB,EAASosB,GACrCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EACd,GAAIG,EAAQE,SAAU,CAClB,GAAI3C,EAAM7I,KAAM,CACZ,IAAIyL,EAAO,IAAI5C,EAAM7I,KAAK,EAAG,GAAG,GAChCmL,EAAOwD,MAAQrD,EAAQI,QAAU9vB,OAAS6vB,EAAK/hB,WAAa4hB,EAAQI,QAAU7jB,OAAS4jB,EAAK1I,WAAa0I,CAC7G,MACIN,EAAOwD,MAAQrD,EAAQI,QAAU9vB,OAAS,IAAM,EAChDitB,EAAM7I,MACFyL,EAAO,IAAI5C,EAAM7I,KAAK,EAAG,GAAG,GAChCmL,EAAOpR,IAAMuR,EAAQI,QAAU9vB,OAAS6vB,EAAK/hB,WAAa4hB,EAAQI,QAAU7jB,OAAS4jB,EAAK1I,WAAa0I,GAEvGN,EAAOpR,IAAMuR,EAAQI,QAAU9vB,OAAS,IAAM,CACtD,CAWA,OAVqB,MAAjBsD,EAAQyvB,OAAiBzvB,EAAQ6qB,eAAe,WACnB,iBAAlB7qB,EAAQyvB,MACfxD,EAAOwD,MAAQrD,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQyvB,OAASzvB,EAAQyvB,MAE1ExD,EAAOwD,MAAQrD,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQyvB,OAASrD,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQyvB,MAAMvO,MAAQ,EAAGlhB,EAAQyvB,MAAMtO,OAAS,GAAG0C,WAAa7jB,EAAQyvB,OACzM,MAAfzvB,EAAQ6a,KAAe7a,EAAQ6qB,eAAe,SACnB,iBAAhB7qB,EAAQ6a,IACfoR,EAAOpR,IAAMuR,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQ6a,KAAO7a,EAAQ6a,IAEtEoR,EAAOpR,IAAMuR,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQ6a,KAAOuR,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQ6a,IAAIqG,MAAQ,EAAGlhB,EAAQ6a,IAAIsG,OAAS,GAAG0C,WAAa7jB,EAAQ6a,KAC7MoR,CACX,EASAmD,EAAQ7iB,UAAUsU,OAAS,WACvB,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOsC,CACV,CA5OqB,GAqPtBnE,EAAYsE,aAAe,WACvB,IAAInG,EAAa,CAAC,EAAG3mB,EAAS7K,OAAOsoB,OAAOkJ,GAG5C,OAFA3mB,EAAO2mB,EAAW,GAAK,WAAa,EACpC3mB,EAAO2mB,EAAW,GAAK,YAAc,EAC9B3mB,CACV,CAL0B,GAOpBwoB,CACV,CAn/BkB,GAq/BnB5B,EAAKqG,iBAAmB,WAiBpB,SAASA,EAAiBzF,GAEtB,GADAnqB,KAAK6vB,IAAM,GACP1F,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAgcA,OAxbA84B,EAAiBnjB,UAAUojB,IAAMhG,EAAMgB,WAUvC+E,EAAiBxP,OAAS,SAAgB+J,GACtC,OAAO,IAAIyF,EAAiBzF,EAChC,EAWAyF,EAAiB/U,OAAS,SAAgB3a,EAAS4qB,GAG/C,GAFKA,IACDA,EAASnB,EAAQvJ,UACF,MAAflgB,EAAQ2vB,KAAe3vB,EAAQ2vB,IAAIx2B,OACnC,IAAK,IAAIvC,EAAI,EAAGA,EAAIoJ,EAAQ2vB,IAAIx2B,SAAUvC,EACtCizB,EAAMR,KAAKqG,iBAAiBE,UAAUjV,OAAO3a,EAAQ2vB,IAAI/4B,GAAIg0B,EAAOE,OAA8B,IAAII,QAAQC,SACtH,OAAOP,CACX,EAWA8E,EAAiBpE,gBAAkB,SAAyBtrB,EAAS4qB,GACjE,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAuE,EAAiBnzB,OAAS,SAAgBgvB,EAAQpyB,GACxCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAKqG,iBACrFnE,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACTU,IAAQ,GACX,GACKxrB,EAAQ2vB,KAAO3vB,EAAQ2vB,IAAIx2B,SAC7B6G,EAAQ2vB,IAAM,IAClB3vB,EAAQ2vB,IAAInvB,KAAKqpB,EAAMR,KAAKqG,iBAAiBE,UAAUrzB,OAAOgvB,EAAQA,EAAOT,YAG7ES,EAAOG,SAAe,EAANF,EAGxB,CACA,OAAOxrB,CACX,EAYA0vB,EAAiB/D,gBAAkB,SAAyBJ,GAGxD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUA4E,EAAiB9D,OAAS,SAAgB5rB,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAmB,MAAfA,EAAQ2vB,KAAe3vB,EAAQ6qB,eAAe,OAAQ,CACtD,IAAK5e,MAAM8f,QAAQ/rB,EAAQ2vB,KACvB,MAAO,sBACX,IAAK,IAAI/4B,EAAI,EAAGA,EAAIoJ,EAAQ2vB,IAAIx2B,SAAUvC,EAAG,CACzC,IAAIkD,EAAQ+vB,EAAMR,KAAKqG,iBAAiBE,UAAUhE,OAAO5rB,EAAQ2vB,IAAI/4B,IACrE,GAAIkD,EACA,MAAO,OAASA,CACxB,CACJ,CACA,OAAO,IACX,EAUA41B,EAAiB1D,WAAa,SAAoBC,GAC9C,GAAIA,aAAkBpC,EAAMR,KAAKqG,iBAC7B,OAAOzD,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAKqG,iBAC7B,GAAIzD,EAAO0D,IAAK,CACZ,IAAK1jB,MAAM8f,QAAQE,EAAO0D,KACtB,MAAM9P,UAAU,8CACpB7f,EAAQ2vB,IAAM,GACd,IAAK,IAAI/4B,EAAI,EAAGA,EAAIq1B,EAAO0D,IAAIx2B,SAAUvC,EAAG,CACxC,GAA6B,iBAAlBq1B,EAAO0D,IAAI/4B,GAClB,MAAMipB,UAAU,+CACpB7f,EAAQ2vB,IAAI/4B,GAAKizB,EAAMR,KAAKqG,iBAAiBE,UAAU5D,WAAWC,EAAO0D,IAAI/4B,GACjF,CACJ,CACA,OAAOoJ,CACX,EAWA0vB,EAAiBvD,SAAW,SAAkBnsB,EAASosB,GAC9CA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAGd,IAFIG,EAAQC,QAAUD,EAAQE,YAC1BL,EAAO0D,IAAM,IACb3vB,EAAQ2vB,KAAO3vB,EAAQ2vB,IAAIx2B,OAAQ,CACnC8yB,EAAO0D,IAAM,GACb,IAAK,IAAIp5B,EAAI,EAAGA,EAAIyJ,EAAQ2vB,IAAIx2B,SAAU5C,EACtC01B,EAAO0D,IAAIp5B,GAAKszB,EAAMR,KAAKqG,iBAAiBE,UAAUzD,SAASnsB,EAAQ2vB,IAAIp5B,GAAI61B,EACvF,CACA,OAAOH,CACX,EASAyD,EAAiBnjB,UAAUsU,OAAS,WAChC,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEA4C,EAAiBE,UAAY,WAmBzB,SAASA,EAAU3F,GACf,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CA2BA,IAAIi5B,EAoNJ,OAvOAD,EAAUrjB,UAAUujB,SAAWnG,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAQ7E8N,EAAUrjB,UAAUwjB,SAAW,GAQ/BH,EAAUrjB,UAAUyjB,WAAa,GAWjCp4B,OAAO4pB,eAAeoO,EAAUrjB,UAAW,QAAS,CAChD3H,IAAK+kB,EAAMsG,YAAYJ,EAAe,CAAC,WAAY,aACnD3jB,IAAKyd,EAAMuG,YAAYL,KAW3BD,EAAU1P,OAAS,SAAgB+J,GAC/B,OAAO,IAAI2F,EAAU3F,EACzB,EAWA2F,EAAUjV,OAAS,SAAgB3a,EAAS4qB,GASxC,OARKA,IACDA,EAASnB,EAAQvJ,UACG,MAApBlgB,EAAQ8vB,UAAoB9vB,EAAQ6qB,eAAe,aACnDD,EAAOE,OAA8B,GAAGE,MAAMhrB,EAAQ8vB,UAClC,MAApB9vB,EAAQ+vB,UAAoB/vB,EAAQ6qB,eAAe,aACnDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQ+vB,UAClC,MAAtB/vB,EAAQgwB,YAAsBhwB,EAAQ6qB,eAAe,eACrDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQgwB,YACrDpF,CACX,EAWAgF,EAAUtE,gBAAkB,SAAyBtrB,EAAS4qB,GAC1D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAyE,EAAUrzB,OAAS,SAAgBgvB,EAAQpyB,GACjCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAKqG,iBAAiBE,UACtGrE,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQ8vB,SAAWvE,EAAOP,QAC1B,MACJ,KAAK,EACDhrB,EAAQ+vB,SAAWxE,EAAOjR,SAC1B,MACJ,KAAK,EACDta,EAAQgwB,WAAazE,EAAOjR,SAC5B,MACJ,QACIiR,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYA4vB,EAAUjE,gBAAkB,SAAyBJ,GAGjD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUA8E,EAAUhE,OAAS,SAAgB5rB,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,IAAIiqB,EAAa,CAAC,EAClB,GAAwB,MAApBjqB,EAAQ8vB,UAAoB9vB,EAAQ6qB,eAAe,cACnDZ,EAAWnK,MAAQ,IACd6J,EAAMmC,UAAU9rB,EAAQ8vB,WAAe9vB,EAAQ8vB,UAAYnG,EAAMmC,UAAU9rB,EAAQ8vB,SAAS5O,MAAQyI,EAAMmC,UAAU9rB,EAAQ8vB,SAAS3O,QACtI,MAAO,kCAEf,GAAwB,MAApBnhB,EAAQ+vB,UAAoB/vB,EAAQ6qB,eAAe,YAAa,CAChE,GAAyB,IAArBZ,EAAWnK,MACX,MAAO,yBAEX,GADAmK,EAAWnK,MAAQ,GACd6J,EAAMkC,SAAS7rB,EAAQ+vB,UACxB,MAAO,2BACf,CACA,OAA0B,MAAtB/vB,EAAQgwB,YAAsBhwB,EAAQ6qB,eAAe,gBAChDlB,EAAMkC,SAAS7rB,EAAQgwB,YACjB,8BACR,IACX,EAUAJ,EAAU5D,WAAa,SAAoBC,GACvC,GAAIA,aAAkBpC,EAAMR,KAAKqG,iBAAiBE,UAC9C,OAAO3D,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAKqG,iBAAiBE,UAc9C,OAbuB,MAAnB3D,EAAO6D,WACHnG,EAAM7I,MACL9gB,EAAQ8vB,SAAWnG,EAAM7I,KAAKuC,UAAU4I,EAAO6D,WAAW1O,UAAW,EACtC,iBAApB6K,EAAO6D,SACnB9vB,EAAQ8vB,SAAW5M,SAAS+I,EAAO6D,SAAU,IACb,iBAApB7D,EAAO6D,SACnB9vB,EAAQ8vB,SAAW7D,EAAO6D,SACM,iBAApB7D,EAAO6D,WACnB9vB,EAAQ8vB,SAAW,IAAInG,EAAMuC,SAASD,EAAO6D,SAAS5O,MAAQ,EAAG+K,EAAO6D,SAAS3O,OAAS,GAAG0C,aAC9E,MAAnBoI,EAAO8D,WACP/vB,EAAQ+vB,SAAWrzB,OAAOuvB,EAAO8D,WACZ,MAArB9D,EAAO+D,aACPhwB,EAAQgwB,WAAatzB,OAAOuvB,EAAO+D,aAChChwB,CACX,EAWA4vB,EAAUzD,SAAW,SAAkBnsB,EAASosB,GACvCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAkBd,OAjBIG,EAAQE,WACRL,EAAO+D,WAAa,IACA,MAApBhwB,EAAQ8vB,UAAoB9vB,EAAQ6qB,eAAe,cACnB,iBAArB7qB,EAAQ8vB,SACf7D,EAAO6D,SAAW1D,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQ8vB,UAAY9vB,EAAQ8vB,SAEhF7D,EAAO6D,SAAW1D,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQ8vB,UAAY1D,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQ8vB,SAAS5O,MAAQ,EAAGlhB,EAAQ8vB,SAAS3O,OAAS,GAAG0C,WAAa7jB,EAAQ8vB,SAChO1D,EAAQ+D,SACRlE,EAAOnM,MAAQ,aAEC,MAApB9f,EAAQ+vB,UAAoB/vB,EAAQ6qB,eAAe,cACnDoB,EAAO8D,SAAW/vB,EAAQ+vB,SACtB3D,EAAQ+D,SACRlE,EAAOnM,MAAQ,aAEG,MAAtB9f,EAAQgwB,YAAsBhwB,EAAQ6qB,eAAe,gBACrDoB,EAAO+D,WAAahwB,EAAQgwB,YACzB/D,CACX,EASA2D,EAAUrjB,UAAUsU,OAAS,WACzB,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEO8C,CACV,CAxQ4B,GA0QtBF,CACV,CAxduB,GA0dxBrG,EAAK2D,UAAY,WAkBb,SAASA,EAAU/C,GACf,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAmBA,IAAIi5B,EAoZJ,OA/ZA7C,EAAUzgB,UAAU6jB,WAAa,KAQjCpD,EAAUzgB,UAAUyjB,WAAa,GAWjCp4B,OAAO4pB,eAAewL,EAAUzgB,UAAW,QAAS,CAChD3H,IAAK+kB,EAAMsG,YAAYJ,EAAe,CAAC,eACvC3jB,IAAKyd,EAAMuG,YAAYL,KAW3B7C,EAAU9M,OAAS,SAAgB+J,GAC/B,OAAO,IAAI+C,EAAU/C,EACzB,EAWA+C,EAAUrS,OAAS,SAAgB3a,EAAS4qB,GAOxC,OANKA,IACDA,EAASnB,EAAQvJ,UACK,MAAtBlgB,EAAQowB,YAAsBpwB,EAAQ6qB,eAAe,eACrDhB,EAAMR,KAAK2D,UAAUqD,OAAO1V,OAAO3a,EAAQowB,WAAYxF,EAAOE,OAA8B,IAAII,QAAQC,SAClF,MAAtBnrB,EAAQgwB,YAAsBhwB,EAAQ6qB,eAAe,eACrDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQgwB,YACrDpF,CACX,EAWAoC,EAAU1B,gBAAkB,SAAyBtrB,EAAS4qB,GAC1D,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaA6B,EAAUzwB,OAAS,SAAgBgvB,EAAQpyB,GACjCoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK2D,UACrFzB,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQowB,WAAavG,EAAMR,KAAK2D,UAAUqD,OAAO9zB,OAAOgvB,EAAQA,EAAOT,UACvE,MACJ,KAAK,EACD9qB,EAAQgwB,WAAazE,EAAOjR,SAC5B,MACJ,QACIiR,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAgtB,EAAUrB,gBAAkB,SAAyBJ,GAGjD,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAkC,EAAUpB,OAAS,SAAgB5rB,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBAEX,GAA0B,MAAtBA,EAAQowB,YAAsBpwB,EAAQ6qB,eAAe,cAAe,CAGhE,IAAI/wB,EAAQ+vB,EAAMR,KAAK2D,UAAUqD,OAAOzE,OAAO5rB,EAAQowB,YACvD,GAAIt2B,EACA,MAAO,cAAgBA,CAEnC,CACA,OAA0B,MAAtBkG,EAAQgwB,YAAsBhwB,EAAQ6qB,eAAe,gBAChDlB,EAAMkC,SAAS7rB,EAAQgwB,YACjB,8BACR,IACX,EAUAhD,EAAUhB,WAAa,SAAoBC,GACvC,GAAIA,aAAkBpC,EAAMR,KAAK2D,UAC7B,OAAOf,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK2D,UAC7B,GAAyB,MAArBf,EAAOmE,WAAoB,CAC3B,GAAiC,iBAAtBnE,EAAOmE,WACd,MAAMvQ,UAAU,+CACpB7f,EAAQowB,WAAavG,EAAMR,KAAK2D,UAAUqD,OAAOrE,WAAWC,EAAOmE,WACvE,CAGA,OAFyB,MAArBnE,EAAO+D,aACPhwB,EAAQgwB,WAAatzB,OAAOuvB,EAAO+D,aAChChwB,CACX,EAWAgtB,EAAUb,SAAW,SAAkBnsB,EAASosB,GACvCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EAUd,OATIG,EAAQE,WACRL,EAAO+D,WAAa,IACE,MAAtBhwB,EAAQowB,YAAsBpwB,EAAQ6qB,eAAe,gBACrDoB,EAAOmE,WAAavG,EAAMR,KAAK2D,UAAUqD,OAAOlE,SAASnsB,EAAQowB,WAAYhE,GACzEA,EAAQ+D,SACRlE,EAAOnM,MAAQ,eAEG,MAAtB9f,EAAQgwB,YAAsBhwB,EAAQ6qB,eAAe,gBACrDoB,EAAO+D,WAAahwB,EAAQgwB,YACzB/D,CACX,EASAe,EAAUzgB,UAAUsU,OAAS,WACzB,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEAE,EAAUqD,OAAS,WAkBf,SAASA,EAAOpG,GACZ,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CA6LA,OArLAy5B,EAAO9jB,UAAU+jB,SAAW,EAQ5BD,EAAO9jB,UAAUgkB,MAAQ,KAUzBF,EAAOnQ,OAAS,SAAgB+J,GAC5B,OAAO,IAAIoG,EAAOpG,EACtB,EAWAoG,EAAO1V,OAAS,SAAgB3a,EAAS4qB,GAOrC,OANKA,IACDA,EAASnB,EAAQvJ,UACG,MAApBlgB,EAAQswB,UAAoBtwB,EAAQ6qB,eAAe,aACnDD,EAAOE,OAA8B,GAAGO,MAAMrrB,EAAQswB,UACrC,MAAjBtwB,EAAQuwB,OAAiBvwB,EAAQ6qB,eAAe,UAChDhB,EAAMR,KAAKqG,iBAAiB/U,OAAO3a,EAAQuwB,MAAO3F,EAAOE,OAA8B,IAAII,QAAQC,SAChGP,CACX,EAWAyF,EAAO/E,gBAAkB,SAAyBtrB,EAAS4qB,GACvD,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaAkF,EAAO9zB,OAAS,SAAgBgvB,EAAQpyB,GAC9BoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK2D,UAAUqD,OAC/F9E,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQswB,SAAW/E,EAAOF,QAC1B,MACJ,KAAK,EACDrrB,EAAQuwB,MAAQ1G,EAAMR,KAAKqG,iBAAiBnzB,OAAOgvB,EAAQA,EAAOT,UAClE,MACJ,QACIS,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYAqwB,EAAO1E,gBAAkB,SAAyBJ,GAG9C,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAuF,EAAOzE,OAAS,SAAgB5rB,GAC5B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAwB,MAApBA,EAAQswB,UAAoBtwB,EAAQ6qB,eAAe,cAC9ClB,EAAMmC,UAAU9rB,EAAQswB,UACzB,MAAO,6BACf,GAAqB,MAAjBtwB,EAAQuwB,OAAiBvwB,EAAQ6qB,eAAe,SAAU,CAC1D,IAAI/wB,EAAQ+vB,EAAMR,KAAKqG,iBAAiB9D,OAAO5rB,EAAQuwB,OACvD,GAAIz2B,EACA,MAAO,SAAWA,CAC1B,CACA,OAAO,IACX,EAUAu2B,EAAOrE,WAAa,SAAoBC,GACpC,GAAIA,aAAkBpC,EAAMR,KAAK2D,UAAUqD,OACvC,OAAOpE,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK2D,UAAUqD,OAGvC,GAFuB,MAAnBpE,EAAOqE,WACPtwB,EAAQswB,SAA6B,EAAlBrE,EAAOqE,UACV,MAAhBrE,EAAOsE,MAAe,CACtB,GAA4B,iBAAjBtE,EAAOsE,MACd,MAAM1Q,UAAU,iDACpB7f,EAAQuwB,MAAQ1G,EAAMR,KAAKqG,iBAAiB1D,WAAWC,EAAOsE,MAClE,CACA,OAAOvwB,CACX,EAWAqwB,EAAOlE,SAAW,SAAkBnsB,EAASosB,GACpCA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EASd,OARIG,EAAQE,WACRL,EAAOqE,SAAW,EAClBrE,EAAOsE,MAAQ,MAEK,MAApBvwB,EAAQswB,UAAoBtwB,EAAQ6qB,eAAe,cACnDoB,EAAOqE,SAAWtwB,EAAQswB,UACT,MAAjBtwB,EAAQuwB,OAAiBvwB,EAAQ6qB,eAAe,WAChDoB,EAAOsE,MAAQ1G,EAAMR,KAAKqG,iBAAiBvD,SAASnsB,EAAQuwB,MAAOnE,IAChEH,CACX,EASAoE,EAAO9jB,UAAUsU,OAAS,WACtB,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOuD,CACV,CArNkB,GAuNZrD,CACV,CA/bgB,GAicjB3D,EAAK0E,mBAAqB,WAkBtB,SAASA,EAAmB9D,GACxB,GAAIA,EACA,IAAK,IAAInL,EAAOlnB,OAAOknB,KAAKmL,GAAarzB,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,EACpC,MAAvBqzB,EAAWnL,EAAKloB,MAChBkJ,KAAKgf,EAAKloB,IAAMqzB,EAAWnL,EAAKloB,IAChD,CAsMA,OA9LAm3B,EAAmBxhB,UAAU+gB,OAAS,GAQtCS,EAAmBxhB,UAAUikB,QAAU7G,EAAM7I,KAAO6I,EAAM7I,KAAKgB,SAAS,EAAE,GAAE,GAAS,EAUrFiM,EAAmB7N,OAAS,SAAgB+J,GACxC,OAAO,IAAI8D,EAAmB9D,EAClC,EAWA8D,EAAmBpT,OAAS,SAAgB3a,EAAS4qB,GAOjD,OANKA,IACDA,EAASnB,EAAQvJ,UACC,MAAlBlgB,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,WACjDD,EAAOE,OAA8B,IAAIxQ,OAAOta,EAAQstB,QACrC,MAAnBttB,EAAQwwB,SAAmBxwB,EAAQ6qB,eAAe,YAClDD,EAAOE,OAA8B,IAAIE,MAAMhrB,EAAQwwB,SACpD5F,CACX,EAWAmD,EAAmBzC,gBAAkB,SAAyBtrB,EAAS4qB,GACnE,OAAO9qB,KAAK6a,OAAO3a,EAAS4qB,GAAQO,QACxC,EAaA4C,EAAmBxxB,OAAS,SAAgBgvB,EAAQpyB,GAC1CoyB,aAAkBhC,IACpBgC,EAAShC,EAAQrJ,OAAOqL,IAE5B,IADA,IAAI1Q,OAAiBjB,IAAXzgB,EAAuBoyB,EAAOlM,IAAMkM,EAAOtP,IAAM9iB,EAAQ6G,EAAU,IAAI6pB,EAAMR,KAAK0E,mBACrFxC,EAAOtP,IAAMpB,GAAK,CACrB,IAAI2Q,EAAMD,EAAOT,SACjB,OAAQU,IAAQ,GAChB,KAAK,EACDxrB,EAAQstB,OAAS/B,EAAOjR,SACxB,MACJ,KAAK,EACDta,EAAQwwB,QAAUjF,EAAOP,QACzB,MACJ,QACIO,EAAOG,SAAe,EAANF,GAGxB,CACA,OAAOxrB,CACX,EAYA+tB,EAAmBpC,gBAAkB,SAAyBJ,GAG1D,OAFMA,aAAkBhC,IACpBgC,EAAS,IAAIhC,EAAQgC,IAClBzrB,KAAKvD,OAAOgvB,EAAQA,EAAOT,SACtC,EAUAiD,EAAmBnC,OAAS,SAAgB5rB,GACxC,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACW,MAAlBA,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,YAC5ClB,EAAMkC,SAAS7rB,EAAQstB,QACjB,0BACQ,MAAnBttB,EAAQwwB,SAAmBxwB,EAAQ6qB,eAAe,cAC7ClB,EAAMmC,UAAU9rB,EAAQwwB,UAAcxwB,EAAQwwB,SAAW7G,EAAMmC,UAAU9rB,EAAQwwB,QAAQtP,MAAQyI,EAAMmC,UAAU9rB,EAAQwwB,QAAQrP,OAC3H,iCACR,IACX,EAUA4M,EAAmB/B,WAAa,SAAoBC,GAChD,GAAIA,aAAkBpC,EAAMR,KAAK0E,mBAC7B,OAAO9B,EACX,IAAIjsB,EAAU,IAAI6pB,EAAMR,KAAK0E,mBAY7B,OAXqB,MAAjB9B,EAAOqB,SACPttB,EAAQstB,OAAS5wB,OAAOuvB,EAAOqB,SACb,MAAlBrB,EAAOuE,UACH7G,EAAM7I,MACL9gB,EAAQwwB,QAAU7G,EAAM7I,KAAKuC,UAAU4I,EAAOuE,UAAUpP,UAAW,EACrC,iBAAnB6K,EAAOuE,QACnBxwB,EAAQwwB,QAAUtN,SAAS+I,EAAOuE,QAAS,IACZ,iBAAnBvE,EAAOuE,QACnBxwB,EAAQwwB,QAAUvE,EAAOuE,QACM,iBAAnBvE,EAAOuE,UACnBxwB,EAAQwwB,QAAU,IAAI7G,EAAMuC,SAASD,EAAOuE,QAAQtP,MAAQ,EAAG+K,EAAOuE,QAAQrP,OAAS,GAAG0C,aAC3F7jB,CACX,EAWA+tB,EAAmB5B,SAAW,SAAkBnsB,EAASosB,GAChDA,IACDA,EAAU,CAAC,GACf,IAAIH,EAAS,CAAC,EACd,GAAIG,EAAQE,SAER,GADAL,EAAOqB,OAAS,GACZ3D,EAAM7I,KAAM,CACZ,IAAIyL,EAAO,IAAI5C,EAAM7I,KAAK,EAAG,GAAG,GAChCmL,EAAOuE,QAAUpE,EAAQI,QAAU9vB,OAAS6vB,EAAK/hB,WAAa4hB,EAAQI,QAAU7jB,OAAS4jB,EAAK1I,WAAa0I,CAC/G,MACIN,EAAOuE,QAAUpE,EAAQI,QAAU9vB,OAAS,IAAM,EAS1D,OAPsB,MAAlBsD,EAAQstB,QAAkBttB,EAAQ6qB,eAAe,YACjDoB,EAAOqB,OAASttB,EAAQstB,QACL,MAAnBttB,EAAQwwB,SAAmBxwB,EAAQ6qB,eAAe,aACnB,iBAApB7qB,EAAQwwB,QACfvE,EAAOuE,QAAUpE,EAAQI,QAAU9vB,OAASA,OAAOsD,EAAQwwB,SAAWxwB,EAAQwwB,QAE9EvE,EAAOuE,QAAUpE,EAAQI,QAAU9vB,OAASitB,EAAM7I,KAAKvU,UAAU/B,SAASgC,KAAKxM,EAAQwwB,SAAWpE,EAAQI,QAAU7jB,OAAS,IAAIghB,EAAMuC,SAASlsB,EAAQwwB,QAAQtP,MAAQ,EAAGlhB,EAAQwwB,QAAQrP,OAAS,GAAG0C,WAAa7jB,EAAQwwB,SAC7NvE,CACX,EASA8B,EAAmBxhB,UAAUsU,OAAS,WAClC,OAAO/gB,KAAK+sB,YAAYV,SAASrsB,KAAMwpB,EAAUM,KAAKkD,cAC1D,EAEOiB,CACV,CA9NyB,GAgOnB1E,GAGXnX,EAAOP,QAAUkY,C,8BCpxJjB3X,EAAOP,QAAU,EAAjB,K,8BCFA,IAAI8e,EAAW9e,EA2Bf,SAAS+e,IACLD,EAAS7G,KAAK+G,aACdF,EAAS/G,OAAOiH,WAAWF,EAASG,cACpCH,EAASjH,OAAOmH,WAAWF,EAASI,aACxC,CAvBAJ,EAASK,MAAQ,UAGjBL,EAAS/G,OAAe,EAAQ,MAChC+G,EAASG,aAAe,EAAQ,MAChCH,EAASjH,OAAe,EAAQ,MAChCiH,EAASI,aAAe,EAAQ,KAGhCJ,EAAS7G,KAAe,EAAQ,MAChC6G,EAASM,IAAe,EAAQ,MAChCN,EAAS3G,MAAe,EAAQ,MAChC2G,EAASC,UAAeA,EAcxBA,G,8BClCAxe,EAAOP,QAAU6X,EAEjB,IAEIqH,EAFAjH,EAAY,EAAQ,MAIpBsC,EAAYtC,EAAKsC,SACjB9M,EAAYwK,EAAKxK,KAGrB,SAAS4R,EAAgBzF,EAAQ0F,GAC7B,OAAOlO,WAAW,uBAAyBwI,EAAOtP,IAAM,OAASgV,GAAe,GAAK,MAAQ1F,EAAOlM,IACxG,CAQA,SAASmK,EAAOpzB,GAMZ0J,KAAKkc,IAAM5lB,EAMX0J,KAAKmc,IAAM,EAMXnc,KAAKuf,IAAMjpB,EAAO+C,MACtB,CAEA,IA4CQ2mB,EA5CJoR,EAAqC,oBAAfl4B,WACpB,SAA4B5C,GAC1B,GAAIA,aAAkB4C,YAAciT,MAAM8f,QAAQ31B,GAC9C,OAAO,IAAIozB,EAAOpzB,GACtB,MAAMkI,MAAM,iBAChB,EAEE,SAAsBlI,GACpB,GAAI6V,MAAM8f,QAAQ31B,GACd,OAAO,IAAIozB,EAAOpzB,GACtB,MAAMkI,MAAM,iBAChB,EAEA4hB,EAAS,WACT,OAAO0J,EAAKuH,OACN,SAA6B/6B,GAC3B,OAAQozB,EAAOtJ,OAAS,SAAuB9pB,GAC3C,OAAOwzB,EAAKuH,OAAOC,SAASh7B,GACtB,IAAIy6B,EAAaz6B,GAEjB86B,EAAa96B,EACvB,GAAGA,EACP,EAEE86B,CACV,EAuDA,SAASG,IAEL,IAAIC,EAAO,IAAIpF,EAAS,EAAG,GACvBt1B,EAAI,EACR,KAAIkJ,KAAKuf,IAAMvf,KAAKmc,IAAM,GAanB,CACH,KAAOrlB,EAAI,IAAKA,EAAG,CAEf,GAAIkJ,KAAKmc,KAAOnc,KAAKuf,IACjB,MAAM2R,EAAgBlxB,MAG1B,GADAwxB,EAAK9S,IAAM8S,EAAK9S,IAA2B,IAArB1e,KAAKkc,IAAIlc,KAAKmc,OAAmB,EAAJrlB,KAAW,EAC1DkJ,KAAKkc,IAAIlc,KAAKmc,OAAS,IACvB,OAAOqV,CACf,CAGA,OADAA,EAAK9S,IAAM8S,EAAK9S,IAA6B,IAAvB1e,KAAKkc,IAAIlc,KAAKmc,SAAqB,EAAJrlB,KAAW,EACzD06B,CACX,CAzBI,KAAO16B,EAAI,IAAKA,EAGZ,GADA06B,EAAK9S,IAAM8S,EAAK9S,IAA2B,IAArB1e,KAAKkc,IAAIlc,KAAKmc,OAAmB,EAAJrlB,KAAW,EAC1DkJ,KAAKkc,IAAIlc,KAAKmc,OAAS,IACvB,OAAOqV,EAKf,GAFAA,EAAK9S,IAAM8S,EAAK9S,IAA2B,IAArB1e,KAAKkc,IAAIlc,KAAKmc,OAAe,MAAQ,EAC3DqV,EAAK7S,IAAM6S,EAAK7S,IAA2B,IAArB3e,KAAKkc,IAAIlc,KAAKmc,OAAgB,KAAO,EACvDnc,KAAKkc,IAAIlc,KAAKmc,OAAS,IACvB,OAAOqV,EAgBf,GAfI16B,EAAI,EAeJkJ,KAAKuf,IAAMvf,KAAKmc,IAAM,GACtB,KAAOrlB,EAAI,IAAKA,EAGZ,GADA06B,EAAK7S,IAAM6S,EAAK7S,IAA2B,IAArB3e,KAAKkc,IAAIlc,KAAKmc,OAAmB,EAAJrlB,EAAQ,KAAO,EAC9DkJ,KAAKkc,IAAIlc,KAAKmc,OAAS,IACvB,OAAOqV,OAGf,KAAO16B,EAAI,IAAKA,EAAG,CAEf,GAAIkJ,KAAKmc,KAAOnc,KAAKuf,IACjB,MAAM2R,EAAgBlxB,MAG1B,GADAwxB,EAAK7S,IAAM6S,EAAK7S,IAA2B,IAArB3e,KAAKkc,IAAIlc,KAAKmc,OAAmB,EAAJrlB,EAAQ,KAAO,EAC9DkJ,KAAKkc,IAAIlc,KAAKmc,OAAS,IACvB,OAAOqV,CACf,CAGJ,MAAMhzB,MAAM,0BAChB,CAiCA,SAASizB,EAAgBvV,EAAKnB,GAC1B,OAAQmB,EAAInB,EAAM,GACVmB,EAAInB,EAAM,IAAM,EAChBmB,EAAInB,EAAM,IAAM,GAChBmB,EAAInB,EAAM,IAAM,MAAQ,CACpC,CA8BA,SAAS2W,IAGL,GAAI1xB,KAAKmc,IAAM,EAAInc,KAAKuf,IACpB,MAAM2R,EAAgBlxB,KAAM,GAEhC,OAAO,IAAIosB,EAASqF,EAAgBzxB,KAAKkc,IAAKlc,KAAKmc,KAAO,GAAIsV,EAAgBzxB,KAAKkc,IAAKlc,KAAKmc,KAAO,GACxG,CA5KAuN,EAAOtJ,OAASA,IAEhBsJ,EAAOjd,UAAUklB,OAAS7H,EAAK3d,MAAMM,UAAU9P,UAAuCmtB,EAAK3d,MAAMM,UAAUlT,MAO3GmwB,EAAOjd,UAAUue,QACThL,EAAQ,WACL,WACuD,GAA1DA,GAAuC,IAArBhgB,KAAKkc,IAAIlc,KAAKmc,QAAuB,EAAOnc,KAAKkc,IAAIlc,KAAKmc,OAAS,IAAK,OAAO6D,EACvC,GAA1DA,GAASA,GAA8B,IAArBhgB,KAAKkc,IAAIlc,KAAKmc,OAAgB,KAAO,EAAOnc,KAAKkc,IAAIlc,KAAKmc,OAAS,IAAK,OAAO6D,EACvC,GAA1DA,GAASA,GAA8B,IAArBhgB,KAAKkc,IAAIlc,KAAKmc,OAAe,MAAQ,EAAOnc,KAAKkc,IAAIlc,KAAKmc,OAAS,IAAK,OAAO6D,EACvC,GAA1DA,GAASA,GAA8B,IAArBhgB,KAAKkc,IAAIlc,KAAKmc,OAAe,MAAQ,EAAOnc,KAAKkc,IAAIlc,KAAKmc,OAAS,IAAK,OAAO6D,EACvC,GAA1DA,GAASA,GAA+B,GAAtBhgB,KAAKkc,IAAIlc,KAAKmc,OAAe,MAAQ,EAAOnc,KAAKkc,IAAIlc,KAAKmc,OAAS,IAAK,OAAO6D,EAGjG,IAAKhgB,KAAKmc,KAAO,GAAKnc,KAAKuf,IAEvB,MADAvf,KAAKmc,IAAMnc,KAAKuf,IACV2R,EAAgBlxB,KAAM,IAEhC,OAAOggB,CACX,GAOJ0J,EAAOjd,UAAU8e,MAAQ,WACrB,OAAuB,EAAhBvrB,KAAKgrB,QAChB,EAMAtB,EAAOjd,UAAUmlB,OAAS,WACtB,IAAI5R,EAAQhgB,KAAKgrB,SACjB,OAAOhL,IAAU,IAAc,EAARA,GAAa,CACxC,EAoFA0J,EAAOjd,UAAUolB,KAAO,WACpB,OAAyB,IAAlB7xB,KAAKgrB,QAChB,EAaAtB,EAAOjd,UAAUqlB,QAAU,WAGvB,GAAI9xB,KAAKmc,IAAM,EAAInc,KAAKuf,IACpB,MAAM2R,EAAgBlxB,KAAM,GAEhC,OAAOyxB,EAAgBzxB,KAAKkc,IAAKlc,KAAKmc,KAAO,EACjD,EAMAuN,EAAOjd,UAAUslB,SAAW,WAGxB,GAAI/xB,KAAKmc,IAAM,EAAInc,KAAKuf,IACpB,MAAM2R,EAAgBlxB,KAAM,GAEhC,OAAkD,EAA3CyxB,EAAgBzxB,KAAKkc,IAAKlc,KAAKmc,KAAO,EACjD,EAkCAuN,EAAOjd,UAAUwe,MAAQ,WAGrB,GAAIjrB,KAAKmc,IAAM,EAAInc,KAAKuf,IACpB,MAAM2R,EAAgBlxB,KAAM,GAEhC,IAAIggB,EAAQ8J,EAAKmB,MAAMxO,YAAYzc,KAAKkc,IAAKlc,KAAKmc,KAElD,OADAnc,KAAKmc,KAAO,EACL6D,CACX,EAOA0J,EAAOjd,UAAU8iB,OAAS,WAGtB,GAAIvvB,KAAKmc,IAAM,EAAInc,KAAKuf,IACpB,MAAM2R,EAAgBlxB,KAAM,GAEhC,IAAIggB,EAAQ8J,EAAKmB,MAAM7M,aAAape,KAAKkc,IAAKlc,KAAKmc,KAEnD,OADAnc,KAAKmc,KAAO,EACL6D,CACX,EAMA0J,EAAOjd,UAAU0c,MAAQ,WACrB,IAAI9vB,EAAS2G,KAAKgrB,SACdlQ,EAAS9a,KAAKmc,IACdpB,EAAS/a,KAAKmc,IAAM9iB,EAGxB,GAAI0hB,EAAM/a,KAAKuf,IACX,MAAM2R,EAAgBlxB,KAAM3G,GAGhC,OADA2G,KAAKmc,KAAO9iB,EACR8S,MAAM8f,QAAQjsB,KAAKkc,KACZlc,KAAKkc,IAAI3iB,MAAMuhB,EAAOC,GAC1BD,IAAUC,EACX,IAAI/a,KAAKkc,IAAI6Q,YAAY,GACzB/sB,KAAK2xB,OAAOjlB,KAAK1M,KAAKkc,IAAKpB,EAAOC,EAC5C,EAMA2O,EAAOjd,UAAU+N,OAAS,WACtB,IAAI2O,EAAQnpB,KAAKmpB,QACjB,OAAO7J,EAAKE,KAAK2J,EAAO,EAAGA,EAAM9vB,OACrC,EAOAqwB,EAAOjd,UAAUulB,KAAO,SAAc34B,GAClC,GAAsB,iBAAXA,EAAqB,CAE5B,GAAI2G,KAAKmc,IAAM9iB,EAAS2G,KAAKuf,IACzB,MAAM2R,EAAgBlxB,KAAM3G,GAChC2G,KAAKmc,KAAO9iB,CAChB,MACI,GAEI,GAAI2G,KAAKmc,KAAOnc,KAAKuf,IACjB,MAAM2R,EAAgBlxB,YACE,IAAvBA,KAAKkc,IAAIlc,KAAKmc,QAE3B,OAAOnc,IACX,EAOA0pB,EAAOjd,UAAUmf,SAAW,SAASqG,GACjC,OAAQA,GACJ,KAAK,EACDjyB,KAAKgyB,OACL,MACJ,KAAK,EACDhyB,KAAKgyB,KAAK,GACV,MACJ,KAAK,EACDhyB,KAAKgyB,KAAKhyB,KAAKgrB,UACf,MACJ,KAAK,EACD,KAA0C,IAAlCiH,EAA2B,EAAhBjyB,KAAKgrB,WACpBhrB,KAAK4rB,SAASqG,GAElB,MACJ,KAAK,EACDjyB,KAAKgyB,KAAK,GACV,MAGJ,QACI,MAAMxzB,MAAM,qBAAuByzB,EAAW,cAAgBjyB,KAAKmc,KAE3E,OAAOnc,IACX,EAEA0pB,EAAOmH,WAAa,SAASqB,GACzBnB,EAAemB,EACfxI,EAAOtJ,OAASA,IAChB2Q,EAAaF,aAEb,IAAIrmB,EAAKsf,EAAK9I,KAAO,SAAsC,WAC3D8I,EAAKqI,MAAMzI,EAAOjd,UAAW,CAEzBye,MAAO,WACH,OAAOqG,EAAe7kB,KAAK1M,MAAMwK,IAAI,EACzC,EAEAglB,OAAQ,WACJ,OAAO+B,EAAe7kB,KAAK1M,MAAMwK,IAAI,EACzC,EAEA4nB,OAAQ,WACJ,OAAOb,EAAe7kB,KAAK1M,MAAMqyB,WAAW7nB,IAAI,EACpD,EAEA8nB,QAAS,WACL,OAAOZ,EAAYhlB,KAAK1M,MAAMwK,IAAI,EACtC,EAEA+nB,SAAU,WACN,OAAOb,EAAYhlB,KAAK1M,MAAMwK,IAAI,EACtC,GAGR,C,6BCzZA4H,EAAOP,QAAUkf,EAGjB,IAAIrH,EAAS,EAAQ,OACpBqH,EAAatkB,UAAY3U,OAAOsoB,OAAOsJ,EAAOjd,YAAYsgB,YAAcgE,EAEzE,IAAIjH,EAAO,EAAQ,MASnB,SAASiH,EAAaz6B,GAClBozB,EAAOhd,KAAK1M,KAAM1J,EAOtB,CAEAy6B,EAAaF,WAAa,WAElB/G,EAAKuH,SACLN,EAAatkB,UAAUklB,OAAS7H,EAAKuH,OAAO5kB,UAAUlT,MAC9D,EAMAw3B,EAAatkB,UAAU+N,OAAS,WAC5B,IAAI+E,EAAMvf,KAAKgrB,SACf,OAAOhrB,KAAKkc,IAAIsW,UACVxyB,KAAKkc,IAAIsW,UAAUxyB,KAAKmc,IAAKnc,KAAKmc,IAAMxT,KAAKoG,IAAI/O,KAAKmc,IAAMoD,EAAKvf,KAAKuf,MACtEvf,KAAKkc,IAAIxR,SAAS,QAAS1K,KAAKmc,IAAKnc,KAAKmc,IAAMxT,KAAKoG,IAAI/O,KAAKmc,IAAMoD,EAAKvf,KAAKuf,KACxF,EASAwR,EAAaF,Y,wBCjDbze,EAAOP,QAAU,CAAC,C,8BCKRA,EA6BN4gB,QAAU,EAAQ,K,8BClCtBrgB,EAAOP,QAAU4gB,EAEjB,IAAI3I,EAAO,EAAQ,MAsCnB,SAAS2I,EAAQC,EAASC,EAAkBC,GAExC,GAAuB,mBAAZF,EACP,MAAM3S,UAAU,8BAEpB+J,EAAKzO,aAAa3O,KAAK1M,MAMvBA,KAAK0yB,QAAUA,EAMf1yB,KAAK2yB,iBAAmBE,QAAQF,GAMhC3yB,KAAK4yB,kBAAoBC,QAAQD,EACrC,EA3DCH,EAAQhmB,UAAY3U,OAAOsoB,OAAO0J,EAAKzO,aAAa5O,YAAYsgB,YAAc0F,EAwE/EA,EAAQhmB,UAAUqmB,QAAU,SAASA,EAAQC,EAAQC,EAAaC,EAAcC,EAASC,GAErF,IAAKD,EACD,MAAMnT,UAAU,6BAEpB,IAAI5lB,EAAO6F,KACX,IAAKmzB,EACD,OAAOrJ,EAAKsJ,UAAUN,EAAS34B,EAAM44B,EAAQC,EAAaC,EAAcC,GAE5E,GAAK/4B,EAAKu4B,QAKV,IACI,OAAOv4B,EAAKu4B,QACRK,EACAC,EAAY74B,EAAKw4B,iBAAmB,kBAAoB,UAAUO,GAASG,UAC3E,SAAqB/Y,EAAKxf,GAEtB,GAAIwf,EAEA,OADAngB,EAAKuhB,KAAK,QAASpB,EAAKyY,GACjBI,EAAS7Y,GAGpB,GAAiB,OAAbxf,EAAJ,CAKA,KAAMA,aAAoBm4B,GACtB,IACIn4B,EAAWm4B,EAAa94B,EAAKy4B,kBAAoB,kBAAoB,UAAU93B,EAInF,CAHE,MAAOwf,GAEL,OADAngB,EAAKuhB,KAAK,QAASpB,EAAKyY,GACjBI,EAAS7Y,EACpB,CAIJ,OADAngB,EAAKuhB,KAAK,OAAQ5gB,EAAUi4B,GACrBI,EAAS,KAAMr4B,EAZtB,CAFIX,EAAK4gB,KAAqB,EAelC,GAMR,CAJE,MAAOT,GAGL,OAFAngB,EAAKuhB,KAAK,QAASpB,EAAKyY,QACxB/kB,YAAW,WAAamlB,EAAS7Y,EAAM,GAAG,EAE9C,MArCItM,YAAW,WAAamlB,EAAS30B,MAAM,iBAAmB,GAAG,EAsCrE,EAOAi0B,EAAQhmB,UAAUsO,IAAM,SAAauY,GAOjC,OANItzB,KAAK0yB,UACAY,GACDtzB,KAAK0yB,QAAQ,KAAM,KAAM,MAC7B1yB,KAAK0yB,QAAU,KACf1yB,KAAK0b,KAAK,OAAOF,OAEdxb,IACX,C,8BC5IAoS,EAAOP,QAAUua,EAEjB,IAAItC,EAAO,EAAQ,MAUnB,SAASsC,EAAS1N,EAAIC,GASlB3e,KAAK0e,GAAKA,IAAO,EAMjB1e,KAAK2e,GAAKA,IAAO,CACrB,CAOA,IAAI4U,EAAOnH,EAASmH,KAAO,IAAInH,EAAS,EAAG,GAE3CmH,EAAKxP,SAAW,WAAa,OAAO,CAAG,EACvCwP,EAAKC,SAAWD,EAAKlB,SAAW,WAAa,OAAOryB,IAAM,EAC1DuzB,EAAKl6B,OAAS,WAAa,OAAO,CAAG,EAOrC,IAAIo6B,EAAWrH,EAASqH,SAAW,mBAOnCrH,EAASnK,WAAa,SAAoBjC,GACtC,GAAc,IAAVA,EACA,OAAOuT,EACX,IAAI1W,EAAOmD,EAAQ,EACfnD,IACAmD,GAASA,GACb,IAAItB,EAAKsB,IAAU,EACfrB,GAAMqB,EAAQtB,GAAM,aAAe,EAUvC,OATI7B,IACA8B,GAAMA,IAAO,EACbD,GAAMA,IAAO,IACPA,EAAK,aACPA,EAAK,IACCC,EAAK,aACPA,EAAK,KAGV,IAAIyN,EAAS1N,EAAIC,EAC5B,EAOAyN,EAASsH,KAAO,SAAc1T,GAC1B,GAAqB,iBAAVA,EACP,OAAOoM,EAASnK,WAAWjC,GAC/B,GAAI8J,EAAKiC,SAAS/L,GAAQ,CAEtB,IAAI8J,EAAK9I,KAGL,OAAOoL,EAASnK,WAAWmB,SAASpD,EAAO,KAF3CA,EAAQ8J,EAAK9I,KAAK8B,WAAW9C,EAGrC,CACA,OAAOA,EAAMoB,KAAOpB,EAAMqB,KAAO,IAAI+K,EAASpM,EAAMoB,MAAQ,EAAGpB,EAAMqB,OAAS,GAAKkS,CACvF,EAOAnH,EAAS3f,UAAUsX,SAAW,SAAkBzC,GAC5C,IAAKA,GAAYthB,KAAK2e,KAAO,GAAI,CAC7B,IAAID,EAAgB,GAAV1e,KAAK0e,KAAW,EACtBC,GAAM3e,KAAK2e,KAAW,EAG1B,OAFKD,IACDC,EAAKA,EAAK,IAAM,KACXD,EAAU,WAALC,EAClB,CACA,OAAO3e,KAAK0e,GAAe,WAAV1e,KAAK2e,EAC1B,EAOAyN,EAAS3f,UAAUknB,OAAS,SAAgBrS,GACxC,OAAOwI,EAAK9I,KACN,IAAI8I,EAAK9I,KAAe,EAAVhhB,KAAK0e,GAAkB,EAAV1e,KAAK2e,GAAQkU,QAAQvR,IAEhD,CAAEF,IAAe,EAAVphB,KAAK0e,GAAQ2C,KAAgB,EAAVrhB,KAAK2e,GAAQ2C,SAAUuR,QAAQvR,GACnE,EAEA,IAAItkB,EAAaJ,OAAO6P,UAAUzP,WAOlCovB,EAASwH,SAAW,SAAkBC,GAClC,OAAIA,IAASJ,EACFF,EACJ,IAAInH,GACLpvB,EAAW0P,KAAKmnB,EAAM,GACtB72B,EAAW0P,KAAKmnB,EAAM,IAAM,EAC5B72B,EAAW0P,KAAKmnB,EAAM,IAAM,GAC5B72B,EAAW0P,KAAKmnB,EAAM,IAAM,MAAQ,GAEpC72B,EAAW0P,KAAKmnB,EAAM,GACtB72B,EAAW0P,KAAKmnB,EAAM,IAAM,EAC5B72B,EAAW0P,KAAKmnB,EAAM,IAAM,GAC5B72B,EAAW0P,KAAKmnB,EAAM,IAAM,MAAQ,EAE9C,EAMAzH,EAAS3f,UAAUqnB,OAAS,WACxB,OAAOl3B,OAAOC,aACO,IAAjBmD,KAAK0e,GACL1e,KAAK0e,KAAO,EAAK,IACjB1e,KAAK0e,KAAO,GAAK,IACjB1e,KAAK0e,KAAO,GACK,IAAjB1e,KAAK2e,GACL3e,KAAK2e,KAAO,EAAK,IACjB3e,KAAK2e,KAAO,GAAK,IACjB3e,KAAK2e,KAAO,GAEpB,EAMAyN,EAAS3f,UAAU+mB,SAAW,WAC1B,IAAIO,EAAS/zB,KAAK2e,IAAM,GAGxB,OAFA3e,KAAK2e,KAAQ3e,KAAK2e,IAAM,EAAI3e,KAAK0e,KAAO,IAAMqV,KAAU,EACxD/zB,KAAK0e,IAAQ1e,KAAK0e,IAAM,EAAsBqV,KAAU,EACjD/zB,IACX,EAMAosB,EAAS3f,UAAU4lB,SAAW,WAC1B,IAAI0B,IAAmB,EAAV/zB,KAAK0e,IAGlB,OAFA1e,KAAK0e,KAAQ1e,KAAK0e,KAAO,EAAI1e,KAAK2e,IAAM,IAAMoV,KAAU,EACxD/zB,KAAK2e,IAAQ3e,KAAK2e,KAAO,EAAqBoV,KAAU,EACjD/zB,IACX,EAMAosB,EAAS3f,UAAUpT,OAAS,WACxB,IAAI26B,EAASh0B,KAAK0e,GACduV,GAASj0B,KAAK0e,KAAO,GAAK1e,KAAK2e,IAAM,KAAO,EAC5CuV,EAASl0B,KAAK2e,KAAO,GACzB,OAAiB,IAAVuV,EACU,IAAVD,EACED,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EACxBC,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EAC1BC,EAAQ,IAAM,EAAI,EAC7B,C,oCCtMA,IAAIpK,EAAOjY,EA2OX,SAASsgB,EAAMgC,EAAKj+B,EAAKk+B,GACrB,IAAK,IAAIpV,EAAOlnB,OAAOknB,KAAK9oB,GAAMY,EAAI,EAAGA,EAAIkoB,EAAK3lB,SAAUvC,OACnCgjB,IAAjBqa,EAAInV,EAAKloB,KAAsBs9B,IAC/BD,EAAInV,EAAKloB,IAAMZ,EAAI8oB,EAAKloB,KAChC,OAAOq9B,CACX,CAmBA,SAASE,EAASp0B,GAEd,SAASq0B,EAAYp0B,EAASiqB,GAE1B,KAAMnqB,gBAAgBs0B,GAClB,OAAO,IAAIA,EAAYp0B,EAASiqB,GAKpCryB,OAAO4pB,eAAe1hB,KAAM,UAAW,CAAE8E,IAAK,WAAa,OAAO5E,CAAS,IAGvE1B,MAAM+1B,kBACN/1B,MAAM+1B,kBAAkBv0B,KAAMs0B,GAE9Bx8B,OAAO4pB,eAAe1hB,KAAM,QAAS,CAAEggB,OAAO,IAAIxhB,OAAQg2B,OAAS,KAEnErK,GACAgI,EAAMnyB,KAAMmqB,EACpB,CAUA,OARCmK,EAAY7nB,UAAY3U,OAAOsoB,OAAO5hB,MAAMiO,YAAYsgB,YAAcuH,EAEvEx8B,OAAO4pB,eAAe4S,EAAY7nB,UAAW,OAAQ,CAAE3H,IAAK,WAAa,OAAO7E,CAAM,IAEtFq0B,EAAY7nB,UAAU/B,SAAW,WAC7B,OAAO1K,KAAKC,KAAO,KAAOD,KAAKE,OACnC,EAEOo0B,CACX,CA/RAxK,EAAKsJ,UAAY,EAAQ,MAGzBtJ,EAAKvP,OAAS,EAAQ,MAGtBuP,EAAKzO,aAAe,EAAQ,MAG5ByO,EAAKmB,MAAQ,EAAQ,KAGrBnB,EAAKlL,QAAU,EAAQ,MAGvBkL,EAAKxK,KAAO,EAAQ,MAGpBwK,EAAK2K,KAAO,EAAQ,MAGpB3K,EAAKsC,SAAW,EAAQ,MAOxBtC,EAAK4K,OAAS7B,QAA0B,oBAAX54B,QACPA,QACAA,OAAO1B,SACP0B,OAAO1B,QAAQC,UACfyB,OAAO1B,QAAQC,SAASC,MAO9CqxB,EAAK7vB,OAAS6vB,EAAK4K,QAAUz6B,QACG,oBAAX9B,QAA0BA,QACf,oBAAXgC,MAA0BA,MACjC6F,KAQd8pB,EAAKe,WAAa/yB,OAAO68B,OAAS78B,OAAO68B,OAAO,IAAiC,GAOjF7K,EAAK8K,YAAc98B,OAAO68B,OAAS78B,OAAO68B,OAAO,CAAC,GAAgC,CAAC,EAQnF7K,EAAKkC,UAAYnjB,OAAOmjB,WAAwC,SAAmBhM,GAC/E,MAAwB,iBAAVA,GAAsB6M,SAAS7M,IAAUrX,KAAKqD,MAAMgU,KAAWA,CACjF,EAOA8J,EAAKiC,SAAW,SAAkB/L,GAC9B,MAAwB,iBAAVA,GAAsBA,aAAiBpjB,MACzD,EAOAktB,EAAK+K,SAAW,SAAkB7U,GAC9B,OAAOA,GAA0B,iBAAVA,CAC3B,EAUA8J,EAAKgL,MAQLhL,EAAKiL,MAAQ,SAAevT,EAAKwT,GAC7B,IAAIhV,EAAQwB,EAAIwT,GAChB,QAAa,MAAThV,IAAiBwB,EAAIuJ,eAAeiK,MACZ,iBAAVhV,IAAuB7T,MAAM8f,QAAQjM,GAASA,EAAM3mB,OAASvB,OAAOknB,KAAKgB,GAAO3mB,QAAU,EAEhH,EAaAywB,EAAKuH,OAAS,WACV,IACI,IAAIA,EAASvH,EAAKlL,QAAQ,UAAUyS,OAEpC,OAAOA,EAAO5kB,UAAUwoB,UAAY5D,EAAoC,IAI5E,CAHE,MAAO36B,GAEL,OAAO,IACX,CACH,CATa,GAYdozB,EAAKoL,aAAe,KAGpBpL,EAAKqL,oBAAsB,KAO3BrL,EAAKc,UAAY,SAAmBwK,GAEhC,MAA8B,iBAAhBA,EACRtL,EAAKuH,OACDvH,EAAKqL,oBAAoBC,GACzB,IAAItL,EAAK3d,MAAMipB,GACnBtL,EAAKuH,OACDvH,EAAKoL,aAAaE,GACI,oBAAfl8B,WACHk8B,EACA,IAAIl8B,WAAWk8B,EACjC,EAMAtL,EAAK3d,MAA8B,oBAAfjT,WAA6BA,WAAwCiT,MAezF2d,EAAK9I,KAAkC8I,EAAK7vB,OAAOo7B,SAAsCvL,EAAK7vB,OAAOo7B,QAAQrU,MACtE8I,EAAK7vB,OAAO+mB,MACvC8I,EAAKlL,QAAQ,QAOzBkL,EAAKwL,OAAS,mBAOdxL,EAAKyL,QAAU,wBAOfzL,EAAK0L,QAAU,6CAOf1L,EAAK2L,WAAa,SAAoBzV,GAClC,OAAOA,EACD8J,EAAKsC,SAASsH,KAAK1T,GAAO8T,SAC1BhK,EAAKsC,SAASqH,QACxB,EAQA3J,EAAK4L,aAAe,SAAsB7B,EAAMvS,GAC5C,IAAIkQ,EAAO1H,EAAKsC,SAASwH,SAASC,GAClC,OAAI/J,EAAK9I,KACE8I,EAAK9I,KAAKgB,SAASwP,EAAK9S,GAAI8S,EAAK7S,GAAI2C,GACzCkQ,EAAKzN,SAAS8O,QAAQvR,GACjC,EAiBAwI,EAAKqI,MAAQA,EAObrI,EAAK6L,QAAU,SAAiB5S,GAC5B,OAAOA,EAAItI,OAAO,GAAGmb,cAAgB7S,EAAIhX,UAAU,EACvD,EAyCA+d,EAAKuK,SAAWA,EAmBhBvK,EAAK+L,cAAgBxB,EAAS,iBAoB9BvK,EAAKqG,YAAc,SAAkB2F,GAEjC,IADA,IAAIC,EAAW,CAAC,EACPj/B,EAAI,EAAGA,EAAIg/B,EAAWz8B,SAAUvC,EACrCi/B,EAASD,EAAWh/B,IAAM,EAO9B,OAAO,WACH,IAAK,IAAIkoB,EAAOlnB,OAAOknB,KAAKhf,MAAOlJ,EAAIkoB,EAAK3lB,OAAS,EAAGvC,GAAK,IAAKA,EAC9D,GAA0B,IAAtBi/B,EAAS/W,EAAKloB,UAA+BgjB,IAAlB9Z,KAAKgf,EAAKloB,KAAuC,OAAlBkJ,KAAKgf,EAAKloB,IACpE,OAAOkoB,EAAKloB,EACxB,CACJ,EAeAgzB,EAAKsG,YAAc,SAAkB0F,GAQjC,OAAO,SAAS71B,GACZ,IAAK,IAAInJ,EAAI,EAAGA,EAAIg/B,EAAWz8B,SAAUvC,EACjCg/B,EAAWh/B,KAAOmJ,UACXD,KAAK81B,EAAWh/B,GACnC,CACJ,EAkBAgzB,EAAKkD,cAAgB,CACjBN,MAAO9vB,OACP+vB,MAAO/vB,OACPusB,MAAOvsB,OACPgwB,MAAM,GAIV9C,EAAK+G,WAAa,WACd,IAAIQ,EAASvH,EAAKuH,OAEbA,GAMLvH,EAAKoL,aAAe7D,EAAOqC,OAASx6B,WAAWw6B,MAAQrC,EAAOqC,MAE1D,SAAqB1T,EAAOgW,GACxB,OAAO,IAAI3E,EAAOrR,EAAOgW,EAC7B,EACJlM,EAAKqL,oBAAsB9D,EAAO4E,aAE9B,SAA4B/W,GACxB,OAAO,IAAImS,EAAOnS,EACtB,GAdA4K,EAAKoL,aAAepL,EAAKqL,oBAAsB,IAevD,C,8BCnaA/iB,EAAOP,QAAU+X,EAEjB,IAEIkH,EAFAhH,EAAY,EAAQ,MAIpBsC,EAAYtC,EAAKsC,SACjB7R,EAAYuP,EAAKvP,OACjB+E,EAAYwK,EAAKxK,KAWrB,SAAS4W,EAAG1rB,EAAI+U,EAAKtD,GAMjBjc,KAAKwK,GAAKA,EAMVxK,KAAKuf,IAAMA,EAMXvf,KAAKm2B,UAAOrc,EAMZ9Z,KAAKic,IAAMA,CACf,CAGA,SAASma,IAAQ,CAUjB,SAASC,EAAMvL,GAMX9qB,KAAKs2B,KAAOxL,EAAOwL,KAMnBt2B,KAAKu2B,KAAOzL,EAAOyL,KAMnBv2B,KAAKuf,IAAMuL,EAAOvL,IAMlBvf,KAAKm2B,KAAOrL,EAAO0L,MACvB,CAOA,SAAS5M,IAML5pB,KAAKuf,IAAM,EAMXvf,KAAKs2B,KAAO,IAAIJ,EAAGE,EAAM,EAAG,GAM5Bp2B,KAAKu2B,KAAOv2B,KAAKs2B,KAMjBt2B,KAAKw2B,OAAS,IAOlB,CAEA,IAAIpW,EAAS,WACT,OAAO0J,EAAKuH,OACN,WACE,OAAQzH,EAAOxJ,OAAS,WACpB,OAAO,IAAI0Q,CACf,IACJ,EAEE,WACE,OAAO,IAAIlH,CACf,CACR,EAqCA,SAAS6M,EAAUxa,EAAKC,EAAKC,GACzBD,EAAIC,GAAa,IAANF,CACf,CAmBA,SAASya,EAASnX,EAAKtD,GACnBjc,KAAKuf,IAAMA,EACXvf,KAAKm2B,UAAOrc,EACZ9Z,KAAKic,IAAMA,CACf,CA6CA,SAAS0a,EAAc1a,EAAKC,EAAKC,GAC7B,KAAOF,EAAI0C,IACPzC,EAAIC,KAAkB,IAATF,EAAIyC,GAAW,IAC5BzC,EAAIyC,IAAMzC,EAAIyC,KAAO,EAAIzC,EAAI0C,IAAM,MAAQ,EAC3C1C,EAAI0C,MAAQ,EAEhB,KAAO1C,EAAIyC,GAAK,KACZxC,EAAIC,KAAkB,IAATF,EAAIyC,GAAW,IAC5BzC,EAAIyC,GAAKzC,EAAIyC,KAAO,EAExBxC,EAAIC,KAASF,EAAIyC,EACrB,CA0CA,SAASkY,EAAa3a,EAAKC,EAAKC,GAC5BD,EAAIC,GAA0B,IAAdF,EAChBC,EAAIC,EAAM,GAAMF,IAAQ,EAAM,IAC9BC,EAAIC,EAAM,GAAMF,IAAQ,GAAM,IAC9BC,EAAIC,EAAM,GAAMF,IAAQ,EAC5B,CA9JA2N,EAAOxJ,OAASA,IAOhBwJ,EAAO3K,MAAQ,SAAeC,GAC1B,OAAO,IAAI4K,EAAK3d,MAAM+S,EAC1B,EAII4K,EAAK3d,QAAUA,QACfyd,EAAO3K,MAAQ6K,EAAK2K,KAAK7K,EAAO3K,MAAO6K,EAAK3d,MAAMM,UAAU9P,WAUhEitB,EAAOnd,UAAUoqB,MAAQ,SAAcrsB,EAAI+U,EAAKtD,GAG5C,OAFAjc,KAAKu2B,KAAOv2B,KAAKu2B,KAAKJ,KAAO,IAAID,EAAG1rB,EAAI+U,EAAKtD,GAC7Cjc,KAAKuf,KAAOA,EACLvf,IACX,EA6BA02B,EAASjqB,UAAY3U,OAAOsoB,OAAO8V,EAAGzpB,WACtCiqB,EAASjqB,UAAUjC,GAxBnB,SAAuByR,EAAKC,EAAKC,GAC7B,KAAOF,EAAM,KACTC,EAAIC,KAAe,IAANF,EAAY,IACzBA,KAAS,EAEbC,EAAIC,GAAOF,CACf,EAyBA2N,EAAOnd,UAAUue,OAAS,SAAsBhL,GAW5C,OARAhgB,KAAKuf,MAAQvf,KAAKu2B,KAAOv2B,KAAKu2B,KAAKJ,KAAO,IAAIO,GACzC1W,KAAkB,GACT,IAAY,EACpBA,EAAQ,MAAY,EACpBA,EAAQ,QAAY,EACpBA,EAAQ,UAAY,EACA,EAC1BA,IAAQT,IACDvf,IACX,EAQA4pB,EAAOnd,UAAU8e,MAAQ,SAAqBvL,GAC1C,OAAOA,EAAQ,EACThgB,KAAK62B,MAAMF,EAAe,GAAIvK,EAASnK,WAAWjC,IAClDhgB,KAAKgrB,OAAOhL,EACtB,EAOA4J,EAAOnd,UAAUmlB,OAAS,SAAsB5R,GAC5C,OAAOhgB,KAAKgrB,QAAQhL,GAAS,EAAIA,GAAS,MAAQ,EACtD,EAqBA4J,EAAOnd,UAAU+iB,OAAS,SAAsBxP,GAC5C,IAAIwR,EAAOpF,EAASsH,KAAK1T,GACzB,OAAOhgB,KAAK62B,MAAMF,EAAenF,EAAKn4B,SAAUm4B,EACpD,EASA5H,EAAOnd,UAAUye,MAAQtB,EAAOnd,UAAU+iB,OAQ1C5F,EAAOnd,UAAU2lB,OAAS,SAAsBpS,GAC5C,IAAIwR,EAAOpF,EAASsH,KAAK1T,GAAOwT,WAChC,OAAOxzB,KAAK62B,MAAMF,EAAenF,EAAKn4B,SAAUm4B,EACpD,EAOA5H,EAAOnd,UAAUolB,KAAO,SAAoB7R,GACxC,OAAOhgB,KAAK62B,MAAMJ,EAAW,EAAGzW,EAAQ,EAAI,EAChD,EAcA4J,EAAOnd,UAAUqlB,QAAU,SAAuB9R,GAC9C,OAAOhgB,KAAK62B,MAAMD,EAAc,EAAG5W,IAAU,EACjD,EAQA4J,EAAOnd,UAAUslB,SAAWnI,EAAOnd,UAAUqlB,QAQ7ClI,EAAOnd,UAAU6lB,QAAU,SAAuBtS,GAC9C,IAAIwR,EAAOpF,EAASsH,KAAK1T,GACzB,OAAOhgB,KAAK62B,MAAMD,EAAc,EAAGpF,EAAK9S,IAAImY,MAAMD,EAAc,EAAGpF,EAAK7S,GAC5E,EASAiL,EAAOnd,UAAU8lB,SAAW3I,EAAOnd,UAAU6lB,QAQ7C1I,EAAOnd,UAAUwe,MAAQ,SAAqBjL,GAC1C,OAAOhgB,KAAK62B,MAAM/M,EAAKmB,MAAM1O,aAAc,EAAGyD,EAClD,EAQA4J,EAAOnd,UAAU8iB,OAAS,SAAsBvP,GAC5C,OAAOhgB,KAAK62B,MAAM/M,EAAKmB,MAAM/M,cAAe,EAAG8B,EACnD,EAEA,IAAI8W,EAAahN,EAAK3d,MAAMM,UAAUL,IAChC,SAAwB6P,EAAKC,EAAKC,GAChCD,EAAI9P,IAAI6P,EAAKE,EACjB,EAEE,SAAwBF,EAAKC,EAAKC,GAChC,IAAK,IAAIrlB,EAAI,EAAGA,EAAImlB,EAAI5iB,SAAUvC,EAC9BolB,EAAIC,EAAMrlB,GAAKmlB,EAAInlB,EAC3B,EAOJ8yB,EAAOnd,UAAU0c,MAAQ,SAAqBnJ,GAC1C,IAAIT,EAAMS,EAAM3mB,SAAW,EAC3B,IAAKkmB,EACD,OAAOvf,KAAK62B,MAAMJ,EAAW,EAAG,GACpC,GAAI3M,EAAKiC,SAAS/L,GAAQ,CACtB,IAAI9D,EAAM0N,EAAO3K,MAAMM,EAAMhF,EAAOlhB,OAAO2mB,IAC3CzF,EAAO9d,OAAOujB,EAAO9D,EAAK,GAC1B8D,EAAQ9D,CACZ,CACA,OAAOlc,KAAKgrB,OAAOzL,GAAKsX,MAAMC,EAAYvX,EAAKS,EACnD,EAOA4J,EAAOnd,UAAU+N,OAAS,SAAsBwF,GAC5C,IAAIT,EAAMD,EAAKjmB,OAAO2mB,GACtB,OAAOT,EACDvf,KAAKgrB,OAAOzL,GAAKsX,MAAMvX,EAAKG,MAAOF,EAAKS,GACxChgB,KAAK62B,MAAMJ,EAAW,EAAG,EACnC,EAOA7M,EAAOnd,UAAU2e,KAAO,WAIpB,OAHAprB,KAAKw2B,OAAS,IAAIH,EAAMr2B,MACxBA,KAAKs2B,KAAOt2B,KAAKu2B,KAAO,IAAIL,EAAGE,EAAM,EAAG,GACxCp2B,KAAKuf,IAAM,EACJvf,IACX,EAMA4pB,EAAOnd,UAAUsqB,MAAQ,WAUrB,OATI/2B,KAAKw2B,QACLx2B,KAAKs2B,KAASt2B,KAAKw2B,OAAOF,KAC1Bt2B,KAAKu2B,KAASv2B,KAAKw2B,OAAOD,KAC1Bv2B,KAAKuf,IAASvf,KAAKw2B,OAAOjX,IAC1Bvf,KAAKw2B,OAASx2B,KAAKw2B,OAAOL,OAE1Bn2B,KAAKs2B,KAAOt2B,KAAKu2B,KAAO,IAAIL,EAAGE,EAAM,EAAG,GACxCp2B,KAAKuf,IAAO,GAETvf,IACX,EAMA4pB,EAAOnd,UAAU4e,OAAS,WACtB,IAAIiL,EAAOt2B,KAAKs2B,KACZC,EAAOv2B,KAAKu2B,KACZhX,EAAOvf,KAAKuf,IAOhB,OANAvf,KAAK+2B,QAAQ/L,OAAOzL,GAChBA,IACAvf,KAAKu2B,KAAKJ,KAAOG,EAAKH,KACtBn2B,KAAKu2B,KAAOA,EACZv2B,KAAKuf,KAAOA,GAETvf,IACX,EAMA4pB,EAAOnd,UAAU4mB,OAAS,WAItB,IAHA,IAAIiD,EAAOt2B,KAAKs2B,KAAKH,KACjBja,EAAOlc,KAAK+sB,YAAY9N,MAAMjf,KAAKuf,KACnCpD,EAAO,EACJma,GACHA,EAAK9rB,GAAG8rB,EAAKra,IAAKC,EAAKC,GACvBA,GAAOma,EAAK/W,IACZ+W,EAAOA,EAAKH,KAGhB,OAAOja,CACX,EAEA0N,EAAOiH,WAAa,SAASmG,GACzBlG,EAAekG,EACfpN,EAAOxJ,OAASA,IAChB0Q,EAAaD,YACjB,C,8BC/cAze,EAAOP,QAAUif,EAGjB,IAAIlH,EAAS,EAAQ,OACpBkH,EAAarkB,UAAY3U,OAAOsoB,OAAOwJ,EAAOnd,YAAYsgB,YAAc+D,EAEzE,IAAIhH,EAAO,EAAQ,MAQnB,SAASgH,IACLlH,EAAOld,KAAK1M,KAChB,CAuCA,SAASi3B,EAAkBhb,EAAKC,EAAKC,GAC7BF,EAAI5iB,OAAS,GACbywB,EAAKxK,KAAKG,MAAMxD,EAAKC,EAAKC,GACrBD,EAAI+Y,UACT/Y,EAAI+Y,UAAUhZ,EAAKE,GAEnBD,EAAIuD,MAAMxD,EAAKE,EACvB,CA5CA2U,EAAaD,WAAa,WAOtBC,EAAa7R,MAAQ6K,EAAKqL,oBAE1BrE,EAAaoG,iBAAmBpN,EAAKuH,QAAUvH,EAAKuH,OAAO5kB,qBAAqBvT,YAAiD,QAAnC4wB,EAAKuH,OAAO5kB,UAAUL,IAAInM,KAClH,SAA8Bgc,EAAKC,EAAKC,GACxCD,EAAI9P,IAAI6P,EAAKE,EAEf,EAEE,SAA+BF,EAAKC,EAAKC,GACzC,GAAIF,EAAIkb,KACNlb,EAAIkb,KAAKjb,EAAKC,EAAK,EAAGF,EAAI5iB,aACvB,IAAK,IAAIvC,EAAI,EAAGA,EAAImlB,EAAI5iB,QAC3B6iB,EAAIC,KAASF,EAAInlB,IACrB,CACR,EAMAg6B,EAAarkB,UAAU0c,MAAQ,SAA4BnJ,GACnD8J,EAAKiC,SAAS/L,KACdA,EAAQ8J,EAAKoL,aAAalV,EAAO,WACrC,IAAIT,EAAMS,EAAM3mB,SAAW,EAI3B,OAHA2G,KAAKgrB,OAAOzL,GACRA,GACAvf,KAAK62B,MAAM/F,EAAaoG,iBAAkB3X,EAAKS,GAC5ChgB,IACX,EAcA8wB,EAAarkB,UAAU+N,OAAS,SAA6BwF,GACzD,IAAIT,EAAMuK,EAAKuH,OAAO5yB,WAAWuhB,GAIjC,OAHAhgB,KAAKgrB,OAAOzL,GACRA,GACAvf,KAAK62B,MAAMI,EAAmB1X,EAAKS,GAChChgB,IACX,EAUA8wB,EAAaD,Y,yCC9Eb,gBACA,UAyBa,IAAgB,IAvB7B,MAEEuG,aAA6B,CAE7BA,2BAA2BC,EAAiC/K,GAM1D,MAAMgL,EAAU,IAAI,EAAAC,QAAQjL,GAS5B,aALQgL,EAAQE,UAAUH,GAKnB,IAAI,EAAAI,qBAAqBH,EAClC,E,+CC1BF,gBACA,UAEA,UACA,UAQa,KAAkB,KAa7B,IAZoC,iBAAzB,EAAAI,IAAIzW,KAAK0W,aAA4B,EAAAD,IAAIzW,KAAK0W,YAAc,KACrE,EAAAD,IAAIzW,KAAK0W,YAAc,GAGI,kBAAlB,EAAAD,IAAIzW,KAAK2W,OAClB,EAAAF,IAAIzW,KAAK2W,MAAO,GAGY,kBAAnB,EAAAF,IAAIzW,KAAK4W,QAClB,EAAAH,IAAIzW,KAAK4W,OAAQ,GAGgB,iBAAxB,EAAAH,IAAIzW,KAAK6W,aAA4BjvB,OAAOmjB,UAAU,EAAA0L,IAAIzW,KAAK6W,aAAe,EAAAJ,IAAIzW,KAAK6W,YAAc,EAAG,CACjH,MAAMC,EAA0C,oBAAdjuB,WAA4B,IAAAkuB,QAAO3+B,OAASyQ,UAAU2F,oBACxF,EAAAioB,IAAIzW,KAAK6W,WAAanvB,KAAKoG,IAAI,EAAGpG,KAAK+R,MAAMqd,GAAsB,GAAK,G,GAsB/D,KAAc,IAlB3B,MACEX,cAEE,gBAGM,IAAAa,WACR,CAGAb,2BAA2BC,EAAiC/K,GAE1D,MAAM4L,EAAU,IAAI,EAAAC,qCAEpB,aADMD,EAAQV,UAAUH,EAAc/K,GAC/Bh1B,QAAQqb,QAAQulB,EACzB,E,ygBCzCF,aACA,gBAE+B,CAC7B,MAAME,EAAgB,WACtB,IAAAC,iBAAgB,QAASD,GAAgB,G,CAEb,CAC5B,MAAME,EAAc,YACpB,IAAAD,iBAAgB,MAAOC,EAAa,KACpC,IAAAD,iBAAgB,OAAQC,EAAa,KACrC,IAAAD,iBAAgB,UAAWC,EAAa,E,kHChB1C,MAAMC,EACJxL,YAAYO,GACVx1B,OAAOC,OAAOiI,KAAMstB,EACtB,CAGWkL,eAKT,OAJKx4B,KAAKy4B,YACRz4B,KAAKy4B,UACD3gC,OAAO4gC,oBAAoB14B,MAAM24B,OAAOC,KAAI34B,GAAQ,GAAID,KAAiCC,OAASib,KAAK,MAEtGlb,KAAKy4B,SACd,EAOW,EAAAI,4BAAkEvL,GAC3E,IAAIiL,EAA0BjL,E,kGCnBlC,gBAEA,UACA,UACA,UAEA,IAAOwL,EAAS,EAAAC,YAAYC,aAAaC,IAqBzC,MAAaC,EACXnM,YAAYoM,GAEV,GADAn5B,KAAKo5B,YAAc,IAAIC,IACnBF,QAAiD,CACnD,IAAK,MAAMG,KAAQH,EACbG,aAAgB,EAAA/P,KAAKW,eACvBlqB,KAAKo5B,YAAYhtB,IAAIktB,EAAKr5B,KAAM,CAACi5B,EAAUK,SAASD,GAAOJ,EAAUM,QAAQF,KACpEA,aAAgBR,EAAOI,WAChCl5B,KAAKo5B,YAAYhtB,IAAIktB,EAAKr5B,OAAS,CAACi5B,EAAUK,SAASD,GAAOJ,EAAUM,QAAQF,KAGpF,GAAIt5B,KAAKo5B,YAAYla,KAAOia,EAAW9/B,OACrC,MAAM,IAAImF,MAAM,6B,CAGtB,CAEA4N,IAAI+hB,EAAaxD,EAA0B3K,GACzChgB,KAAKo5B,YAAYhtB,IAAI+hB,EAAK,CAACnO,EAAO2K,GACpC,CACA8O,OAAOtL,GACLnuB,KAAKo5B,YAAYK,OAAOtL,EAC1B,CACAuL,SAASvL,EAAawL,GACpB,OAAO35B,KAAK8E,IAAIqpB,EAAK,QAASwL,EAChC,CAEAC,OAAOzL,EAAawL,GAClB,OAAO35B,KAAK8E,IAAIqpB,EAAK,MAAOwL,EAC9B,CAEAE,UAAU1L,EAAawL,GACrB,OAAO35B,KAAK8E,IAAIqpB,EAAK,SAAUwL,EACjC,CAEAG,UAAU3L,EAAawL,GACrB,OAAO35B,KAAK8E,IAAIqpB,EAAK,SAAUwL,EACjC,CAEAI,UAAU5L,EAAawL,GACrB,OAAO35B,KAAK8E,IAAIqpB,EAAK,SAAUwL,EACjC,CAEAK,QAAQ7L,EAAawL,GACnB,OAAO35B,KAAK8E,IAAIqpB,EAAK,OAAQwL,EAC/B,CAEAM,WAAW9L,EAAawL,GACtB,OAAO35B,KAAK8E,IAAIqpB,EAAK,UAAWwL,EAClC,CAEAO,WAAW/L,EAAawL,GACtB,OAAO35B,KAAK8E,IAAIqpB,EAAK,UAAWwL,EAClC,CAEQ70B,IACJqpB,EAAaxD,EAA0BgP,GACzC,MAAMQ,EAAen6B,KAAKo5B,YAAYt0B,IAAIqpB,GAC1C,QAAqBrU,IAAjBqgB,EAA4B,CAC9B,QAAqBrgB,IAAjB6f,EACF,OAAOA,EAET,MAAM,IAAIn7B,MAAM,iCAAiC2vB,I,CAEnD,GAAIgM,EAAa,KAAOxP,EACtB,MAAM,IAAInsB,MAAM,2BAA2BmsB,aAAgBwP,EAAa,MAE1E,OAAOA,EAAa,EACtB,CAEQC,eAAed,GACrB,MAAM3O,EAAO2O,aAAgB,EAAA/P,KAAKW,eAAiB,EAAOS,KAAQ2O,EAA0B3O,OAC5F,OAAQA,GACN,KAAK,EAAApB,KAAKW,eAAe4C,cAAcuN,MACrC,MAAO,QACT,KAAK,EAAA9Q,KAAKW,eAAe4C,cAAcwN,IACrC,MAAO,MACT,KAAK,EAAA/Q,KAAKW,eAAe4C,cAAcyN,OACrC,MAAO,SACT,KAAK,EAAAhR,KAAKW,eAAe4C,cAAc0N,OACrC,MAAO,SACT,KAAK,EAAAjR,KAAKW,eAAe4C,cAAc2N,OACrC,MAAO,SACT,KAAK,EAAAlR,KAAKW,eAAe4C,cAAc4N,KACrC,MAAO,OACT,KAAK,EAAAnR,KAAKW,eAAe4C,cAAc6N,QACrC,MAAO,UACT,KAAK,EAAApR,KAAKW,eAAe4C,cAAc8N,QACrC,MAAO,UACT,QACE,MAAM,IAAIp8B,MAAM,wCAAwC,EAAA+qB,KAAKW,eAAe4C,cAAcnC,MAEhG,CAEQyP,gBAAgBd,GACtB,MAAMuB,EAAWvB,aAAgB,EAAA/P,KAAKW,eAAiBoP,EAAK3O,KAAQ2O,EAA0B3O,OAC9F,GAAIkQ,IAAa,EAAAtR,KAAKW,eAAe4C,cAAcgO,OAASD,IAAa,EAAAtR,KAAKW,eAAe4C,cAAciO,OACzG,MAAM,IAAIv8B,MAAM,wCAGlB,MAAMwhB,EAAQhgB,KAAKg7B,gBAAgB1B,GAGnC,GAAIuB,IAAa,EAAAtR,KAAKW,eAAe4C,cAAcwN,KAAO,EAAAW,SAAS1Z,OAAOvB,GACxE,OAAO,EAAAib,SAASC,aAAalb,GAI/B,GAAI6a,IAAa,EAAAtR,KAAKW,eAAe4C,cAAc4N,KAAM,CACvD,MAAMS,EAAOnb,EACPob,EAAwB,IAAIjvB,MAAcgvB,EAAI9hC,QAEpD,IAAK,IAAIvC,EAAI,EAAGA,EAAIqkC,EAAI9hC,OAAQvC,IAAK,CACnC,MAAMukC,EAAYF,EAAIrkC,GACtBskC,EAAYtkC,GAAK,EAAAmkC,SAASC,aAAaG,E,CAGzC,OAAOD,C,CAIT,GAAIP,IAAa,EAAAtR,KAAKW,eAAe4C,cAAc0N,OACjD,OAAOlB,aAAgB,EAAA/P,KAAKW,eAAiB,EAAAqG,OAAO+K,UAAUtb,GACjB,EAAAuQ,OAAOgL,cAAcvb,GAIpE,GAAI6a,IAAa,EAAAtR,KAAKW,eAAe4C,cAAc8N,QAAS,CAC1D,GAAItB,aAAgB,EAAA/P,KAAKW,eAEvB,OADqBlK,EACD4Y,KAAI5Y,GAAS,EAAAuQ,OAAO+K,UAAUtb,KAC7C,GAAIsZ,aAAgBR,EAAOI,UAEhC,OADqBlZ,EACD4Y,KAAI5Y,GAAS,EAAAuQ,OAAOgL,cAAcvb,I,CAK1D,GAAI6a,IAAa,EAAAtR,KAAKW,eAAe4C,cAAcyN,QAG7CjB,aAAgB,EAAA/P,KAAKW,eAAgB,CACvC,MAAMsR,EAAaxb,EACnB,OAAO,IAAAyb,kBAAiBD,E,CAK5B,OAAIX,IAAa,EAAAtR,KAAKW,eAAe4C,cAAc6N,SAG7CrB,aAAgB,EAAA/P,KAAKW,eACHlK,EACD4Y,IAAI,EAAA6C,kBAIpBzb,CACT,CAEQoa,uBAAuBd,GAC7B,OAAOA,aAAiB,EAAA/P,KAAmB,eAAIvpB,KAAK07B,8BAA8BpC,GACnCt5B,KAAK27B,6BAA6BrC,EACnF,CAEQc,qCAAqCd,GAC3C,OAAQA,EAAK3O,MACX,KAAK,EAAApB,KAAKW,eAAe4C,cAAcuN,MACrC,OAAOf,EAAK/hC,EACd,KAAK,EAAAgyB,KAAKW,eAAe4C,cAAcwN,IACrC,OAAOhB,EAAKxiC,EACd,KAAK,EAAAyyB,KAAKW,eAAe4C,cAAcyN,OACrC,OAAOjB,EAAK9hC,EACd,KAAK,EAAA+xB,KAAKW,eAAe4C,cAAc0N,OACrC,OAAOlB,EAAKvjC,EACd,KAAK,EAAAwzB,KAAKW,eAAe4C,cAAcgO,MACrC,OAAOxB,EAAKphC,EACd,KAAK,EAAAqxB,KAAKW,eAAe4C,cAAc2N,OACrC,OAAOnB,EAAKlP,OACd,KAAK,EAAAb,KAAKW,eAAe4C,cAAc4N,KACrC,OAAOpB,EAAKjP,KACd,KAAK,EAAAd,KAAKW,eAAe4C,cAAc6N,QACrC,OAAOrB,EAAKhP,QACd,KAAK,EAAAf,KAAKW,eAAe4C,cAAc8N,QACrC,OAAOtB,EAAK/O,QACd,KAAK,EAAAhB,KAAKW,eAAe4C,cAAciO,OACrC,OAAOzB,EAAK9O,OACd,QACE,MAAM,IAAIhsB,MAAM,+BAA+B,EAAA+qB,KAAKW,eAAe4C,cAAcwM,EAAK3O,SAE5F,CAEQyP,oCAAoCd,GAC1C,OAAQA,EAAK3O,QACX,KAAKmO,EAAOhM,cAAcuN,MACxB,OAAOf,EAAK/hC,IACd,KAAKuhC,EAAOhM,cAAcwN,IACxB,OAAOhB,EAAKxiC,IACd,KAAKgiC,EAAOhM,cAAcyN,OACxB,OAAOjB,EAAK9hC,IACd,KAAKshC,EAAOhM,cAAc0N,OACxB,OAAOlB,EAAKvjC,IACd,KAAK+iC,EAAOhM,cAAcgO,MACxB,OAAOxB,EAAKphC,IACd,KAAK4gC,EAAOhM,cAAc2N,OACxB,OAAOnB,EAAKsC,cACd,KAAK9C,EAAOhM,cAAc4N,KAAM,CAC9B,MAAMrQ,EAAO,GACb,IAAK,IAAIvzB,EAAI,EAAGA,EAAIwiC,EAAKuC,aAAc/kC,IACrCuzB,EAAK3pB,KAAK44B,EAAKjP,KAAKvzB,IAEtB,OAAOuzB,C,CAET,KAAKyO,EAAOhM,cAAc6N,QAAS,CACjC,MAAMrQ,EAAU,GAChB,IAAK,IAAIxzB,EAAI,EAAGA,EAAIwiC,EAAKwC,gBAAiBhlC,IACxCwzB,EAAQ5pB,KAAK44B,EAAKhP,QAAQxzB,IAE5B,OAAOwzB,C,CAET,KAAKwO,EAAOhM,cAAc8N,QAAS,CACjC,MAAMrQ,EAAU,GAChB,IAAK,IAAIzzB,EAAI,EAAGA,EAAIwiC,EAAKyC,gBAAiBjlC,IACxCyzB,EAAQ7pB,KAAK44B,EAAK/O,QAAQzzB,IAE5B,OAAOyzB,C,CAST,QACE,MAAM,IAAI/rB,MAAM,+BAA+Bs6B,EAAOhM,cAAcwM,EAAK3O,WAE/E,EA7OF,a,iHC5BA,gBA0EMqR,EAAsC,IAAI3C,IAgChDjC,eAAe6E,EAAeC,GAC5B,MAAMC,EAAa,EAAAC,QAEnB,QAAuC,IAA5BD,EAAWD,IAexB,SAAmB1a,GAEjB,MAAMrqB,EAAIqqB,EAGV,MACI,eAAgBrqB,GAA6B,mBAAjBA,EAAEklC,YAC9B,yBAA0BllC,GAAuC,mBAA3BA,EAAEmlC,sBACxC,YAAanlC,GAA0B,mBAAdA,EAAEolC,OAMjC,CA7BwDC,CAAUL,EAAWD,IAAe,CACxF,MAAME,EAAUD,EAAWD,GAC3B,IAAIO,EAAOL,EAAQC,aAInB,GAHoB,iBAATI,GAAqB,SAAUA,IACxCA,QAAaA,GAEXA,EAEF,OADAT,EAAc5vB,IAAI8vB,EAAaE,GACxBA,C,CAKb,CA9Ca,EAAAA,QAAqC,CAChDM,MAAO,IAAI,EAAAC,cAOb,iBAAOvF,eAAewF,EAAeC,GACnC,IAAKA,EACH,OAAOD,EAAe,CAAC,UAClB,CACL,MAAME,EAAwB,iBAATD,EAAoB,CAACA,GAAQA,EAElD,IAAK,MAAMX,KAAeY,EAAO,CAC/B,MAAM/a,EAAQia,EAAcl3B,IAAIo3B,GAChC,GAAIna,EACF,OAAOA,EAGT,MAAMqa,QAAgBH,EAAeC,GACrC,GAAIE,EACF,OAAOA,C,EAKb,MAAM,IAAI59B,MAAM,8BAClB,C,qGCxGA,gBAGA,UAGA,UAEA,UAOA,qBAGMu+B,gBACF,OAAO,EAAArF,IAAIgF,MAAMK,SACnB,CACIA,cAAU/c,GACZ,EAAA0X,IAAIgF,MAAMK,UAAY/c,CACxB,CAEIgd,yBACF,OAAO,EAAAtF,IAAIgF,MAAMM,kBACnB,CACIA,uBAAmBhd,GACrB,EAAA0X,IAAIgF,MAAMM,mBAAqBhd,CACjC,CAEIid,uBACF,OAAO,EAAAvF,IAAIgF,MAAMO,gBACnB,CACIA,qBAAiBjd,GACnB,EAAA0X,IAAIgF,MAAMO,iBAAmBjd,CAC/B,CAEIkd,WACF,OAAO,EAAAxF,IAAIgF,MAAMQ,IACnB,CACIA,SAAKld,GACP,EAAA0X,IAAIgF,MAAMQ,KAAOld,CACnB,CAEIoX,YACF,OAAO,EAAAM,IAAIgF,MAAMtF,KACnB,CACIA,UAAMpX,GACR,EAAA0X,IAAIgF,MAAMtF,MAAQpX,CACpB,CAEAqc,aACE,IAsBE,OArBAr8B,KAAKm9B,WAAY,IAAAC,oBAAmBp9B,KAAK+8B,WACF,iBAA5B/8B,KAAKg9B,qBACdh9B,KAAKg9B,mBAAqB,IAES,iBAA1Bh9B,KAAKi9B,mBACdj9B,KAAKi9B,iBAAmB,QAED,kBAAdj9B,KAAKk9B,OACdl9B,KAAKk9B,MAAO,GAEY,kBAAfl9B,KAAKo3B,QACdp3B,KAAKo3B,OAAQ,GAGf,EAAAiG,OAAOC,WAAW,EAAA5F,KAElB,EAAA2F,OAAOE,QACH,eACA,gCAAgCv9B,KAAKm9B,sCACjCn9B,KAAKg9B,yCAAyCh9B,KAAKi9B,2BAA2Bj9B,KAAKk9B,gBACnFl9B,KAAKo3B,WACN,C,CACP,MAAO1gC,GAEP,OADA,EAAA2mC,OAAOG,QAAQ,eAAgB,sCAAsC9mC,MAC9D,C,CAEX,CACA4lC,qBAAqBmB,GACnB,OAAO,IAAI,EAAAC,oBAAoB19B,KAAMy9B,EACvC,CACAlB,UACEv8B,KAAKm9B,UAAUZ,SACjB,E,sGCvFF,gBAEA,UACA,UACA,UAEA,UAMA,MAAaoB,UAAsB,EAAAC,QAGjC7Q,YAAY0Q,GACVI,MAAMJ,EACR,CACAK,eACE,OAAO,OAAP,8FACK99B,KAAK+9B,kBACL/9B,KAAKg+B,kBACLh+B,KAAKi+B,SACLj+B,KAAKk+B,aAELl+B,KAAKm+B,sBACLn+B,KAAKo+B,6BACLp+B,KAAKq+B,2BAEZ,CACAC,iBACE,MAAO,CAAC,CACV,CAKUP,iBAER,MAAO,CACLA,eAAgB,IAAI,EAAAQ,eAAe,2PASvC,CAMUP,iBAER,MAAO,CACLA,eAAgB,IAAI,EAAAO,eAAe,qPASvC,CAMUF,2BACR,MAAMG,EAAex+B,KAAKy9B,QAAQgB,oBAClC,OAAID,EAAaE,SACR1+B,KAAK2+B,+BAA+BH,GAEpCx+B,KAAK4+B,iCAAiCJ,EAEjD,CAKUG,+BAA+BH,GACvC,MAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAaQ,MAAOR,EAAaS,QAChD9b,EAA2C,CAAC,EAC5C+b,EAAW,kBACjB,OAAQL,EAASxlC,QACf,KAAK,EACH8pB,EAAO+b,GAAYl/B,KAAKm/B,wBACxB,MACF,KAAK,EACHhc,EAAO+b,GAAYl/B,KAAKo/B,wBAAwBP,EAAsBE,GACtE,MACF,KAAK,EACH5b,EAAO+b,GAAYl/B,KAAKq/B,wBAAwBR,EAA8BE,GAC9E,MACF,KAAK,EACH5b,EAAO+b,GACHl/B,KAAKs/B,wBAAwBT,EAAsCE,GACvE,MACF,QACE5b,EAAO+b,GAAYl/B,KAAKu/B,wBAAwBV,EAAUE,GAE9D,MAGMS,EAA4B,gDAHrB,IAAAC,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAKjCrD,+BAKX,OADAlK,EAAkC,oBAAI,IAAI,EAAAob,eAAeiB,GAClDrc,CACT,CAKUyb,iCAAiCJ,GACzC,MAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAaQ,MAAOR,EAAaS,QAChD9b,EAA2C,CAAC,EAC5C+b,EAAW,kBACjB,OAAQL,EAASxlC,QACf,KAAK,EACH8pB,EAAO+b,GAAYl/B,KAAKm/B,wBACxB,MACF,KAAK,EACHhc,EAAO+b,GAAYl/B,KAAK0/B,0BAA0Bb,EAAsBE,GACxE,MACF,KAAK,EACH5b,EAAO+b,GACHl/B,KAAK2/B,0BAA0Bd,EAA8BE,GACjE,MACF,KAAK,EACH5b,EAAO+b,GACHl/B,KAAK4/B,0BAA0Bf,EAAsCE,GACzE,MACF,KAAK,EACH5b,EAAO+b,GAAYl/B,KAAK6/B,0BACpBhB,EAA8CE,GAClD,MACF,KAAK,EACH5b,EAAO+b,GAAYl/B,KAAK8/B,0BACpBjB,EAAsDE,GAC1D,MACF,KAAK,EACH5b,EAAO+b,GAAYl/B,KAAK+/B,0BACpBlB,EAA8DE,GAClE,MACF,QACE,MAAM,IAAIvgC,MAAM,sCAAsCqgC,EAASxlC,UAEnE,MAGM2mC,EAAyB,qDAHlB,IAAAP,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAK/BrD,gDAKb,OADAlK,EAA+B,iBAAI,IAAI,EAAAob,eAAeyB,GAC/C7c,CACT,CAKUgc,wBACR,OAAO,IAAI,EAAAZ,eAAe,oEAK5B,CAKUa,wBAAwB3O,EAAiBwP,GACjD,MAAMC,EAAiBD,EACvB,IAAIE,EAAS,GACb,OAA0B,IAAtBD,EAAe,IACjBC,EAAS,iFAE4BD,EAAe,gCAG7C,IAAI,EAAA3B,eAAe4B,IAGF,IAAtBD,EAAe,IACjBC,EAAS,iFAE4BD,EAAe,gCAG7C,IAAI,EAAA3B,eAAe4B,KAG5BA,EAAS,6HAG2BD,EAAe,OAAOA,EAAe,6CACxCA,EAAe,uCAGzC,IAAI,EAAA3B,eAAe4B,GAC5B,CAKUd,wBAAwB5O,EAAyBwP,GACzD,IAAIE,EAAS,GACb,GAAI,EAAAC,UAAUC,YAAY5P,EAAOwP,GAM/B,OALAE,EAAS,uFAEkCF,EAAS,OAAOA,EAAS,2BAG7D,IAAI,EAAA1B,eAAe4B,GAG5B,MAAMD,EAAiBD,EAEjBK,EAAqB33B,KAAK+R,KAAK+V,EAAM,GAAK,GAyBhD,OAdA0P,EAAS,8HAG0BD,EAAe,OAAOA,EAAe,+CAEvCA,EAAe,4GAGpBI,2CACCA,0DAKtB,IAAI,EAAA/B,eAAe4B,EAC5B,CAKUb,wBAAwB7O,EAAiCwP,GACjE,MAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCK,EAAqB33B,KAAK+R,KAAK+V,EAAM,GAAK,GAC1C8P,EAAgBD,EAAqB33B,KAAK+R,KAAK+V,EAAM,GAAK,GAC1D0P,EAAS,8HAGoBD,EAAe,OAAOA,EAAe,6CACvCA,EAAe,iDAExBK,8BACHA,8FAGOD,2CACCA,6DAK7B,OAAO,IAAI,EAAA/B,eAAe4B,EAC5B,CAKUZ,wBAAwB9O,EAA0BwP,GAC1D,MAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IAExCK,EAAqB33B,KAAK+R,KAAK+V,EAAMA,EAAMp3B,OAAS,GAAK,GACzDknC,EAAgBD,EAAqB33B,KAAK+R,KAAK+V,EAAMA,EAAMp3B,OAAS,GAAK,GAC/E,IAAImnC,EAAiBD,EACjBE,EAAU,GACVC,EAAS,UAEb,IAAK,IAAIzoC,EAAI,EAAGA,EAAIw4B,EAAMp3B,OAAS,EAAGpB,IACpCuoC,GAAkB/P,EAAMA,EAAMp3B,OAASpB,EAAI,GAC3CwoC,EAAU,gBACHxoC,eAAeuoC,uBACVvoC,OAAOuoC,WACjBC,EACFC,EAAS,IAAIzoC,MAAQyoC,EAEvB,MAAMP,EAAS,eACP1P,EAAMp3B,iHAEmB6mC,EAAe,OAAOA,EAAe,2CACvCA,EAAe,+BAExCO,gCAEgBF,4BACHA,0FAGOD,yCACCA,6BAEV7P,EAAMp3B,UAAUqnC,qBAGjC,OAAO,IAAI,EAAAnC,eAAe4B,EAC5B,CAKUT,0BAA0BjP,EAAiBwP,GACnD,MAAME,EAAS,4HAGoBF,EAAS,OAAOA,EAAS,wCAChCA,EAAS,sCAGrC,OAAO,IAAI,EAAA1B,eAAe4B,EAC5B,CAKUR,0BAA0BlP,EAAyBwP,GAC3D,MAAME,EAAS,8HAGoBF,EAAS,OAAOA,EAAS,6CAC3BA,EAAS,+CAClBxP,EAAM,sCACFA,EAAM,wDAIlC,OAAO,IAAI,EAAA8N,eAAe4B,EAC5B,CAKUP,0BAA0BnP,EAAiCwP,GACnE,IAAIE,EAAS,GACb,MAAMQ,EAAOlQ,EAAMp3B,OAEnB,IAAIunC,EAAU,KACVD,EAAO,IACTC,EAAU,IAGZA,EAAU,IAAIz0B,MAAMw0B,EAAO,GAC3BC,EAAQD,EAAO,GAAKlQ,EAAMkQ,EAAO,GACjC,IAAK,IAAI7pC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B8pC,EAAQ9pC,GAAK8pC,EAAQ9pC,EAAI,GAAK25B,EAAM35B,EAAI,GAE1C,MAAM+pC,EAAkB,CAAC,IAAK,IAAK,KAC7BC,EACFF,EACKhI,KAAI,CAACmI,EAAQjqC,IAKL,OAJc+pC,EAAgB/pC,gBAAgBiqC,MACvCjqC,IAAM8pC,EAAQvnC,OAAS,EACjC,OAAOwnC,EAAgB/pC,EAAI,gBAAgB+pC,EAAgB/pC,QAAQiqC,IACnE,YAAYF,EAAgB/pC,QAAQiqC,SAGzC7lB,KAAK,IAWd,OATAilB,EAAS,8HAG0BF,EAAS,OAAOA,EAAS,6CAC3BA,EAAS,+BAClCa,yDAID,IAAI,EAAAvC,eAAe4B,EAC5B,CAKUN,0BAA0BpP,EAAyCwP,GAE3E,IAAIE,EAAS,GACb,MAAMQ,EAAOlQ,EAAMp3B,OAEnB,IAAIunC,EAAU,KACVD,EAAO,IACTC,EAAU,IAGZA,EAAU,IAAIz0B,MAAMw0B,EAAO,GAC3BC,EAAQD,EAAO,GAAKlQ,EAAMkQ,EAAO,GACjC,IAAK,IAAI7pC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B8pC,EAAQ9pC,GAAK8pC,EAAQ9pC,EAAI,GAAK25B,EAAM35B,EAAI,GAE1C,MAAM+pC,EAAkB,CAAC,IAAK,IAAK,IAAK,MAClCC,EACFF,EACKhI,KAAI,CAACmI,EAAQjqC,IAKL,OAJc+pC,EAAgB/pC,gBAAgBiqC,MACvCjqC,IAAM8pC,EAAQvnC,OAAS,EACjC,OAAOwnC,EAAgB/pC,EAAI,gBAAgB+pC,EAAgB/pC,QAAQiqC,IACnE,YAAYF,EAAgB/pC,QAAQiqC,SAGzC7lB,KAAK,IAWd,OATAilB,EAAS,4HAG0BF,EAAS,OAAOA,EAAS,6CAC3BA,EAAS,+BAClCa,6DAID,IAAI,EAAAvC,eAAe4B,EAC5B,CAKUL,0BAA0BrP,EAAiDwP,GAEnF,IAAIE,EAAS,GACb,MAAMQ,EAAOlQ,EAAMp3B,OAEnB,IAAIunC,EAAU,KACVD,EAAO,IACTC,EAAU,IAGZA,EAAU,IAAIz0B,MAAMw0B,EAAO,GAC3BC,EAAQD,EAAO,GAAKlQ,EAAMkQ,EAAO,GACjC,IAAK,IAAI7pC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B8pC,EAAQ9pC,GAAK8pC,EAAQ9pC,EAAI,GAAK25B,EAAM35B,EAAI,GAE1C,MAAM+pC,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,MACxCC,EACFF,EACKhI,KAAI,CAACmI,EAAQjqC,IAKL,OAJc+pC,EAAgB/pC,gBAAgBiqC,MACvCjqC,IAAM8pC,EAAQvnC,OAAS,EACjC,OAAOwnC,EAAgB/pC,EAAI,gBAAgB+pC,EAAgB/pC,QAAQiqC,IACnE,YAAYF,EAAgB/pC,QAAQiqC,SAGzC7lB,KAAK,IAWd,OATAilB,EAAS,4HAG0BF,EAAS,OAAOA,EAAS,6CAC3BA,EAAS,+BAClCa,iEAID,IAAI,EAAAvC,eAAe4B,EAC5B,CAKUJ,0BAA0BtP,EAAyDwP,GAG3F,IAAIE,EAAS,GACb,MAAMQ,EAAOlQ,EAAMp3B,OAEnB,IAAIunC,EAAU,KACVD,EAAO,IACTC,EAAU,IAGZA,EAAU,IAAIz0B,MAAMw0B,EAAO,GAC3BC,EAAQD,EAAO,GAAKlQ,EAAMkQ,EAAO,GACjC,IAAK,IAAI7pC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B8pC,EAAQ9pC,GAAK8pC,EAAQ9pC,EAAI,GAAK25B,EAAM35B,EAAI,GAE1C,MAAM+pC,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,MAC9CC,EACFF,EACKhI,KAAI,CAACmI,EAAQjqC,IAKL,OAJc+pC,EAAgB/pC,gBAAgBiqC,MACvCjqC,IAAM8pC,EAAQvnC,OAAS,EACjC,OAAOwnC,EAAgB/pC,EAAI,gBAAgB+pC,EAAgB/pC,QAAQiqC,IACnE,YAAYF,EAAgB/pC,QAAQiqC,SAGzC7lB,KAAK,IAWd,OATAilB,EAAS,yHAGyBF,EAAS,OAAOA,EAAS,4CAC3BA,EAAS,8BAClCa,kEAIA,IAAI,EAAAvC,eAAe4B,EAC5B,CAKUhC,qBACR,MAAMhb,EAA2C,CAAC,EAClD,IAAI+b,EAAW,aACf/b,EAAO+b,GAAY,IAAI,EAAAX,eAAe,yWAStCW,EAAW,iBACX/b,EAAO+b,GAAY,IAAI,EAAAX,eAAe,6RAQtCW,EAAW,iBACX/b,EAAO+b,GAAY,IAAI,EAAAX,eAAe,6VAQtCW,EAAW,iBACX/b,EAAO+b,GAAY,IAAI,EAAAX,eAAe,kZAUtCW,EAAW,gBACX,MAAM8B,GAAO,IAAAvB,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAK5C,OAJAvN,EAAO+b,GAAY,IAAI,EAAAX,eAAe,0FAErByC,EAAKC,+CAEf9d,CACT,CAKUib,4BACR,MAAMjb,EAA2C,CAAC,EAC5Cqb,EAAex+B,KAAKy9B,QAAQgB,oBAsBlC,OArBAz+B,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAACq+B,EAAatqC,KACxD,MAAMuqC,EAAcrhC,KAAKy9B,QAAQ6D,oBAAoBxqC,GAC/CooC,GAAW,IAAAqC,4CAA2CH,GACxDC,EAAY3C,SACdvb,EAAO+b,GAAYl/B,KAAKwhC,0BAA0BtC,EAAUkC,EAAaC,GAEzEle,EAAO+b,GAAYl/B,KAAKyhC,4BAA4BvC,EAAUkC,EAAaC,GAG7E,MAAMK,GAAmB,IAAAC,uDAAsDP,GAC3EC,EAAYvC,cAAczlC,QAAUmlC,EAAaM,cAAczlC,SAC7DgoC,EAAY3C,SACdvb,EAAOue,GACH1hC,KAAK4hC,+BAA+BF,EAAkBL,EAAa7C,EAAc4C,GAErFje,EAAOue,GACH1hC,KAAK6hC,iCAAiCH,EAAkBL,EAAa7C,EAAc4C,G,IAKtFje,CACT,CAKUye,+BACN1C,EAAkBmC,EAA4B7C,EAA6Bv+B,GAC7E,MAAM6hC,EAAUT,EAAYvC,cACtBD,EAAWL,EAAaM,cACxBiD,EAAU9hC,EACV+hC,GAAiB,IAAAT,4CAA2CQ,GAE5DE,EAASH,EAAQzoC,OACjB6oC,EAAUrD,EAASxlC,OAEnB8oC,EAAgB,EAAAC,cAAcC,iBAAiBP,EAASjD,GAExDlU,GAAO,IAAA2X,mBAAkBJ,GACzBK,EAAWL,EAAUD,EAC3B,IAAIO,EACJ,MAAMC,GAAS,IAAAC,iBAGbF,EADa,IAAXP,EACc,GACPC,EAAU,GAAKC,EAAc9oC,QAAU,EAChC,cAEA8oC,EAAcvJ,KAAI/gC,GAAK,UAAU4qC,EAAO5qC,EAAI0qC,YAAkBrnB,KAAK,MAErF,IAAIynB,EAAwB,GAE1BA,EADET,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQlJ,KAAI,CAACphC,EAAGV,IAAM,UAAU2rC,EAAO3rC,EAAIyrC,OAAarnB,KAAK,MAGvF,IAAImS,EAAS,sBACb,MACMuV,EAA2B,IADlB,EAAAC,UAAU3jB,KAAK4iB,GAGxBgB,EAA6B,IADnB,EAAAD,UAAU3jB,KAAK2f,GAG/B,GAAe,IAAXoD,GAAiBW,GAAkBE,GAIhC,GAAIF,IAAkBE,EAEzBzV,EADc,IAAZ6U,EACO,2EAIA,yDAIN,GAAIC,EAAc9oC,OAAQ,CAC/B,MAAM0pC,EAAOd,EAAS,EAChBe,EAAOf,EAAS,EAElBE,EAAc7nC,QAAQyoC,IAAS,GAAKZ,EAAc7nC,QAAQ0oC,IAAS,EACrE3V,EAAS,8BACA8U,EAAc7nC,QAAQyoC,IAAS,EACxC1V,EAAS,2EAEA8U,EAAc7nC,QAAQ0oC,IAAS,IACxC3V,EAAS,+C,OAvBXA,EAAS,iEA2BX,MAKM8S,EAAS,gBACNjB,kBACHvU,yEANqB8X,EAAOP,EAAU,uBAC/BO,EAAOP,EAAU,eAAeO,EAAOP,EAAU,uBACjDO,EAAOP,EAAU,kCAMxBM,iCACmBR,KAAkBW,gBACrCtV,mBAGN,OAAO,IAAI,EAAAkR,eAAe4B,EAAQ,CAAC,+BACrC,CAKU0B,iCACN3C,EAAkBmC,EAA4B7C,EAA6Bv+B,GAC7E,MAAM8+B,EAAc,CAACP,EAAaQ,MAAOR,EAAaS,QAChDgE,EAAa,CAAC5B,EAAYrC,MAAOqC,EAAYpC,QAC7CgD,EAASZ,EAAYvC,cAAczlC,OACnC6oC,EAAU1D,EAAaM,cAAczlC,OACrCyoC,EAAUT,EAAYvC,cACtBD,EAAWL,EAAaM,cACxBkD,GAAiB,IAAAT,4CAA2CthC,GAElE,GAAIgiC,IAAWC,GAAW,EAAA9B,UAAUC,YAAY4C,EAAYlE,GAAc,CACxE,MAAMoB,EAAS,qBACHjB,2CACiBj/B,wCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,6B,CAGrC,MAAMxV,GAAO,IAAA2X,mBAAkBJ,GACzBC,EAAgB,EAAAC,cAAcC,iBAAiBP,EAASjD,GACxD0D,EAAWL,EAAUD,EAC3B,IAAIO,EACJ,MAAMC,GAAS,IAAAC,iBAGbF,EADa,IAAXP,EACc,GACPC,EAAU,GAAKC,EAAc9oC,QAAU,EAChC,cAEA8oC,EAAcvJ,KAAI/gC,GAAK,UAAU4qC,EAAO5qC,EAAI0qC,YAAkBrnB,KAAK,MAErF,IAAIynB,EAAwB,GAE1BA,EADET,EAAU,GAAKD,EAAS,EACF,SAEAZ,EAAYvC,cAAclG,KAAI,CAACphC,EAAGV,IAAM,UAAU2rC,EAAO3rC,EAAIyrC,OAAarnB,KAAK,MAEzG,MAAMilB,EAAS,mBACHjB,oBACJvU,4CACA6X,uBACOR,KAAkBW,yBAGjC,OAAO,IAAI,EAAApE,eAAe4B,EAAQ,CAAC,+BACrC,CAKUqB,0BAA0BtC,EAAkBj/B,EAAcohC,GAClE,OAAQA,EAAYvC,cAAczlC,QAChC,KAAK,EACH,OAAO2G,KAAKkjC,uBAAuBhE,EAAUj/B,GAC/C,KAAK,EACH,OAAOD,KAAKmjC,mBAAmBjE,EAAUj/B,EAAMohC,GACjD,KAAK,EACH,OAAOrhC,KAAKojC,mBAAmBlE,EAAUj/B,EAAMohC,GACjD,KAAK,EACH,OAAOrhC,KAAKqjC,mBAAmBnE,EAAUj/B,EAAMohC,GACjD,QACE,OAAOrhC,KAAKsjC,mBAAmBpE,EAAUj/B,EAAMohC,GAErD,CAKUI,4BAA4BvC,EAAkBj/B,EAAcohC,GACpE,MAAM5Q,EAAQ4Q,EAAYvC,cAC1B,OAAQrO,EAAMp3B,QACZ,KAAK,EACH,OAAO2G,KAAKujC,yBAAyBrE,EAAUj/B,EAAMohC,GACvD,KAAK,EACH,OAAOrhC,KAAKwjC,qBAAqBtE,EAAUj/B,EAAMohC,GACnD,KAAK,EACH,OAAOrhC,KAAKyjC,qBAAqBvE,EAAUj/B,EAAMohC,GACnD,KAAK,EACH,OAAOrhC,KAAK0jC,qBAAqBxE,EAAUj/B,EAAMohC,GACnD,KAAK,EACH,OAAOrhC,KAAK2jC,qBAAqBzE,EAAUj/B,EAAMohC,GACnD,KAAK,EACH,OAAOrhC,KAAK4jC,qBAAqB1E,EAAUj/B,EAAMohC,GACnD,KAAK,EACH,OAAOrhC,KAAK6jC,qBAAqB3E,EAAUj/B,EAAMohC,GACnD,QAEE,MAAM,IAAI7iC,MAAM,yBAAyBiyB,EAAMp3B,YAErD,CAKU6pC,uBAAuBhE,EAAkBj/B,GACjD,MACMkgC,EAAS,oBACFjB,8BAFA,IAAAO,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAGtBuQ,aAAahhC,qCAGnC,OAAO,IAAI,EAAAs+B,eAAe4B,EAC5B,CAKUgD,mBAAmBjE,EAAkBj/B,EAAcohC,GAC3D,MAAMpB,EAAW,CAACoB,EAAYrC,MAAOqC,EAAYpC,QAC3CiB,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCe,GAAO,IAAAvB,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAOtCyP,EALgB,QAAQjB,0DAE1BgB,EAAe,OAAOA,EAAe,6BAC9Bc,EAAKC,aAAahhC,iBAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,8BACrC,CAKUiD,mBAAmBlE,EAAkBj/B,EAAcohC,GAC3D,MAAM5Q,EAAQ4Q,EAAYvC,cACpBmB,EAAW,CAACoB,EAAYrC,MAAOqC,EAAYpC,QAC3C+B,GAAO,IAAAvB,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SACtCoT,EAAU7D,EAAS,GACnB8D,EAAU9D,EAAS,GAEzB,GAAgB,MAAZA,GAAoB,EAAAG,UAAUC,YAAY5P,EAAOwP,GAAW,CAC9D,MAAM+D,EAAgB,QAAQ9E,6EACiB6E,QAAcD,yBAClD9C,EAAKC,aAAahhC,mBAG7B,OAAO,IAAI,EAAAs+B,eAAeyF,E,CAE5B,MAAM9D,EAAiBD,EACjBgE,EAAet7B,KAAK+R,KAAK+V,EAAM,GAAK,GAKpC0P,EAJgB,QAAQjB,yDACDgB,EAAe,OAAOA,EAAe,OAAO+D,+BAC9DjD,EAAKC,aAAahhC,iBAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,8BACrC,CAKUkD,mBAAmBnE,EAAkBj/B,EAAcohC,GAC3D,MAAM5Q,EAAQ4Q,EAAYvC,cACpBmB,EAAW,CAACoB,EAAYrC,MAAOqC,EAAYpC,QAC3CiB,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCe,GAAO,IAAAvB,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAE5C,GAAiB,IAAbD,EAAM,GAAU,CAClB,MAAMyT,EAAgBzT,EAAMl3B,MAAM,GAC5B4qC,EAAW,CAAC,EAAG,GACfC,GAAgB,IAAAC,mBAAkB5T,EAAOyT,GACzCjqB,EAAS,CAAC,IAAK,MAAO,OAEtBqqB,EAAgCC,KAAKhkB,MAAMgkB,KAAKC,UAAUnD,IAChEiD,EAAexF,cAAgBsF,EAC/B,MAAMK,EAAiBzkC,KAAKwhC,0BAA0BtC,EAAUj/B,EAAMqkC,GAKhEnE,EAJgB,GAAGsE,EAAeC,2BACjCxF,gDACIA,MAAY,IAAAyF,mBAAkB1qB,EAAQkqB,iBAGjD,OAAO,IAAI,EAAA5F,eAAe4B,EAAQsE,EAAeG,a,CAEnD,MAAMd,EAAU5D,EAAe,GACzB6D,EAAU7D,EAAe,GAEzB+D,EAAet7B,KAAK+R,KAAK+V,EAAM,GAAK,GAOpC0P,EAJgB,QAAQjB,0EAExB6E,MAAYD,MAJIG,EAAet7B,KAAK+R,KAAK+V,EAAM,GAAK,OAIVwT,kCACrCjD,EAAKC,aAAahhC,WAE7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,8BACrC,CAIUmD,mBAAmBpE,EAAkBj/B,EAAcohC,GAC3D,MAAM5Q,EAAQ4Q,EAAYvC,cACpB6B,EAAOlQ,EAAMp3B,OACb4mC,EAAW,CAACoB,EAAYrC,MAAOqC,EAAYpC,QAC3C+B,GAAO,IAAAvB,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAEtCwP,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxC6D,EAAU5D,EAAe,GACzB6D,EAAU7D,EAAe,GACzB+D,EAAet7B,KAAK+R,KAAK+V,EAAMkQ,EAAO,GAAK,GACjD,IAAIJ,EAAgB0D,EAAet7B,KAAK+R,KAAK+V,EAAMkQ,EAAO,GAAK,GAC3D1mB,EAAS,0BACTE,EAAQ,OAAOomB,mBAA+B0D,gBAClD,IAAK,IAAIhsC,EAAI,EAAGA,EAAI0oC,EAAO,EAAG1oC,IAC5BgiB,EAAS,QAAQhiB,MAAQgiB,EACzBsmB,GAAiB9P,EAAMkQ,EAAO1oC,EAAI,GAClCkiB,EAAQ,IAAIliB,OAAOsoC,OAAqBpmB,EAE1C,MAOMgmB,EAPgB,QAAQjB,KAAYjlB,2BAC1BE,gCACO4pB,uCACOA,0DACmBA,MAAYD,qBAClD9C,EAAKC,aAAahhC,iBAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAC5B,CAKUoD,yBAAyBrE,EAAkBj/B,EAAcohC,GACjE,MAAOyC,EAASC,GAAW,CAAC1C,EAAYrC,MAAOqC,EAAYpC,QAC3D,GAAgB,IAAZ6E,GAA6B,IAAZC,EAAe,CAClC,MAAM5D,EAAS,qBACHjB,2CACiBj/B,qCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,6B,CAGrC,MAAMA,EAAS,mBACHjB,+BACOj/B,iCAAoC6jC,MAAYC,uCACtCD,MAAYC,aAAmB9jC,uCAC/BA,6BAG7B,OAAO,IAAI,EAAAs+B,eACP4B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,CAKUqD,qBAAqBtE,EAAkBj/B,EAAcohC,GAC7D,MAAMwD,EAAQxD,EAAYrC,MACpB8F,EAAQzD,EAAYpC,OAE1B,GAAc,IAAV6F,GAAyB,IAAVD,EAAa,CAC9B,MAAM1E,EAAS,mBACLjB,kDACiBj/B,iCAG3B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,6B,CAGrC,GAAc,IAAV2E,EAAa,CACf,MAAM3E,EAAS,qBACHjB,qEACkC2F,gDACjB5kC,iCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,6B,CAErC,GAAc,IAAV0E,EAAa,CACf,MAAM1E,EAAS,qBACHjB,0EACuC4F,2CACtB7kC,iCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,6B,CAErC,MAAMA,EAAS,mBACHjB,kDACiB2F,MAAUC,8CACV7kC,6BAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,yBAA0B,6BAC/D,CAMUsD,qBAAqBvE,EAAkBj/B,EAAcohC,GAC7D,MAAM5Q,EAAQ4Q,EAAYvC,cAGpBmB,EAAW,CAACoB,EAAYpC,OAAQoC,EAAYrC,OAElD,GAAgB,MAAZiB,GAAoB,EAAAG,UAAUC,YAAY5P,EAAOwP,GAAW,CAC9D,MAEME,EAAS,qBACHjB,iFAHIe,EAAS,SACTA,EAAS,4CAIIhgC,iCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,6B,CAGrC,MAAM,SAAC4E,EAAQ,SAAEZ,IAAY,IAAAa,cAAavU,GACpCyT,EAAgBa,EACtB,GAAIb,EAAc7qC,OAASo3B,EAAMp3B,OAAQ,CACvC,MAAM+qC,GAAgB,IAAAC,mBAAkB5T,EAAOyT,GAEzCI,EAAgCC,KAAKhkB,MAAMgkB,KAAKC,UAAUnD,IAChEiD,EAAexF,cAAgBsF,EAE/B,MAAMnqB,EAAS,CAAC,MAAO,OACjBkmB,EAAS,eACTngC,KAAKyhC,4BAA4BvC,EAAUj/B,EAAMqkC,GAAgBI,gCAC3DxF,6CACGA,MAAY,IAAAyF,mBAAkB1qB,EAAQkqB,8BAGrD,OAAO,IAAI,EAAA5F,eAAe4B,EAAQ,CAAC,6B,CAGrC,MAAM2D,EAAU7D,EAAS,GACnB8D,EAAU9D,EAAS,GACzB,GAAgB,IAAZ8D,EAAe,CACjB,MAAM5D,EAAS,qBACHjB,iDACOj/B,iCAAoC6jC,MAAYC,4DACnB9jC,YAAewwB,EAAM,gEACzBqT,2CACf7jC,iCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,4BAA6B,8B,CAGlE,GAAgB,IAAZ2D,EAAe,CACjB,MAAM3D,EAAS,qBACHjB,iDACOj/B,iCAAoC6jC,MAAYC,4DACnB9jC,YAAewwB,EAAM,2DAC9BsT,gDACV9jC,iCAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,4BAA6B,8B,CAGlE,MAAMA,EAAS,mBACHjB,sDACczO,EAAM,6CACHqT,MAAYC,8CACZ9jC,6BAG7B,OAAO,IAAI,EAAAs+B,eACP4B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,CAMUuD,qBAAqBxE,EAAkBj/B,EAAcohC,GAC7D,MAAM5Q,EAAQ4Q,EAAYvC,cACpBmG,EAAUxU,EAAM,GAAKA,EAAM,GAC3ByU,EAAUzU,EAAM,IAEhB,SAACsU,EAAQ,SAAEZ,IAAY,IAAAa,cAAavU,GACpCyT,EAAgBa,EACtB,GAAIb,EAAc7qC,OAASo3B,EAAMp3B,OAAQ,CACvC,MAAM+qC,GAAgB,IAAAC,mBAAkB5T,EAAOyT,GACzCjqB,EAAS,CAAC,QAAS,MAAO,OAE1BqqB,EAAgCC,KAAKhkB,MAAMgkB,KAAKC,UAAUnD,IAChEiD,EAAexF,cAAgBsF,EAC/B,MAAMe,EAAUnlC,KAAKyhC,4BAA4BvC,EAAUj/B,EAAMqkC,GAE3Dc,EAAUjB,EAASkB,UACnBlF,EAAS,eACTgF,EAAQT,gCACFxF,wDACGA,MAAY,IAAAyF,mBAAkB1qB,EAAQmrB,8BAGrD,OAAO,IAAI,EAAA7G,eAAe4B,EAAQgF,EAAQP,a,CAG5C,MAEMzE,EAAS,qBACDjB,sJAEgB+F,aAAmBC,8CALjC7D,EAAYrC,UACZqC,EAAYpC,qDAMGh/B,+BAG/B,OAAO,IAAI,EAAAs+B,eACP4B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,CAMUwD,qBAAqBzE,EAAkBj/B,EAAcohC,GAC7D,MAAM5Q,EAAQ4Q,EAAYvC,cACpBwG,EAAU7U,EAAM,GAChByU,EAAUzU,EAAM,GAAK6U,EAyBrBnF,EAAS,mBACHjB,6EAzBIzO,EAAM,GAAKyU,aA0BkBA,+BACxBI,8CALLjE,EAAYrC,UACZqC,EAAYpC,mDAMCh/B,6BAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,yBAA0B,6BAC/D,CAKUyD,qBAAqB1E,EAAkBj/B,EAAcohC,GAC7D,MAAM5Q,EAAQ4Q,EAAYvC,cACpByG,EAAU9U,EAAM,GAChB6U,EAAU7U,EAAM,GAAK8U,EACrBL,EAAUzU,EAAM,GAAK6U,EACrBL,EAAUxU,EAAM,GAAKyU,GAErB,SAACH,EAAQ,SAAEZ,IAAY,IAAAa,cAAavU,GAC1C,GAAIsU,EAAS1rC,OAASo3B,EAAMp3B,OAAQ,CAClC,MAAM+qC,GAAgB,IAAAC,mBAAkB5T,EAAOsU,GACzC9qB,EAAS,CAAC,MAAO,MAAO,QAAS,SAAU,UAE3CqqB,EAAgCC,KAAKhkB,MAAMgkB,KAAKC,UAAUnD,IAChEiD,EAAexF,cAAgBsF,EAE/B,MAAMjE,EAAS,eACTngC,KAAKyhC,4BAA4BvC,EAAUj/B,EAAMqkC,GAAgBI,gCAC3DxF,gFACGA,MAAY,IAAAyF,mBAAkB1qB,EAAQkqB,8BAGrD,OAAO,IAAI,EAAA5F,eAAe4B,EAAQ,CAAC,4BAA6B,0B,CAGlE,MAEMA,EAAS,mBACHjB,yFACc+F,aAAmBC,eAAqBI,2BACjDC,+CALDlE,EAAYrC,UACZqC,EAAYpC,mDAMCh/B,6BAG7B,OAAO,IAAI,EAAAs+B,eAAe4B,EAAQ,CAAC,4BAA6B,0BAClE,CAKU0D,qBAAqB3E,EAAkBj/B,EAAcohC,GAC7D,MAAM5Q,EAAQ4Q,EAAYvC,cACpB0G,EAAU/U,EAAM,GAChB8U,EAAU9U,EAAM,GAAK+U,EACrBF,EAAU7U,EAAM,GAAK8U,EACrBL,EAAUzU,EAAM,GAAK6U,EACrBL,EAAUxU,EAAM,GAAKyU,GAErB,SAACH,EAAQ,SAAEZ,IAAY,IAAAa,cAAavU,GAC1C,GAAIsU,EAAS1rC,OAASo3B,EAAMp3B,OAAQ,CAClC,MAAM+qC,GAAgB,IAAAC,mBAAkB5T,EAAOsU,GACzC9qB,EAAS,CAAC,MAAO,MAAO,QAAS,SAAU,SAAU,UAErDqqB,EAAgCC,KAAKhkB,MAAMgkB,KAAKC,UAAUnD,IAChEiD,EAAexF,cAAgBsF,EAE/B,MAAMjE,EAAS,iBACPngC,KAAKyhC,4BAA4BvC,EAAUj/B,EAAMqkC,GAAgBI,kCAC3DxF,6GAEGA,MAAY,IAAAyF,mBAAkB1qB,EAAQkqB,kCAGvD,OAAO,IAAI,EAAA5F,eAAe4B,EAAQ,CAAC,4BAA6B,0B,CAGlE,MAEMA,EAAS,qBACDjB,oHAEc+F,aAAmBC,eAAqBI,6BACjDC,gBAAsBC,iDANzBnE,EAAYrC,UACZqC,EAAYpC,qDAOGh/B,iCAG/B,OAAO,IAAI,EAAAs+B,eACP4B,EAAQ,CAAC,yBAA0B,4BAA6B,8BACtE,CAQUlC,QACR,MAAM5Q,EAASrtB,KAAKy9B,QAAQgB,oBACtBkC,EAAOtT,EAAOoD,MAAMp3B,OACpBunC,EAAUvT,EAAOuT,QACjB6E,EAASpY,EAAO2R,MAChB0G,EAASrY,EAAO4R,OAEhB0G,EAAe,GACrB,IAAK,IAAI7uC,EAAI,EAAGA,EAAI6pC,EAAO,IAAK7pC,EAC9B6uC,EAAajlC,KAAK,eACZ5J,iBAAiB8pC,EAAQ9pC,OAC/B6uC,EAAajlC,KAAK,yBACF5J,QAAQ8pC,EAAQ9pC,OAElC6uC,EAAajlC,KAAK,eACVigC,EAAO,gBACf,MAAMiF,EAAO,gDAC4BjF,yDACI8E,MAAWC,gBAClDC,EAAazqB,KAAK,wDAEaylB,kBAC/BgF,EAAazqB,KAAK,qBAGxB,MAAO,CAAC+iB,MAAO,IAAI,EAAAM,eAAeqH,EAAM,CAAC,+BAC3C,CAOU1H,YACR,MAAM/a,EAA2C,CAAC,EAclD,OAbAnjB,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAAC9C,EAAMnJ,KACjD,MAAM+uC,EAAS7lC,KAAKy9B,QAAQ6D,oBAAoBxqC,GAE1C6pC,GADQkF,EAAO/G,cAAczlC,OAAS,EAAIwsC,EAAO/G,cAAgB+G,EAAOpV,OAC3Dp3B,OACnB,IAAI6lC,EAAW,IAAIj/B,IACnBkjB,EAAO+b,GAAY,IAAI,EAAAX,eACnBv+B,KAAK8lC,mBAAmB7lC,EAAM0gC,EAAMkF,EAAO7G,MAAO6G,EAAO5G,QAAQ,GACjE,CAAC,6BAA6BC,IAAY,6BAA8B,8BAC5EA,GAAsB,KACtB/b,EAAO+b,GAAY,IAAI,EAAAX,eACnBv+B,KAAK8lC,mBAAmB7lC,EAAM0gC,EAAMkF,EAAO7G,MAAO6G,EAAO5G,QAAQ,GACjE,CAAC,6BAA6BC,IAAY,6BAA8B,6BAA6B,IAEpG/b,CACT,CAQU2iB,mBAAmBC,EAAiBpF,EAAc3B,EAAeC,EAAgB+G,GAEzF,IAAI/lC,EAAO,IAAI8lC,IAKf,OAJIC,IACF/lC,GAAc,MAGT,mBACKA,WAAc0gC,gDACU1gC,yDACS++B,MAAUC,iDAJ1C,IAAAQ,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAKDuQ,aAAa8E,4DAI1D,CASUE,mBAAmBF,EAAiBpF,EAAc3B,EAAeC,EAAgB+G,GAEzF,IAAI/lC,EAAO,IAAI8lC,SAKf,OAJIC,IACF/lC,GAAc,MAGT,kBACIA,WAAc0gC,iDACYoF,yDACQ/G,MAAUC,0BAJ1C,IAAAQ,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAKxBuQ,aAAa8E,kCAGnC,EAzyCF,iB,4BCRA,IAAYG,E,oKAAAA,EAAA,EAAAA,eAAA,EAAAA,aAAY,KACtB,6BACA,+BAaF,oBACEnZ,YACWoQ,EAAgC+D,EAAiCI,EACjE7C,GADA,KAAAtB,UAAAA,EAAgC,KAAA+D,YAAAA,EAAiC,KAAAI,oBAAAA,EACjE,KAAA7C,oBAAAA,CAAqC,GAElD,gBACE1R,YAAmB0Q,GAAA,KAAAA,QAAAA,CAAuB,GAM5C,uBACE1Q,YAAmB2X,EAA4BE,GAA5B,KAAAF,YAAAA,EAA4B,KAAAE,aAAAA,CAA0B,GAK3E,2BAGE7X,YAAmB9sB,EAAcykC,EAAsBE,GAApC,KAAA3kC,KAAAA,EAEfD,KAAK4kC,aADHA,GAGkB,GAGlBF,IACF1kC,KAAK0kC,YAAcA,EAEvB,CACAyB,cAAc1tC,GACRA,GACFuH,KAAK4kC,aAAalkC,KAAKjI,EAE3B,GAIF,oCACE2hC,0BAA0BgM,GACxB,IAAKA,GAA0B,IAAjBA,EAAM/sC,OAClB,MAAO,GAGT,GAAqB,IAAjB+sC,EAAM/sC,OACR,OAAO+sC,EAGT,MAAMC,EAAa,IAAIC,IACjBC,EAAmB,IAAID,IACvBnjB,EAAS,IAAIhX,MAGnB,OADAnM,KAAKwmC,mBAAmBJ,EAAOC,EAAYE,EAAkBpjB,GACtDA,CACT,CAEQiX,0BACJqM,EAAkCJ,EAAyBE,EAC3DpjB,GACF,IAAK,IAAIrsB,EAAI,EAAGA,EAAI2vC,EAAWptC,SAAUvC,EACvCkJ,KAAK0mC,YAAYD,EAAW3vC,GAAIuvC,EAAYE,EAAkBpjB,EAElE,CAEQiX,mBACJuM,EAA0BN,EAAyBE,EAA+BpjB,GAEpF,IAAKwjB,GAAQJ,EAAiBK,IAAID,EAAK1mC,MACrC,OAIF,GAAIomC,EAAWO,IAAID,EAAK1mC,MACtB,MAAM,IAAIzB,MAAM,oFAIlB6nC,EAAWhgC,IAAIsgC,EAAK1mC,MAGpB,MAAM2kC,EAAe+B,EAAK/B,aAC1B,GAAIA,GAAgBA,EAAavrC,OAAS,EACxC,IAAK,IAAIvC,EAAI,EAAGA,EAAI8tC,EAAavrC,SAAUvC,EACzCkJ,KAAK0mC,YAAY9B,EAAa9tC,GAAIuvC,EAAYE,EAAkBpjB,GAKpEA,EAAOziB,KAAKimC,GAGZJ,EAAiBlgC,IAAIsgC,EAAK1mC,MAG1BomC,EAAW5M,OAAOkN,EAAK1mC,KACzB,E,wGCpHF,gBAMA,MAAa4mC,UAAwB,EAAAjJ,QACnC7Q,YAAY0Q,GACVI,MAAMJ,EACR,CACAK,eACE,OAAO,OAAP,wBAAW99B,KAAK8mC,iBAAoB9mC,KAAK+mC,gBAC3C,CACAzI,iBACE,MAAO,CAAC,CACV,CACUwI,gBACR,MAAO,CACLjsB,OAAQ,IAAI,EAAA0jB,eAAe,iGAK/B,CACUwI,gBACR,MAAO,CACLtqC,OAAQ,IAAI,EAAA8hC,eAAe,oFAK/B,CAKUyI,cACR,MAAMC,EAAaJ,EAAgBK,iBAAmB,uBAAyB,GAC/E,MAAO,CACLrsB,OAAQ,IAAI,EAAA0jB,eAAe,kmBAYvB0I,mHAMR,CAKUE,cACR,MAAMF,EAAaJ,EAAgBK,iBAAmB,uBAAyB,GAC/E,MAAO,CACLzqC,OAAQ,IAAI,EAAA8hC,eAAe,uJAGrB0I,sYASV,CAKA7M,wBACE,MAAMniC,EAAI,IAAImvC,YAAY,GACpBpwC,EAAI,IAAI4G,YAAY3F,GACpBb,EAAI,IAAI8B,WAAWjB,GAEzB,GADAjB,EAAE,GAAK,WACM,MAATI,EAAE,GACJ,OAAO,EAET,GAAa,MAATA,EAAE,GACJ,OAAO,EAET,MAAM,IAAIoH,MAAM,qBAClB,EAxFF,mB,yGCNA,gBACA,UAOA,MAAa6oC,UAAyB,EAAAzJ,QACpC7Q,YAAY0Q,GACVI,MAAMJ,EACR,CACAK,eACE,OAAO,OAAP,wBAAW99B,KAAKsnC,gBAAmBtnC,KAAKunC,kBAC1C,CACAjJ,iBACE,MAAO,CAAC,CACV,CACUgJ,eACR,MAAMtG,GAAO,IAAAvB,SAAQz/B,KAAKy9B,QAAQN,UAAUzM,SAC5C,MAAO,CACL4W,aAAc,IAAI,EAAA/I,eACd,2DAEIyC,EAAK3T,+CAGT,CAAC,oBAET,CACUka,kBACR,MAAO,CACLA,gBAAiB,IAAI,EAAAhJ,eACjB,wGAKA,CAAC,oBAET,EAhCF,oB,qGCRA,MAAMiJ,EAAwB,qFAK9B,0BAA+BC,GAC7B,MAAMC,EAAiG,CAAC,EACxG,IAAIn/B,EACJ,KAAwD,QAAhDA,EAAQi/B,EAAsBG,KAAKF,KAAmB,CAC5D,MAAMxtB,EAAS1R,EAAM,GACDuD,MAAM,KACN8sB,KAAIphC,IACH,MAAMowC,EAASpwC,EAAEqwC,OAAO/7B,MAAM,KAC9B,OAAI87B,GAA4B,IAAlBA,EAAOvuC,OACZ,CAACsxB,KAAMid,EAAO,GAAI3nC,KAAM2nC,EAAO,IAEjC,IAAI,IAEZE,QAAOxvC,GAAW,OAANA,IAChCovC,EAAWn/B,EAAM,IAAM,CAAC0R,SAAQ2rB,KAAMr9B,EAAM,G,CAE9C,IAAK,MAAMtI,KAAQynC,EAAY,CAC7B,MAAMK,EArBc,6DAqBgBzuC,QAAQ,WAAY2G,GAClD+nC,EAAQ,IAAIn8B,OAAOk8B,EAAa,MACtC,KAAwC,QAAhCx/B,EAAQy/B,EAAML,KAAKF,KAAmB,CAC5C,MAAM9c,EAAOpiB,EAAM,GACb0/B,EAAW1/B,EAAM,GACjB0R,EAAS1R,EAAM,GAAGuD,MAAM,KACxBo8B,EAAW,EAAS,GAAGvd,KAAQsd,KAAc,GACnD,IAAIE,EAAkBT,EAAWznC,GAAM2lC,KACnCwC,EAAiB,GACrBV,EAAWznC,GAAMga,OAAOlX,SAAQ,CAACzK,EAAGxB,KAC9BwB,IACF8vC,GAAkB,GAAG9vC,EAAEqyB,QAAQryB,EAAE2H,UAAUga,EAAOnjB,Q,IAGtDqxC,EAAU,GAAGC,OAAoBD,IACjCA,EAAUA,EAAQ7uC,QAAQ,SAAU,GAAG2uC,QACvC,MAAMI,EAAc,WAClBH,uBAEEC,qBAGJV,EAASA,EAAOnuC,QAAQiP,EAAM,GAAI8/B,E,EAItC,OADSZ,EAAOnuC,QAAQkuC,EAAuB,GAEjD,C,yGCjDA,gBACA,UACA,UACA,UAYA,yBAKEza,YACIoQ,EAAyB+D,EAA0BI,EACnD7C,GALK,KAAA6J,KAAkC,CAAC,EACnC,KAAAC,8BAA6E,CAAC,EAKrFvoC,KAAKy9B,QAAU,IAAI,EAAA+K,YAAYrL,EAAW+D,EAAaI,EAAqB7C,GAG5E3mC,OAAOknB,KAAK,EAAAypB,cAAc1lC,SAAS9C,IACjC,MAAMyoC,EAAM,IAAI,EAAAD,aAAaxoC,GAAMD,KAAKy9B,SACxCz9B,KAAKsoC,KAAKroC,GAAQyoC,CAAG,IAIvB,MAAM9P,EAAM54B,KAAKuoC,8BACjB,IAAK,MAAMI,KAAW3oC,KAAKsoC,KAAM,CAC/B,MACMM,EADM5oC,KAAKsoC,KAAKK,GACI7K,eAC1B,IAAK,MAAMqH,KAAWyD,EAAe,CACnC,MAAMza,EAAMwa,EAAU,IAAMxD,EAC5B,IAAI0D,EACAjQ,EAAIzK,IACN0a,EAAcjQ,EAAIzK,GAClB0a,EAAYnE,YAAckE,EAAczD,GAAST,cAEjDmE,EAAc,IAAI,EAAAC,mBAAmB3a,EAAKya,EAAczD,GAAST,aACjE9L,EAAIzK,GAAO0a,GAEb,MAAMjE,EAAegE,EAAczD,GAASP,aAC5C,GAAIA,EACF,IAAK,IAAI9tC,EAAI,EAAGA,EAAI8tC,EAAavrC,SAAUvC,EACzC,GAAK8hC,EAAIgM,EAAa9tC,IAKpB+xC,EAAY1C,cAAcvN,EAAIgM,EAAa9tC,SALlB,CACzB,MAAM2B,EAAO,IAAI,EAAAqwC,mBAAmBlE,EAAa9tC,IACjD8hC,EAAIgM,EAAa9tC,IAAM2B,EACvBowC,EAAY1C,cAAc1tC,E,GAQtC,CAEAswC,aACE,MAAM7H,EAAclhC,KAAKy9B,QAAQyD,YACjC,IAAIf,EAASe,EAAY8H,aAWzB,OARKhpC,KAAKy9B,QAAQyD,YAAY+H,UAC5B9I,EAAS,GAAGA,aACV,IAAA+I,0BAAyBlpC,KAAKy9B,QAAQN,UAAUzM,QAAS1wB,KAAKy9B,QAAQgB,oBAAoBhO,MAAMp3B,WAGpG8mC,GAAS,IAAAgJ,gBAAehJ,GAGjB,IAAG,IAAAiJ,uBAAsBppC,KAAKy9B,QAAQN,UAAUzM,iBACrD1wB,KAAKqpC,YAAYnI,EAAYC,WAAYD,EAAYoI,mBACrDtpC,KAAKupC,WAAWpJ,WAChBA,GACJ,CAEUoJ,WAAW9B,GACnB,MAAM+B,EAAmBxpC,KAAKypC,kCAAkChC,GAEhE,GAAgC,IAA5B+B,EAAiBnwC,OACnB,MAAO,GAGT,IAAIqwC,EAAW,GACf,IAAK,IAAI5yC,EAAI,EAAGA,EAAI0yC,EAAiBnwC,SAAUvC,EAAG,CAChD,IAAI0yC,EAAiB1yC,GAAG4tC,YAGtB,MAAM,IAAIlmC,MAAM,8CAA8CgrC,EAAiB1yC,GAAGmJ,QAFlFypC,GAAYF,EAAiB1yC,GAAG4tC,YAAc,I,CAMlD,OAAOgF,CACT,CACQD,kCAAkChC,GACxC,MAAMrB,EAA8B,GASpC,OAPAtuC,OAAOknB,KAAKhf,KAAKuoC,+BAA+BxlC,SAAQ4mC,IACtD,MAAMxE,EAAUwE,EAAgB79B,MAAM,KAAK,IACV,IAA7B27B,EAAOntC,QAAQ6qC,IACjBiB,EAAM1lC,KAAKV,KAAKuoC,8BAA8BoB,G,IAI3C,EAAAC,4BAA4BC,mBAAmBzD,EACxD,CAEUiD,YAAYS,EAAqBR,GACzC,MAAMS,EAAyB,GAC/B,GAAID,EACF,IAAK,MAAME,KAAWF,EACpBC,EAAarpC,KAAK,qBAAqBspC,MAG3C,GAAIV,EACF,IAAK,MAAMrB,KAAYqB,EACrBS,EAAarpC,KACT,WAAWunC,EAAStd,QAAQsd,EAAShoC,OAAOgoC,EAASgC,YAAc,IAAIhC,EAASgC,eAAiB,OAGzG,OAAOF,EAAa7uB,KAAK,KAC3B,E,qGC9HF,gBAEA,UACA,UACA,UACA,UAEa,EAAAutB,aAAwE,CACnF,SAAY,EAAA5B,gBACZ,UAAa,EAAAQ,iBACb,IAAO,EAAA6C,WACP,WAAc,EAAAC,kBACd,YAAe,EAAAxM,c,0GCZjB,gBAMA,MAAawM,UAA0B,EAAAvM,QACrC7Q,YAAY0Q,GACVI,MAAMJ,EACR,CACAK,eACE,OAAO,OAAP,kEACK99B,KAAKoqC,cACLpqC,KAAKqqC,oBACLrqC,KAAKsqC,mBACLtqC,KAAKuqC,mBACLvqC,KAAKwqC,mBAEZ,CACAlM,iBACE,MAAO,CAAC,CACV,CACU8L,aACR,MAAMK,EAAazqC,KAAKy9B,QAAQgB,oBAAoBhO,MAAMp3B,OACpD8pB,EAA2C,CAAC,EAqBlD,OApBAnjB,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAAC9C,EAAMnJ,KACjD,MAAM25B,EAAQzwB,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAGgoC,cAClD,GAAIrO,EAAMp3B,QAAUoxC,EAAY,CAC9B,MAAM9J,EAAOlQ,EAAMp3B,OACbqxC,EAAYD,EAAa9J,EACzBzB,EAAW,gBAAgBj/B,IACjC,IAAI0qC,EAAQ,GACZ,IAAK,IAAI7zC,EAAI,EAAGA,EAAI6pC,IAAQ7pC,EAC1B6zC,GAAS,2BACK7zC,sCAAsC4zC,EAAY5zC,QAAQ25B,EAAM35B,uBAGhF,MAAM8uC,EAAO,kBACN1G,yBAAgCuL,2BAAoC9J,oBACvEgK,yBAGJxnB,EAAO+b,GAAY,IAAI,EAAAX,eAAeqH,E,KAGnCziB,CACT,CACUknB,mBACR,MAAMI,EAAazqC,KAAKy9B,QAAQgB,oBAAoBhO,MAAMp3B,OACpD8pB,EAA2C,CAAC,EAuBlD,OAtBAnjB,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAAC9C,EAAMnJ,KACjD,MAAM25B,EAAQzwB,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAG25B,MAClD,KAAMA,EAAMp3B,OAAS,GAAKo3B,EAAMp3B,OAASoxC,GAAa,CACpD,MAAM9J,EAAOlQ,EAAMp3B,OACbqxC,EAAYD,EAAa9J,EACzBzB,EAAW,sBAAsBj/B,IACvC,IAAI0qC,EAAQ,GACZ,IAAK,IAAI7zC,EAAI,EAAGA,EAAI6pC,EAAO,IAAK7pC,EAC9B6zC,GAAS,2BACK7zC,sCAAsC4zC,EAAY5zC,QAAQ25B,EAAM35B,uBAGhF,MAAM8uC,EAAO,kBACN1G,wBAA+BuL,2BAAoC9J,oBACtEgK,4BACYhK,EAAO,uBAAuB8J,EAAa,8BAC3C9J,EAAO,uBAAuB8J,EAAa,2BAG3DtnB,EAAO+b,GAAY,IAAI,EAAAX,eAAeqH,E,KAGnCziB,CACT,CACUonB,kBACR,MAAMpnB,EAA2C,CAAC,EAWlD,OAVAnjB,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAAC9C,EAAMnJ,KACjD,MAAM25B,EAAQzwB,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAG25B,MAC5CmQ,EAAU5gC,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAG8pC,QAC9CD,EAAOlQ,EAAMp3B,OACnB,IAAI6lC,EAAW,mBAAmBj/B,IAClCkjB,EAAO+b,GAAY,IAAI,EAAAX,eAAe4L,EAAkBS,oBAAoB1L,EAAUyB,EAAMC,IAC5F1B,EAAW,mBAAmBj/B,MAC9BkjB,EAAO+b,GACH,IAAI,EAAAX,eAAe4L,EAAkBS,oBAAoB1L,EAAUyB,EAAMC,EAAQrnC,QAAQ8rC,WAAW,IAEnGliB,CACT,CACAiX,2BAA2Bn6B,EAAc0gC,EAAcC,GACrD,IAAI+J,EAAQ,GACZ,IAAK,IAAI7zC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B6zC,GAAS,+BACa7zC,QAAQ8pC,EAAQ9pC,gBAGxC,MAAO,eACCmJ,iBAAoB0gC,2CAEtBgK,4CAIR,CACUL,kBACR,MAAMnnB,EAA2C,CAAC,EAWlD,OAVAnjB,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAAC9C,EAAMnJ,KACjD,MAAM25B,EAAQzwB,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAG25B,MAC5CmQ,EAAU5gC,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAG8pC,QAC9CD,EAAOlQ,EAAMp3B,OACnB,IAAI6lC,EAAW,mBAAmBj/B,IAClCkjB,EAAO+b,GAAY,IAAI,EAAAX,eAAe4L,EAAkBU,sBAAsB3L,EAAUyB,EAAMC,IAC9F1B,EAAW,mBAAmBj/B,MAC9BkjB,EAAO+b,GACH,IAAI,EAAAX,eAAe4L,EAAkBU,sBAAsB3L,EAAUyB,EAAMC,EAAQrnC,QAAQ8rC,WAAW,IAErGliB,CACT,CACAiX,6BAA6Bn6B,EAAc0gC,EAAcC,GACvD,MAAM+E,EAAe,GACrB,IAAK,IAAI7uC,EAAI,EAAGA,EAAI6pC,EAAO,IAAK7pC,EAC9B6uC,EAAajlC,KAAK,mBACR5J,iBAAiB8pC,EAAQ9pC,OACnC6uC,EAAajlC,KAAK,+BACI5J,QAAQ8pC,EAAQ9pC,OAIxC,OAFA6uC,EAAajlC,KAAK,mBACNigC,EAAO,gBACZ,gBACE1gC,iCAAoC0gC,kBACvCgF,EAAazqB,KAAK,sBAG1B,CACUsvB,mBACR,MAAMrnB,EAA2C,CAAC,EA0BlD,OAzBAnjB,KAAKy9B,QAAQyD,YAAYC,WAAWp+B,SAAQ,CAAC9C,EAAMnJ,KACjD,MAAM25B,EAAQzwB,KAAKy9B,QAAQ6D,oBAAoBxqC,GAAG25B,MAC5CkQ,EAAOlQ,EAAMp3B,OACb6lC,EAAW,oBAAoBj/B,IACrC,IAAI6qC,EAAY,GAChB,IAAK,IAAIh0C,EAAI,EAAGA,EAAI6pC,IAAQ7pC,EAC1Bg0C,GAAa,mBACLh0C,QAAQ25B,EAAM35B,MAExB,MAAM8uC,EAAO,kBACJ1G,+BAAsCyB,8BAC/BA,kBACVmK,6BACYnK,uOAUlBxd,EAAO+b,GAAY,IAAI,EAAAX,eAAeqH,EAAK,IAEtCziB,CACT,EA3JF,qB,yKCOA,MAAM4nB,EAAoB,CACxBra,QAAS,GACTpD,UAAW,YACX0d,cAAe,UACfC,YAAa,UACbhK,UAAW,YACX5T,OAAQ,eACR6d,kBAAmB,IAEfC,EAAoB,CACxBza,QAAS,kBACTpD,UAAW,KACX0d,cAAe,MACfC,YAAa,KACbhK,UAAW,UACX5T,OAAQ,cACR6d,kBAAmB,yBAGrB,SAAgBzL,EAAQ/O,GACtB,OAAmB,IAAZA,EAAgBqa,EAAcI,CACvC,CAFA,YAIA,iCAAsCza,GACpC,MAAMsQ,EAAOvB,EAAQ/O,GACrB,MAAO,GAAGsQ,EAAKtQ,gDAETsQ,EAAK1T,mCACL0T,EAAK1T,yCAEL0T,EAAKgK,yJAOb,EAEA,iCAAsCta,GACpC,MAAMsQ,EAAOvB,EAAQ/O,GACrB,MAAO,GAAGsQ,EAAKtQ,sGAIXsQ,EAAKiK,oCACLjK,EAAKkK,qaA4BX,EAEA,oCAAyCxa,EAAc0a,GAErD,MAAO,sCAESA,uFAHH3L,EAAQ/O,GAMZrD,2BAGX,C,mGCnGA,gBAOA,MAAa6c,UAAmB,EAAAtM,QAC9B7Q,YAAY0Q,GACVI,MAAMJ,EACR,CACAa,iBACE,MAAO,CAAC,CACV,CACAR,eACE,OAAO,OAAP,oDAAW99B,KAAKqrC,sBAAyBrrC,KAAKsrC,WAActrC,KAAKurC,cAAiBvrC,KAAKwrC,aACzF,CACUH,qBACR,MACM1K,EADe3gC,KAAKy9B,QAAQgB,oBACRhO,MAAMp3B,OAC1BoyC,EAAmC,CAACplC,IAAK,KAAME,IAAK,KAAM+c,IAAK,KAAMc,IAAK,MAC1EjB,EAA2C,CAAC,EAClD,IAAK,MAAMljB,KAAQwrC,EAAQ,CACzB,MAAMC,EAAQ,GAAGzrC,OACjB,IAAI0rC,EAAkB,GACtB,IAAK,IAAI70C,EAAI,EAAGA,EAAI6pC,IAAQ7pC,EAC1B60C,GAAmB,oBACV70C,MAAM20C,EAAOxrC,UAAanJ,kBAGrC,MAAM8uC,EAAO,kBACJ8F,aAAiB/K,oBAAuBA,oBAC3CgL,yBAGNxoB,EAAOuoB,GAAS,IAAI,EAAAnN,eAAeqH,E,CAGrC,OAAOziB,CACT,CACUmoB,UACR,MACM3K,EADe3gC,KAAKy9B,QAAQgB,oBACRhO,MAAMp3B,OAChC,IAAIsyC,EAAkB,GACtB,IAAK,IAAI70C,EAAI,EAAGA,EAAI6pC,IAAQ7pC,EAC1B60C,GAAmB,kBACV70C,YAAYA,gBAGvB,MAAM8uC,EAAO,gCACYjF,oBAAuBA,kBAC1CgL,qBAGN,MAAO,CAACL,QAAS,IAAI,EAAA/M,eAAeqH,GACtC,CAEU2F,aACR,MACM5K,EADe3gC,KAAKy9B,QAAQgB,oBACRhO,MAAMp3B,OAChC,IAAIsxC,EAAQ,+CAEKhK,2EAIjB,IAAK,IAAI7pC,EAAI,EAAGA,EAAI6pC,EAAO,IAAK7pC,EAC9B6zC,GAAS,+BACa7zC,qBACZA,4BAGZ6zC,GAAS,iCAEGhK,EAAO,wBAEnB,MAAMiF,EAAO,qCACiBjF,wCACxBgK,uBAGN,MAAO,CAACY,WAAY,IAAI,EAAAhN,eAAeqH,GACzC,CACU4F,aACR,MACM7K,EADe3gC,KAAKy9B,QAAQgB,oBACRhO,MAAMp3B,OAChC,IAAIsxC,EAAQ,gDAEMhK,wEAIlB,IAAK,IAAI7pC,EAAI,EAAGA,EAAI6pC,EAAO,IAAK7pC,EAC9B6zC,GAAS,+BACa7zC,4BACLA,cAGnB6zC,GAAS,wCAEUhK,EAAO,gBAE1B,MAAMiF,EAAO,gCACYjF,6BACnBgK,mBAGN,MAAO,CAACa,WAAY,IAAI,EAAAjN,eAAeqH,GACzC,EArGF,c,8GCNA,gBACA,UACA,UAEA,UACA,UACA,UACA,UAGA,UACA,UAeA,8BAGE7Y,YAAmBuK,GAAA,KAAAA,QAAAA,EACjBt3B,KAAK4rC,uBAAyB,IAAIvS,IAClCr5B,KAAK6rC,yBAA2B,IAAIxS,GACtC,CAKAyS,+BAA+Brb,EAA0Bsb,GACvD,OAAO,IAAAD,gCAA+B9rC,KAAKs3B,QAAQ0U,eAAgBvb,EAAOsb,EAC5E,CAEAE,eAAeC,EAAwCC,GACrD,GAAIA,EAAO9yC,OAAS6yC,EAAQ/K,WAAW9nC,OACrC,MAAM,IAAImF,MAAM,mCAAmC0tC,EAAQ/K,WAAW9nC,WAExE,GAAI6yC,EAAQ/K,WAAW9nC,SAAW6yC,EAAQE,WAAW/yC,OACnD,MAAM,IAAImF,MAAM,+CAIlB,MAAM6tC,EAAmC,GACzC,IAAK,IAAIv1C,EAAI,EAAGA,EAAIo1C,EAAQ/K,WAAW9nC,SAAUvC,EAC/Cu1C,EAAkBv1C,GAAKkJ,KAAKssC,uBAAuBH,EAAOr1C,GAAIo1C,EAAQE,WAAWt1C,IAGnF,MAAMq3B,EAzCN,EAAC+S,EAA4CmL,KAC3C,MAAMF,EACFE,EAAkBzT,KAAI2T,GAAW,GAAGA,EAAQzN,cAAc5jB,KAAK,QAAQqxB,EAAQvN,SAASuN,EAAQtN,WAC3F/jB,KAAK,KACd,IAAIiT,EAAM+S,EAAYjhC,KAKtB,OAJIihC,EAAYsL,YACdre,GAAO,IAAM+S,EAAYsL,UAAY,KAEvCre,GAAO,IAAMge,EACNhe,CAAG,EAgCAse,CAAwBP,EAASG,GAC7C,IAAIK,EAAW1sC,KAAKs3B,QAAQqV,eAAeC,YAAYze,GACvD,MAAM+S,EAAcwL,EAChBA,EAASxL,YACsC,mBAAtCgL,EAA8BpnC,IAAsBonC,EAA8BpnC,MAC9BonC,EAG3DzN,GAAsB,IAAAoO,oCACxB7sC,KAAKs3B,QAAQ0U,eAAgB9K,EAAY7T,OAAOqB,KAAMwS,EAAY7T,OAAO0e,aACvEe,EAAoB9sC,KAAK+sC,kBAAkBtO,EAAqByC,EAAY7T,OAAO1C,MAQzF,OANK+hB,IACHA,EAAW1sC,KAAKs3B,QAAQqV,eAAe3b,MAAMkQ,EAAamL,EAAmBS,GAC7E9sC,KAAKs3B,QAAQqV,eAAeK,YAAY7e,EAAKue,IAG/C1sC,KAAKitC,WAAWP,EAAUL,EAAmBS,GACtCA,CACT,CAEAI,IAAIhB,EAA4BC,GAE9B,OAD0BnsC,KAAKisC,eAAeC,EAASC,GAC9BgB,MAC3B,CAEQF,WAAWP,EAAoBP,EAAuB9e,GAE5D,IAAK,IAAIv2B,EAAI,EAAGA,EAAIq1C,EAAO9yC,SAAUvC,EACnC,KAAMq1C,EAAOr1C,GAAG4nC,WAAcgO,EAASxL,YAAYkL,WAAWt1C,KAAO,EAAAs2C,YAAYC,QAC/E,MAAM,IAAI7uC,MAAM,SAAS1H,mCAK7B,KAAMu2B,EAAOqR,WAAcgO,EAASxL,YAAY7T,OAAO0e,cAAgB,EAAAqB,YAAYC,QACjF,MAAM,IAAI7uC,MAAM,uCAGlBwB,KAAKs3B,QAAQqV,eAAeO,IAAIR,EAAUP,EAAQ9e,EACpD,CAaQif,uBAAuBa,EAAgBpB,GAC7C,IAAIuB,EAAKttC,KAAKutC,eAAeJ,EAAOK,OAAQzB,IAAgB,EAAAqB,YAAYC,QAExE,IAAKC,IAEHA,EAAKttC,KAAKutC,eAAeJ,EAAOK,OAAQzB,IAAgB,EAAAqB,YAAYC,QAChEC,GACF,OAAIvB,IAAgB,EAAAqB,YAAYC,OACvBrtC,KAAKk9B,KAAKoQ,GAEVttC,KAAKytC,OAAOH,GAKzB,IAAKA,EAAI,CACP,MAAMzH,GAAS,IAAAgH,oCAAmC7sC,KAAKs3B,QAAQ0U,eAAgBmB,EAAOze,KAAMqd,GAE5F,GAAIA,IAAgB,EAAAqB,YAAYM,oBAAqB,CACnD,MAAMC,EAAQ,EACRC,EAAW,EACXnd,EAAQ0c,EAAOze,KACrB,GAAqB,IAAjB+B,EAAMp3B,OAAc,CAQtB,MAAMw0C,EAAsB,CAACpd,EAAM,GAAI9nB,KAAK+R,KAAM+V,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAMmd,IAC9EE,GACF,IAAAjB,oCAAmC7sC,KAAKs3B,QAAQ0U,eAAgB6B,EAAqB9B,GACzF,IAAIz1C,EAAS62C,EAAOY,WACpB,GAAItd,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKmd,GAAa,EAAG,CACnD,MAAMI,EAAiBvd,EAAM,GACvBwd,EAAaxd,EAAM,GAAKA,EAAM,GAAKA,EAAM,GACzCyd,EAAavlC,KAAK+R,KAAKuzB,EAAaN,EAAQC,GAAYA,EAE9Dt3C,EAAS,IAAIwH,aADGkwC,EAAiBE,GAEjC,IAAK,IAAI32C,EAAI,EAAGA,EAAIy2C,IAAkBz2C,EAAG,CACvC,MAAM42C,EAAY52C,EAAI02C,EAChBG,EAAY72C,EAAI22C,EAAa32C,EAAIo2C,EAAQM,EAC/C33C,EAAO8V,IAAI+gC,EAAOY,WAAWpxC,SAASwxC,EAAWA,EAAYF,GAAaG,E,EAG9E,OAAOpuC,KAAK+sC,kBAAkBe,EAAgBX,EAAOxiB,KAAMr0B,EAAQ62C,EAAQ,E,EAI/E,GAAIpB,IAAgB,EAAAqB,YAAYC,OAAQ,CACtC,MAAMgB,GACF,IAAAC,8BAA6BtuC,KAAKs3B,QAAQ0U,eAAgBmB,EAAOze,KAAM,EAAG,GAAI,CAAC6f,WAAW,IACxFC,EAAsBxuC,KAAK+sC,kBAC7BsB,EAAuBlB,EAAOxiB,KAAMwiB,EAAOY,WAAYZ,EAAQ,GACnEG,EAAKttC,KAAKk9B,KAAKsR,E,MAEflB,EAAKttC,KAAK+sC,kBAAkBlH,EAAQsH,EAAOxiB,KAAMwiB,EAAOY,WAAYZ,EAAQ,E,CAGhF,OAAOG,CACT,CAWAmB,sCACI5I,EAAuB3W,EAA2BhsB,EAAyBiqC,GAC7E,OAAOntC,KAAK+sC,kBAAkBlH,EAAQ3W,EAAUhsB,EAAMiqC,EAAQ,EAChE,CAEQJ,kBACJlH,EAAuB3W,EAA2BhsB,EAA0BiqC,EAC5EuB,GACF,EAAArR,OAAOE,QAAQ,mBAAoB,iCAAiCgH,KAAKC,UAAUqB,OACnF,MAAM0G,EAAUvsC,KAAKs3B,QAAQqX,eAAeC,wBAAwB1f,EAAU2W,EAAQ3iC,EAAMwrC,GAC5F,OAAO1uC,KAAK6uC,6BAA6BhJ,EAAQ3W,EAAUqd,EAASY,EACtE,CAEA2B,gBAAgB1hB,EAAe2hB,GAC7B,MAAMC,EAAUhvC,KAAKssC,uBAAuBlf,EAAO,EAAAggB,YAAY6B,UACzDC,EAAkC,CACtCtB,SAAUoB,EAAQpB,SAClB3O,OAAQ+P,EAAQ/P,OAChBD,MAAOgQ,EAAQhQ,MAEfvO,MAA+B,IAAxBse,EAAa11C,OAAe01C,EAAe,CAAC,GACnDnO,QAAS,EAAAiC,UAAUsM,eAAeJ,GAClCjQ,cAAeiQ,GAGjB,OADuB/uC,KAAK6uC,6BAA6BK,EAAkB9hB,EAAMzC,KAAMqkB,EAAQzC,SACzEY,MACxB,CAEAiC,cAAchiB,EAAe2hB,GAC3B,MAAMC,EAAUhvC,KAAKssC,uBAAuBlf,EAAO,EAAAggB,YAAYC,QAG/D,IAAI,IAAAgC,gBAAejiB,EAAMsB,KAAMqgB,GAAe,CAC5C,MAAMG,EAAkC,CACtCtB,SAAUoB,EAAQpB,SAClB3O,OAAQ+P,EAAQ/P,OAChBD,MAAOgQ,EAAQhQ,MAEfvO,MAA+B,IAAxBse,EAAa11C,OAAe01C,EAAe,CAAC,GACnDnO,QAAS,EAAAiC,UAAUsM,eAAeJ,GAClCjQ,cAAeiQ,EACfrQ,UAAU,GAGZ,OADuB1+B,KAAK6uC,6BAA6BK,EAAkB9hB,EAAMzC,KAAMqkB,EAAQzC,SACzEY,M,CAGxB,MAAMmC,GAAqB,IAAAC,eAAcniB,EAAMsB,MACzC8gB,GAAsB,IAAAD,eAAcR,GAEpCU,EAAsBzvC,KAAKovC,cAAchiB,EAAOkiB,GAChDI,EAAuB1vC,KAAKktC,KAC9B,IAAAyC,wCAAuC3vC,KAAMyvC,EAAqBD,GAAsB,CAACC,IAE7F,OADqBzvC,KAAKovC,cAAcM,EAAsBX,EAEhE,CAEAa,KAAKxiB,EAAezC,GAClB,MAAMqkB,EAAUhvC,KAAKssC,uBAAuBlf,EAAO,EAAAggB,YAAY6B,UAE/D,OADuBjvC,KAAK6uC,6BAA6BG,EAA0BrkB,EAAMqkB,EAAQzC,SAC3EY,MACxB,CAEQ0B,6BACJhJ,EAAuB3W,EAA2Bqd,EAAuBY,EAAiB0C,GAC5F,MAAMC,EAAW,+BACZjK,GAAM,CACTsH,OAAQA,GACJ,IAAI,EAAA5c,OACIsV,EAAO/G,cAAe5P,GAAW6gB,GAAmB/vC,KAAKgwC,YAAYF,KACrE1Y,MAAO2Y,GAAmB/vC,KAAKiwC,iBAAiBH,SAAch2B,EAAW+1B,GACrFtD,YAGF,OADAvsC,KAAKkwC,eAAeJ,EAAY3C,OAAOK,OAAQsC,EAAajK,EAAOnH,UAC5DoR,CACT,CAEQvC,eAAesC,EAAqBnR,GAAW,GACrD,OAAO1+B,KAAKs3B,QAAQ6Y,cAAcN,GAAY7vC,KAAKs3B,QAAQiW,eAAesC,EAAUnR,GAChFA,EAA0C1+B,KAAK4rC,uBAAuB9mC,IAAI+qC,GAChC7vC,KAAK6rC,yBAAyB/mC,IAAI+qC,EAClF,CACAK,eAAeL,EAAqBvC,EAAiB5O,GAAW,GAC1D1+B,KAAKs3B,QAAQ6Y,cAAcN,GAC7B7vC,KAAKs3B,QAAQ4Y,eAAeL,EAAUvC,EAAI5O,IAEzCA,EAAW1+B,KAAK4rC,uBAAyB5rC,KAAK6rC,0BAA0Bz/B,IAAIyjC,EAAUvC,EAE3F,CACA8C,sBAAsBjD,EAAgBzO,GAAW,GAC/C,QAAS1+B,KAAKutC,eAAeJ,EAAOK,OAAQ9O,EAC9C,CAEAnC,UACEv8B,KAAKs3B,QAAQqX,eAAe0B,sBAC5BrwC,KAAK4rC,uBAAuB7oC,SAAQuqC,GAAMttC,KAAKs3B,QAAQqX,eAAe2B,eAAehD,KACrFttC,KAAK4rC,uBAAyB,IAAIvS,IAClCr5B,KAAK6rC,yBAAyB9oC,SAAQuqC,GAAMttC,KAAKs3B,QAAQqX,eAAe2B,eAAehD,KACvFttC,KAAK6rC,yBAA2B,IAAIxS,GACtC,CAEA2W,YAAYF,GACV,OAAIA,EAAYpR,SACP1+B,KAAKgwC,YAAYhwC,KAAKytC,OAAOqC,IAEjC9vC,KAAKs3B,QAAQ8E,QAAQe,UAAUoT,2BAG7BvwC,KAAKs3B,QAAQqX,eAAeqB,YAAYF,EAAaA,EAAY3C,OAAOxiB,KAAMmlB,EAAYlC,UAFxF5tC,KAAKs3B,QAAQqX,eAAe6B,yBAAwB,IAAAC,eAAczwC,KAAM8vC,GAGnF,CAEA1Y,uBAAuB0Y,GACrB,OAAIA,EAAYpR,SACP1+B,KAAKiwC,iBAAiBjwC,KAAKytC,OAAOqC,IAEtC9vC,KAAKs3B,QAAQ8E,QAAQe,UAAUoT,2BAG7BvwC,KAAKs3B,QAAQqX,eAAesB,iBAAiBH,EAAaA,EAAY3C,OAAOxiB,KAAMmlB,EAAYlC,UAF7F5tC,KAAKs3B,QAAQqX,eAAe6B,yBAAwB,IAAAC,eAAczwC,KAAM8vC,GAGnF,CAEA5S,KAAK9P,GAEH,OAD0BptB,KAAKisC,gBAAe,IAAAyE,6BAA4B1wC,KAAMotB,EAAM+f,QAAS,CAAC/f,EAAM+f,QAExG,CAEAM,OAAOrgB,GAEL,OAD0BptB,KAAKisC,gBAAe,IAAA0E,+BAA8B3wC,KAAMotB,EAAM+f,QAAS,CAAC/f,EAAM+f,QAE1G,E,6vBCpTF,gBACA,aACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aACA,UACA,UAEa,EAAAyD,uBAAuD,CAClE,CAAC,MAAO,GAAI,KAAMC,EAAS5kC,KAC3B,CAAC,OAAQ,GAAI,KAAM4kC,EAASC,MAC5B,CAAC,MAAO,GAAI,KAAMC,EAAU1qC,KAC5B,CAAC,MAAO,GAAI,KAAM0qC,EAAUzoB,KAC5B,CAAC,OAAQ,GAAI,KAAMuoB,EAASG,MAC5B,CAAC,OAAQ,GAAI,KAAMH,EAASI,MAE5B,CAAC,cAAe,GAAI,KAAM,EAAAC,YAAa,EAAAC,4BACvC,CAAC,qBAAsB,GAAI,KAAM,EAAAC,mBAAoB,EAAAC,mCACrD,CAAC,OAAQ,GAAI,KAAM,EAAAzB,KAAM,EAAA0B,qBACzB,CAAC,OAAQ,GAAI,KAAMT,EAASn2B,MAC5B,CAAC,OAAQ,GAAI,OAAQm2B,EAASU,KAAMV,EAASW,qBAC7C,CAAC,OAAQ,GAAI,MAAOX,EAASY,SAC7B,CAAC,SAAU,GAAI,KAAM,EAAAC,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,KAAM,EAAAC,KAAM,EAAAC,qBACzB,CAAC,gBAAiB,GAAI,KAAM,EAAAC,cAAe,EAAAC,8BAC3C,CAAC,MAAO,GAAI,KAAMlB,EAASmB,KAC3B,CAAC,MAAO,GAAI,KAAMjB,EAAU3sB,KAC5B,CAAC,UAAW,GAAI,KAAMysB,EAASoB,UAC/B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,6BACzC,CAAC,QAAS,GAAI,KAAMpB,EAAUqB,OAC9B,CAAC,MAAO,GAAI,KAAMvB,EAASwB,IAAKxB,EAASyB,oBACzC,CAAC,MAAO,GAAI,KAAMzB,EAAS0B,KAC3B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,QAAS,GAAI,KAAM5B,EAAS7kC,OAC7B,CAAC,YAAa,gBAAiB,KAAM,EAAA4lC,KAAM,EAAAC,qBAC3C,CAAC,SAAU,GAAI,KAAM,EAAAa,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,OAAQ,EAAAC,KAAM,EAAAC,uBAC3B,CAAC,OAAQ,GAAI,MAAO,EAAAD,KAAM,EAAAE,wBAC1B,CAAC,oBAAqB,GAAI,KAAM,EAAAC,kBAAmB,EAAAC,kCACnD,CAAC,gBAAiB,GAAI,KAAM,EAAAC,eAC5B,CAAC,UAAW,GAAI,KAAMlC,EAAUmC,SAChC,CAAC,WAAY,GAAI,KAAMrC,EAASoB,UAChC,CAAC,cAAe,GAAI,KAAM,EAAAkB,YAAa,EAAAC,4BACvC,CAAC,wBAAyB,GAAI,KAAM,EAAAC,sBAAuB,EAAAC,sCAC3D,CAAC,YAAa,GAAI,KAAMzC,EAAS0C,UAAW1C,EAAS2C,0BACrD,CAAC,OAAQ,GAAI,KAAMzC,EAAU0C,MAC7B,CAAC,MAAO,GAAI,KAAM5C,EAASz1C,KAC3B,CAAC,SAAU,GAAI,KAAM,EAAAs4C,OAAQ,EAAAC,uBAE7B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,MAAO,GAAI,KAAM9C,EAAUztB,KAC5B,CAAC,MAAO,GAAI,KAAMutB,EAASpuB,KAC3B,CAAC,MAAO,GAAI,KAAMouB,EAAS3qB,KAC3B,CAAC,KAAM,GAAI,KAAM6qB,EAAUxoB,IAC3B,CAAC,MAAO,GAAI,OAAQ,EAAAurB,MAAO,EAAAC,sBAC3B,CAAC,MAAO,GAAI,MAAO,EAAAC,OAAQ,EAAAC,uBAC3B,CAAC,MAAO,GAAI,KAAMlD,EAAU7zB,KAC5B,CAAC,QAAS,GAAI,KAAM6zB,EAAUmD,OAC9B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,uBACzC,CAAC,YAAa,GAAI,KAAM,EAAAC,UAAW,EAAAD,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAE,WAAY,EAAAF,uBACrC,CAAC,YAAa,GAAI,KAAM,EAAAG,UAAW,EAAAH,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAI,WAAY,EAAAJ,uBACrC,CAAC,YAAa,GAAI,OAAQ,EAAAK,UAAW,EAAAL,uBACrC,CAAC,kBAAmB,GAAI,KAAM,EAAAM,mBAAoB,EAAAN,uBAClD,CAAC,OAAQ,GAAI,KAAMvD,EAAS8D,MAC5B,CAAC,UAAW,GAAI,KAAM,EAAAC,SACtB,CAAC,SAAU,GAAI,KAAM,EAAAC,OAAQ,EAAAC,0BAC7B,CAAC,SAAU,GAAI,MAAO,EAAAD,OAAQ,EAAAE,0BAC9B,CAAC,QAAS,GAAI,KAAM,EAAAtkB,OACpB,CAAC,UAAW,GAAI,KAAMogB,EAASmE,SAC/B,CAAC,MAAO,GAAI,KAAMnE,EAASoE,KAC3B,CAAC,QAAS,GAAI,MAAO,EAAAC,UACrB,CAAC,QAAS,GAAI,MAAO,EAAA37C,MAAO,EAAA47C,sBAE5B,CAAC,UAAW,GAAI,OAAQ,EAAAC,QAAS,EAAAC,wBACjC,CAAC,UAAW,GAAI,MAAO,EAAAC,WAAY,EAAAC,2BAKnC,CAAC,QAAS,GAAI,OAAQ,EAAAzpC,MAAO,EAAA0pC,sBAC7B,CAAC,OAAQ,GAAI,KAAM3E,EAAS4E,MAC5B,CAAC,UAAW,GAAI,OAAQ,EAAAC,QAAS,EAAAC,wBACjC,CAAC,UAAW,GAAI,MAAO,EAAAC,YACvB,CAAC,MAAO,GAAI,KAAM7E,EAAUxqC,KAC5B,CAAC,MAAO,GAAI,KAAM,EAAAsvC,KAClB,CAAC,MAAO,GAAI,KAAMhF,EAASiF,KAC3B,CAAC,OAAQ,GAAI,KAAMjF,EAASkF,MAC5B,CAAC,OAAQ,GAAI,KAAM,EAAAC,MACnB,CAAC,YAAa,GAAI,KAAM,EAAAhQ,UAAW,EAAAiQ,0BACnC,CAAC,WAAY,GAAI,MAAO,EAAAC,SAAU,EAAAC,2BAClC,CAAC,WAAY,GAAI,IAAK,EAAAD,SAAU,EAAAE,2BAChC,CAAC,YAAa,GAAI,OAAQ,EAAAC,UAAW,EAAAC,0BACrC,CAAC,YAAa,GAAI,MAAO,EAAAC,cACzB,CAAC,MAAO,GAAI,KAAMxF,EAAUvoB,K,+ICvH9B,eAIA,UAEA,UAQMguB,EAAoC,CACxCv2C,KAAM,qBACNkhC,WAAY,CAAC,IAAK,QAAS,IAAK,OAAQ,YACxCiL,WACI,CAAC,EAAAgB,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,WAG9F,EAAAmC,mBACT,CAACqF,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAQR,CAPQsK,EAAiBvJ,IAAI,OAAD,wBAE1BsJ,GAAiC,CACpChK,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAM6xC,EAAoCF,EAAkBtK,EAAQhT,KAE3EgT,KAIG,EAAAkF,kCACR54C,IACC,MAAMm+C,EAAUn+C,EAAK0gC,WAAWO,SAAS,UAAW,MAC9Cmd,EAAWp+C,EAAK0gC,WAAWO,SAAS,WAAY,IAChDod,EAAUr+C,EAAK0gC,WAAWS,OAAO,UAAW,GAClD,OAAO,IAAAf,6BAA4B,CAAC+d,UAASC,WAAUC,WAAS,EAGtE,MAAMH,EACF,CAACF,EAAyCtK,EAAkBhT,KAEtD,MAAM6H,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAC1DiQ,EAAOwL,EAAO,GAAGzd,KAAKr1B,QACrB09C,EAAYC,GACfP,EAAiB3K,+BAA+BK,EAAO,GAAGzd,KAAM,EAAA0e,YAAY6B,UAC1EjG,EAAe,yBACTrI,iEAC2BoW,MAAeC,0CAC5BhW,EAAKC,kEACND,EAAKC,qEACDD,EAAKC,kEACZD,EAAKC,iGAE+B9H,EAAWyd,wBAErE,OAAO,OAAP,wBACKJ,GAAiC,CACpCnpB,OAAQ,CAACqB,KAAMyd,EAAO,GAAGzd,KAAM/D,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC9EjG,gBAAY,EAIlB0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,yCAGlB,MAAMI,EAAIutC,EAAO,GACX8K,EAAQ9K,EAAO,GACfpvC,EAAIovC,EAAO,GACX+K,EAAO/K,EAAO,GACdgL,EAAOhL,EAAO,GAIpB,GAAIvtC,EAAE8vB,KAAKr1B,OAAS,GAA2B,IAAtB49C,EAAMvoB,KAAKr1B,QAAkC,IAAlB0D,EAAE2xB,KAAKr1B,QAAqC,IAArB69C,EAAKxoB,KAAKr1B,QAC5D,IAArB89C,EAAKzoB,KAAKr1B,OACZ,MAAM,IAAImF,MAAM,wBAElB,GAAIy4C,EAAMvoB,KAAK,KAAO9vB,EAAE8vB,KAAK,IAAM3xB,EAAE2xB,KAAK,KAAO9vB,EAAE8vB,KAAK,IAAMwoB,EAAKxoB,KAAK,KAAO9vB,EAAE8vB,KAAK,IAClFyoB,EAAKzoB,KAAK,KAAO9vB,EAAE8vB,KAAK,GAC1B,MAAM,IAAIlwB,MAAM,wBAElB,GAAgB,YAAXI,EAAE+rB,MAAiC,YAAX/rB,EAAE+rB,MAAuC,YAAfssB,EAAMtsB,MAAqC,YAAfssB,EAAMtsB,MACzE,YAAX5tB,EAAE4tB,MAAiC,YAAX5tB,EAAE4tB,MAAsC,YAAdusB,EAAKvsB,MAAoC,YAAdusB,EAAKvsB,MACpE,YAAdwsB,EAAKxsB,MAAoC,YAAdwsB,EAAKxsB,KACnC,MAAM,IAAInsB,MAAM,8B,uSCzFpB,gBACA,UACA,UAEA,UAEA,SAAgB44C,IACd,MAAMn3C,EAAO,OASb,MAAO,CAAC2lC,KARK,aACL3lC,yDAGDA,sDAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBC,IACd,MAAMr3C,EAAO,OASb,MAAO,CAAC2lC,KARK,aACL3lC,yDAGDA,sDAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBE,IACd,MAAMt3C,EAAO,OASb,MAAO,CAAC2lC,KARK,aACL3lC,yDAGDA,sDAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBG,IACd,MAAMv3C,EAAO,OASb,MAAO,CAAC2lC,KARK,aACL3lC,yDAGDA,sDAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBI,IACd,MAAMx3C,EAAO,SASb,MAAO,CAAC2lC,KARK,aACL3lC,iEAGDA,kEAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBK,IACd,MAAMz3C,EAAO,WAYb,MAAO,CAAC2lC,KAXK,aACL3lC,gEAGDA,+HAOOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBM,IACd,MAAM13C,EAAO,QAYb,MAAO,CAAC2lC,KAXK,aACL3lC,gEAGDA,6JAOOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBO,IACd,MAAM33C,EAAO,OAcb,MAAO,CAAC2lC,KAbK,aACL3lC,+EAGDA,uNASOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBQ,IACd,MAAM53C,EAAO,MAcb,MAAO,CAAC2lC,KAbK,aACL3lC,+EAGDA,uNASOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBS,IACd,MAAM73C,EAAO,OAcb,MAAO,CAAC2lC,KAbK,aACL3lC,+EAGDA,uNASOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBU,IACd,OAoBF,SAA2BrM,GACzB,MAAMzrC,EAAO,GAAGyrC,KAShB,MAAO,CAAC9F,KARK,aACL3lC,qCACGyrC,yBAEJzrC,qCACIyrC,sBAGGzrC,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CA/BSW,CAAkB,MAC3B,CACA,SAAgBC,IACd,MAAMh4C,EAAO,SAcb,MAAO,CAAC2lC,KAbK,aACL3lC,sEAGDA,wNASOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CAhKA,YAYA,YAYA,YAYA,YAYA,cAYA,gBAeA,aAeA,YAiBA,WAiBA,YAiBA,YAGA,cA+BA,MAAMa,EACF,CAAChgB,EAAgCiU,EAAkBgM,EAClDC,EAAoCjM,EAAO,GAAGxhB,KAAM6N,KACnD,MAAMuT,EAAc7T,EAAQZ,QAAQ4F,KAAO,EAAAkQ,YAAYC,OAAS,EAAAD,YAAY6B,SAC5E,MAAO,CACLhvC,KAAMk4C,EAASl4C,KACfkhC,WAAY,CAAC,IAAK,KAClBiL,WAAY,CAACL,EAAaA,GAC1BS,UAAWhU,EACX1zB,IAAK,IAAMuzC,EAAwBngB,EAASiU,EAAQgM,EAAUC,GAC/D,EAGDC,EACF,CAACngB,EAAgCiU,EAAkBgM,EAClDC,EAAoCjM,EAAO,GAAGxhB,QAC7C,MAAMohB,EAAc7T,EAAQZ,QAAQ4F,KAAO,EAAAkQ,YAAYC,OAAS,EAAAD,YAAY6B,SACtEqJ,GAAe,EAAAzV,UAAU0V,SAASpM,EAAO,GAAGzd,KAAMyd,EAAO,GAAGzd,MAClE,IAAI8pB,EAAcrM,EAAO,GAAGzd,KAE5B,MAAM+pB,EAAmBvgB,EAAQZ,QAAQ4F,KAEzC,GAAIob,EAAa,CACf,MAAMI,EAAkB,EAAAtW,cAAcuW,UAAUxM,EAAO,GAAGzd,KAAMyd,EAAO,GAAGzd,MAAM,GAChF,IAAKgqB,EACH,MAAM,IAAIl6C,MAAM,gDAElBg6C,EAAcE,EACd,MAAMjO,EAAa+N,EAAYn/C,OACzBu/C,EAAkC,IAA1BzM,EAAO,GAAGzd,KAAKr1B,OAAe8yC,EAAO,GAAGzd,KAAKr1B,OAAS,EAC9Dw/C,EAAkC,IAA1B1M,EAAO,GAAGzd,KAAKr1B,OAAe8yC,EAAO,GAAGzd,KAAKr1B,OAAS,EAC9Dy/C,EAAmC,IAA1B3M,EAAO,GAAGzd,KAAKr1B,OAAe,qCAAuC,mBAC9E0/C,EAAmC,IAA1B5M,EAAO,GAAGzd,KAAKr1B,OAAe,qCAAuC,mBAE9E2nC,GAAO,IAAAvB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SACjDsY,EAAeyP,EAAmB,WACxCN,EAASvS,8HAIOuS,EAASl4C,wBACvB+gC,EAAK3T,4BAEiC,WACxC8qB,EAASvS,yCACiB6E,+BACXmO,6BACAC,gBACbC,cACAC,qBACOZ,EAASl4C,6CAGlB,MAAO,CACLA,KAAMk4C,EAASl4C,KACfkhC,WAAY,CAAC,IAAK,KAClBiL,WAAY,CAACL,EAAaA,GAC1B1e,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMytB,EAAkBrM,eACpD/C,eACAC,QAASwP,E,CAGb,MAAMzX,GAAO,IAAAvB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SACjDsY,EAAe,SACrBmP,EAASvS,4CAEG5E,EAAKC,6CACLD,EAAKC,iDACDkX,EAASl4C,wBACvB+gC,EAAK3T,gCAIP,MAAO,CACLptB,KAAMk4C,EAASl4C,KACfkhC,WAAY,CAAC,IAAK,KAClBiL,WAAY,CAACL,EAAaA,GAC1B1e,OAAQ,CAACqB,KAAMyd,EAAO,GAAGzd,KAAM/D,KAAMytB,EAAkBrM,eACvD/C,eACAC,SAAS,EACV,EAGM,EAAA5iC,IAAM,CAAC6xB,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQiL,KAAYjL,IAE3E,EAAA7jB,IAAM,CAAC4P,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQyL,IAAW,QAASzL,IAEnF,EAAA/nB,IAAM,CAAC8T,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQmL,KAAYnL,IAE3E,EAAAiG,MAAQ,CAACla,EAAgCiU,IACtC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQsL,IAAa,QAAStL,IAErF,EAAA+G,QAAU,CAAChb,EAAgCiU,IACxC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQuL,IAAe,QAASvL,IAEvF,EAAAsH,KAAO,CAACvb,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQwL,IAAY,QAASxL,IAEpF,EAAA7oB,IAAM,CAAC4U,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQoL,KAAYpL,IAE3E,EAAA5jB,GAAK,CAAC2P,EAAgCiU,IACnC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQ0L,IAAU,QAAS1L,IAElF,EAAAjvB,IAAM,CAACgb,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQ4L,KAAY5L,IAE3E,EAAA+H,MAAQ,CAAChc,EAAgCiU,IACtC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQ8L,KAAc9L,IAE7E,EAAA5lC,IAAM,CAAC2xB,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQqL,KAAYrL,IAE3E,EAAA3jB,IAAM,CAAC0P,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIgL,EAA8BhgB,EAASiU,EAAQ2L,IAAW,QAAS3L,G,mHCxShG,gBAGa,EAAAyD,KACT,CAAC1X,EAAgCiU,EAAkB6M,KACjDtC,EAAevK,GACR,CAACjU,EAAQ0X,KAAKzD,EAAO,GAAI6M,KAGzB,EAAA1H,oBAAgE74C,GACzE,EAAAwgD,UAAUC,wBAAwBzgD,EAAK0gC,WAAWS,OAAO,OAE7D,MAAM8c,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,0BAGlB,GAAuB,WAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,sB,6HCpBpB,gBAEA,UACA,UAGA,UAoHa,EAAA26C,oCACT,CAACjhB,EAAgCiU,EAAkBhT,KACjD,MAAMigB,GApH+BC,EAoHclN,EAAO9yC,OApHDmzC,EAoHSrT,EAAWX,SApHE,CACnFv4B,KAAM,kBACNkhC,WAAYh1B,MAAMunB,KAAK,CAACr6B,OAAQggD,IAAa,CAAC/gD,EAAGxB,IAAM,IAAIA,MAC3Ds1C,WAAYjgC,MAAMktC,GAAYC,KAAK,EAAAlM,YAAYC,QAC/Cb,cAJwC,IAAC6M,EAAoB7M,EAqHzD,OAAO,OAAP,wBAAW4M,GAAQ,CAAEt0C,IAAK,IA7G5B,EAACozB,EAAgCkhB,EAA2BjN,EAAkBoN,KAC5E,MAAMC,EAAarN,EAAO,GAAGzd,KAAKn1B,QAClC,GAAIggD,GAAQC,EAAWngD,QAAUkgD,GAAS,EAAIC,EAAWngD,OACvD,MAAM,IAAImF,MAAM,gEAEd+6C,EAAO,IACTA,EAAOC,EAAWngD,OAASkgD,GAI7B,MAAMf,EAAcgB,EAAWjgD,MAAM,GACrC,IAAK,IAAIzC,EAAI,EAAGA,EAAIq1C,EAAO9yC,OAAQvC,IAAK,CACtC,MAAM2iD,EAAatN,EAAOr1C,GAAG43B,KAAKn1B,QAClC,IAAK,IAAImgD,EAAY,EAAGA,EAAYF,EAAWngD,OAAQqgD,IAErD,GAAIA,IAAcH,EAChBf,EAAYe,IAASE,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAIl7C,MAAM,mC,CAKtB,MAAMmiC,EAAO6X,EAAYn/C,OACnBqnC,GAAS,IAAAiZ,aAAY,SAAUhZ,GAC/BiZ,GAAQ,IAAAtX,mBAAkB3B,GAC1BkZ,GAAgB,IAAAC,qBAEhBC,EAAS5N,EAAOvT,KAAI9hC,GAAKA,EAAE43B,OAC3Bkf,GAAW,IAAAlL,eAAc/B,GACzBqZ,EAAoB,IAAI7tC,MAAM4tC,EAAO1gD,OAAS,GAEpD2gD,EAAQ,GAAKD,EAAO,GAAGR,GACvB,IAAK,IAAIziD,EAAI,EAAGA,EAAIkjD,EAAQ3gD,OAAQvC,IAClCkjD,EAAQljD,GAAKkjD,EAAQljD,EAAI,GAAKijD,EAAOjjD,GAAGyiD,GAG1C,MAAMU,EAAUrM,EAAS2L,GACnBW,EAAetM,EAASr0C,OAAO,GAC/B4gD,EAAcvM,EAAS1yB,OAE7B,IAAIk/B,EAAkB,OAAOH,OAAaD,EAAQ,wDAEpCG,YAAsBD,EAAah/B,uBAEjD,IAAK,IAAIpkB,EAAI,EAAGA,EAAIkjD,EAAQ3gD,OAAQvC,IAAK,CACvC,MAAMmI,EAAQ+6C,EAAQljD,EAAI,GAC1BsjD,GAAmB,qBACTH,OAAaD,EAAQljD,UAAUmjD,QAAcD,EAAQljD,EAAI,gEAErDA,KAAKujD,EAA0BzM,EAAUqM,EAASh7C,8BACjDo7C,EAA0BH,EAAcD,EAASh7C,sB,CAGlE,MAAMq7C,EAAYN,EAAQ3gD,OACpB4F,EAAQ+6C,EAAQA,EAAQ3gD,OAAS,GACvC+gD,GAAmB,uDAELE,KAAaD,EAA0BzM,EAAUqM,EAASh7C,4BACzDo7C,EAA0BH,EAAcD,EAASh7C,QAEhE,MAAM+hC,GAAO,IAAAvB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SAEjDsY,EAAe,eACf6Q,+BACejM,EAAShV,KAAIh/B,GAAK,OAASA,uBACxCwgD,0DAIAR,mEACqBhM,EAASjN,EAAO,2BAC9BiN,EAASjN,EAAO,eAAeiN,EAASjN,EAAO,2BAC/CiN,EAASjN,EAAO,4DAEKD,mCAE5BA,EAAOC,EAAO,QAAQD,EAAOC,EAAO,4BAChCD,EAAOC,EAAO,QAAQ6X,EAAY7X,EAAO,4CACvBD,qCAGtBA,EAAOC,EAAO,QAAQD,EAAOC,EAAO,4BAChCD,EAAOC,EAAO,QAAQ6X,EAAY7X,EAAO,4CACvBD,qCAGtBA,EAAOC,EAAO,QAAQD,EAAOC,EAAO,4BAChCD,EAAOC,EAAO,QAAQ6X,EAAY7X,EAAO,0BACzCD,EAAOC,EAAO,QAAQ6X,EAAY7X,EAAO,4CACvBD,mCAEtBM,EAAK3T,0CAIb,OAAO,OAAP,wBACK+rB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAYC,QAC3ErE,eACAC,SAAS,GAAI,EAOiBsR,CAA8BriB,EAASkhB,EAAUjN,EAAQhT,EAAWogB,OAAK,EAG/G,MAAMc,EAA4B,CAACzM,EAAoBqM,EAAiBh7C,KACtE,MAAMu7C,EAAa5M,EAAStzC,QAAQ2/C,GAQpC,OAPYrM,EAAShV,KAAI,CAACxhC,EAAGqjD,IACvBA,IAAQD,EACH,GAAGpjD,OAAO6H,IAEV7H,IAGA8jB,MAAM,C,uHC1InB,eAKA,UAEA,UAMa,EAAAw2B,OACT,CAAC+E,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GACXsK,EAAiBnf,QAAQ4F,MAAQiP,EAAO,GAAGzd,KAAKr1B,OAAS,EAGpD,CADHo9C,EAAiBvJ,KAAI,IAAAiM,qCAAoC1C,EAAkBtK,EAAQhT,GAAagT,IAK7F,CADHsK,EAAiBvJ,IAAIwN,EAAsCjE,EAAkBtK,EAAQhT,GAAagT,KAK9G,MAwEMuO,EACF,CAACxiB,EAAgCiU,EAAkBhT,KACjD,MAAMigB,GA1EiCC,EA0EclN,EAAO9yC,OA1EDmzC,EA0ESrT,EAAWX,SA1EE,CACrFv4B,KAAM,SACNkhC,WAAYh1B,MAAMunB,KAAK,CAACr6B,OAAQggD,IAAa,CAAC/gD,EAAGxB,IAAM,IAAIA,MAC3Ds1C,WAAYjgC,MAAMktC,GAAYC,KAAK,EAAAlM,YAAY6B,UAC/CzC,cAJ0C,IAAC6M,EAAoB7M,EA2E3D,OAAO,OAAP,wBAAW4M,GAAQ,CAAEt0C,IAAK,IAnE5B,EAACozB,EAAgCkhB,EAA2BjN,EAAkBoN,KAC5E,MAAMC,EAAarN,EAAO,GAAGzd,KAAKn1B,QAClC,GAAIggD,GAAQC,EAAWngD,QAAUkgD,GAAS,EAAIC,EAAWngD,OACvD,MAAM,IAAImF,MAAM,gEAEd+6C,EAAO,IACTA,EAAOC,EAAWngD,OAASkgD,GAI7B,MAAMf,EAAcgB,EAAWjgD,MAAM,GACrC,IAAK,IAAIzC,EAAI,EAAGA,EAAIq1C,EAAO9yC,OAAQvC,IAAK,CACtC,MAAM2iD,EAAatN,EAAOr1C,GAAG43B,KAAKn1B,QAClC,IAAK,IAAImgD,EAAY,EAAGA,EAAYF,EAAWngD,OAAQqgD,IAErD,GAAIA,IAAcH,EAChBf,EAAYe,IAASE,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAIl7C,MAAM,mC,CAKtB,MAAMmiC,EAAO6X,EAAYn/C,OAEnBshD,EAAmB,IAAIxuC,MAAcggC,EAAO9yC,QAClD,IAAIuhD,EAAc,EAClB,IAAK,IAAI9jD,EAAI,EAAGA,EAAI6jD,EAAiBthD,SAAUvC,EAC7C8jD,GAAezO,EAAOr1C,GAAG43B,KAAK6qB,GAC9BoB,EAAiB7jD,GAAK8jD,EAGxB,IAAIC,EAAwC,GAG1CA,EADE1O,EAAO9yC,OAAS,EACsByhD,EAA4CH,GAE5CI,EAA4CJ,GAGtF,MAEM3R,EAAe,aAFqBgS,EAAqC7O,EAAO9yC,OAAQsnC,eAC9Csa,EAA2CN,eAIvFE,wCAC0Bla,2EAC+B4Y,kEAG7CA,gBAAmBA,oKAKnC,OAAO,OAAP,wBACKH,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAOkBkS,CAAgChjB,EAASkhB,EAAUjN,EAAQhT,EAAWogB,OAAK,EAG3GuB,EAA+CH,IACnD,MAAMQ,EAAaR,EAAiB/hB,KAAI,CAAC1Z,EAAMpoB,IAAM,YAAYooB,cAAiBpoB,UAElF,MAAO,sDACDqkD,EAAWjgC,KAAK,YAClB,EAIA6/B,EAA+CJ,GACjDG,EAA4CH,GAE1CK,EAAuC,CAACI,EAAyBC,KACrE,MAAMC,EAAsB,CAAC,mEAAmED,SAChG,IAAK,IAAIvkD,EAAI,EAAGA,EAAIskD,IAAmBtkD,EAC3B,IAANA,EACFwkD,EAAU56C,KAEN,yBAAuB5J,iBAAiBA,iBACnCA,IAAMskD,EAAkB,EACjCE,EAAU56C,KAEN,qBAAmB5J,iBAEvBwkD,EAAU56C,KAEN,8BAA4B5J,iBAAiBA,iBAMrD,OAHAwkD,EAAU56C,KACN,OAEG46C,EAAUpgC,KAAK,KAAK,EAGvB+/B,EAA8CN,IAClD,MAAMW,EAAsB,CAAC,sDAC7B,IAAK,IAAIxkD,EAAI,EAAGA,EAAI6jD,EAAiBthD,SAAUvC,EACnC,IAANA,EACFwkD,EAAU56C,KAEN,kBAAgB5J,eAAe6jD,EAAiB7jD,SAC3CA,IAAM6jD,EAAiBthD,OAAS,EACzCiiD,EAAU56C,KAEN,mBAAiBi6C,EAAiB7jD,SAEtCwkD,EAAU56C,KAEN,uBAAqB5J,eAAe6jD,EAAiB7jD,SAO7D,OAJAwkD,EAAU56C,KACN,OAGG46C,EAAUpgC,KAAK,KAAK,EAGhB,EAAAy2B,sBAAmEl5C,IAC5E,IAAAogC,6BAA4B,CAAC0gB,KAAM9gD,EAAK0gC,WAAWS,OAAO,UAE9D,MAAM8c,EAAkBvK,IACtB,IAAKA,GAAUA,EAAO9yC,OAAS,EAC7B,MAAM,IAAImF,MAAM,kBAGlB,MAAM+8C,EAAYpP,EAAO,GAAGxhB,KACtB6wB,EAAsBrP,EAAO,GAAGzd,KAAKr1B,OAG3C,GAAkB,WAAdkiD,EACF,MAAM,IAAI/8C,MAAM,sCAGlB,IAAK,MAAM4uB,KAAS+e,EAAQ,CAE1B,GAAI/e,EAAMzC,OAAS4wB,EACjB,MAAM,IAAI/8C,MAAM,oCAIlB,GAAI4uB,EAAMsB,KAAKr1B,SAAWmiD,EACxB,MAAM,IAAIh9C,MAAM,2C,qIC5LtB,gBAEA,UAEA,UAEA,UACA,UAyEa,EAAAi9C,2CACT,CAAChF,EAAyCtK,EAA2BhT,KAE/D,MAAMigB,GA1EkCsC,EA0EkBvP,EAAO9yC,OAAS,EA1EhBmzC,EA0EmBrT,EAAWX,SA1ES,CACzGv4B,KAAM,cACNkhC,WAAYua,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDtP,WAAYsP,EAAU,CAAC,EAAAtO,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzD,CAAC,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzDzC,cAL+C,IAACkP,EAAkBlP,EA2E1D,OAAO,OAAP,wBACK4M,GAAQ,CACXt0C,IAAK,IApEb,EAAC2xC,EAAyCtK,EAA2BiN,EACpEjgB,KACC,MACMwiB,EADUxP,EAAO9yC,OAAS,EACF,oCAAsC,GAC9DuiD,EAASzP,EAAO,GAAGzd,KAAKn1B,QACxBsiD,EAAS1P,EAAO,GAAGzd,KAAKn1B,QACxBuiD,EAAyBD,EAAO,GAAK1iB,EAAWwU,MACtD,EAAAtQ,OAAOE,QACH,cACA,WAAWpE,EAAW4iB,sBAAsB5iB,EAAW6iB,oBAAoB7iB,EAAWwU,sBAClFxU,EAAW8iB,qBAAqB9iB,EAAW+iB,iBAAiB/iB,EAAWyH,WAC/E,MAAM4X,GACF,IAAA2D,sBAAqBP,EAAQC,EAAQ1iB,EAAW6iB,UAAW7iB,EAAW+iB,KAAM/iB,EAAWyH,SACrFI,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,UAC1D,mBAAC0rB,EAAkB,gBAAEC,IAAmB,IAAAC,sBAAqBnjB,GAE7D6P,EAAe,mCACK7P,EAAWyH,QAAQ,OAAOzH,EAAWyH,QAAQ,oCAChDzH,EAAW+iB,KAAK,OAAO/iB,EAAW+iB,KAAK,WAChEE,oNAMkCN,2EAGMD,EAAO,6DACZA,EAAO,2DACNA,EAAO,mEACC1iB,EAAW6iB,UAAU,gDAE7BJ,EAAO,kFAIPC,EAAO,kEACC1iB,EAAW6iB,UAAU,8CAC7BJ,EAAO,8PAUzCD,UACAU,UACArb,EAAK3T,2CAGL,OAAO,OAAP,wBACK+rB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,eACAC,SAAS,GAAI,EAUEsT,CAAqC9F,EAAkBtK,EAAQiN,EAAUjgB,IAAW,C,6HCnF3G,gBACA,UACA,SAEa,EAAAqjB,sBACT,CAAC/F,EAAyCtK,EAA2BhT,KACnE,MAAMsjB,EAAStQ,EAAO,GAAGzd,KACnBguB,EAASvQ,EAAO,GAAGzd,KACnB8pB,GACF,IAAA2D,sBAAqBM,EAAQC,EAAQvjB,EAAW6iB,UAAW7iB,EAAW+iB,KAAM/iB,EAAWyH,SACrF+b,EAAYlG,EAAiBrH,cAAcjD,EAAO,GAAI,CAACsQ,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACrFG,EAAYnG,EAAiBrH,cAAcjD,EAAO,GAAI,CAACuQ,EAAO,GAAIA,EAAO,KAEzEG,EAAe1Q,EAAO9yC,OAAS,EAAI,CAACujD,EAAWD,EAAWxQ,EAAO,IAAM,CAACyQ,EAAWD,GACnFG,EAAerG,EAAiBvJ,KAClC,IAAA6P,qCAAoCtG,EAAkBoG,EAAc1jB,GAAa0jB,GACrF,OAAOpG,EAAiBrH,cAAc0N,EAActE,EAAY,EAGzD,EAAAwE,aACT,CAACvG,EAAyCtK,EAA2BhT,KACnE,MAAMsjB,EAAStQ,EAAO,GAAGzd,KACnBguB,EAASvQ,EAAO,GAAGzd,KACnB8pB,GACF,IAAA2D,sBAAqBM,EAAQC,EAAQvjB,EAAW6iB,UAAW7iB,EAAW+iB,KAAM/iB,EAAWyH,SAGrFqc,EAAexG,EAAiBvJ,KAClC,IAAAgQ,qCAAoCzG,EAAkBtK,EAAO,GAAIA,EAAO,GAAIqM,EAAarf,GACzF,CAACgT,EAAO,KAGNgR,EAAiB1G,EAAiBrH,cAAcjD,EAAO,GAAI,CAACuQ,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAKA,EAAO,KAGtGG,EACiB,IAAlB1Q,EAAO9yC,OAAgB,CAAC8jD,EAAgBF,EAAc9Q,EAAO,IAAM,CAACgR,EAAgBF,GACnFH,EAAerG,EAAiBvJ,KAClC,IAAA6P,qCAAoCtG,EAAkBoG,EAAc1jB,GAAa0jB,GAIrF,OADuBpG,EAAiBrH,cAAc0N,EAActE,EAC/C,C,qIC7C3B,eAKA,UAEA,UAGA,UAEM4E,EACF,CAACC,EAAetc,EAAgBuc,EAAaC,EAAgBC,EAAkBC,KAC1EJ,EAAQ,GAAKtc,EAASuc,GAAOC,EAAS,GAAKC,EAAW,EAAIC,EAE7DC,EAAoB,CAACC,EAAkB5B,EAAiBG,EAAgB5lB,EAAcC,KAC1F,MAAMqnB,EAAWj1C,KAAKqD,MAAM2xC,EAAW,GACvB,eAAZ5B,GACFG,EAAK5lB,GAAQsnB,EACb1B,EAAK3lB,GAAQonB,EAAWC,GACH,eAAZ7B,IACTG,EAAK5lB,GAAQqnB,EAAWC,EACxB1B,EAAK3lB,GAAQqnB,E,EA0BJ,EAAA9L,cACT,CAAC2E,EAAoCtK,EAAkBhT,KACrDud,EAAevK,EAAQhT,GAChB0kB,EAAgBpH,EAAkBtK,EAAQhT,IAGvD,MAAM0kB,EACF,CAACpH,EAAyCtK,EAAkBhT,KAC1D,MAAM2kB,EAAqBC,EAAmC5kB,EAAYgT,GAC1E,MAAO,CAAC6R,EAAwBvH,EAAkBtK,EAAQ2R,GAAoB,EAiF9EE,EACF,CAACvH,EAAyCtK,EAA2BhT,IAEhDsd,EAAiBvJ,IAbtC,EAACuJ,EAAyCtK,EAA2BhT,KAE/D,MAAMigB,GAtE4BsC,EAsEkBvP,EAAO9yC,OAAS,EAtEhBmzC,EAsEmBrT,EAAWX,SAtER,CAClFv4B,KAAM,gBACNkhC,WAAYua,EAAU,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC9CtP,WAAYsP,EAAU,CAAC,EAAAtO,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzD,CAAC,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzDzC,cALyC,IAACkP,EAAkBlP,EAuEpD,OAAO,OAAP,wBACK4M,GAAQ,CACXt0C,IAAK,IAhEb,EAAC2xC,EAAyCtK,EAA2BiN,EACpEjgB,KACC,MACM8kB,EADU9R,EAAO9yC,OAAS,EACJ,uBAAyB,MAC/CuiD,EAASzP,EAAO,GAAGzd,KACnBmtB,EAAS1P,EAAO,GAAGzd,KACnBotB,EAAyBD,EAAO,GAChCqC,EAAwBrC,EAAO,GAAK1iB,EAAWwU,MAC/C6K,EAAc,CAACrM,EAAO,GAAGzd,KAAK,GAAIyd,EAAO,GAAGzd,KAAK,GAAKyK,EAAWwU,SAAUxU,EAAWqf,aACtFxX,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,UAC1D,mBAAC0rB,EAAkB,gBAAEC,IAAmB,IAAAC,sBAAqBnjB,GAE7D6P,EAAe,mCACK7P,EAAWyH,QAAQ,OAAOzH,EAAWyH,QAAQ,oCAChDzH,EAAW+iB,KAAK,OAAO/iB,EAAW+iB,KAAK,WAChEE,wMAQkCN,yDACcA,2BAEhCmC,2DACkCC,iEACfA,2DACHrC,EAAO,uDACLA,EAAO,wDACN1iB,EAAW6iB,UAAU,eAAe7iB,EAAW6iB,UAAU,wLAKtDJ,EAAO,kDACPA,EAAO,yPAS3CS,UACArb,EAAK3T,2CAGL,OAAO,OAAP,wBACK+rB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,eACAC,SAAS,GAAI,EAUEkV,CAAuC1H,EAAkBtK,EAAQiN,EAAUjgB,IAAW,EAS/FilB,CAA6C3H,EAAkBtK,EAAQhT,GAAagT,GAI5F4R,EAAqC,CAAoC5kB,EAAegT,KAC5F,MAAM8P,EAAc9iB,EAAW8iB,YAAY1iD,QAE3C,GAAsC,IAAlC4/B,EAAW8iB,YAAY5iD,OACzB,IAAK,IAAIvC,EAAI,EAAGA,EAAIq1C,EAAO,GAAGzd,KAAKr1B,SAAUvC,EAC3CmlD,EAAYv7C,KAAKyrC,EAAO,GAAGzd,KAAK53B,IAIpC,MAAMolD,EAAO/iB,EAAW+iB,KAAK3iD,QACvBi/C,EAAcrf,EAAWqf,YAAYj/C,QAjIzC,EAACigD,EAA+ByC,EAAgCD,EAA8BD,EAC7FG,EAAgBtb,EAA4Byd,EAAkC7F,KAC7E,MAAM8F,EAAc9E,EAAWngD,OAAS,EAClCklD,EAAqC,IAAvB/F,EAAYn/C,OAChC,IAAK,IAAIvC,EAAI,EAAGA,EAAIwnD,IAAexnD,EAAG,CACpC,MAAM2mD,EAAUc,EAAc/E,EAAW1iD,EAAI,GAAK8pC,EAAQ9pC,GAAK0hD,EAAY1hD,GACrE6mD,EAAWP,EAAgB5D,EAAW1iD,EAAI,GAAI8pC,EAAQ9pC,GAAIolD,EAAKplD,GAAImlD,EAAYnlD,GAAIklD,EAAUllD,GAAI2mD,GACvGC,EAAkBC,EAAU5B,EAASG,EAAMplD,EAAGA,EAAIwnD,GAC9CC,GACF/F,EAAY93C,KACRkgC,EAAQ9pC,IAAM0iD,EAAW1iD,EAAI,GAAK,GAAKunD,EAAcvnD,IAAMmlD,EAAYnlD,GAAK,GAAKklD,EAAUllD,GAAK,EAChGolD,EAAKplD,GAAKolD,EAAKplD,EAAIwnD,G,GA0H/BE,CAHmBrS,EAAO,GAAGzd,KAIbutB,EAAa9iB,EAAW6iB,UAAW7iB,EAAW4iB,QAASG,EAAM/iB,EAAWyH,QACpFzH,EAAWklB,cAAe7F,GAG9B,MAAMiG,EAAmB3mD,OAAOC,OAAO,CAAC,EAAGohC,GAE3C,OADArhC,OAAOC,OAAO0mD,EAAe,CAACxC,cAAaC,OAAM1D,cAAahgB,SAAUW,EAAWX,WAC5EimB,CAAa,EAGT,EAAA1M,6BACRt5C,IACC,MAAM0gC,EAAa1gC,EAAK0gC,WAClBulB,GAAuB,IAAAC,mCAAkCxlB,GAEzD4iB,EAAU5iB,EAAWU,UAAU,WAAY,UAC3CmiB,EAAY7iB,EAAWa,QAAQ,YAAa,CAAC,EAAG,IAChD2T,EAAQxU,EAAWS,OAAO,QAAS,GACnCqiB,EAAc9iB,EAAWa,QAAQ,eAAgB,IACjDqkB,EAAgBllB,EAAWa,QAAQ,iBAAkB,CAAC,EAAG,IACzDwe,EAAcrf,EAAWa,QAAQ,eAAgB,IACjDkiB,EAAO/iB,EAAWa,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5C4G,EAAUzH,EAAWa,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,IAAAnB,6BAA2B,eAC7BkjB,UAASC,YAAWrO,QAAOsO,cAAaoC,gBAAe7F,cAAa0D,OAAMtb,WAAY8d,GAAsB,EAGvH,MAAMhI,EAAiB,CAACvK,EAAkBhT,KAGxC,IAAKgT,GAA6B,IAAlBA,EAAO9yC,QAAkC,IAAlB8yC,EAAO9yC,OAC5C,MAAM,IAAImF,MAAM,+BAIlB,GAA8B,IAA1B2tC,EAAO,GAAGzd,KAAKr1B,QAA0C,IAA1B8yC,EAAO,GAAGzd,KAAKr1B,OAChD,MAAM,IAAImF,MAAM,6CAMlB,GAFoB2tC,EAAO,GAAGzd,KAAK,KACXyd,EAAO,GAAGzd,KAAK,GAErC,MAAM,IAAIlwB,MAAM,qDAGlB,MAAMogD,EAAczS,EAAO,GAAGzd,KAAK,GAAKyK,EAAWwU,MAGnD,GAAsB,IAAlBxB,EAAO9yC,SAA2C,IAA1B8yC,EAAO,GAAGzd,KAAKr1B,QAAgB8yC,EAAO,GAAGzd,KAAK,KAAOkwB,GAC/E,MAAM,IAAIpgD,MAAM,gBAGlB,MAAM8/C,EAAcnS,EAAO,GAAGzd,KAAKr1B,OAAS,EAE5C,GAAI8/B,EAAW6iB,UAAU3iD,SAAWilD,EAClC,MAAM,IAAI9/C,MAAM,uBAAuB8/C,MAIzC,GAAInlB,EAAWyH,QAAQvnC,SAAWilD,EAChC,MAAM,IAAI9/C,MAAM,qBAAqB8/C,MAIvC,GAAInlB,EAAW+iB,KAAK7iD,SAAyB,EAAdilD,EAC7B,MAAM,IAAI9/C,MAAM,kBAAgC,EAAd8/C,MAIpC,GAAInlB,EAAWklB,cAAchlD,SAAWilD,EACtC,MAAM,IAAI9/C,MAAM,4BAA4B8/C,MAK9C,GAAsC,IAAlCnlB,EAAW8iB,YAAY5iD,QAAgB8/B,EAAW8iB,YAAY5iD,SAAW8yC,EAAO,GAAGzd,KAAKr1B,OAAS,EACnG,MAAM,IAAImF,MAAM,wBAIlB,GAAsC,IAAlC26B,EAAWqf,YAAYn/C,QAAgB8/B,EAAWqf,YAAYn/C,SAAW8yC,EAAO,GAAGzd,KAAKr1B,OAAS,EACnG,MAAM,IAAImF,MAAM,wBAIlB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,mDAGlB,GAAsB,IAAlB2tC,EAAO9yC,QAAmC,YAAnB8yC,EAAO,GAAGxhB,KACnC,MAAM,IAAInsB,MAAM,mD,2IC7PpB,eAKA,UAGA,UACA,UACA,UACA,UACA,UACA,UAGa,EAAA29C,qBACT,CAAC3C,EAA+ByC,EAAgCD,EAC/D6C,EAA+Bje,KAC9B,MAAMke,EAAYtF,EAAW,GACvBuF,EAAoBvF,EAAWjgD,MAAM,GACrC+kD,EAAcS,EAAkB1lD,OAChC2lD,EAAc/C,EAAY,GAE1BgD,EADqBhD,EAAY1iD,MAAM,GACCq/B,KAAI,CAACtgC,EAAGxB,IAAMwB,GAAKA,EAAI,IAAM0jD,EAAUllD,GAAK,KACpFooD,EAA2BH,EAAkBnmB,KAAI,CAACtgC,EAAGxB,IAAMwB,EAAIumD,EAAW/nD,GAAK+nD,EAAW/nD,EAAIwnD,KAC9Fa,EACFD,EAAyBtmB,KAAI,CAACtgC,EAAGxB,IAAM6R,KAAKqD,OAAO1T,EAAI2mD,EAAmBnoD,GAAK8pC,EAAQ9pC,IAAM8pC,EAAQ9pC,MAEzG,MADoB,CAACgoD,EAAWE,GAAatN,UAAUyN,EACrC,EAYX,EAAAvN,KACT,CAAC6E,EAAoCtK,EAAkBhT,KACrDud,EAAevK,EAAQhT,GAChBimB,EAAO3I,EAAkBtK,EAAQhT,IAG9C,MAAMimB,EACF,CAAC3I,EAAyCtK,EAAkBhT,KAC1D,MAAM2kB,EAAqBuB,EAA0BlmB,EAAYgT,GAC3DmT,EAAW7I,EAAiBnf,QAAQ4F,KACpCqiB,EAAoD,IAAtCzB,EAAmB7B,YAAY,IAAkD,IAAtC6B,EAAmB7B,YAAY,GAC9F,OAAI6B,EAAmBnQ,MAAQ,EAGtB,CAFQ8I,EAAiBvJ,KAC5B,IAAAuO,4CAA2ChF,EAAkBtK,EAAQ2R,GAAqB3R,IAErFoT,GAAeD,EACjB,CAACE,EAAwB/I,EAAkBtK,EAAQ2R,IACjDwB,GAAsC,IAA1BnT,EAAO,GAAGzd,KAAKr1B,QAAsC,IAAtB8yC,EAAO,GAAGzd,KAAK,KAAa6wB,EACzE,EAAC,IAAAvC,cAAavG,EAAkBtK,EAAQ2R,IAExC,CAAC2B,EAAehJ,EAAkBtK,EAAQ2R,G,EAInD0B,EACF,CAAC/I,EAAyCtK,EAA2BhT,KACnE,MAAMsjB,EAAStQ,EAAO,GAAGzd,KACnBguB,EAASvQ,EAAO,GAAGzd,KACnB8pB,GACF,IAAA2D,sBAAqBM,EAAQC,EAAQvjB,EAAW6iB,UAAW7iB,EAAW+iB,KAAM/iB,EAAWyH,SACrF+b,EAAYlG,EAAiB3H,gBAAgB3C,EAAO,GAAI,CAACsQ,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACvFG,EAAYnG,EAAiB3H,gBAAgB3C,EAAO,GAAI,CAACuQ,EAAO,GAAIA,EAAO,KAE3EG,EAAe1Q,EAAO9yC,OAAS,EAAI,CAACujD,EAAWD,EAAWxQ,EAAO,IAAM,CAACyQ,EAAWD,GACnFG,EAAerG,EAAiBvJ,KAAI,IAAAwS,+BAA8B7C,EAAc1jB,GAAa0jB,GACnG,OAAOpG,EAAiB3H,gBAAgBgO,EAActE,EAAY,EAGlEiH,EACF,CAAChJ,EAAyCtK,EAA2BhT,KACnE,MAAMsjB,EAAStQ,EAAO,GAAGzd,KACnBguB,EAASvQ,EAAO,GAAGzd,KACnB8pB,GACF,IAAA2D,sBAAqBM,EAAQC,EAAQvjB,EAAW6iB,UAAW7iB,EAAW+iB,KAAM/iB,EAAWyH,SACrF+e,EAAUlJ,EAAiBvJ,KAC7B,IAAA0S,+BAA8BnJ,EAAkBtK,EAAO,GAAIA,EAAO,GAAIqM,EAAarf,GAAa,CAACgT,EAAO,KAEtG0T,EAAqC,IAAlB1T,EAAO9yC,OAAe,CAACsmD,EAASxT,EAAO,GAAIA,EAAO,IAAM,CAACwT,EAASxT,EAAO,IAGlG,OAFesK,EAAiBvJ,KAC5B,IAAA4S,mCAAkCrJ,EAAkBtK,EAAQqM,EAAarf,GAAa0mB,EAC7E,EAGbR,EAA4B,CAA2BlmB,EAAegT,KAC1E,MAAM8P,EAAc9iB,EAAW8iB,YAAY1iD,QAE3C,GAAsC,IAAlC4/B,EAAW8iB,YAAY5iD,OACzB,IAAK,IAAIvC,EAAI,EAAGA,EAAIq1C,EAAO,GAAGzd,KAAKr1B,SAAUvC,EAC3CmlD,EAAYv7C,KAAKyrC,EAAO,GAAGzd,KAAK53B,IAGpC,MAAMolD,EAAO/iB,EAAW+iB,KAAK3iD,QAC7B,EAAAwmD,aAAaC,yBACT7T,EAAO,GAAGzd,KAAMyK,EAAWyH,QAASzH,EAAW6iB,UAAWC,EAAaC,EAAM/iB,EAAW4iB,SAG5F,MAAM0C,EAAmB3mD,OAAOC,OAAO,CAAC,EAAGohC,GAE3C,OADArhC,OAAOC,OAAO0mD,EAAe,CAACxC,cAAaC,OAAM1jB,SAAUW,EAAWX,WAC/DimB,CAAa,EAGT,EAAA5M,oBAA+Dp5C,IAC1E,MAAM0gC,EAAa1gC,EAAK0gC,WAClBulB,GAAuB,IAAAC,mCAAkCxlB,GAEzD4iB,EAAU5iB,EAAWU,UAAU,WAAY,UAC3CmiB,EAAY7iB,EAAWa,QAAQ,YAAa,CAAC,EAAG,IAChD2T,EAAQxU,EAAWS,OAAO,QAAS,GACnCqiB,EAAc9iB,EAAWa,QAAQ,eAAgB,IACjDkiB,EAAO/iB,EAAWa,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5C4G,EAAUzH,EAAWa,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,IAAAnB,6BAA2B,eAAEkjB,UAASC,YAAWrO,QAAOsO,cAAaC,OAAMtb,WAAY8d,GAAsB,EAGtH,MAAMhI,EAAiB,CAACvK,EAAkBhT,KAGxC,IAAKgT,GAA6B,IAAlBA,EAAO9yC,QAAkC,IAAlB8yC,EAAO9yC,OAC5C,MAAM,IAAImF,MAAM,+BAIlB,GAA8B,IAA1B2tC,EAAO,GAAGzd,KAAKr1B,QAA0C,IAA1B8yC,EAAO,GAAGzd,KAAKr1B,OAChD,MAAM,IAAImF,MAAM,6CAMlB,GAFoB2tC,EAAO,GAAGzd,KAAK,KACXyd,EAAO,GAAGzd,KAAK,GAAKyK,EAAWwU,MAErD,MAAM,IAAInvC,MAAM,qDAIlB,GAAsB,IAAlB2tC,EAAO9yC,SAA2C,IAA1B8yC,EAAO,GAAGzd,KAAKr1B,QAAgB8yC,EAAO,GAAGzd,KAAK,KAAOyd,EAAO,GAAGzd,KAAK,IAC9F,MAAM,IAAIlwB,MAAM,gBAGlB,MAAM8/C,EAAcnS,EAAO,GAAGzd,KAAKr1B,OAAS,EAE5C,GAAI8/B,EAAW6iB,UAAU3iD,SAAWilD,EAClC,MAAM,IAAI9/C,MAAM,uBAAuB8/C,MAIzC,GAAInlB,EAAWyH,QAAQvnC,SAAWilD,EAChC,MAAM,IAAI9/C,MAAM,qBAAqB8/C,MAIvC,GAAInlB,EAAW+iB,KAAK7iD,SAAyB,EAAdilD,EAC7B,MAAM,IAAI9/C,MAAM,kBAAgC,EAAd8/C,MAKpC,GAAsC,IAAlCnlB,EAAW8iB,YAAY5iD,QAAgB8/B,EAAW8iB,YAAY5iD,SAAW8yC,EAAO,GAAGzd,KAAKr1B,OAAS,EACnG,MAAM,IAAImF,MAAM,wBAIlB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,0CAGlB,GAAsB,IAAlB2tC,EAAO9yC,QAAmC,YAAnB8yC,EAAO,GAAGxhB,KACnC,MAAM,IAAInsB,MAAM,0C,oIC7KpB,gBAOa,EAAA0zC,aACT,CAACuE,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GACf,MAAM8T,EAAY9mB,EAAW8mB,UACvBC,EAAeD,EAAYA,EAC3BE,EAAoC,QAApBhnB,EAAWinB,KAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACjFC,EAAwC,QAApBlnB,EAAWinB,KACjC,CACEjU,EAAO,GAAGzd,KAAK,GAAIuxB,EAAWA,EAAW9T,EAAO,GAAGzd,KAAK,GAAKwxB,EAAc/T,EAAO,GAAGzd,KAAK,GAC1Fyd,EAAO,GAAGzd,KAAK,IAEjB,CACEyd,EAAO,GAAGzd,KAAK,GAAIyd,EAAO,GAAGzd,KAAK,GAAKwxB,EAAcD,EAAWA,EAAW9T,EAAO,GAAGzd,KAAK,GAC1Fyd,EAAO,GAAGzd,KAAK,IASf4xB,EAAsB7J,EAAiB3H,gBAAgB3C,EAAO,GAAIkU,GAGlEE,EAA2C,CAACC,KAAML,EAAe3nB,SAAU,GAAG2nB,MAC7EM,IAAmB,IAAAza,WAAUyQ,EAAkB,CAAC6J,GAAsBC,GAGvEG,EAAqB,CACzBvU,EAAO,GAAGzd,KAAK,GAAIyd,EAAO,GAAGzd,KAAK,GAAKwxB,EAAc/T,EAAO,GAAGzd,KAAK,GAAKuxB,EACzE9T,EAAO,GAAGzd,KAAK,GAAKuxB,GAGtB,MAAO,CADQxJ,EAAiB3H,gBAAgB2R,EAAiBC,GAClD,EAGR,EAAAvO,4BACR15C,IAEC,MAAMwnD,EAAYxnD,EAAK0gC,WAAWS,OAAO,aACzC,GAAIqmB,EAAY,EACd,MAAM,IAAIzhD,MAAM,qCAAqCyhD,sBAEvD,MAAMG,EAAO3nD,EAAK0gC,WAAWU,UAAU,OAAQ,OAC/C,GAAa,QAATumB,GAA2B,QAATA,EACpB,MAAM,IAAI5hD,MAAM,sBAAsB4hD,sBAExC,MAAO,CAACA,OAAMH,YAAU,EAG9B,MAAMvJ,EAAkBvK,IACtB,GAAsB,IAAlBA,EAAO9yC,OACT,MAAM,IAAImF,MAAM,yCAAyC2tC,EAAO9yC,UAKlE,GAAuB,WAAnB8yC,EAAO,GAAGxhB,MAA+C,IAA1BwhB,EAAO,GAAGzd,KAAKr1B,OAChD,MAAM,IAAI0mB,UAAU,oD,2HCtExB,gBACA,UAEA,UAEA,UACA,UA2Da,EAAA+/B,kCACT,CAACrJ,EAAyCtK,EAA2BqM,EACpErf,KACC,MAAMigB,EA5D4B,EAACsC,EAAkBviB,KAA6C,CACtGl5B,KAAM,iBACNkhC,WAAYua,EAAU,CAAC,SAAU,IAAK,KAAO,CAAC,SAAU,KACxDtP,WAAYsP,EAAU,CAAC,EAAAtO,YAAY6B,SAAU,EAAA7B,YAAYM,oBAAqB,EAAAN,YAAY6B,UACpE,CAAC,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAYM,qBACzDlV,SAAUW,EAAWwnB,qBAuDAC,CAAgCzU,EAAO9yC,OAAS,EAAG8/B,GACpE,OAAO,OAAP,wBACKigB,GAAQ,CACXt0C,IAAK,IAtDT,EAAC2xC,EAAyC2C,EAA2BjN,EACpEqM,EAAuBrf,KACtB,MAAMsjB,EAAStQ,EAAO,GAAGzd,KACnBguB,EAASvQ,EAAO,GAAGzd,KACnBmf,EAAsB,CAAC6O,EAAO,GAAI/zC,KAAK+R,KAAM+hC,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAM,IAClFmE,GAAc,IAAAC,qBAAoBrE,EAAQC,EAAQlE,IACjDuI,EAAQC,GACXvK,EAAiB3K,+BAA+B+B,EAAqB,EAAAT,YAAYM,qBAE/EuT,EAAgB,EAAApe,UAAUsM,eAAe0R,IACxCK,EAAaC,GAChB1K,EAAiB3K,+BAA+B+U,EAAa,EAAAzT,YAAYM,qBACvE/M,EAAO6X,EAAYn/C,OAEnB+nD,EAAajV,EAAO9yC,OAAS,EAAK,MAAQ,QAC1CgoD,EAAY14C,KAAK+R,KAAK+hC,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAK,IAC1D,mBAACN,EAAkB,gBAAEC,IAAmB,IAAAC,sBAAqBnjB,GAC7D6H,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAC1DsY,EAAe,KACzBoT,gCAC0Bzb,iLAOOsgB,EAAc,oBAAoBA,EAAc,oBACzEA,EAAc,0CACYpT,EAAoB,wBACtCuT,6BACMC,mEAC+BH,MAAgBC,6DAChBJ,MAAWC,yBAC/ChgB,EAAKC,oCAAoCD,EAAKC,kFAI7Dob,wBAGE,OAAO,OAAP,wBACKjD,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAUDsY,CAA4B7K,EAAkB2C,EAAUjN,EAAQqM,EAAarf,IAAW,C,yHCrE3G,gBAGa,EAAAqZ,QACT,CAACiE,EAAyCtK,EAAkBoN,KAC1D7C,EAAevK,EAAQoN,GAEvB,MAAMgI,EAAa,EAAA1e,UAAU2e,aAAarV,EAAO,GAAGzd,KAAM6qB,GAC1D,MAAO,CAAC9C,EAAiB3H,gBAAgB3C,EAAO,GAAIoV,GAAY,EAGzD,EAAA9O,uBAA0Dh6C,GACnEA,EAAK0gC,WAAWS,OAAO,OAAQ,GAEnC,MAAM8c,EAAiB,CAACvK,EAAkBoN,KACxC,IAAKpN,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,6BAGlB,MAAM5H,EAAIu1C,EAAO,GAAGzd,KAAKr1B,OACzB,GAAU,IAANzC,EACF,MAAM,IAAI4H,MAAM,mCAGlB,GAAI+6C,GAAQ3iD,GAAK2iD,EAAO3iD,EACtB,MAAM,IAAI4H,MAAM,gBAIlB,GAAuB,WAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,kC,kJChCpB,gBAGA,UASA,gCAAqC26B,GACnC,IAAIsoB,EACJ,OAAQtoB,EAAWuoB,YACjB,IAAK,OACHD,GAAO,IAAAE,YACP,MACF,IAAK,UACHF,GAAO,IAAAG,eACP,MACF,IAAK,OACHH,GAAO,IAAAI,UAAS1oB,EAAW2oB,QAAU3oB,EAAW4oB,SAChD,MAEF,QACE,MAAO,CAAC3F,mBAAoB,GAAIC,gBAAiB,IAGrD,MAAM2F,EAAiBP,EAAKxhD,KAG5B,MAAO,CAACm8C,mBAFmBqF,EAAK7b,KAEJyW,gBADJ,WAAW2F,aAErC,EAEa,EAAArD,kCAAqCxlB,IAChD,MAAMuoB,EAAavoB,EAAWU,UAAU,aAAc,IAEtD,GAAmB,SAAf6nB,EAAuB,CACzB,MAAOI,EAASC,GAAW5oB,EAAWY,UAAU,oBAAqB,CAAC,EAAAkoB,SAAU,EAAAC,WAChF,MAAO,CAACR,aAAYK,UAASD,UAASnB,mBAAoB,GAAGe,KAAcI,KAAWC,I,CAExF,MAAO,CAACL,aAAYf,mBAAoBe,EAAW,C,uHC3CrD,eAEA,SAEA,UAEA,UAMa,EAAAhP,OACT,CAAC+D,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,EAAQhT,EAAWogB,MAE3B,CADQ9C,EAAiBvJ,IAAIiV,EAA8B1L,EAAkBtK,EAAQhT,GAAagT,KAIlG,EAAAwG,sBAAmEl6C,IAC5E,IAAAogC,6BAA4B,CAAC0gB,KAAM9gD,EAAK0gC,WAAWS,OAAO,OAAQ,KAEtE,MAAMwoB,EAAwB,CAC5BniD,KAAM,SACNkhC,WAAY,CAAC,IAAK,KAClBiL,WAAY,CAAC,EAAAgB,YAAY6B,SAAU,EAAA7B,YAAY6B,WAmD3CkT,EACF,CAACjqB,EAAgCiU,EAAkBhT,KACjD,MAAMigB,EAAW,OAAH,wBAAOgJ,GAAqB,CAAE5V,UAAWrT,EAAWX,WAClE,OAAO,OAAP,wBAAW4gB,GAAQ,CAAEt0C,IAAK,IAlD5B,EAACozB,EAAgCkhB,EAA2BjN,EAAkBoN,KAC5E,MAAMC,EAAarN,EAAO,GAAGzd,KAAKn1B,QAC5B8oD,EAAiBlW,EAAO,GAAGzd,KAAKn1B,QAChCi/C,EAAc,IAAIrsC,MAAMqtC,EAAWngD,OAASgpD,EAAehpD,OAAS,GAE1EkgD,EAAO,EAAA1W,UAAUyf,cAAc/I,EAAMC,EAAWngD,QAChD,MAAMkpD,EAAyB,GAC/B,IAAK,IAAIzrD,EAAI,EAAGA,EAAI0hD,EAAYn/C,OAAQvC,IAMlCA,EAAIyiD,GACNf,EAAY1hD,GAAK0iD,EAAW1iD,GAC5ByrD,EAAa7hD,KAAK,YAAY5J,kBAAkBA,QAE5CA,EAAIyiD,EAAO8I,EAAehpD,QAC5Bm/C,EAAY1hD,GAAKurD,EAAevrD,EAAIyiD,GACpCgJ,EAAa7hD,KAAK,gBAAgB5J,EAAIyiD,kBAAqBziD,SAE3D0hD,EAAY1hD,GAAK0iD,EAAW1iD,EAAIurD,EAAehpD,OAAS,GACxDkpD,EAAa7hD,KAAK,YAAY5J,EAAIurD,EAAehpD,OAAS,kBAAkBvC,QAKlF,MAGMkyC,EAAe,uCAHPwP,EAAYn/C,QAAU,+BACtBmgD,EAAWngD,sCACVgpD,EAAehpD,QAAU,8CAMpCkpD,EAAarnC,KAAK,6EAETq+B,wBAA2BC,EAAWD,mDAGnD,OAAO,OAAP,wBACKH,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAOkBwZ,CAAwBtqB,EAASkhB,EAAUjN,EAAQhT,EAAWogB,OAAK,EAGnG7C,EAAiB,CAACvK,EAAkBoN,KACxC,IAAKpN,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,6BAElB,MAAM68C,EAAalP,EAAO,GAAGzd,KAAKr1B,OAClC,GAAIgiD,EAAa,EACf,MAAM,IAAI78C,MAAM,wBAElB,GAAI+6C,GAAQ8B,GAAc9B,EAAO8B,EAAa,EAC5C,MAAM,IAAI78C,MAAM,iBAElB,IAA8C,IAA1C,EAAAikD,aAAanoD,QAAQ6xC,EAAO,GAAGxhB,MACjC,MAAM,IAAInsB,MAAM,sBAElB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,MAAuC,UAAnBwhB,EAAO,GAAGxhB,KAC1C,MAAM,IAAInsB,MAAM,qB,+ICjGpB,eAIA,UAEA,UAUa,EAAAo0C,KACT,CAAC6D,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,EAAQhT,GAEhB,CADQsd,EAAiBvJ,IAAIwV,EAA4BvW,EAAQhT,GAAagT,KAI3F,MAAMwW,EAAsB,CAAClqD,EAAkBmqD,KAC7C,MAAMC,EAAiD,IAAxCpqD,EAAK0gC,WAAWS,OAAO,SAAU,GAC1CkpB,EAAiD,IAAxCrqD,EAAK0gC,WAAWS,OAAO,SAAU,GAC1CmpB,EAAQtqD,EAAK0gC,WAAWO,SAAS,QAAS,GAC1CspB,EAAOvqD,EAAK0gC,WAAWO,SAAS,OAAQ,GAC9C,OAAO,IAAAb,6BAA4B,CAACgqB,SAAQC,SAAQC,QAAOC,OAAMJ,eAAa,EAGnE,EAAA/P,sBAAiEp6C,GAC1EkqD,EAAoBlqD,GAAM,GAEjB,EAAAq6C,uBAAkEr6C,GAC3EkqD,EAAoBlqD,GAAM,GAE9B,MAAMiqD,EAA8B,CAACvW,EAAkBhT,KACrD,MAAMigB,EAAW,CACfn5C,KAAM,OACNkhC,WAA8B,IAAlBgL,EAAO9yC,OAAe,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC1D+yC,WAA8B,IAAlBD,EAAO9yC,OAAe,CAAC,EAAA+zC,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzD,CAAC,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACrE9gB,IAAKgL,EAAWX,UAGlB,OAAO,OAAP,wBAAW4gB,GAAQ,CAAEt0C,IAAK,IAAMm+C,EAAsB7J,EAAUjN,EAAQhT,IAAW,EAG/E8pB,EACF,CAAC7J,EAA2BjN,EAAkBhT,KAC5C,MAAM+pB,EAAS/W,EAAO,GAAGzd,KAAKn1B,QACxB4pD,EAAShX,EAAO,GAAGzd,KAAKn1B,SACvBkC,EAAGwC,GAAK,EAAAmlD,SAASC,qBACpBH,EAAQ/pB,EAAW0pB,OAAQM,EAAQhqB,EAAW2pB,OAA0B,IAAlB3W,EAAO9yC,OAAe8yC,EAAO,GAAGzd,UAAO5U,GAC3F0+B,EAAc,CAAC/8C,EAAGwC,GACxB,IAAKu6C,EACH,MAAM,IAAIh6C,MAAM,uCAElB,IAAI6iD,EAAY6B,EAAOA,EAAO7pD,OAAS,GACnCiqD,EAAO,GACPnqB,EAAW0pB,SACbxB,EAAY6B,EAAO,IAEjB/pB,EAAW0pB,QAAU1pB,EAAW2pB,OAClCQ,EAAO,8BACEnqB,EAAW0pB,SAAW1pB,EAAW2pB,OAC1CQ,EAAO,6BACGnqB,EAAW0pB,QAAU1pB,EAAW2pB,OAC1CQ,EAAO,4BACGnqB,EAAW0pB,QAAW1pB,EAAW2pB,SAC3CQ,EAAO,2BAET,MAAM3iB,EAAO6X,EAAYn/C,OAInB2vC,EAAe,qCACOrI,0BAChBA,wBACAA,kBANuB,IAAlBwL,EAAO9yC,OAAe,SAAS8yC,EAAO,GAAGzd,KAAKr1B,WAAa,mFACvC,IAAlB8yC,EAAO9yC,OAAe,8BAAgC,iEAanDgoD,8BACV1gB,EAAO,4BACPA,EAAO,0BACT2iB,iEAf2B,IAAlBnX,EAAO9yC,OAAe,yBAA2B,uCAsBpE,OAAO,OAAP,wBACK+/C,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3E3F,UAAW,CACT,CAACrpC,KAAM,QAAS0qB,KAAM,QAASznB,KAAMi2B,EAAW4pB,OAAQ,CAAC9iD,KAAM,OAAQ0qB,KAAM,QAASznB,KAAMi2B,EAAW6pB,OAEzGha,gBAAY,EAId0N,EAAiB,CAACvK,EAAkBhT,KACxC,IAAKgT,EACH,MAAM,IAAI3tC,MAAM,oBAElB,GAAI26B,EAAWypB,cAAgBzW,EAAO9yC,OAAS,GAAK8yC,EAAO9yC,OAAS,GAClE,MAAM,IAAImF,MAAM,uBAElB,IAAK26B,EAAWypB,aAAiC,IAAlBzW,EAAO9yC,OACpC,MAAM,IAAImF,MAAM,0BAIlB,GAAsB,IAAlB2tC,EAAO9yC,QAA0C,IAA1B8yC,EAAO,GAAGzd,KAAKr1B,QAA0C,IAA1B8yC,EAAO,GAAGzd,KAAKr1B,OACvE,MAAM,IAAImF,MAAM,4BAGlB,GAAwB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,MACvB,YAAnBwhB,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,MACxB,IAAlBwhB,EAAO9yC,QAAmC,YAAnB8yC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KACpE,MAAM,IAAInsB,MAAM,uBAGlB,GAAK2tC,EAAO,GAAGxhB,OAASwhB,EAAO,GAAGxhB,MAA4B,IAAlBwhB,EAAO9yC,QAAgB8yC,EAAO,GAAGxhB,OAASwhB,EAAO,GAAGxhB,KAC9F,MAAM,IAAInsB,MAAM,6B,6HClIpB,gBAEA,UAGA,UA0Ea,EAAA0+C,oCACT,CAACzG,EAAyC78C,EAAWlB,EAAW8/C,EAC/Drf,KACC,MAAMigB,GA3E+B5M,EA2EcrT,EAAWX,SA3EH,CAC/Dv4B,KAAM,kBACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAYC,QACzBb,cAJwC,IAACA,EA4ErC,OAAO,OAAP,wBACK4M,GAAQ,CACXt0C,IAAK,IAtET,EAAC2xC,EAAyC2C,EAA2Bx/C,EAAWlB,EAC/E8/C,EAAgCrf,KAC/B,MAAMsjB,EAAS7iD,EAAE80B,KACX60B,EAAS7qD,EAAEg2B,KAGXiS,EAAO6X,EAAYn/C,OACnBwnD,EAAc,CAAC0C,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAI/K,EAAY,GAAKA,EAAY,IAC/EgL,EAAaD,EAAO,GAAKA,EAAO,GAChC1J,GAAgB,IAAAC,qBAChB9Y,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAChE,IAAI+yB,EAAW,GAEf,IAAK,IAAIC,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAIC,EAAM,EAAGA,GAAO,EAAGA,IAC1BF,GAAY,qCACYE,gCACPD,qCAEG7C,EAAY,eAAeA,EAAY,oDACzBrI,EAAY7X,EAAO,UAAUxH,EAAWyH,QAAQ,yBAC1EzH,EAAW+iB,KAAK,qCACH/iB,EAAW6iB,UAAU,mBAAmBwH,QAAiBD,EAAO,iCAEvE9G,EApBH,gEAqBwBjE,EAAY7X,EAAO,SAASxH,EAAWyH,QAAQ,2BACxEzH,EAAW+iB,KAAK,uCACH/iB,EAAW6iB,UAAU,uBAAuBwH,OAAgBD,EAAO,mCAE1E9G,EAxBL,8DA0BoB+G,mFAEN,EAANE,EAAUC,+LAWjC,MAAM3a,EAAe,WACnB6Q,2MAOI4J,gBACAziB,EAAK3T,0CAGX,OAAO,OAAP,wBACK+rB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAMmyB,EAAal2B,KAAM/wB,EAAE+wB,KAAMohB,YAAa,EAAAqB,YAAYC,QACnErE,eACAC,SAAS,GAAI,EAUF2a,CAA8BnN,EAAkB2C,EAAUx/C,EAAGlB,EAAG8/C,EAAarf,IAAW,C,4ICpF3G,gBAwEa,EAAAymB,8BACT,CAACnJ,EAAyC78C,EAAWlB,EAAW8/C,EAC/Drf,KACC,MAAMigB,GAvEyB5M,EAuEcrT,EAAWX,SAvEH,CACzDv4B,KAAM,SACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,UACzBzC,cAJkC,IAACA,EAwE/B,OAAO,OAAP,wBACK4M,GAAQ,CACXt0C,IAAK,IAlET,EAAC2xC,EAAyC2C,EAA2Bx/C,EAAWlB,EAC/E8/C,EAAgCrf,KAC/B,MAAMsjB,EAAS7iD,EAAE80B,KACX60B,EAAS7qD,EAAEg2B,KAEXiS,EAAO6X,EAAYn/C,OACnBwqD,GAAa,IAAA/C,qBAAoBrE,EAAQ8G,EAAQ/K,EAAa,GAE9DxP,EAAe,4BACFyT,EAAO,+BACPA,EAAO,+BACPA,EAAO,+BACPtjB,EAAW8iB,YAAY,+BACvB9iB,EAAW8iB,YAAY,sCAChB9iB,EAAW6iB,UAAU,sCACrB7iB,EAAW6iB,UAAU,oCACvB7iB,EAAWyH,QAAQ,oCACnBzH,EAAWyH,QAAQ,iCACtBzH,EAAW+iB,KAAK,iCAChB/iB,EAAW+iB,KAAK,wJAIRvb,onBAab8b,EAAOpjD,mYAiBvB,OAAO,OAAP,wBACK+/C,GAAQ,CACX/rB,OAAQ,CAACqB,KAAMm1B,EAAYl5B,KAAM/wB,EAAE+wB,KAAMohB,YAAa,EAAAqB,YAAYM,qBAClE1E,gBAAY,EAUD8a,CAAwBrN,EAAkB2C,EAAUx/C,EAAGlB,EAAG8/C,EAAarf,IAAW,EAKxF,EAAA2nB,oBACT,CAACtH,EAA+ByC,EAAgCzD,EAAgC5K,EAAW,IAEnG,CAAC4K,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAC5C7vC,KAAK+R,KAAK8+B,EAAW,GAAKyC,EAAY,GAAKA,EAAY,GAAKrO,G,iICzFzE,eAKA,UAOa,EAAAuF,YACT,CAACsD,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAGR,CADHsK,EAAiBvJ,IAAI6W,EAAmCtN,EAAkBtK,EAAQhT,GAAagT,KAI5F,EAAAiH,2BACR36C,IACC,MAAMw+C,EAAQx+C,EAAK0gC,WAAWO,SAAS,SACjCsqB,EAAOvrD,EAAK0gC,WAAWY,UAAU,QACvC,OAAO,IAAAlB,6BAA4B,CAACoe,QAAO+M,QAAM,EAGvD,MAAMC,EAA6B,CACjChkD,KAAM,cACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAyBrB8U,EACF,CAAC7rB,EAAgCiU,EAAkBhT,KACjD,MAAMigB,EAAW,OAAH,wBAAO6K,GAA0B,CAAEzX,UAAWrT,EAAWX,WACvE,OAAO,OAAP,wBAAW4gB,GAAQ,CAAEt0C,IAAK,IAxB5B,EAACozB,EAAgCkhB,EAA2BjN,EAAkBhT,KAExE,MAAMqf,EAAcrM,EAAO,GAAGzd,KAAKn1B,QAC7BonC,EAAO6X,EAAYn/C,OAEnB2vC,EAAe,WADCkb,EAAoB/qB,EAAW6qB,KAAK3qD,4CAGlCsnC,kFAGxB,OAAO,OAAP,wBACKyY,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3E3F,UAAW,CACT,CAACrpC,KAAM,OAAQ0qB,KAAM,QAASsf,YAAa9Q,EAAW6qB,KAAK3qD,OAAQ6J,KAAMi2B,EAAW6qB,MACpF,CAAC/jD,KAAM,QAAS0qB,KAAM,QAASznB,KAAMi2B,EAAW8d,QAElDjO,gBAAY,EAOcmb,CAA6BjsB,EAASkhB,EAAUjN,EAAQhT,IAAW,EAGnG+qB,EAAuBE,IAC3B,MAAM9I,EAAsB,CAAC,4BAA4B8I,sBACzD,IAAK,IAAIttD,EAAI,EAAGA,EAAIstD,IAAettD,EACvB,IAANA,EACFwkD,EAAU56C,KAEN,oBAAkB5J,oBAAoBA,SACjCA,IAAMstD,EAAc,EAC7B9I,EAAU56C,KAEN,wBAAsB5J,SAE1BwkD,EAAU56C,KAEN,yBAAuB5J,oBAAoBA,SAMnD,OAHAwkD,EAAU56C,KACN,OAEG46C,EAAUpgC,KAAK,KAAK,EAGvBw7B,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,iCAElB,GAA8B,IAA1B2tC,EAAO,GAAGzd,KAAKr1B,OACjB,MAAM,IAAImF,MAAM,wBAElB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,sB,sJCzFpB,gBAEA,UAEa,EAAA60C,sBACT,CAACoD,EAAyCtK,EAAkByK,KAC1DF,EAAevK,GAEf,MAAMkY,EAAkB5N,EAAiBvJ,IAAIoX,EAAuCnY,EAAO,IAAKA,GAIhG,MAAO,CAHQsK,EAAiBvJ,IAC5BqX,EAAqC9N,EAAkBtK,EAAO,GAAIyK,EAASyN,EAAgB31B,MAC3F,CAACyd,EAAO,GAAIkY,EAAiBlY,EAAO,GAAIA,EAAO,KACpC,EAGR,EAAAmH,qCAAwE76C,GACjFA,EAAK0gC,WAAWO,SAAS,UAAW,MAExC,MAAM8qB,EAAiC,CACrCvkD,KAAM,wCACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WA8CrBqV,EAA0Cl3B,GAAsC,OAAD,wBAChFo3B,GAA8B,CACjC1/C,IAAK,IA7CkC,EAACs0C,EAA2BhsB,KACnE,MAAMq3B,EAAQr3B,EAAMsB,KAAKn1B,QACnB0gD,EAAUwK,EAAM,GAChBC,EAAcD,EAAM,GAAKA,EAAM,GAC/BjM,EAAc,CAACiM,EAAM,GAAIxK,GAEzBjR,EAAe,uMAOIyb,EAAM,iEAEJA,EAAM,wJAMCC,sDAETD,EAAM,iEAEJA,EAAM,4LAONC,oCAI3B,OAAO,OAAP,wBACKtL,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAYM,qBACvE1E,gBAAY,EAMH2b,CAAiCH,EAAgCp3B,KAGxEw3B,EAA+B,CACnC3kD,KAAM,sCACNkhC,WAAY,CAAC,IAAK,kBAAmB,QAAS,KAC9CiL,WAAY,CAAC,EAAAgB,YAAY6B,SAAU,EAAA7B,YAAYM,oBAAqB,EAAAN,YAAY6B,SAAU,EAAA7B,YAAY6B,WAwClGsV,EACF,CAAC9N,EAAyCrpB,EAAewpB,EAAiBiO,KAEpE,MAAMzL,EAAW,OAAH,wBAAOwL,GAA4B,CAAEpY,UAAW,GAAGoK,MACjE,OAAO,OAAP,wBACKwC,GAAQ,CACXt0C,IAAK,IA1Cb,EAAC2xC,EAAyC2C,EAA2BhsB,EAAewpB,EACnFiO,KACC,MAAM7jB,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,UACzDo0B,EAAcC,GACjBtO,EAAiB3K,+BAA+B+Y,EAAsB,EAAAzX,YAAYM,sBAC/EsX,EAAsBC,GAAyB,CAACH,EAAe,EAAGC,GACnE/b,EAAe,0JAGoBgc,MAAyBC,uBACvDjkB,EAAKC,ogBAkBhB,OAAO,OAAP,wBACKmY,GAAQ,CACX/rB,OAAQ,CAACqB,KAAMtB,EAAMsB,KAAM/D,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACtE3F,UAAW,CAAC,CAACrpC,KAAM,UAAW0qB,KAAM,QAASznB,KAAM0zC,IACnD5N,gBAAY,EAUGkc,CAA+BzO,EAAkB2C,EAAUhsB,EAAOwpB,EAASiO,IAAqB,EAIjHnO,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,4CAGlB,MAAMI,EAAIutC,EAAO,GACX8K,EAAQ9K,EAAO,GACfpvC,EAAIovC,EAAO,GAIjB,GAAIvtC,EAAE8vB,KAAKr1B,OAAS,GAA2B,IAAtB49C,EAAMvoB,KAAKr1B,QAAkC,IAAlB0D,EAAE2xB,KAAKr1B,OACzD,MAAM,IAAImF,MAAM,wBAElB,GAAIy4C,EAAMvoB,KAAK,KAAO9vB,EAAE8vB,KAAK,IAAM3xB,EAAE2xB,KAAK,KAAO9vB,EAAE8vB,KAAK,GACtD,MAAM,IAAIlwB,MAAM,gCAElB,GAAgB,YAAXI,EAAE+rB,MAAiC,YAAX/rB,EAAE+rB,MAAuC,YAAfssB,EAAMtsB,MAAqC,YAAfssB,EAAMtsB,MACzE,YAAX5tB,EAAE4tB,MAAiC,YAAX5tB,EAAE4tB,KAC7B,MAAM,IAAInsB,MAAM,uBAElB,GAA8B,IAA1B2tC,EAAO,GAAGzd,KAAKr1B,OACjB,MAAM,IAAImF,MAAM,gC,4HCrJpB,gBACA,UAEA,UACA,UAEA,UACA,UAyEa,EAAAu+C,oCACT,CAACtG,EAAyCtK,EACzCuS,KACC,MAAMtF,GA1E+BsC,EA0EcvP,EAAO9yC,OAAS,EA1EZmzC,EA0EekS,EAAqBiC,mBA1Ed,CACjF1gD,KAAM,kBACNkhC,WAAYua,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDtP,WAAYsP,EAAU,CAAC,EAAAtO,YAAYC,OAAQ,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACrD,CAAC,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACvDb,cALwC,IAACkP,EAAkBlP,EA2EvD,OAAO,OAAP,wBACK4M,GAAQ,CACXt0C,IAAK,IApET,EAAC2xC,EAAyC2C,EAA2BjN,EACpEuS,KACC,MAAMhD,EAAUvP,EAAO9yC,OAAS,EAC1BsiD,EAAcD,EAAU,+BAAiC,GACzDwH,EAAS/W,EAAO,GAAGzd,KACnBy0B,EAAShX,EAAO,GAAGzd,KACnB8pB,EAAc,EAAApW,cAAcuW,UAAUuK,EAAQC,GAAQ,GACtD7K,GAAe,EAAAzV,UAAU0V,SAASpM,EAAO,GAAGzd,KAAMyd,EAAO,GAAGzd,MAElE,IAAK8pB,EACH,MAAM,IAAIh6C,MAAM,yCAElB,MAAM6iD,EAAY6B,EAAOA,EAAO7pD,OAAS,GACnC8rD,EAAiBx8C,KAAK+R,KAAK2mC,EAAY,GACvCzI,EAAQsK,EAAO7pD,OACfw/C,EAAQsK,EAAO9pD,OAEf2nC,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAC1D00B,GAAiB,IAAA9iB,mBAAkBkW,EAAYn/C,QAC/C6oC,EAAUsW,EAAYn/C,OACtBgsD,GAAgB,IAAA3iB,kBAChB,mBAAC0Z,EAAkB,gBAAEC,IAAmB,IAAAC,sBAAqBoC,GAE7D4G,EACF5J,EAAU,IAAG,IAAA6J,kBAAiBH,EAAgBC,EAAelZ,EAAO,GAAGzd,KAAM8pB,GAAa,KAAU,GAElGgN,EACFlN,EAAc,GA6CxB,SACI8M,EAAwBC,EAAkClZ,EAAkBtN,GAC9E,IAAI4mB,EAAyB,GACzBC,EAAyB,GAE7B,MAAMC,EAAWxZ,EAAO,GAAGzd,KACrBk3B,EAAWzZ,EAAO,GAAGzd,KAErBm3B,EAAUF,EAAStsD,OACnBysD,EAAUF,EAASvsD,OAEnB6oC,EAAUrD,EAASxlC,OACnB0sD,EAAY7jB,EAAU2jB,EACtBG,EAAY9jB,EAAU4jB,EAE5BL,EAAyBE,EAAS/sB,KAAI,CAACphC,EAAGV,IAAM,UAAUuuD,EAAcvuD,EAAIivD,OAC5EN,EAAuBI,EAAU,GAAK,MACtCJ,EAAuBvqC,KAAK,MAC5BwqC,EAAyBE,EAAShtB,KAAI,CAACphC,EAAGV,IAAM,UAAUuuD,EAAcvuD,EAAIkvD,OAC5EN,EAAuBI,EAAU,GAAK,MACtCJ,EAAuBxqC,KAAK,MAE5B,MAAM+qC,EAAiB,EAAA7jB,cAAcC,iBAAiBsjB,EAAU9mB,GAC1DqnB,EAAiB,EAAA9jB,cAAcC,iBAAiBujB,EAAU/mB,GAE1DsnB,EAAiBF,EAAertB,KAAI/gC,GAAK,UAAUwtD,EAAcxtD,EAAIkuD,YAAmB7qC,KAAK,MAC7FkrC,EAAiBF,EAAettB,KAAI/gC,GAAK,UAAUwtD,EAAcxtD,EAAImuD,YAAmB9qC,KAAK,MAC7FmrC,EAAiB,wBAAwBhB,EAAcnjB,EAAU,iBAC9DmjB,EAAcnjB,EAAU,eAAemjB,EAAcnjB,EAAU,iBAC/DmjB,EAAcnjB,EAAU,gBAmBjC,MAjBoC,4CAElCkjB,oCACAiB,QACAF,gCACwBV,2EAKxBL,oCACAiB,QACAD,gCACwBV,+BAK5B,CA9F2BY,CAAyBlB,EAAgBC,EAAelZ,EAAQqM,KAAiB,GAEhG+N,EAA2BjO,EAAc,2BAA6B,QA8FlF,SAAc+M,EAAyB1kB,GACrC,IAAInZ,EAAM,GACV,IAAK,IAAI1wB,EAAI,EAAGA,EAAI6pC,EAAO,EAAG7pC,IAC5B0wB,GAAO,MAAM69B,EAAcvuD,OAI7B,OAFA0wB,GAAO,MAAM69B,EAAc1kB,EAAO,UAE3BnZ,CACT,CAtG0Fg/B,CAAKnB,EAAezM,MAClG6N,EAA2BnO,EAAc,2BAA6B,QAuGlF,SAAc+M,EAAyB1kB,GACrC,IAAInZ,EAAM,GACV,IAAK,IAAI1wB,EAAI,EAAGA,EAAI6pC,EAAO,EAAG7pC,IAC5B0wB,GAAO,MAAM69B,EAAcvuD,OAI7B,OAFA0wB,GACI,WAAM69B,EAAc1kB,EAAO,KACxBnZ,CACT,CA/G0Fk/B,CAAKrB,EAAexM,MAKlG7P,EAAe,iBACbwc,kBACAF,kBACAlJ,+CAPuB9D,EAAc,GAAK,GAAG8M,yDACXC,EAAcnjB,EAAU,UAAUmjB,EAAcnjB,EAAU,sBAC3FmjB,EAAcnjB,EAAU,UAAUmjB,EAAcnjB,EAAU,qGAUrCijB,uCACToB,gCACAE,kIAKX9K,oBACAU,oBACArb,EAAK3T,iCAEf,OAAO,OAAP,wBACK+rB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAYC,QAC3ErE,eACAC,SAAS,GAAI,EAUF0d,CAA8BlQ,EAAkB2C,EAAUjN,EAAQuS,IAAqB,C,0KCpF1G,gBAEA,UACA,UAEA,UACA,SAwEA,SAAgBgB,EACZvT,EAAkBuS,GACpB,MAAMtF,GAzD6BsC,EAyDUvP,EAAO9yC,OAAS,EAzDRmzC,EAyDWkS,EAAqBiC,mBAzDV,CAC3E1gD,KAAM,SACNkhC,WAAYua,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDtP,WAAYsP,EAAU,CAAC,EAAAtO,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzD,CAAC,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,UACzDzC,cALkC,IAACkP,EAAkBlP,EA0DrD,OAAO,OAAP,wBAAW4M,GAAQ,CAAEt0C,IAAK,IAlD5B,SACIs0C,EAA2BjN,EAAkBuS,GAC/C,MAAMwE,EAAS/W,EAAO,GAAGzd,KACnBy0B,EAAShX,EAAO,GAAGzd,KACnB8pB,EAAc,EAAApW,cAAcuW,UAAUuK,EAAQC,GAAQ,GAC5D,IAAK3K,EACH,MAAM,IAAIh6C,MAAM,yCAElB,MAAM4mD,GAAiB,IAAA9iB,mBAAkBkW,EAAYn/C,QAC/CgsD,GAAgB,IAAA3iB,kBAChB,mBAAC0Z,EAAkB,gBAAEC,IAAmB,IAAAC,sBAAqBoC,GAE7DhD,EAAUvP,EAAO9yC,OAAS,EAC1BsiD,EAAcD,EAAU,+BAAiC,GACzD4J,EACF5J,EAAU,GAAG6J,EAAiBH,EAAgBC,EAAelZ,EAAO,GAAGzd,KAAM8pB,GAAa,KAAW,GAEnG7X,EAAO6X,EAAYn/C,OACnButD,EAAQ1D,EAAO7pD,OACfwtD,EAAQ1D,EAAO9pD,OAEf2vC,EAAe,SACjBoT,UACAkJ,oCAC0B3kB,wBAChBimB,sBACAC,8IANI3D,EAAOA,EAAO7pD,OAAS,6BAY3ButD,EAAQ,0BACRC,EAAQ,oEAGdlL,cACAU,kCAGR,OAAO,OAAP,wBACKjD,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAEJ,CAKkC8d,CAAwB1N,EAAUjN,EAAQuS,IAC5E,CA1Ea,EAAAhL,OACT,CAAC+C,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAEXsK,EAAiBnf,QAAQ4F,KACpB,CAACuZ,EAAiBvJ,KACrB,IAAA6P,qCAAoCtG,EAAkBtK,EAAQhT,GAAagT,IAExE,CAACsK,EAAiBvJ,IAAIwS,EAA8BvT,EAAQhT,GAAagT,KAI3E,EAAAwH,sBACRl7C,IAAmD,IAAAkmD,mCAAkClmD,EAAK0gC,YAyD/F,kCAMA,MAAMud,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,6BAGlB,GAAI2tC,EAAO,GAAGzd,KAAKyd,EAAO,GAAGzd,KAAKr1B,OAAS,KAAO8yC,EAAO,GAAGzd,KAAKyd,EAAO,GAAGzd,KAAKr1B,OAAS,GACvF,MAAM,IAAImF,MAAM,oCAGlB,GAAwB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,MACvB,YAAnBwhB,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC7C,MAAM,IAAInsB,MAAM,+BAGlB,GAAI2tC,EAAO,GAAGxhB,OAASwhB,EAAO,GAAGxhB,KAC/B,MAAM,IAAInsB,MAAM,4B,EAIpB,SAAgB+mD,EACZH,EAAwBC,EAAkCvjB,EAA4BjD,EACtFH,GACF,IAAIiE,EAAwB,GAC5B,MAAMV,EAASH,EAAQzoC,OACjB6oC,EAAUrD,EAASxlC,OACnBkpC,EAAWL,EAAUD,EAEzBU,EADET,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQlJ,KAAI,CAACphC,EAAGV,IAAM,UAAUuuD,EAAcvuD,EAAIyrC,OAAarnB,KAAK,MAE9F,MACMsnB,EADgB,EAAAJ,cAAcC,iBAAiBP,EAASjD,GAC1BjG,KAAI/gC,GAAK,UAAUwtD,EAAcxtD,EAAI0qC,YAAkBrnB,KAAK,MAGhG,IAAImS,EAAS,uCAkBb,OAnBiC,IADlB,EAAAwV,UAAU3jB,KAAK4iB,KAI5BzU,EAAS,uBAEoBqR,EAAW,kCAExC0mB,oCACA5iB,mCAC2BG,iBACpBtV,QAEiC,mCAExC+3B,oCACA5iB,mCAKJ,CAnCA,oB,oHCzGA,gBAEA,UACA,UAEA,UAEMukB,EAAsB,CAC1B9mD,KAAM,OACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY4Z,mBA+Cd,EAAAtW,4BAA8B,CAACxY,EAAgC9K,IACvE,OAAD,wBAAK25B,GAAmB,CAAEjiD,IAAK,IA7CL,EAACozB,EAAgC9K,KAC7D,MAAM4T,GAAO,IAAAvB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SACjD8oB,EAAapsB,EAAMsB,KAEnBu4B,EAAYzN,EAAWngD,OAEvBoxC,EAAard,EAAMsB,KAAKr1B,OAExB+rD,GAAiB,IAAA9iB,mBAAkBmI,GACnCmD,GAAW,IAAA+L,aAAY,KAAMlP,GAC7Byc,GA8FUvmB,EA9FO8J,EA8FO/b,EA9FKkf,EA8FW7K,EA9FDyW,EAAWA,EAAWngD,OAAS,GA8FhB2pC,EA9FoBwW,EAAWA,EAAWngD,OAAS,GA+FlG,IAATsnC,GAAuB,IAATA,EACT,GAIO,iBACJjS,EAAKiS,EAAO,oBACZjS,EAAKiS,EAAO,sBACVjS,EAAKiS,EAAO,0BACZjS,EAAKiS,EAAO,oCACFqC,+BACAD,YAZ1B,IAAkBpC,EAAcjS,EAAgBqU,EAAcC,EA5F5D,IAAImkB,EAEFA,EADgB,IAAdF,EACgB,CAAC,EAAG,GACC,IAAdA,EACS,CAACzN,EAAW,GAAI,GAEhB,CAACA,EAAW/O,EAAa,GAAI+O,EAAW/O,EAAa,IAEzE,MAAM2c,EA8BR,SAAiCzmB,EAAclQ,EAA0B/B,GACvE,GAAa,IAATiS,EACF,MAAO,QAET,GAAa,IAATA,EACF,MAAO,QAAQlQ,EAAM,KAGvB,IAAI42B,EAAO,GACX,IAAK,IAAIvwD,EAAI6pC,EAAO,EAAG7pC,EAAI6pC,EAAM7pC,IAC/BuwD,GAAQ,GAAG34B,EAAK53B,SAAS25B,EAAM35B,EAAI6pC,EAAO,KACtC7pC,EAAI6pC,EAAO,IACb0mB,GAAQ,MAIZ,OAAOA,CACT,CA/C+BC,CAAwB7c,EAAY0c,EAAiBvZ,GAC5EvgB,EAmDR,SAAmBoD,EAA0B/B,GAC3C,MAAMiS,EAAOlQ,EAAMp3B,OAEnB,GAAa,IAATsnC,EACF,MAAO,kBAGT,GAAa,IAATA,EACF,MAAO,oCACalQ,EAAM,4CAQ5B,IAAIl6B,EAAI,GACR,GAAIoqC,EAAO,EACT,IAAK,IAAI7pC,EAAI,EAAGA,EAAI6pC,EAAO,IAAK7pC,EAC9BP,GAAQ,GAAGm4B,EAAK53B,MAGpB,MAAO,QAAQP,wCACaA,0CACAA,mDACSA,YACvC,CA9EiBgxD,CAAU/N,EAAY5L,GAE/B5E,EAAe,sCAEXoc,6CAEGgC,qBACDpmB,EAAK3T,sDAEL65B,oBAEAlmB,EAAK3T,iBAAiBA,sCAIlC,OAAO,OAAP,wBACK05B,GAAmB,CACtB9d,SAAS,EACT5b,OAAQ,CAACqB,KAAMtB,EAAMsB,KAAM/D,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAYC,QACtErE,gBAAY,EAKyBwe,CAAsBtvB,EAAS9K,I,yIC3DxE,gBAEA,SAAgBq6B,EAAexnD,EAAc0gC,GAC3C,OAAO,IAAA+B,eAAc/B,GAAM/H,KAAI/gC,GAAK,GAAGoI,KAAQpI,KACjD,CAFA,mBAIA,uBAA4BoI,EAAc0gC,GACxC,OAAa,IAATA,EACK,CAAC1gC,GAEHwnD,EAAexnD,EAAM0gC,EAC9B,EAEA,+BACE,MAAO,mXAaT,C,sJC3BA,eAIA,UACA,UAEA,UAQM+mB,EAAqB,CACzBznD,KAAM,MACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGd,EAAA6E,MACT,CAAC2C,EAAyCtK,EAAkBhT,KAC1DwuB,EAAiBxb,GAQV,CAPQsK,EAAiBvJ,IAAI,OAAD,wBAE1Bwa,GAAkB,CACrBlb,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAM8iD,EAAqBnR,EAAkBtK,EAAO,GAAIhT,KAE/DgT,KAIG,EAAA4H,qBAA+Dt7C,IAC1E,MAAM2nD,EAAO3nD,EAAK0gC,WAAWU,UAAU,OAAQ,YACzC7Z,EAAQvnB,EAAK0gC,WAAWO,SAAS,QAAS,GAC1CwiB,EAAOzjD,EAAK0gC,WAAWa,QAAQ,QACrC,OAAO,IAAAnB,6BAA4B,CAACunB,OAAMpgC,QAAOk8B,QAAM,EAG5C,EAAAlI,OACT,CAACyC,EAAyCtK,EAAkBiU,KAC1DyH,EAAkB1b,GAClB,MAAM2b,EAAaC,EAAgCtR,EAAkBtK,EAAQiU,GAC7E,OAAO,IAAAtM,OAAM2C,EAAkB,CAACtK,EAAO,IAAK2b,EAAW,EAGhD,EAAA7T,sBAAyDx7C,GAClEA,EAAK0gC,WAAWU,UAAU,OAAQ,YAEtC,MAAMkuB,EACF,CAACtR,EAAyCtK,EAAkBiU,KAC1D,IAAK3J,EAAiBnf,QAAQ6Y,cAAchE,EAAO,GAAGqB,SACjDrB,EAAO9yC,QAAU,IAAMo9C,EAAiBnf,QAAQ6Y,cAAchE,EAAO,GAAGqB,QAC3E,MAAM,IAAIhvC,MAAM,0CAGlB,MAAM09C,EAAO/vC,MAAMunB,KAAKyY,EAAO,GAAG6b,aAC5BhoC,EAASmsB,EAAO9yC,QAAU,EAAK8yC,EAAO,GAAGxd,UAAU,GAAK,EAE9D,OAAO,IAAAkK,6BAA4B,CAACunB,OAAMlE,OAAMl8B,SAAO,EAGvD4nC,EACF,CAACnR,EAAyCrpB,EAAe+L,KACvD,MAAMqf,EAAc,EAAA3V,UAAUolB,SAAS76B,EAAMsB,KAAKn1B,QAAS4/B,EAAW+iB,MAChEvb,EAAO6X,EAAYn/C,OAEnB2vC,EAAe,WADDkf,EAAezR,EAAkBrpB,EAAO+L,+BAGxCwH,0DAGpB,MAAO,CACL1gC,KAAM,MACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,UACzB5hB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACvEjG,eACD,EAGD2e,EAAoBxb,IACxB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,wBAElB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,sB,EAIdqpD,EAAqB1b,IACzB,IAAKA,GAA6B,IAAlBA,EAAO9yC,QAAkC,IAAlB8yC,EAAO9yC,OAC5C,MAAM,IAAImF,MAAM,8BAElB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,uBAElB,GAAI2tC,EAAO9yC,QAAU,GAAwB,WAAnB8yC,EAAO,GAAGxhB,KAClC,MAAM,IAAInsB,MAAM,sB,EAId0pD,EAAiB,CAACzR,EAAyCrpB,EAAe+L,KAC9E,MAAM6H,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,UACzDsO,EAAOC,GAAUwX,EAAiB3K,+BAA+B1e,EAAMsB,KAAM,EAAA0e,YAAY6B,UAC1FrO,EAAU,EAAAiC,UAAUsM,eAAe/hB,EAAMsB,MAE/C,OAAQyK,EAAWinB,MACjB,IAAK,WACH,OAAO+H,EAAennB,EAAM5T,EAAMsB,KAAMkS,EAAS5B,EAAOC,EAAQ9F,EAAW+iB,KAAM/iB,EAAWnZ,OAC9F,IAAK,UACH,OAAOooC,EAAcpnB,EAAM5T,EAAMsB,KAAMkS,EAAS5B,EAAOC,EAAQ9F,EAAW+iB,MAC5E,IAAK,OACH,OAAOmM,EAAWrnB,EAAM5T,EAAMsB,KAAMkS,EAAS5B,EAAOC,EAAQ9F,EAAW+iB,MACzE,QACE,MAAM,IAAI19C,MAAM,gB,EAIhB2pD,EACF,CAACnnB,EAAYvQ,EAA0BmQ,EAA4B5B,EAAeC,EAAgBid,EACjGl8B,KACC,MAAM2gB,EAAOlQ,EAAMp3B,OACnB,IAAIsxC,EAAQ,GACZ,IAAK,IAAI7zC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B6zC,GAAS,mBACD7zC,QAAQolD,EAAKplD,+DAEV25B,EAAM35B,+CACD8pC,EAAQ9pC,gBAG1B,MAAO,4BACY6pC,+CACc3gB,6DAG7B2qB,mDACqC3L,MAAUC,8CACjB+B,EAAKC,gEAGtC,EAGDmnB,EACF,CAACpnB,EAAYvQ,EAA0BmQ,EAA4B5B,EAAeC,EAAgBid,KAE5F,MAAMvb,EAAOlQ,EAAMp3B,OAEnB,IAAIsxC,EAAQ,GACZ,IAAK,IAAI7zC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B6zC,GAAS,mBACL7zC,QAAQolD,EAAKplD,+EAGC,GAAK25B,EAAM35B,GAAK,gFAE1B25B,EAAM35B,4DAEF8pC,EAAQ9pC,gBAGtB,MAAO,4BACQ6pC,+DAGfgK,mDACqC3L,MAAUC,8CACjB+B,EAAKC,gEAGtC,EAGDonB,EACF,CAACrnB,EAAYvQ,EAA0BmQ,EAA4B5B,EAAeC,EAAgBid,KAE5F,MAAMvb,EAAOlQ,EAAMp3B,OAEnB,IAAIsxC,EAAQ,GACZ,IAAK,IAAI7zC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B6zC,GAAS,mBACL7zC,QAAQolD,EAAKplD,qDAEV25B,EAAM35B,WAAW25B,EAAM35B,GAAK,6BACvB8pC,EAAQ9pC,cAGtB,MAAO,4BACQ6pC,+DAGfgK,mDACqC3L,MAAUC,8CACjB+B,EAAKC,gEAGtC,C,2OCxMP,eAIA,UAEA,UAWa,EAAAiQ,YACT,CAACuF,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GACf,MAAMiN,EACF,CAACn5C,KAAM,cAAekhC,WAAY,CAAC,KAAMiL,WAAY,CAAC,EAAAgB,YAAY6B,UAAWzC,UAAWrT,EAAWX,UAGvG,MAAO,CAFQie,EAAiBvJ,IAAI,OAAD,wBAC3BkM,GAAQ,CAAEt0C,IAAK,IAAMwjD,EAA6Bnc,EAAQiN,GAAU,EAAOjgB,KAAcgT,GAClF,EAGR,EAAAgF,2BACR14C,IACC,MAAMsjD,EAAUtjD,EAAK0gC,WAAWU,UAAU,WAAY,UAChD0uB,EAAW9vD,EAAK0gC,WAAWS,OAAO,YAAa,GAC/C4uB,EAAsE,IAAnD/vD,EAAK0gC,WAAWS,OAAO,oBAAqB,GAC/DqiB,EAAcxjD,EAAK0gC,WAAWa,QAAQ,gBACtC4G,EAAUnoC,EAAK0gC,WAAWa,QAAQ,UAAW,IAC7CkiB,EAAOzjD,EAAK0gC,WAAWa,QAAQ,OAAQ,IAG7C,GAAiB,IAAbuuB,EACF,MAAM,IAAI/pD,MAAM,0EAGlB,OAAO,IAAAq6B,6BAA4B,CAACkjB,UAASwM,WAAUC,kBAAiBvM,cAAarb,UAASsb,QAAM,EAG1G,MAAMoM,EACF,CAACnc,EAAkBiN,EAA2BqP,EAA2BtvB,KAEnE,MAAO2kB,EAAoBtF,GACvBkQ,EAAwCvc,EAAQhT,EAAYsvB,GAC1DjF,EAAa,EAAA3gB,UAAU3jB,KAAK4+B,EAAmB7B,aAErD,IAAI0M,EAAM,GACN7K,EAAmB0K,gBACrBG,GAAO,kBAAkBnF,MAEzBmF,GAAO,kBAAkBnF,YAE3B,MACMxa,EAAe,aADD4f,EAAoBzc,EAAO,GAAGzd,KAAMovB,EAP5C,kBAOqE6K,EAAK,iBAItF,OAAO,OAAP,wBACKvP,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAIX,EAAA+J,kBACT,CAAC0D,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GACf,MAAMiN,EAAW,CACfn5C,KAAM,oBACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,UACzBzC,UAAW,GAAGrT,EAAWqvB,mBAI3B,MAAO,CAFQ/R,EAAiBvJ,IAAI,OAAD,wBAC3BkM,GAAQ,CAAEt0C,IAAK,IAAMwjD,EAA6Bnc,EAAQiN,GAAU,EAAMjgB,KAAcgT,GACjF,EAGR,EAAA6G,iCACRv6C,IACC,MAAM+vD,EAAsE,IAAnD/vD,EAAK0gC,WAAWS,OAAO,oBAAqB,GACrE,OAAO,IAAAf,6BACH,CAACkjB,QAAS,GAAIwM,SAAU,EAAGC,kBAAiBvM,YAAa,GAAIrb,QAAS,GAAIsb,KAAM,IAAI,EAQjF,EAAAtI,QACT,CAAC6C,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GACf,MAAMiN,EACF,CAACn5C,KAAM,UAAWkhC,WAAY,CAAC,KAAMiL,WAAY,CAAC,EAAAgB,YAAY6B,UAAWzC,UAAWrT,EAAWX,UAGnG,MAAO,CAFQie,EAAiBvJ,IAAI,OAAD,wBAC3BkM,GAAQ,CAAEt0C,IAAK,IAAM+jD,EAAyB1c,EAAQiN,GAAU,EAAOjgB,KAAcgT,GAC9E,EAGR,EAAA0H,uBACRp7C,IACC,MAAMsjD,EAAUtjD,EAAK0gC,WAAWU,UAAU,WAAY,UAChD0uB,EAAW9vD,EAAK0gC,WAAWS,OAAO,YAAa,GAC/CqiB,EAAcxjD,EAAK0gC,WAAWa,QAAQ,gBACtC4G,EAAUnoC,EAAK0gC,WAAWa,QAAQ,UAAW,IAC7CkiB,EAAOzjD,EAAK0gC,WAAWa,QAAQ,OAAQ,IACvC8uB,EAAerwD,EAAK0gC,WAAWS,OAAO,gBAAiB,GACvDoiB,EAAYvjD,EAAK0gC,WAAWa,QAAQ,YAAa,IAGvD,GAAqB,IAAjB8uB,EACF,MAAM,IAAItqD,MAAM,+DAElB,GAAiB,IAAb+pD,EACF,MAAM,IAAI/pD,MAAM,sEAGlB,OAAO,IAAAq6B,6BACH,CAACkjB,UAASwM,WAAUC,iBAAiB,EAAOvM,cAAarb,UAASsb,OAAM4M,eAAc9M,aAAW,EAG3G,MAAM6M,EACF,CAAC1c,EAAkBiN,EAA2BqP,EAA2BtvB,KAEnE,MAAO2kB,EAAoBtF,GACvBkQ,EAAwCvc,EAAQhT,EAAYsvB,GAM1Dzf,EAAe,WADD4f,EAAoBzc,EAAO,GAAGzd,KAAMovB,EAJ5C,2CAGA,GAC0E,gBAItF,OAAO,OAAP,wBACK1E,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAIlB0f,EACF,CAACvc,EAAkBhT,EAAqDsvB,KAElE,MAAMjP,EAAarN,EAAO,GAAGzd,KAAKn1B,QAC5BwvD,EAAejxD,OAAOizB,eAAere,KAAKysB,EAAY,aACtD8iB,EAAc9iB,EAAW8iB,YAAY1iD,QACrCqnC,EAAUzH,EAAWyH,QAAQrnC,QAC7ByiD,EAAsB+M,EAAgB5vB,EAAiC6iB,UAAUziD,QAAU,GAC3F2iD,EAAO/iB,EAAW+iB,KAAK3iD,QAC7B,EAAAwmD,aAAaiJ,qBAAqBP,EAAkBjP,EAAYyC,EAAarb,EAASob,EAAWE,GAEjG,MAAM1D,EAAc,EAAAuH,aAAakJ,uBAC7BR,EAAkBjP,EAAY5Y,EAASob,EAAWC,EAAaC,EAAM/iB,EAAW4iB,SAE9E0C,EAAgB3mD,OAAOC,OAAO,CAAC,EAAGohC,GAMxC,OALI4vB,EACFjxD,OAAOC,OAAO0mD,EAAe,CAACxC,cAAarb,UAASsb,OAAMF,YAAWxjB,SAAUW,EAAWX,WAE1F1gC,OAAOC,OAAO0mD,EAAe,CAACxC,cAAarb,UAASsb,OAAM1jB,SAAUW,EAAWX,WAE1E,CAACimB,EAAejG,EAAY,EAGvC0Q,EAA0B,CAC9BnN,QAAS,GACTwM,SAAU,EACVC,iBAAiB,EACjBvM,YAAa,GACbrb,QAAS,GACTsb,KAAM,GACN4M,aAAc,EACd9M,UAAW,GACXxjB,SAAU,IAGN2wB,EAAwB,CAC5BlpD,KAAM,gBACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGd,EAAAgE,cAAgB,CAACwD,EAAyCtK,KACrEuK,EAAevK,GAOR,CANQsK,EAAiBvJ,IAAI,OAAD,wBAE1Bic,GAAqB,CACxBrkD,IAAK,IAAM+jD,EAAyB1c,EAAQgd,GAAuB,EAAMD,KAE3E/c,KAIN,MAAMuK,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,8BAElB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,sB,EAIdoqD,EACF,CAACQ,EAA8BjwB,EAAmCkwB,EAAaV,EAAa7tC,KAEtF,MAAM6lB,EAAOyoB,EAAU/vD,OACvB,GAAI8/B,EAAW8iB,YAAY5iD,QAAU,EAAG,CACtC,MAAMiwD,EAAKnwB,EAAW8iB,YAAY9iB,EAAW8iB,YAAY5iD,OAAS,GAC5DkwD,EAAKpwB,EAAWyH,QAAQzH,EAAWyH,QAAQvnC,OAAS,GACpDmwD,EAAUrwB,EAAW+iB,KAAK/iB,EAAW+iB,KAAK7iD,OAAS,EAAI,GACvDowD,EAAQtwB,EAAW+iB,KAAK/iB,EAAW+iB,KAAK7iD,OAAS,GACjDqwD,EAAON,EAAUzoB,EAAO,GAC9B,IAAIgpB,EAAQ,GACRC,EAAQ,GACRC,EAAW,GAmBf,GAjBEF,EADEH,EAAUC,IAAU,EACd,mCACUH,4BAChB3oB,oBAAuBA,YAAe4oB,OAAQC,6BAC1C7oB,mBAAsBA,aAAgB+oB,mFAI5CL,iBAGQ,mCACUC,4BAChB3oB,oBAAuBA,YAAe4oB,OAAQC,uBAChDH,iBAIoC,IAAlClwB,EAAW8iB,YAAY5iD,OAAc,CACvC,MAAMywD,EAAK3wB,EAAW8iB,YAAY9iB,EAAW8iB,YAAY5iD,OAAS,GAC5D0wD,EAAK5wB,EAAWyH,QAAQzH,EAAWyH,QAAQvnC,OAAS,GACpD2wD,EAAU7wB,EAAW+iB,KAAK/iB,EAAW+iB,KAAK7iD,OAAS,EAAI,GACvD4wD,EAAQ9wB,EAAW+iB,KAAK/iB,EAAW+iB,KAAK7iD,OAAS,GACjD6wD,EAAOd,EAAUzoB,EAAO,GAE5BipB,EADEI,EAAUC,IAAU,EACd,qCACUH,8BAChBnpB,oBAAuBA,YAAeopB,OAAQC,+BAC1CrpB,mBAAsBA,aAAgBupB,+BACpCZ,6DAKA,qCACUQ,8BAChBnpB,oBAAuBA,YAAeopB,OAAQC,uBAGlDH,EAAW,yB,CAmBb,MAdoB,uCACIlpB,0BAClBA,kEAGQ7lB,yCAEd8uC,gBACAD,gBACAE,gBACAlB,+C,CAKK,CACL,MAAMnF,EAAa,EAAA3gB,UAAU3jB,KAAKia,EAAW8iB,aACvCkO,EAAgB,EAAAtnB,UAAUsM,eAAehW,EAAW8iB,aACpDmO,EAAcD,EAAc9wD,OAC5BgxD,EAAWlxB,EAAW+iB,KAAK7iD,OAC3BixD,EAA0BhgB,EAAgB8f,GAC1CG,EAAgBC,EAAUpB,EAAW,aACrCqB,EAAWD,EAAUrxB,EAAW+iB,KAAM,QACtCwO,EAAoBF,EAAUL,EAAe,iBAC7CQ,EAAcH,EAAUrxB,EAAWyH,QAAS,WAElD,IAAIgqB,EAAU,GAiDd,OA/CEA,EAHczxB,EAAW+iB,KAAK2O,QAAO,CAAChV,EAAKiV,IAAQjV,EAAMiV,IAG/C,oMAQVzB,iBAGU,4BAEZA,cAGoB,aACtBiB,wCAC0B3pB,0BAClBA,6DAEKypB,2BACFC,gCACK1pB,oCACIypB,8BACNA,kBACZK,gBACAF,gBACAI,gBACAD,gCAEc5vC,4FAGM0oC,2HAGL7iB,OAAUypB,UAAoBzpB,4DACTA,OAAUypB,oCAC3BzpB,OAAUypB,oCACzBQ,6BAEJjC,iD,GASN6B,EAAY,CAACO,EAA0BC,KAC3C,IAAIrgB,EAAQ,GACZ,IAAK,IAAI7zC,EAAI,EAAGA,EAAIi0D,EAAM1xD,OAAQvC,IAChC6zC,GAAS,WACLqgB,KAAal0D,QAAQi0D,EAAMj0D,YAGjC,OAAO6zC,CAAK,EAGRL,EAAmB3J,GAAyB,4CACTA,uBAA0BA,0BACzDA,4DAGgBA,wHAIZA,uB,gNC1Wd,eAEA,SAEA,UAEA,UAUMkqB,EACF,CAACpU,EAAyCtK,EAAkBhT,EAA8Bl5B,EACzFgrD,KACCvU,EAAevK,GAEf,MAAM+e,EAAwB,CAC5BjrD,OACAkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAW3B,MAAO,CARQwH,EAAiBvJ,IAAI,OAAD,wBAE1Bge,GAAqB,CACxB1e,UAAWrT,EAAWX,SACtB1zB,IAAK,IACDqmD,EAAwB1U,EAAkBtK,EAAQhT,EAAYl5B,EAAMgrD,EAAUC,KAEpF/e,GACW,EAGR,EAAAiI,sBAAmE37C,IAC9E,MAAM2yD,EAAO3yD,EAAK0gC,WAAWa,QAAQ,OAAQ,IACvCqxB,EAAqD,IAA1C5yD,EAAK0gC,WAAWS,OAAO,WAAY,GACpD,OAAO,IAAAf,6BAA4B,CAACuyB,OAAMC,YAAU,EAGtD,MAAMF,EACF,CAACjzB,EAAgCiU,EAAkBhT,EAA8Bl5B,EAAcgrD,EAC9FC,KACC,MAAM1S,EAAwB,GACxB8S,EAAQnf,EAAO,GAAGzd,KAAKr1B,QAAU,EAEjCkyD,EAAU,GAEVH,EAAO,EAAAvoB,UAAU2oB,cAAcryB,EAAWiyB,KAAMjf,EAAO,GAAGzd,KAAKr1B,QAC/DoyD,EAAMR,EAAS9e,EAAQif,GAC7B,IAAIM,EAAYD,EAAI,GAEpB,IAAK,IAAIrvD,EAAI,EAAGA,EAAI+vC,EAAO,GAAGzd,KAAKr1B,OAAQ+C,IAErCgvD,EAAK9wD,QAAQ8B,IAAM,GAAqB,IAAhBgvD,EAAK/xD,QAC3B8/B,EAAWkyB,UACb7S,EAAY93C,KAAK,GAInBgrD,EAAY,wBACDtvD,WAAWA,OAAO+vC,EAAO,GAAGzd,KAAKtyB,QAAQA,gCACvCA,SAASA,mBAClBsvD,mBAGJH,EAAQ7qD,KAAK,YAAYtE,kBAAkBo8C,EAAYn/C,YAEvDm/C,EAAY93C,KAAKyrC,EAAO,GAAGzd,KAAKtyB,KAIpC,MAEM4sC,EAAe,uCAFPwP,EAAYn/C,QAAU,qFAKnBiyD,8CACbC,EAAQrwC,KAAK,kBACbuwC,EAAI,oDACJC,cACAD,EAAI,gFAIR,OAAO,OAAP,wBACKP,GAAqB,CACxB79B,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAId0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,+BAGlB,IAA8C,IAA1C,EAAAikD,aAAanoD,QAAQ6xC,EAAO,GAAGxhB,MACjC,MAAM,IAAInsB,MAAM,sB,EAIP,EAAAi2C,UACT,CAACgC,EAAyCtK,EAAkBhT,IAEnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,aADzB,IAAgB,CAAC,eAAgB,yBAA0B,MAI/E,EAAAmb,WACT,CAACmC,EAAyCtK,EAAkBhT,IAWnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,cAVzB,CAACgT,EAAkBif,KAC5C,IAAIlsC,EAAO,EACX,IAAK,IAAI9iB,EAAI,EAAGA,EAAI+vC,EAAO,GAAGzd,KAAKr1B,OAAQ+C,KACrCgvD,EAAK9wD,QAAQ8B,IAAM,GAAqB,IAAhBgvD,EAAK/xD,UAC/B6lB,GAAQitB,EAAO,GAAGzd,KAAKtyB,IAI3B,MAAO,CAAC,eAAgB,yBAA0B,YAAY8iB,MAAS,IAKlE,EAAAm1B,UACT,CAACoC,EAAyCtK,EAAkBhT,IAWnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,aAVzB,CAACgT,EAAkBif,KAC5C,MAAMO,EAAU,GAChB,IAAK,IAAIvvD,EAAI,EAAGA,EAAI+vC,EAAO,GAAGzd,KAAKr1B,OAAQ+C,KACrCgvD,EAAK9wD,QAAQ8B,IAAM,GAAqB,IAAhBgvD,EAAK/xD,SAC/BsyD,EAAQjrD,KAAK,YAAYtE,WAI7B,MAAO,CAAC,GAAGuvD,EAAQzwC,KAAK,+BAAgC,oCAAqC,GAAG,IAK3F,EAAAq5B,UACT,CAACkC,EAAyCtK,EAAkBhT,IAWnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,aAVzB,CAACgT,EAAkBif,KAC5C,MAAMO,EAAU,GAChB,IAAK,IAAIvvD,EAAI,EAAGA,EAAI+vC,EAAO,GAAGzd,KAAKr1B,OAAQ+C,KACrCgvD,EAAK9wD,QAAQ8B,IAAM,GAAqB,IAAhBgvD,EAAK/xD,SAC/BsyD,EAAQjrD,KAAK,YAAYtE,WAI7B,MAAO,CAAC,GAAGuvD,EAAQzwC,KAAK,+BAAgC,oCAAqC,GAAG,IAK3F,EAAAs5B,WACT,CAACiC,EAAyCtK,EAAkBhT,IAEnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,cADzB,IAAgB,CAAC,eAAgB,yBAA0B,MAI/E,EAAAgb,aACT,CAACsC,EAAyCtK,EAAkBhT,IAEnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,gBADzB,IAAgB,CAAC,eAAgB,yBAA0B,yBAI/E,EAAAub,mBACT,CAAC+B,EAAyCtK,EAAkBhT,IAEnD0xB,EAAOpU,EAAkBtK,EAAQhT,EAAY,sBADzB,IAAgB,CAAC,wBAAyB,oCAAqC,K,gKC1KhH,gBACA,UAEA,UAEA,UAyEa,EAAAwW,uCACT,CAACzX,EAAgC0zB,EAAiBC,KAChD,MAAMzS,EAzEiC,CAACyS,IAC1C,CAAE5rD,KAAM,mBAAoBmsC,WAAY,CAAC,EAAAgB,YAAYC,QAASlM,WAAY,CAAC,KAAMqL,UAAW,GAAGqf,MAwE5EC,CAAqCD,GACtD,OAAO,OAAP,wBAAWzS,GAAQ,CAAEt0C,IAAK,IAtE5B,EAACozB,EAAgC0zB,EAAiBxS,EAA2ByS,KAEvE,MAAME,EAAeH,EAAQl9B,KACvB8gB,EAAsBqc,EAE5B,IAAIG,EAAW,GACf,IAAK,IAAIl1D,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIm1D,EAAe,GACnB,OAAQn1D,GACN,KAAK,EACHm1D,EAAe,qBACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,8CACf,MACF,QACE,MAAM,IAAIztD,MAGdwtD,GAAY,aACdC,cACAn1D,EAAI,EAAI,sDAAwD,+OAMvDA,iFAETA,EAAI,EAAI,IAAM,Y,CAGd,MAAMkqC,GAAO,IAAAvB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SAEjDsY,EAAe,WAsE/B,SAAgCvY,GAC9B,MAAMmQ,EAAU,EAAAiC,UAAUsM,eAAe1e,GACnCiQ,EAAS,CAAC,IAAK,IAAK,KACpBvmB,EAAQ,QACR2mB,EAAyBF,EACKhI,KAAI,CAACmI,EAAQjqC,IAKL,OAJc4pC,EAAO5pC,QAAQqjB,OAAW4mB,MACjCjqC,IAAM8pC,EAAQvnC,OAAS,EACjC,OAAOqnC,EAAO5pC,EAAI,QAAQqjB,OAAWumB,EAAO5pC,QAAQiqC,IACpD,YAAYL,EAAO5pC,QAAQiqC,SAGhC7lB,KAAK,IAEzC,MAAO,oEAED4lB,4CAIR,CAzFQorB,CAAuBH,aA2F/B,SAAiCt7B,GAC/B,MAAMmQ,EAAU,EAAAiC,UAAUsM,eAAe1e,GAEzC,MAAO,+FAGemQ,EAAQ,mBAAmBA,EAAQ,uBAG3D,CAnGQurB,CAAwB3c,cACxB,IAAAsK,6KAQatK,EAAoB,2BACpBA,EAAoB,kBAE/Bwc,cACAhrB,EAAK3T,kCAIL,OAAO,OAAP,wBACK+rB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAM8gB,EAAqB7kB,KAAMihC,EAAQjhC,KAAMohB,YAAa,EAAAqB,YAAYC,QACjFrE,eACAC,SAAS,GAAI,EAOamjB,CAAiCl0B,EAAS0zB,EAASxS,EAAUyS,IAAc,EAGjH,yBAA8Bp7B,GAC5B,GAAqB,IAAjBA,EAAMp3B,OACR,MAAO,CAAC,EAAG,EAAG,GAGhB,IAAIgzD,EAAQ,EACZ,IAAK,IAAIv1D,EAAI,EAAGA,EAAI25B,EAAMp3B,OAAS,IAAKvC,EACtCu1D,GAAS57B,EAAM35B,GAEjB,MAAO,CAACu1D,EAAO57B,EAAMp3B,OAAS,EAAIo3B,EAAMA,EAAMp3B,OAAS,GAAK,EAAGo3B,EAAMA,EAAMp3B,OAAS,GACtF,EAaA,0BAA+Bq1B,EAAyBqgB,GACtD,IAAIud,GAAiB,EAUrB,OAREA,EADkB,IAAhB59B,EAAKr1B,QAAwC,IAAxB01C,EAAa11C,SAE3Bq1B,EAAKr1B,OAAS,GAAK01C,EAAa11C,OAAS,EACjCq1B,EAAKA,EAAKr1B,OAAS,KAAO01C,EAAaA,EAAa11C,OAAS,GAE7Dq1B,EAAKA,EAAKr1B,OAAS,KAAO01C,EAAaA,EAAa11C,OAAS,IAC1Eq1B,EAAKA,EAAKr1B,OAAS,KAAO01C,EAAaA,EAAa11C,OAAS,IAG5DizD,CACT,C,+FCvHA,gBAGa,EAAA1X,QAAU,CAAC1c,EAAgCiU,KACtD,MAAM4C,EAAe,EAAAlM,UAAU0pB,sBAAsBpgB,EAAO,GAAGzd,KAAMyd,EAAO,GAAG6b,aAC/E,OAAI9vB,EAAQZ,QAAQ4F,KACX,CAAChF,EAAQkX,cAAcjD,EAAO,GAAI4C,IAElC,CAAC7W,EAAQ4W,gBAAgB3C,EAAO,GAAI4C,G,sJCN/C,gBAEA,UACA,UAEA,UACA,UAEMyd,EAAwB,CAC5BvsD,KAAM,SACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAYC,SAGd,EAAAwH,OACT,CAAC4B,EAAyCtK,EAAkBhT,MAC1D,IAAAud,gBAAevK,EAAQhT,GAQhB,CAPQsd,EAAiBvJ,IAAI,OAAD,wBAE1Bsf,GAAqB,CACxBhgB,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAM2nD,EAA8BhW,EAAkBtK,EAAQhT,KAErEgT,KAIG,EAAA2I,yBACRr8C,IAAyC,IAAAi0D,yBAAwBj0D,EAAM,IAE/D,EAAAs8C,yBACRt8C,IAAyC,IAAAi0D,yBAAwBj0D,EAAM,IAE5E,MAAMg0D,EACF,CAAChW,EAAyCtK,EAAkBhT,KAC1D,MAAM6H,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,UACzDi8B,EAAQnU,GAAeoU,EAAczgB,EAAQhT,GAIpD,GADIwzB,EAAOE,OAAOr1D,GAAoB,IAANA,KAAmD,uBAAvC2hC,EAAW2zB,wBAErD,OAAO,OAAP,wBACKN,GAAqB,CACxBn/B,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAYC,QAC3EpE,SAAS,EACTD,aAAc,+CACOhI,EAAKC,iDACdD,EAAK3T,mCAKrB,MAAMwC,EAAM2oB,EAAYn/C,OACxB,GAAIw2B,EAAM,EACR,MAAM,IAAIrxB,MAAM,kDAAkDqxB,KAGpE,MAAMk9B,EAAevU,EAAY3oB,EAAM,GACjCm9B,EAAcxU,EAAY3oB,EAAM,GAEhC2pB,EAAarN,EAAO,GAAGzd,KAC7B,GAAImB,IAAQ2pB,EAAWngD,OACrB,MAAM,IAAImF,MAAM,uCAAuCg7C,EAAWngD,mBAAmBw2B,KAEvF,MAAMo9B,EAAczT,EAAW3pB,EAAM,GAC/Bq9B,EAAa1T,EAAW3pB,EAAM,GAE9Bs9B,EAAeR,EAAO98B,EAAM,GAC5Bu9B,EAAcT,EAAO98B,EAAM,GAEjC,IAAIw9B,EAAqB,GAEzB,GAAwB,WAApBl0B,EAAWinB,KAEb,MAAM,IAAI5hD,MAAM,2CAA2C26B,EAAWinB,SAExE,OAAQjnB,EAAW2zB,yBACjB,IAAK,aACHO,EAAqB,mKAKrB,MACF,IAAK,aACHA,EAAqB,iLAKrB,MACF,IAAK,qBACHA,EAAqB,0LAIDL,yFACAD,yFACAC,yFACAD,iIAIpB,MACF,IAAK,gBACHM,EAAqB,8GAEeL,cAAwBD,cAAyBC,2CACjED,6DACiBG,cAAuBD,cAAwBC,2CAChED,+KAKpB,MACF,QAEE,MAAM,IAAIzuD,MAAM,8FACS26B,EAAW2zB,4BAGxC,MAAM1H,GAAiB,IAAA9iB,mBAAkBzS,GAEnCmZ,EAAe,2CACaikB,QAAkBC,wDACVC,aAAwBC,aAAuBD,aACrFC,sBAJkB,IAAAtT,qCAMduT,iMAKIjI,s8BAiByB2H,EAAe,gDACfC,EAAc,urEAsCvChsB,EAAK3T,oDAGjB,OAAO,OAAP,wBACKm/B,GAAqB,CACxBn/B,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAYC,QAC3EpE,SAAS,EACTD,gBAAY,EAKd4jB,EAAgB,CAACzgB,EAAkBhT,KACvC,MACMsrB,EADItY,EAAO,GACDzd,KAEhB,IACI4+B,EADAX,EAASxzB,EAAWwzB,OAExB,GAAsB,IAAlBA,EAAOtzD,OAAc,CACvB,MAAMk0D,EAAephB,EAAOhT,EAAWq0B,gBACvC,GAAID,GAAsC,IAAtBA,EAAaruC,KAAY,CAC3C,GAAIitB,EAAOhT,EAAWs0B,eACpB,MAAM,IAAIjvD,MAAM,0DAElBmuD,EAASe,EAAgBH,EAAcp0B,EAAWinB,KAAMjnB,EAAWw0B,S,KAC9D,CACL,MAAMC,EAAczhB,EAAOhT,EAAWs0B,eACtC,IAAKG,GAAoC,IAArBA,EAAY1uC,KAC9B,MAAM,IAAI1gB,MAAM,qDAGlB8uD,EAAcnhD,MAAMunB,KAAKk6B,EAAY5F,aACrC2E,EAASkB,EAA8BP,EAAa7I,EAAOtrB,EAAWinB,KAAMjnB,EAAWw0B,S,OAGzF,GAAIxhB,EAAOhT,EAAWs0B,eACpB,MAAM,IAAIjvD,MAAM,0DAIpB,MAAMsvD,EAAQR,GAAgB7I,EAAM7rB,KAAI,CAAC/I,EAAK/4B,IAAM6R,KAAKqD,MAAM6jB,EAAM88B,EAAO71D,MAE5E,MAAO,CAAC61D,EAAQmB,EAAM,EAGlBJ,EAAkB,CAACzW,EAAemJ,EAAcuN,KACpD,MAAMhB,EAASxgD,MAAMunB,KAAKujB,EAAMtoB,WAEhC,OADA,IAAAo/B,kBAAiBpB,EAAQvM,EAAMuN,GACxBhB,CAAM,EAGTkB,EACF,CAACC,EAA0BrJ,EAA0BrE,EAAcuN,KACjE,MAAMt0D,EAASorD,EAAMprD,OACfszD,EAAS,IAAIxgD,MAAc9S,GAEjC,IAAK,IAAIvC,EAAI,EAAGikB,EAAM1hB,EAAQvC,EAAIikB,EAAKjkB,IACrC,GAAiB,IAAb2tD,EAAM3tD,GAAU,CAClB,GAAiB,IAAbg3D,EAAMh3D,GACR,MAAM,IAAI0H,MAAM,0DAElBmuD,EAAO71D,GAAK,C,MAEZ61D,EAAO71D,GAAKg3D,EAAMh3D,GAAK2tD,EAAM3tD,GAIjC,OADA,IAAAi3D,kBAAiBpB,EAAQvM,EAAMuN,GACxBhB,CAAM,C,8FCpQnB,gBAGa,EAAAl8B,MAAQ,CAACgmB,EAAyCtK,KAC7DuK,EAAevK,GACR,CAAC,IAAI,EAAA5b,OAAO,CAAC4b,EAAO,GAAGzd,KAAKr1B,QAAS,aAASygB,OAAWA,EAAW,IAAIvc,WAAW4uC,EAAO,GAAGzd,SAGtG,MAAMgoB,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,0B,iICVpB,eAEA,SAEA,UAEA,UAQMwvD,EAAuB,CAC3B/tD,KAAM,QACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGd,EAAA11C,MACT,CAACk9C,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAQR,CAPQsK,EAAiBvJ,IAAI,OAAD,wBAE1B8gB,GAAoB,CACvBxhB,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAMmpD,EAAuBxX,EAAkBtK,EAAO,GAAIhT,KAEjEgT,KAIG,EAAAgJ,qBAAiE18C,IAC5E,MAAMy1D,EAASz1D,EAAK0gC,WAAWa,QAAQ,UACjCm0B,EAAO11D,EAAK0gC,WAAWa,QAAQ,QAC/BoxB,EAAO3yD,EAAK0gC,WAAWa,QAAQ,OAAQ,IAC7C,OAAO,IAAAnB,6BAA4B,CAACq1B,SAAQC,OAAM/C,QAAM,EAG1D,MAAM6C,EACF,CAACxX,EAAyCrpB,EAAe+L,KACvD,MAAMiyB,EAAmC,IAA3BjyB,EAAWiyB,KAAK/xD,OAAgB+zB,EAAMsB,KAAKn1B,MAAM,GAAGq/B,KAAI,CAAC3c,EAAKnlB,IAAMA,IAAKqiC,EAAWiyB,KAC5FgD,EAAiB,EAAAvrB,UAAU2oB,cAAcJ,EAAMh+B,EAAMsB,KAAKr1B,QAC1D60D,EAAS/0B,EAAW+0B,OAAOt1B,KAAI,CAAC9d,EAAOhkB,IACvCgkB,EAAQsS,EAAMsB,KAAK0/B,EAAet3D,IAAM,EACnCs2B,EAAMsB,KAAK0/B,EAAet3D,IAE5B,EAAA+rC,UAAUyf,cAAcxnC,EAAOsS,EAAMsB,KAAK0/B,EAAet3D,OAE5Dq3D,EAAOh1B,EAAWg1B,KAAKv1B,KAAI,CAAC7d,EAAKjkB,IACjCikB,EAAMqS,EAAMsB,KAAK0/B,EAAet3D,IAAM,EACjCs2B,EAAMsB,KAAK0/B,EAAet3D,IAE5B,EAAA+rC,UAAUyf,cAAcvnC,EAAKqS,EAAMsB,KAAK0/B,EAAet3D,OAG1D0hD,EAAcprB,EAAMsB,KAAKn1B,QAEzB80D,EAAqB,GAC3B,IAAK,IAAIv3D,EAAI,EAAGA,EAAIs3D,EAAe/0D,OAAQvC,IACzC0hD,EAAY4V,EAAet3D,IAAMq3D,EAAKr3D,GAAKo3D,EAAOp3D,GAC9Co3D,EAAOp3D,GAAK,GACdu3D,EAAS3tD,KAAK,aAAa0tD,EAAet3D,UAAUo3D,EAAOp3D,OAI/D,MACMkyC,EAAe,uCADRwP,EAAYn/C,uBAGrBg1D,EAASnzC,KAAK,sDAGlB,OAAO,OAAP,wBACK8yC,GAAoB,CACvB3gC,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACvEjG,gBAAY,EAId0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,2BAElB,IAA8C,IAA1C,EAAAikD,aAAanoD,QAAQ6xC,EAAO,GAAGxhB,MACjC,MAAM,IAAInsB,MAAM,sB,EAIP,EAAA02C,SAAW,CAACuB,EAAyCtK,KAChEmiB,EAAkBniB,GAClB,MAAMhT,EAAao1B,EAAkC9X,EAAkBtK,GAQvE,MAAO,CAPQsK,EAAiBvJ,IAAI,OAAD,wBAE1B8gB,GAAoB,CACvBxhB,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAMmpD,EAAuBxX,EAAkBtK,EAAO,GAAIhT,KAEjE,CAACgT,EAAO,KACG,EAGjB,MAAMoiB,EACF,CAAC9X,EAAyCtK,KACxC,IAAKsK,EAAiBnf,QAAQ6Y,cAAchE,EAAO,GAAGqB,UACjDiJ,EAAiBnf,QAAQ6Y,cAAchE,EAAO,GAAGqB,SACjDrB,EAAO9yC,QAAU,IAAMo9C,EAAiBnf,QAAQ6Y,cAAchE,EAAO,GAAGqB,SACxErB,EAAO9yC,QAAU,IAAMo9C,EAAiBnf,QAAQ6Y,cAAchE,EAAO,GAAGqB,QAC3E,MAAM,IAAIhvC,MAAM,4CAGlB,GAAI2tC,EAAO9yC,QAAU,GAAK8yC,EAAO,GAAG6b,YAAYwG,MAAM13D,GAAoB,IAANA,IAClE,MAAM,IAAI0H,MAAM,oDAGlB,MAAM0vD,EAAS/hD,MAAMunB,KAAKyY,EAAO,GAAG6b,aAC9BmG,EAAOhiD,MAAMunB,KAAKyY,EAAO,GAAG6b,aAC5BoD,EAAOjf,EAAO9yC,QAAU,EAAI8S,MAAMunB,KAAKyY,EAAO,GAAG6b,aAAe,GAEtE,MAAO,CAACkG,SAAQC,OAAM/C,OAAM5yB,SADX,GAAG4yB,KAAQ8C,KAAUC,IACD,EAGrCG,EAAqBniB,IACzB,IAAKA,GAAUA,EAAO9yC,OAAS,GAAK8yC,EAAO9yC,OAAS,EAClD,MAAM,IAAImF,MAAM,yBAElB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,MAA8C,IAA1BwhB,EAAO,GAAGzd,KAAKr1B,OAC/C,MAAM,IAAImF,MAAM,uBAElB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,MAA8C,IAA1BwhB,EAAO,GAAGzd,KAAKr1B,OAC/C,MAAM,IAAImF,MAAM,uBAElB,GAAI2tC,EAAO9yC,QAAU,IAAyB,UAAnB8yC,EAAO,GAAGxhB,MAA8C,IAA1BwhB,EAAO,GAAGzd,KAAKr1B,QACtE,MAAM,IAAImF,MAAM,uBAElB,GAAI2tC,EAAO9yC,QAAU,IAAyB,UAAnB8yC,EAAO,GAAGxhB,MAA8C,IAA1BwhB,EAAO,GAAGzd,KAAKr1B,QACtE,MAAM,IAAImF,MAAM,sB,mKCxIpB,eAIA,UACA,UAEA,UAEA,UAMMiwD,EAAmC,CACvCxuD,KAAM,oBACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGrByf,EAAqC,CACzCzuD,KAAM,sBACNkhC,WAAY,CAAC,IAAK,OAClBiL,WAAY,CAAC,EAAAgB,YAAY6B,SAAU,EAAA7B,YAAY6B,WAG3C0f,EAAyB,CAC7B1uD,KAAM,UACNkhC,WAAY,CAAC,IAAK,MAAO,QACzBiL,WAAY,CAAC,EAAAgB,YAAY6B,SAAU,EAAA7B,YAAY6B,SAAU,EAAA7B,YAAY6B,WAG1D,EAAAmG,QACT,CAACqB,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAEf,MAAMqN,EAAarN,EAAO,GAAGzd,KAAKn1B,QAC5BggD,EAAO,EAAA1W,UAAUyf,cAAcnpB,EAAWogB,KAAMC,EAAWngD,QAC3Du1D,EAAkB,EAAA/rB,UAAUgsB,gBAAgBrV,EAAYD,GACxDuV,EAAe,EAAAjsB,UAAUksB,kBAAkBvV,EAAYD,GAG7D,OADeyV,EAAevY,EAAkBtK,EAAQhT,EAAYy1B,EAAiBE,EACxE,EAGN,EAAAzZ,uBACR58C,IAAwC,IAAAogC,6BAA4B,CAAC0gB,KAAM9gD,EAAK0gC,WAAWS,OAAO,OAAQ,KAElG,EAAA2b,0BACR98C,IAAwC,IAAAogC,6BAA4B,CAAC0gB,KAAM9gD,EAAK0gC,WAAWS,OAAO,QAAS,KAQnG,EAAA0b,WACT,CAACmB,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAEf,MAAMqN,EAAarN,EAAO,GAAGzd,KAAKn1B,QAC5BggD,EAAO,EAAA1W,UAAUyf,cAAcnpB,EAAWogB,KAAMC,EAAWngD,QAC3DsnC,EAAO6Y,EAAWngD,OAElB41D,EAAuB1V,IAAS5Y,EAAO,EACvCuuB,EAAiC,GACvC,IAEIC,EAFA3O,EAAiB,GACjB4O,EAA6B,GAG7BH,IACFzO,EAAOr0C,MAAMunB,KAAK,CAACr6B,OAAQsnC,IAAO/H,KAAI,CAACxgC,EAAGtB,IAAMA,IAGhD0pD,EAAKjH,GAAQ5Y,EAAO,EACpB6f,EAAK7f,EAAO,GAAK4Y,EAEjBiH,EAAK5nB,KAAIlhC,GAAKw3D,EAAqBxuD,KAAK84C,EAAW9hD,MAEnDy3D,GAAqB,IAAAt2B,6BAA4B,CAAC2nB,SAClD4O,GAAmB,IAAAppB,WAAUyQ,EAAkBtK,EAAQgjB,IAGzD,MAAMP,EAAkBK,EAAsB,EAAApsB,UAAUgsB,gBAAgBK,EAAsBvuB,EAAO,GACvD,EAAAkC,UAAUgsB,gBAAgBrV,EAAY7Y,EAAO,GACrFmuB,EAAeG,EAAsB,EAAApsB,UAAUksB,kBAAkBG,EAAsBvuB,EAAO,GACzD,EAAAkC,UAAUksB,kBAAkBvV,EAAY7Y,EAAO,GAEpFtT,EAAS2hC,EACXvY,EAAkBwY,EAAsBG,EAAmBjjB,EAAQhT,EAAYy1B,EAAiBE,GAEpG,OAAIG,GACqB,IAAAjpB,WAAUyQ,EAAkBppB,EAAQ8hC,GAGpD9hC,C,EAIf,MAAM2hC,EACF,CAACvY,EAAyCtK,EAAkBhT,EAA+By1B,EAC1FE,KACC,MAAMO,EACFC,EAA4B7Y,EAAkBtK,EAAO,GAAIyiB,EAAiBE,EAAc,CAACF,IACvFhmD,EAAM6tC,EAAiBvJ,IAAI,OAAD,wBACxBuhB,GAAgC,CAAEjiB,UAAWrT,EAAWX,SAAU1zB,IAAK,IAAMuqD,IACjFljB,GAEEojB,EAA0BC,EAC5B/Y,EAAkBtK,EAAO,GAAIyiB,EAAiBE,EAAcO,EAAsBhiC,OAAOqB,KACzF,CAACkgC,IACC3X,EAAQR,EAAiBvJ,IAAI,OAAD,wBAC1BwhB,GAAkC,CAAEliB,UAAWrT,EAAWX,SAAU1zB,IAAK,IAAMyqD,IACnF,CAACpjB,EAAO,GAAIvjC,IAEV6mD,EAAqBC,EACvBjZ,EAAkBtK,EAAO,GAAIyiB,EAAiBE,EAAcO,EAAsBhiC,OAAOqB,KACzF6gC,EAAwBliC,OAAOqB,MAInC,MAAO,CAHQ+nB,EAAiBvJ,IAAI,OAAD,wBAC3ByhB,GAAsB,CAAEniB,UAAWrT,EAAWX,SAAU1zB,IAAK,IAAM2qD,IACvE,CAACtjB,EAAO,GAAIvjC,EAAKquC,IACN,EAMfqY,EACF,CAAC7Y,EAAyCrpB,EAAewhC,EAAyBE,EACjFtW,KACC,MAAOsM,EAAcC,GACjBtO,EAAiB3K,+BAA+B1e,EAAMsB,KAAM,EAAA0e,YAAY6B,UACtEtO,EAAO6X,EAAYn/C,OAEzB,GAAIu1D,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAItwD,MAAM,8EAGlB,GAA2B,IAAvBg6C,EAAYn/C,OACd,MAAM,IAAImF,MAAM,4CAGlB,GAAIg6C,EAAY,KAAOoW,EACrB,MAAM,IAAIpwD,MAAM,4DAGlB,MAAMwiC,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAC1DsY,EAAe,6BACDrI,sEAC4BmuB,6CAEhB9tB,EAAKC,yDAAyD6jB,eAC1FC,kCACe+J,iEAEmB9tB,EAAKC,0EACnC6jB,MAAiBC,0GAOzB,OAAO,OAAP,wBACK0J,GAAgC,CACnCphC,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACvEjG,gBAAY,EAOdwmB,EACF,CAAC/Y,EAAyCrpB,EAAewhC,EAAyBE,EACjFa,EAA4CnX,KAC3C,MAAOsM,EAAcC,GACjBtO,EAAiB3K,+BAA+B1e,EAAMsB,KAAM,EAAA0e,YAAY6B,UACtEtO,EAAO6X,EAAYn/C,OAEzB,GAAIu1D,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAItwD,MAAM,8EAGlB,GAA2B,IAAvBg6C,EAAYn/C,OACd,MAAM,IAAImF,MAAM,4CAGlB,GAAIg6C,EAAY,KAAOoW,EACrB,MAAM,IAAIpwD,MAAM,4DAGlB,GAAuC,IAAnCmxD,EAAwBt2D,OAC1B,MAAM,IAAImF,MAAM,0DAGlB,GAAImxD,EAAwB,KAAOf,EACjC,MAAM,IAAIpwD,MAAM,0EAGlB,MACMwqC,EAAe,6BACDrI,sEAC4BmuB,sGAI7BA,qEAPN,IAAArvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SASlBuQ,0EACtC6jB,MAAiBC,kEAKzB,OAAO,OAAP,wBACK2J,GAAkC,CACrCrhC,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACvEjG,gBAAY,EAId0mB,EACF,CAACjZ,EAAyCrpB,EAAewhC,EAAyBE,EACjFa,EAA4CC,KAC3C,MAAO9K,EAAcC,GACjBtO,EAAiB3K,+BAA+B1e,EAAMsB,KAAM,EAAA0e,YAAY6B,UACtEtO,EAAOvT,EAAMsB,KAAKr1B,OAExB,GAAIu1D,EAAkB,GAAKE,EAAe,EACxC,MAAM,IAAItwD,MAAM,8EAGlB,GAAuC,IAAnCmxD,EAAwBt2D,QAAsD,IAAtCu2D,EAA2Bv2D,OACrE,MAAM,IAAImF,MAAM,0DAGlB,GAAImxD,EAAwB,KAAOf,GAAmBgB,EAA2B,KAAOhB,EACtF,MAAM,IAAIpwD,MAAM,0EAGlB,MAAMwqC,EAAe,6BACDrI,mKAGqBmkB,MAAiBC,mIAIxB+J,uTAYlC,OAAO,OAAP,wBACKH,GAAsB,CACzBthC,OAAQ,CAACqB,KAAMtB,EAAMsB,KAAM/D,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACtEjG,gBAAY,EAId0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,6BAGlB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,qB,sHCpRpB,eAIA,UAEA,UAQMqxD,EAAuB,CAC3B5vD,KAAM,QACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGd,EAAAnjC,MACT,CAAC2qC,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAEf,MAAMoN,EAAO,EAAA1W,UAAUyf,cAAcnpB,EAAWogB,KAAMpN,EAAO,GAAGzd,KAAKr1B,QAC/DonB,EAAQqvC,EAAgBrZ,EAAkBtK,EAAQoN,EAAMpgB,GACxD9L,EAAmB,GACzB,IAAK,IAAIv2B,EAAI,EAAGA,EAAI2pB,IAAS3pB,EAC3Bu2B,EAAO3sB,KAAK+1C,EAAiBvJ,IAAI,OAAD,wBAEvB2iB,GAAoB,CACvBrjB,UAAW,GAAGrT,EAAWX,YAAY1hC,IACrCgO,IAAK,IAAMirD,EAAuBtZ,EAAkBtK,EAAO,GAAIhT,EAAYogB,EAAMziD,KAEnFq1C,IAGN,OAAO9e,CAAM,EAGN,EAAAmoB,qBAAiE/8C,IAC5E,MAAM8gD,EAAO9gD,EAAK0gC,WAAWS,OAAO,OAAQ,GACtC9tB,EAAQrT,EAAK0gC,WAAWa,QAAQ,QAAS,IACzCg2B,EAAav3D,EAAKw3D,QAAQ52D,OAChC,OAAO,IAAAw/B,6BAA4B,CAAC0gB,OAAMztC,QAAOkkD,cAAY,EAG/D,MAAMF,EACF,CAACrZ,EAAyCtK,EAAkBoN,EAAcpgB,KACxE,MAAO,CAAE6gB,GAAW,EAAAkW,UAAUC,WAAWhkB,EAAO,GAAGzd,KAAM6qB,EAAMpgB,EAAWrtB,MAAOqtB,EAAW62B,YAC5F,OAAOhW,EAAQ3gD,MAAM,EAGrB02D,EACF,CAACtZ,EAAyCrpB,EAAe+L,EAA6BogB,EAAcp/B,KAE9F,MAAO4/B,EAAQC,GAAW,EAAAkW,UAAUC,WAAW/iC,EAAMsB,KAAM6qB,EAAMpgB,EAAWrtB,MAAOqtB,EAAW62B,YACxF91C,EAAS8/B,EAAQ7/B,GACjBq+B,EAAcuB,EAAO5/B,GAErB6uB,EAAe,qCADRwP,EAAYn/C,+BAGjBkgD,SAAYr/B,iDAIpB,OAAO,OAAP,wBACK21C,GAAoB,CACvBrjB,UAAW,GAAGrT,EAAWX,YAAYre,IACrCkT,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACvEjG,gBAAY,EAIlB0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,6BAGlB,GAAuB,SAAnB2tC,EAAO,GAAGxhB,MAAsC,UAAnBwhB,EAAO,GAAGxhB,MAAuC,UAAnBwhB,EAAO,GAAGxhB,MAClD,WAAnBwhB,EAAO,GAAGxhB,MAAwC,UAAnBwhB,EAAO,GAAGxhB,MAAuC,WAAnBwhB,EAAO,GAAGxhB,MACpD,YAAnBwhB,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,MAAyC,SAAnBwhB,EAAO,GAAGxhB,KAC5E,MAAM,IAAInsB,MAAM,sB,uIC/EpB,gBAGa,EAAAk3C,QACT,CAACe,EAAyCtK,EAAkBif,KAC1D1U,EAAevK,GACf,MAAMqM,EAAc,EAAA3V,UAAUmC,aAAamH,EAAO,GAAGzd,KAAM08B,GAE3D,MAAO,CADQ3U,EAAiB3H,gBAAgB3C,EAAO,GAAIqM,GAC5C,EAGR,EAAA5C,WAAa,CAACa,EAAyCtK,KAClEikB,EAAkBjkB,IACX,IAAAuJ,SAAQe,EAAkB,CAACtK,EAAO,IAAKhgC,MAAMunB,KAAKyY,EAAO,GAAG6b,eAGxD,EAAArS,uBAA4Dl9C,GACrEA,EAAK0gC,WAAWa,QAAQ,QAE5B,MAAM0c,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,6BAGlB,GAAuB,WAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,8B,EAId4xD,EAAqBjkB,IACzB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,8BAGlB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,sB,6FCrCpB,gBAEA,UAEa,EAAAq3C,IAAM,CAACY,EAAyCtK,KAC3DuK,EAAevK,GAEf,MAAMkkB,EAAqB,CACzBpwD,KAAM,MACNkhC,WAAYgL,EAAOvT,KAAI,CAACtgC,EAAGxB,IAAM,IAAIA,MACrCs1C,WAAY,IAAIjgC,MAAMggC,EAAO9yC,QAAQigD,KAAK,EAAAlM,YAAY6B,WAKxD,MAAO,CAFQwH,EAAiBvJ,IAAI,OAAD,wBAC3BmjB,GAAkB,CAAEvrD,IAAK,IAAMwrD,EAAqB7Z,EAAkBtK,EAAQkkB,KAAsBlkB,GAC7F,EAGjB,MAAMmkB,EACF,CAAC7Z,EAAyCtK,EAAkBkkB,KAC1D,MAAMrvB,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAC1D8nB,EAAcrM,EAAO,GAAGzd,KAAKn1B,QAC7Bg3D,EAAUpkB,EAAOvT,KAAI,CAACtgC,EAAGxB,IAAM,GAAGkqC,EAAKC,cAAcnqC,iBAAgBokB,KAAK,OAC1E8tB,EAAe,gDAEHunB,eACdvvB,EAAK3T,kCAGT,OAAO,OAAP,wBACKgjC,GAAkB,CACrBhjC,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EhG,SAAS,EACTD,gBAAY,EAId0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,wBAGlB,MAAMnF,EAAS8yC,EAAO,GAAGzd,KAAKr1B,OAC9B,IAAK,IAAIvC,EAAI,EAAGA,EAAIq1C,EAAO9yC,OAAQvC,IAAK,CACtC,GAAIuC,IAAW8yC,EAAOr1C,GAAG43B,KAAKr1B,OAC5B,MAAM,IAAImF,MAAM,gCAGlB,IAAK,IAAI/H,EAAI,EAAGA,EAAI4C,EAAQ5C,IAC1B,GAAI01C,EAAO,GAAGzd,KAAKj4B,KAAO01C,EAAOr1C,GAAG43B,KAAKj4B,GACvC,MAAM,IAAI+H,MAAM,gC,CAKtB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,uBAElB,IAAK,IAAI1H,EAAI,EAAGA,EAAIq1C,EAAO9yC,OAAQvC,IACjC,GAAIq1C,EAAO,GAAGxhB,OAASwhB,EAAOr1C,GAAG6zB,KAC/B,MAAM,IAAInsB,MAAM,+B,8FC7DtB,eAGA,UAEa,EAAAw3C,KAAO,CAACS,EAAyCtK,KAC5DuK,EAAevK,GAEf,MAAMqkB,EAAsB,CAC1BvwD,KAAM,OACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAM3B,MAAO,CAHQwH,EAAiBvJ,IAAI,OAAD,wBAC3BsjB,GAAmB,CAAE1rD,IAAK,IAAM2rD,EAAsBha,EAAkBtK,EAAQqkB,KACpFrkB,GACW,EAGjB,MAAMskB,EACF,CAACv4B,EAAgCiU,EAAkBqkB,KACjD,MAAMhX,EAAarN,EAAO,GAAGzd,KAAKn1B,QAC5Bi/C,EAAc,IAAIrsC,MAAMqtC,EAAWngD,QAEnCq3D,EAAoB,GAC1B,IAAK,IAAI55D,EAAI,EAAGA,EAAI0iD,EAAWngD,OAAQvC,IACrC0hD,EAAY1hD,GAAK0iD,EAAW1iD,GAAKq1C,EAAO,GAAG4B,WAAWj3C,GACtD45D,EAAQhwD,KAAK,YAAY5J,gCAAgCA,QAAQ0iD,EAAW1iD,UAG9E,MAAM6pC,EAAO6X,EAAYn/C,OACnB2vC,EAAe,uCACSrI,+BACbA,gBACb+vB,EAAQx1C,KAAK,qDAIjB,OAAO,OAAP,wBACKs1C,GAAmB,CACtBnjC,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,gBAAY,EAId0N,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,0BAElB,GAA8B,IAA1B2tC,EAAO,GAAGzd,KAAKr1B,OACjB,MAAM,IAAImF,MAAM,4CAElB,GAAI2tC,EAAO,GAAGzd,KAAK,KAAOyd,EAAO,GAAGzd,KAAKr1B,OACvC,MAAM,IAAImF,MAAM,wBAElB,IAA8C,IAA1C,EAAAikD,aAAanoD,QAAQ6xC,EAAO,GAAGxhB,MACjC,MAAM,IAAInsB,MAAM,uBAElB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,MAAuC,UAAnBwhB,EAAO,GAAGxhB,KAC1C,MAAM,IAAInsB,MAAM,uB,8HC5DpB,eAIA,UAEA,UAMMmyD,EAA2B,CAC/B1wD,KAAM,YACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGd,EAAAjJ,UACT,CAACyQ,EAAyCtK,EAAkBhT,KAC1Dud,EAAevK,GAQR,CAPQsK,EAAiBvJ,IAAI,OAAD,wBAE1ByjB,GAAwB,CAC3BnkB,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAM8rD,EAA2Bna,EAAkBtK,EAAO,GAAIhT,EAAWqnB,QAEhFrU,KAIG,EAAA8J,yBACRx9C,IAA0C,IAAAogC,6BAA4B,CAAC2nB,KAAM/nD,EAAK0gC,WAAWa,QAAQ,OAAQ,MAElH,MAAM42B,EACF,CAACna,EAAyCrpB,EAAeozB,KACvD,MAAMhH,EAAapsB,EAAMsB,KACzB8xB,EAAOqQ,EAAgBrX,EAAYgH,GACnC,MAAMsQ,EAAsBC,EAAevX,EAAYgH,GACjD7f,EAAO6Y,EAAWngD,OAIlB2vC,EAAe,WACnBgoB,EAAoB,OAAQxQ,EAAM7f,uCACRA,wBAClBA,iEAIV,OAAO,OAAP,wBACKgwB,GAAwB,CAC3BtjC,OAAQ,CAACqB,KAAMoiC,EAAqBnmC,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC/EjG,gBAAY,EAId6nB,EAAkB,CAACrX,EAA+BgH,KAClDA,GAAQA,EAAKnnD,SAAWmgD,EAAWngD,SACrCmnD,EAAO,IAAKhH,EAAWx6B,QAASqmB,WAE3Bmb,GAGHuQ,EAAiB,CAACvX,EAA+BgH,KACrDA,EAAOqQ,EAAgBrX,EAAYgH,GAC5B,EAAA3d,UAAUouB,gBAAgBzX,EAAYgH,IAGzCwQ,EAAsB,CAAC/wD,EAAcugD,EAAgB7f,KACzD,MAAMuwB,EAAc,GACpBA,EAAYxwD,KAAK,QAAQT,eAAkB0gC,eAAkBA,SAC7D,IAAK,IAAI7pC,EAAI,EAAGA,EAAI6pC,IAAQ7pC,EAC1Bo6D,EAAYxwD,KAAK,OAAO8/C,EAAK1pD,WAAWA,OAG1C,OADAo6D,EAAYxwD,KAAK,OACVwwD,EAAYh2C,KAAK,KAAK,EAGzBw7B,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,+BAGlB,GAAuB,YAAnB2tC,EAAO,GAAGxhB,MAAyC,YAAnBwhB,EAAO,GAAGxhB,KAC5C,MAAM,IAAInsB,MAAM,+B,uGCrFpB,gBAEA,UAEa,EAAAiyC,cAAgB,CAACgG,EAAyCrpB,KACrE,MAAMorB,EAAcprB,EAAMqD,MACpBuQ,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,SAI1DsY,EAAe,0oCA6CDhI,EAAKC,oCACnBD,EAAK3T,wCAEL6T,EAAc,CAClBjhC,KAAM,cACNmsC,WAAY,CAAC,EAAAgB,YAAY6B,UACzB9N,WAAY,CAAC,KACb9T,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMyC,EAAM+f,OAAOxiB,KAAMohB,YAAa,EAAAqB,YAAY+jB,sBAC9EnoB,eACAC,SAAS,GAEX,OAAOwN,EAAiBxK,eAAe/K,EAAa,CAAC9T,EAAM+f,QAAQ,C,wiBClErE,eAGA,UACA,UACA,UAEA,UAEA,SAAgBikB,IACd,OAAOC,EAAiB,MAC1B,CACA,SAAgBC,IACd,OAAOD,EAAiB,OAC1B,CACA,SAAgBE,IACd,OAAOF,EAAiB,OAC1B,CACA,SAAgBG,IACd,OAAOH,EAAiB,OAC1B,CACA,SAAgBI,IACd,OAAOJ,EAAiB,OAC1B,CACA,SAAgBK,IACd,OAAOL,EAAiB,MAC1B,CACA,SAAgBM,EAAQ5O,GACtB,MAAM9iD,EAAO,MAWb,MAAO,CAAC2lC,KAVK,iCACemd,kBAEpB9iD,gFAGDA,iCACSA,YAAeA,YAAeA,YAAeA,qBAG/CA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBua,IACd,OAAOP,EAAiB,MAC1B,CACA,SAAgBQ,IACd,OAAOR,EAAiB,QAC1B,CACA,SAAgBxP,EAAS9yC,EAAanG,GACpC,MAAM3I,EAAO,OAYb,MAAO,CAAC2lC,KAXK,+BACa72B,kCACAnG,kBAElB3I,8DAGDA,wDAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBya,IACd,MAAM7xD,EAAO,YASb,MAAO,CAAC2lC,KARK,aACL3lC,6CAGDA,uCAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgB0a,EAAchP,GAC5B,MAAM9iD,EAAO,YAWb,MAAO,CAAC2lC,KAVK,iCACemd,kBAEpB9iD,mEAGDA,iCACSA,YAAeA,YAAeA,YAAeA,qBAG/CA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgB2a,IACd,OAAOX,EAAiB,MAC1B,CACA,SAAgBY,IACd,MAAMhyD,EAAO,MASb,MAAO,CAAC2lC,KARK,aACL3lC,8CAGDA,wCAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgB6a,IACd,MAAMjyD,EAAO,MAeb,MAAO,CAAC2lC,KAdK,aACL3lC,8DAGDA,6CAGAA,gGAGCA,oEAIMA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgB8a,IACd,OAAOd,EAAiB,MAC1B,CACA,SAAgB1P,IACd,MAAM1hD,EAAO,OASb,MAAO,CAAC2lC,KARK,aACL3lC,yDAGDA,mDAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgBuK,IACd,MAAM3hD,EAAO,UASb,MAAO,CAAC2lC,KARK,aACL3lC,iEAGDA,2DAIOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAAgB+a,IACd,OAAOf,EAAiB,OAC1B,CACA,SAAgBgB,IACd,OAAOhB,EAAiB,MAC1B,CACA,SAAgBiB,IACd,MAAMryD,EAAO,OAab,MAAO,CAAC2lC,KAZK,aACL3lC,iHAKDA,2GAMOA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CACA,SAASga,EAAiBpxD,GASxB,MAAO,CAAC2lC,KARK,aACL3lC,6BACGA,sBAEJA,4BACIA,iBAGGA,OAAM0qB,KAAM,EAAAub,aAAamR,WACzC,CA3KA,YAGA,aAGA,aAGA,aAGA,aAGA,YAGA,YAcA,YAGA,cAGA,aAeA,iBAYA,kBAcA,YAGA,YAYA,YAkBA,YAGA,aAYA,gBAYA,aAGA,YAGA,aAgCA,MAoBMkb,EACF,CAACr6B,EAAgC9K,EAAe+qB,EAA6B3f,KAEvE,MAAMuT,EAAc7T,EAAQZ,QAAQ4F,KAAO,EAAAkQ,YAAYC,OAAS,EAAAD,YAAY6B,SACtEmK,EAAW,CAACn5C,KAAMk4C,EAASl4C,KAAMmsC,WAAY,CAACL,GAAc5K,WAAY,CAAC,KAAMqL,UAAWhU,GAChG,OAAO,OAAP,wBAAW4gB,GAAQ,CAAEt0C,IAAK,IAxBhC,EAACozB,EAAgCkhB,EAA2BhsB,EAAe+qB,KAErE,MAAMpM,EAAc7T,EAAQZ,QAAQ4F,KAAO,EAAAkQ,YAAYC,OAAS,EAAAD,YAAY6B,SACtEjO,GAAO,IAAAvB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SACvD,OAAO,OAAP,wBACK0oB,GAAQ,CACX/rB,OAAQ,CAACqB,KAAMtB,EAAMsB,KAAM/D,KAAMyC,EAAMzC,KAAMohB,eAC7C/C,aAAc,UACnBmP,EAASvS,6CAEE5E,EAAKC,wCACVkX,EAASl4C,qBACb+gC,EAAK3T,6BAGF4b,SAAS,GAAI,EASiBupB,CAA6Bt6B,EAASkhB,EAAUhsB,EAAO+qB,IAAS,EAG7F,EAAAlsC,IAAM,CAACisB,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIilB,KAAYjlB,IAEnF,EAAA2E,KAAO,CAAC5Y,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAImlB,KAAanlB,IAEpF,EAAA6E,KAAO,CAAC9Y,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIolB,KAAaplB,IAEpF,EAAA8E,KAAO,CAAC/Y,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIqlB,KAAarlB,IAOpF,EAAAoF,KACT,CAACrZ,EAAgCiU,EAAkBhT,IAAyC,CAACjB,EAAQgV,IACjGqlB,EACIr6B,EAASiU,EAAO,GAAI0V,EAAS1oB,EAAWpqB,IAAKoqB,EAAWvwB,KAAMuwB,EAAWX,UAC7E2T,IAEK,EAAAqF,oBAAuB/4C,IAAqC,IAAAogC,6BACrE,CAAC9pB,IAAKtW,EAAK0gC,WAAWO,SAAS,MAAO,EAAAuoB,UAAWr5C,IAAKnQ,EAAK0gC,WAAWO,SAAS,MAAO,EAAAwoB,YAE7E,EAAAzQ,QAAU,CAACvZ,EAAgCiU,KACtD,MAAMhT,EAAas5B,EAAiCv6B,EAASiU,GAC7D,OAAO,IAAAoF,MAAKrZ,EAAS,CAACiU,EAAO,IAAKhT,EAAW,EAG/C,MAAMs5B,EAAmC,CAACv6B,EAAgCiU,KACxE,GAAIA,EAAO9yC,QAAU,KACf6+B,EAAQZ,QAAQ6Y,cAAchE,EAAO,GAAGqB,UAAYtV,EAAQZ,QAAQ6Y,cAAchE,EAAO,GAAGqB,SAChG,MAAM,IAAIhvC,MAAM,2CAGlB,MAAMuQ,EAAOo9B,EAAO9yC,QAAU,EAAK8yC,EAAO,GAAG4B,WAAW,GAAK,EAAAkU,SACvDr5C,EAAOujC,EAAO9yC,QAAU,EAAK8yC,EAAO,GAAG4B,WAAW,GAAK,EAAAmU,SAC7D,OAAO,IAAArpB,6BAA4B,CAAC9pB,MAAKnG,OAAK,EAGnC,EAAA8R,KAAO,CAACwd,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIslB,KAAatlB,IAEpF,EAAA6F,IAAM,CAAC9Z,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIulB,KAAYvlB,IAMnF,EAAAkG,IACT,CAACna,EAAgCiU,EAAkBhT,IAAwC,CAACjB,EAAQgV,IAChGqlB,EAAmCr6B,EAASiU,EAAO,GAAIwlB,EAAQx4B,EAAW4pB,OAAQ5pB,EAAWX,UAC7F2T,IAEK,EAAAmG,mBAAsB75C,IAC/B,IAAAogC,6BAA4B,CAACkqB,MAAOtqD,EAAK0gC,WAAWO,SAAS,QAAS,KAE7D,EAAA6Y,IAAM,CAACra,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIylB,KAAYzlB,IAEnF,EAAAngC,MAAQ,CAACksB,EAAgCiU,IACtC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAI0lB,KAAc1lB,IAErF,EAAA8F,SAAW,CAAC/Z,EAAgCiU,IACzC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAI2lB,KAAiB3lB,IAMxF,EAAAoH,UACT,CAACrb,EAAgCiU,EAAkBhT,IAA8C,CAACjB,EAAQgV,IACtGqlB,EAAmCr6B,EAASiU,EAAO,GAAI4lB,EAAc54B,EAAW4pB,OAAQ5pB,EAAWX,UACnG2T,IAEK,EAAAqH,yBAA4B/6C,IACrC,IAAAogC,6BAA4B,CAACkqB,MAAOtqD,EAAK0gC,WAAWO,SAAS,QAAS,OAE7D,EAAAt+B,IAAM,CAAC88B,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAI6lB,KAAY7lB,IAEnF,EAAA1pB,IAAM,CAACyV,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAI8lB,KAAY9lB,IAEnF,EAAAjmB,IAAM,CAACgS,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAI+lB,KAAY/lB,IAEnF,EAAAwI,KAAO,CAACzc,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIwV,KAAaxV,IAEpF,EAAA6I,QAAU,CAAC9c,EAAgCiU,IACxC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIyV,KAAgBzV,IAEvF,EAAA8I,IAAM,CAAC/c,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIgmB,KAAYhmB,IAEnF,EAAAsJ,KAAO,CAACvd,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIimB,KAAajmB,IAEpF,EAAA2J,IAAM,CAAC5d,EAAgCiU,IACpC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAIkmB,KAAYlmB,IAEnF,EAAA4J,KAAO,CAAC7d,EAAgCiU,IACrC,CAACjU,EAAQgV,IAAIqlB,EAAmCr6B,EAASiU,EAAO,GAAImmB,KAAanmB,G,gJC/TjG,gBAEA,UACA,UAEA,UAEMumB,EAAwB,CAC5BzyD,KAAM,SACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAYC,SAGd,EAAAslB,wBAA0B,CAACz6B,EAAgC9K,KACtE,MAAMuT,EAAOvT,EAAMsB,KAAKr1B,OAElBu0C,GAAW,IAAA+L,aAAY,KAAMhZ,GAC7BiyB,EAAYhlB,EAASr0C,OAAO,GAC5B6rD,GAAiB,IAAA9iB,mBAAkB3B,GACnCkZ,GAAgB,IAAAC,qBAEhB+Y,EADkC,IAAtBzlC,EAAMsB,KAAKr1B,OACG,GA0BlC,SAAyBsnC,EAAcjS,GACrC,GAAa,IAATiS,EACF,MAAO,KAGT,IAAID,EAAS,GACb,IAAK,IAAI5pC,EAAI,EAAGA,EAAI6pC,EAAM7pC,IACxB4pC,GAAUhS,EAAK53B,GACXA,EAAI6pC,EAAO,IACbD,GAAU,KAGd,OAAOA,CACT,CAvCuCoyB,CAAgBnyB,EAAMiN,GACrDlN,EAASC,GAAQ,EAAI,KAAO,QAAQiyB,EAAU13C,KAAK,QAEnD8tB,EAAe,SACjB6Q,+BAEEuL,4IAGyByN,kBAPlB,IAAApzB,SAAQvH,EAAQZ,QAAQ8E,QAAQe,UAAUzM,SAS3CrD,yCAAyCqT,6BAIrD,OAAO,OAAP,wBACKgyB,GAAqB,CACxBzpB,SAAS,EACT5b,OAAQ,CAACqB,KAAMtB,EAAMsB,KAAM/D,KAAMyC,EAAMzC,KAAMohB,YAAa,EAAAqB,YAAY6B,UACtEjG,gBAAY,EAIH,EAAA2H,8BAAgC,CAACzY,EAAgC9K,IACzE,OAAD,wBAAKslC,GAAqB,CAAE5tD,IAAK,KAAM,IAAA6tD,yBAAwBz6B,EAAS9K,I,4IC3C5E,gBAGa,EAAAipB,UACT,CAACI,EAAyCtK,EAAkBif,KAC1D1U,EAAevK,GACf,MAAMqM,EAAc,EAAA3V,UAAUkwB,eAAe5mB,EAAO,GAAGzd,KAAM08B,GAE7D,MAAO,CADQ3U,EAAiB3H,gBAAgB3C,EAAO,GAAIqM,GAC5C,EAGR,EAAAjC,aAAe,CAACE,EAAyCtK,KACpEikB,EAAkBjkB,IACX,IAAAkK,WAAUI,EAAkB,CAACtK,EAAO,IAAKhgC,MAAMunB,KAAKyY,EAAO,GAAG6b,eAG1D,EAAA1R,yBAA8D79C,GACvEA,EAAK0gC,WAAWa,QAAQ,QAE5B,MAAM0c,EAAkBvK,IACtB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,+BAGlB,GAAuB,WAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,8B,EAId4xD,EAAqBjkB,IACzB,IAAKA,GAA4B,IAAlBA,EAAO9yC,OACpB,MAAM,IAAImF,MAAM,gCAGlB,GAAuB,UAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,sB,wNCtCpB,eAIA,UAEA,UAoBMw0D,EAA0B,CAC9B/yD,KAAM,WACNkhC,WAAY,CAAC,KACbiL,WAAY,CAAC,EAAAgB,YAAY6B,WAGd,EAAAiH,SACT,CAACO,EAAyCtK,EAAkBhT,MAC1D,IAAAud,gBAAevK,EAAQhT,GAQhB,CAPQsd,EAAiBvJ,IAAI,OAAD,wBAE1B8lB,GAAuB,CAC1BxmB,UAAWrT,EAAWX,SACtB1zB,IAAK,IAAMmuD,EAA0Bxc,EAAkBtK,EAAQhT,KAEjEgT,KAIG,EAAAgK,0BACR19C,IAAyC,IAAAi0D,yBAAwBj0D,EAAM,GAE/D,EAAA29C,0BACR39C,IAAyC,IAAAi0D,yBAAwBj0D,EAAM,GAE/D,EAAAi0D,wBAA0B,CAACj0D,EAAkBy6D,KACxD,MAAMvF,EAAYuF,GAAS,GAGrB9S,EAAO3nD,EAAK0gC,WAAWU,UAAU,OAAQ,WAC/C,GAAa,YAATumB,GAA+B,WAATA,IAAsB8S,EAAQ,IAAe,UAAT9S,GAC5D,MAAM,IAAI5hD,MAAM,sBAAsB4hD,KAGxC,IAAIuM,EAAmB,GACnBuG,EAAQ,IACVvG,EAASl0D,EAAK0gC,WAAWY,UAAU,WACnC,IAAAg0B,kBAAiBpB,EAAQvM,EAAMuN,IAGjC,MAAMwF,EAAqB16D,EAAK0gC,WAAWO,SAAS,sBAAuB,GAErEozB,EACFoG,EAAQ,GAAKz6D,EAAK0gC,WAAWU,UAAU,iCAAkC,cAAgB,aAC7F,IAE4C,IAFxC,CACE,aAAc,qBAAsB,uBAAwB,gBAAiB,qBAAsB,cACnGv/B,QAAQwyD,GACZ,MAAM,IAAItuD,MAAM,8BAA8BsuD,uBAEhD,MAAMsG,EAA4C,uBAA5BtG,EAChBuG,EAAmBD,EAEnBE,EACQ,YAATlT,GAAsB8S,GAAS,GAAMz6D,EAAK0gC,WAAWU,UAAU,eAAgB,sBAAwB,GAC5G,IAA+F,IAA3F,CAAC,qBAAsB,oBAAqB,QAAS,OAAQ,IAAIv/B,QAAQg5D,GAC3E,MAAM,IAAI90D,MAAM,iBAAiB80D,uBAGnC,MAAMC,EAAoB96D,EAAK0gC,WAAWO,SAAS,iBAAkB,KAC/D85B,EAAkE,IAAjD/6D,EAAK0gC,WAAWS,OAAO,kBAAmB,GACjE,GAAI45B,GAA2B,UAATpT,EACpB,MAAM,IAAI5hD,MAAM,4DAGlB,MAAMi1D,EACDP,EAAQ,IAAuB,YAAT9S,GAAkD,eAA5B0M,GAA4D,UAAhBwG,EAE7F,IAAII,EAAc,EACdlG,EAAiB,EACjBC,EAAgB,EAgBpB,OAdIyF,EAAQ,GAENz6D,EAAK0zC,OAAO9yC,OAAS,GACvBq6D,EAAc,EACdlG,EAAiB,EACjBC,EAAgB,IAEhBD,EAAiB,EACjBC,EAAgB,GAEC,IAAVyF,IACT1F,EAAiB,IAGZ,IAAA30B,6BAA4B,CACjCq6B,QACAvF,WACAvN,OACAuM,SACAwG,qBACArG,0BACAuG,mBACAD,eACAE,cACAC,oBACAC,iBACAC,2BACAC,cACAlG,iBACAC,iBACA,EAGJ,MAAMwF,EACF,CAACxc,EAAyCtK,EAAkBhT,KAC1D,MAAM6H,GAAO,IAAAvB,SAAQgX,EAAiBnf,QAAQ8E,QAAQe,UAAUzM,UACzDw8B,EAAYD,GACfxW,EAAiB3K,+BAA+BK,EAAO,GAAGzd,KAAM,EAAA0e,YAAY6B,UAE1EuJ,EAAcrM,EAAO,GAAGzd,KAAKkK,KAAI,CAAC/I,EAAK/4B,IAAM6R,KAAKqD,MAAM6jB,EAAMsJ,EAAWwzB,OAAO71D,OAC/Ek2D,EAAaD,GAChBtW,EAAiB3K,+BAA+B0M,EAAa,EAAApL,YAAY6B,UACvEpf,EAAM2oB,EAAYn/C,OAElBs6D,EAAgB,IAAIxnD,MAAc0jB,GAClC+jC,EAAe,IAAIznD,MAAc0jB,GACvC,IAAIgkC,EAAuB,8BACNhkC,gCACDA,cAEpB,IAAK,IAAIh4B,EAAIg4B,EAAM,EAAGh4B,GAAK,EAAGA,IAC5B87D,EAAc97D,GAAMA,IAAMg4B,EAAM,EAAK,EAAI8jC,EAAc97D,EAAI,GAAK2gD,EAAY3gD,EAAI,GAChF+7D,EAAa/7D,GAAMA,IAAMg4B,EAAM,EAAK,EAAI+jC,EAAa/7D,EAAI,GAAKs0C,EAAO,GAAGzd,KAAK72B,EAAI,GAEjFg8D,GAAwB,4BACPh8D,QAAQ87D,EAAc97D,8BACvBA,QAAQ+7D,EAAa/7D,gBAGvC,MAAMi8D,EAAwB,yFAEU5G,MAAeD,8CACrBjsB,EAAKC,iEAKjC+H,EAAmC,YAApB7P,EAAWinB,KAE5B,SACJ0T,oCAC0BjkC,yFAEqBm9B,MAAgBD,gBAE7D8G,uDAGwBhkC,+YAed,IAARA,EAEI,SACRikC,0HAG+C9G,MAAgBD,gBAE7D8G,kkCA2B4B1nB,EAAO,GAAGzd,KAAK,gtBAuBrC,SACRolC,0HAG+C9G,MAAgBD,gBAE7D8G,uvBAoB4B1nB,EAAO,GAAGzd,KAAK,gtBAsB7C,OAAO,OAAP,wBACKskC,GAAuB,CAC1B3lC,OAAQ,CAACqB,KAAM8pB,EAAa7tB,KAAMwhB,EAAO,GAAGxhB,KAAMohB,YAAa,EAAAqB,YAAY6B,UAC3EjG,eACAM,UAAW,CAAC,CACVrpC,KAAM,SACN0qB,KAAM,MACNsf,YAAa9Q,EAAWwzB,OAAOtzD,OAC/B6J,KAAMi2B,EAAWwzB,OAAO/zB,KAAIh/B,GAAK+O,KAAK+R,KAAK9gB,QAC3C,EAIG,EAAA88C,eAAiB,CAACvK,EAAkB7e,KAC/C,IAAK6e,GAAW7e,EAAU4lC,MAAQ,GAAuB,IAAlB/mB,EAAO9yC,QACzCi0B,EAAU4lC,OAAS,GAAK5lC,EAAU4lC,MAAQ,IAAwB,IAAlB/mB,EAAO9yC,QACvDi0B,EAAU4lC,OAAS,IAAM/mB,EAAO9yC,OAAS,EAC5C,MAAM,IAAImF,MAAM,mBAGlB,GAAI8uB,EAAUq/B,OAAOtzD,OAAS,GAAK8yC,EAAO,GAAGzd,KAAKr1B,SAAWi0B,EAAUq/B,OAAOtzD,OAC5E,MAAM,IAAImF,MAAM,wBAGlB,GAAuB,WAAnB2tC,EAAO,GAAGxhB,KACZ,MAAM,IAAInsB,MAAM,8B,EAIP,EAAAuvD,iBAAmB,CAACpB,EAAkBvM,EAAcuN,KAC/D,GAAKA,GAOH,IAAK,MAAM1W,KAAS0V,EAClB,GAAI1V,GAAS,EACX,MAAM,IAAIz4C,MAAM,8CARpB,IAAK,MAAMy4C,KAAS0V,EAClB,GAAI1V,EAAQ,EACV,MAAM,IAAIz4C,MAAM,qDAUtB,KAAa,WAAT4hD,GAA8B,UAATA,GACD,IAAlBuM,EAAOtzD,QAAmC,IAAlBszD,EAAOtzD,QAA8B,IAAdszD,EAAO,IAA0B,IAAdA,EAAO,IAC3E,MAAM,IAAInuD,MAAM,+KAELmvD,EAAW,SAAW,uB,wGCvVvC,gBAEA,UAEA,UACA,UAcA,uBAKE5gC,YACWgnC,EAAqC52B,EACrC62B,GADA,KAAAD,SAAAA,EAAqC,KAAA52B,UAAAA,EACrC,KAAA62B,sBAAAA,EACTh0D,KAAKi0D,KAAO,IAAI56B,IAChBr5B,KAAKk0D,iBAAkB,CACzB,CACAtnB,YAAYze,GACV,OAAOnuB,KAAKi0D,KAAKnvD,IAAIqpB,EACvB,CACA6e,YAAY7e,EAAcue,GACxB1sC,KAAKi0D,KAAK7nD,IAAI+hB,EAAKue,EACrB,CACAQ,IAAIinB,EAAyBhoB,EAAuB9e,G,MAClDrtB,KAAK+zD,SAASK,MAAM,KAAM,sBAAoD,QAA9B,EAAAD,EAAcjzB,YAAYjhC,YAAI,QAAI,oBAAoB,K,MACpG,MAAMo0D,EAAKr0D,KAAKm9B,UAAUk3B,GACpBnoB,EAAUioB,EAAcjoB,QAC9BmoB,EAAGC,WAAWpoB,GACd,IACElsC,KAAKu0D,WAAWlnC,GACXrtB,KAAKk0D,iBACRl0D,KAAKw0D,eAAeL,EAAcM,iBAEpCz0D,KAAK00D,aAAaP,EAAcQ,iBAAqD,QAAnC,EAAAR,EAAcjzB,YAAYoI,iBAAS,QAAI,GAAI6C,E,CAC7F,MAAO7xB,GAEP,MADA,EAAA+iB,OAAOrjC,MAAM,iBAAkBm6D,EAAcjzB,YAAY8H,cACnD1uB,C,CAERta,KAAK+zD,SAASK,MAAM,UAAW,oBAAoB,KACjDp0D,KAAKm9B,UAAUy3B,MAAM,GACrB,GACD50D,KAAKm9B,UACV,CACAZ,UACMv8B,KAAK60D,cACP70D,KAAKm9B,UAAU23B,aAAa90D,KAAK60D,cAEnC70D,KAAKi0D,KAAKlxD,SAAQ/L,GAAKgJ,KAAKm9B,UAAU43B,cAAc/9D,EAAEk1C,UACxD,CACAlb,MAAMkQ,EAA0BI,EAAsC7C,GACpE,OAAOz+B,KAAK+zD,SAASK,MAAM,UAAW,wBAAwB,KAC5D,MAAMY,EAAe,IAAI,EAAAC,iBAAiBj1D,KAAKm9B,UAAW+D,EAAaI,EAAqB7C,GACtFy2B,EAAaF,EAAajsB,aAC1BmD,EAAUlsC,KAAKm1D,QAAQD,GAQ7B,MAPiB,CACfh0B,cACAgL,UACAyoB,iBAAkB30D,KAAKo1D,oBACnBlpB,EAAS8oB,EAAav3B,QAAQyD,YAAYC,WAAY6zB,EAAav3B,QAAQyD,YAAYoI,WAC3FmrB,gBAAiBz0D,KAAKq1D,mBAAmBnpB,GAE5B,GAEnB,CACUipB,QAAQG,GAChB,IAAKt1D,KAAK60D,aAAc,CACtB,EAAAx3B,OAAOE,QAAQ,kBAAmB,0DAClC,MAAMg4B,GAAqB,IAAAC,uBAAsBx1D,KAAKm9B,UAAUzM,SAChE1wB,KAAK60D,aAAe70D,KAAKm9B,UAAUs4B,cAAcF,EAAoBv1D,KAAKm9B,UAAUk3B,GAAGqB,c,CAErF,EAAAh+B,IAAIi+B,OACN,EAAAt4B,OAAOE,QAAQ,kBAAmB,gBACtC+3B,OAGE,MAAMM,EAAa51D,KAAKm9B,UAAUs4B,cAAcH,EAAkBt1D,KAAKm9B,UAAUk3B,GAAGwB,iBAC9E3pB,EAAUlsC,KAAKm9B,UAAU24B,cAAc91D,KAAK60D,aAAce,GAEhE,OADA51D,KAAKm9B,UAAU23B,aAAac,GACrB1pB,CACT,CACAqoB,WAAWjnB,GACT,MAAMtO,EAAQsO,EAAGtO,MACXC,EAASqO,EAAGrO,OAClB,EAAA5B,OAAOE,QACH,kBACA,8CAA8CyB,KAASC,YAAiBqO,EAAG7c,eAAe6c,EAAGH,OAAOxiB,QACxG3qB,KAAKm9B,UAAU44B,kBAAkBzoB,EAAGf,QAASvN,EAAOC,EACtD,CACAu1B,eAAeC,GACb,MAAMuB,EAAiBvB,EAAgBwB,SACjCC,EAAqBzB,EAAgB0B,aAC3Cn2D,KAAKm9B,UAAUi5B,oBAAoBJ,EAAgBE,GACnDl2D,KAAKk0D,iBAAkB,CACzB,CACAQ,aAAaC,EAA6CrrB,EAA8B+sB,G,MAEtF,MAAMhC,EAAKr0D,KAAKm9B,UAAUk3B,GAC1B,IAAIiC,EAAkB,EACtB,IAAK,MAAM,KAACr2D,EAAI,KAAE0qB,EAAI,SAAEvwB,EAAQ,YAAE6vC,KAAgB0qB,EAAkB,CAClE,MAAM30C,EAA4C,QAApC,EAAAspB,EAAUitB,MAAKj+D,GAAKA,EAAE2H,OAASA,WAAK,eAAEiD,KACpD,GAAa,cAATynB,IAAyB3K,EAC3B,MAAM,IAAIxhB,MAAM,aAAayB,iDAE/B,OAAQ0qB,GACN,IAAK,YACH3qB,KAAKw2D,YAAYH,EAASC,GAAkBl8D,EAAUk8D,GACtDA,IACA,MACF,IAAK,QACCrsB,EACFoqB,EAAGoC,WAAWr8D,EAAU4lB,GAExBq0C,EAAGqC,UAAUt8D,EAAU4lB,GAEzB,MACF,IAAK,MACCiqB,EACFoqB,EAAGsC,WAAWv8D,EAAU4lB,GAExBq0C,EAAGuC,UAAUx8D,EAAU4lB,GAEzB,MACF,QACE,MAAM,IAAIxhB,MAAM,4BAA4BmsB,K,CAGpD,CACA6rC,YAAYlpB,EAAiBupB,EAAqCZ,GAChEj2D,KAAKm9B,UAAU25B,qBAAqBxpB,EAAGf,QAAS0pB,EAAUY,EAC5D,CACAxB,mBAAmBnpB,GACjB,MAAO,CACL+pB,SAAUj2D,KAAK+2D,kBAAkB7qB,EAAS,YAC1CiqB,aAAcn2D,KAAK+2D,kBAAkB7qB,EAAS,gBAElD,CACAkpB,oBAAoBlpB,EAAuBpC,EAAqBR,GAE9D,MAAMqrB,EAA8C,GACpD,GAAI7qB,EACF,IAAK,MAAME,KAAWF,EACpB6qB,EAAiBj0D,KAAK,CAACT,KAAM+pC,EAASrf,KAAM,YAAavwB,SAAU4F,KAAKg3D,mBAAmB9qB,EAASlC,KAGxG,GAAIV,EACF,IAAK,MAAMrB,KAAYqB,EACrBqrB,EAAiBj0D,KAAK,OAAD,wBAAKunC,GAAQ,CAAE7tC,SAAU4F,KAAKg3D,mBAAmB9qB,EAASjE,EAAShoC,SAG5F,OAAO00D,CACT,CACAqC,mBAAmB9qB,EAAuBjsC,GACxC,MACMg3D,EADKj3D,KAAKm9B,UAAUk3B,GACL2C,mBAAmB9qB,EAASjsC,GACjD,GAAkB,OAAdg3D,EACF,MAAM,IAAIz4D,MAAM,WAAWyB,gBAE7B,OAAOg3D,CACT,CACAF,kBAAkB7qB,EAAuBjsC,GAGvC,OAFWD,KAAKm9B,UAAUk3B,GACW0C,kBAAkB7qB,EAASjsC,EAElE,E,4GC9KF,gBAEA,UAKA,UACA,UACA,UACA,UACA,UAGA,4BAWE8sB,YAA4BqP,EAAuCqB,GAAvC,KAAArB,QAAAA,EAAuC,KAAAqB,QAAAA,EACjEz9B,KAAKgsC,eAAiB,IAAI,EAAAkrB,sBAAsB96B,EAAQe,UAAUg6B,gBAClEn3D,KAAK2sC,eAAiB,IAAI,EAAAyqB,eAAep3D,KAAKy9B,QAAQs2B,SAAU33B,EAAQe,UAAWn9B,KAAKgsC,gBACxFhsC,KAAK2uC,eAAiB,IAAI,EAAA0oB,eACtBj7B,EAAQe,UAAWn9B,KAAKgsC,eAAgBhsC,KAAKy9B,QAAQs2B,SACrD,CAACuD,cAA4C,SAA7Bl7B,EAAQa,mBAC5Bj9B,KAAK4rC,uBAAyB,IAAIvS,IAClCr5B,KAAK6rC,yBAA2B,IAAIxS,IACpCr5B,KAAKk9B,KAAOd,EAAQc,KACpBl9B,KAAKu3D,eAAiB,IAAIl+B,IAC1Br5B,KAAKw3D,eAAiB,IAAIn+B,GAC5B,CAEAo+B,yBACE,OAAO,IAAI,EAAAC,sBAAsB13D,KACnC,CACA23D,mBAAmB3pC,GACjB,MAAM4pC,EAAe5pC,EAAM6pC,YAAY/vB,QAAOxvC,IAAiB,IAAZA,EAAEo7B,MAAep7B,EAAE60C,SAAQvU,KAAItgC,GAAKA,EAAE60C,OAAQK,SACjGxtC,KAAK43D,aAAe,IAAItxB,IAAIsxB,EAC9B,CACAznB,cAAcN,GACZ,QAAO7vC,KAAK43D,cAAe53D,KAAK43D,aAAahxB,IAAIiJ,EACnD,CACAioB,eAAejoB,GACb7vC,KAAK43D,aAAavxD,IAAIwpC,EACxB,CACAtC,eAAesC,EAAqBnR,GAClC,OAAIA,EACK1+B,KAAK4rC,uBAAuB9mC,IAAI+qC,GAEhC7vC,KAAK6rC,yBAAyB/mC,IAAI+qC,EAE7C,CACAK,eAAeL,EAAqBC,EAA0BpR,GAAW,GACvE,EAAArB,OAAOE,QAAQ,sBAAuB,iCAClCmB,EACF1+B,KAAK4rC,uBAAuBx/B,IAAIyjC,EAAUC,GAE1C9vC,KAAK6rC,yBAAyBz/B,IAAIyjC,EAAUC,EAEhD,CACAvT,UACEv8B,KAAK2sC,eAAepQ,UACpBv8B,KAAK2uC,eAAe0B,sBACpBrwC,KAAK4rC,uBAAuB7oC,SAAQuqC,GAAMttC,KAAK2uC,eAAe2B,eAAehD,GAAI,KACjFttC,KAAK4rC,uBAAyB,IAAIvS,IAClCr5B,KAAK6rC,yBAAyB9oC,SAAQuqC,GAAMttC,KAAK2uC,eAAe2B,eAAehD,GAAI,KACnFttC,KAAK6rC,yBAA2B,IAAIxS,GACtC,CACA1mB,QAAQla,EAAkBs/D,EAA0B/pC,GAClD,MAAMgqC,GAAK,IAAAC,iBAAgBx/D,EAAMs/D,EAAQ,EAAAnnB,wBACzC,MAAO,CAACsnB,KAAMF,EAAGG,OAAQ16B,QAASu6B,EAAGI,OAASJ,EAAGI,OAAO3/D,EAAMu1B,GAASv1B,EACzE,E,wJC/EF,gBAqCA,8BAKEs0B,YAAYsnC,EAA4BzmB,EAAW,GACjD,GAAiB,IAAbA,EACF5tC,KAAKq4D,eAAiBhE,EAAGiE,KACzBt4D,KAAKu4D,OAASlE,EAAGmE,IACjBx4D,KAAK+rC,YAAcsoB,EAAGh6B,MACtBr6B,KAAK0kD,YAAc9W,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAIpvC,MAAM,+BAA+BovC,KAL/C5tC,KAAKq4D,eAAiBhE,EAAGoE,QACzBz4D,KAAKu4D,OAASlE,EAAGqE,KACjB14D,KAAK+rC,YAAcsoB,EAAGh6B,MACtBr6B,KAAK0kD,YAAc9W,C,CAIvB,CACA/yB,OAAO3kB,EAA4ByiE,GACjC,IAAIx1C,EACAgd,EAcJ,OAbIjqC,EAAI62B,cAAgBjvB,eACtB,EAAAu/B,OAAOG,QAAQ,UAAW,2DAC1B2C,EAAS,IAAIriC,aAAa5H,IAExByiE,EAAc34D,KAAK0kD,YAAcxuD,EAAImD,QACvC,EAAAgkC,OAAOG,QAAQ,UAAW,kDAC1B2C,EAASjqC,EACTitB,EAASnjB,KAAK44D,SAASD,EAAc34D,KAAK0kD,aAC1CvkB,EAAOp9B,SAAQ,CAACzK,EAAGxB,IAAMqsB,EAAOrsB,GAAKwB,MAErC6nC,EAASjqC,EACTitB,EAASgd,GAEJhd,CACT,CACAy1C,SAAS15C,GACP,OAAO,IAAIphB,aAAoB,EAAPohB,EAC1B,CACAziB,OAAOnG,EAA+BuiE,GACpC,OAAyB,IAArB74D,KAAK0kD,YACepuD,EAAwBwxC,QAAO,CAAC9nB,EAAO7F,IAAUA,EAAQ,GAAM,IAAGxd,SAAS,EAAGk8D,GAG/FviE,EAAOqG,SAAS,EAAGk8D,EAC5B,GAKF,6BAKE9rC,YAAYsnC,EAA2BzmB,EAAW,EAAG7B,GACnD,GAAiB,IAAb6B,GAA+B,IAAbA,EACpB,MAAM,IAAIpvC,MAAM,+BAA+BovC,KAEjD5tC,KAAKq4D,eAAiBhE,EAAGqE,KACzB14D,KAAKu4D,OAASlE,EAAGqE,KACjB14D,KAAK0kD,YAAc9W,EACnB5tC,KAAK+rC,YAAcA,GAAesoB,EAAGh6B,KACvC,CACAxf,OAAO3kB,EAAmByiE,GACxB,IAAIG,EAAO5iE,EAMX,OALyB,IAArB8J,KAAK0kD,cACP,EAAArnB,OAAOE,QAAQ,UAAW,iCAC1Bu7B,EAAO94D,KAAK44D,SAASD,GACrBziE,EAAI6M,SAAQ,CAACzK,EAAGxB,IAAMgiE,EAAS,EAAJhiE,GAASwB,KAE/BwgE,CACT,CACAF,SAAS15C,GACP,OAAO,IAAIphB,aAAoB,EAAPohB,EAC1B,CACAziB,OAAOnG,EAA+BuiE,GACpC,OAAyB,IAArB74D,KAAK0kD,YACepuD,EAAwBwxC,QAAO,CAAC9nB,EAAO7F,IAAUA,EAAQ,GAAM,IAAGxd,SAAS,EAAGk8D,GAG/FviE,EAAOqG,SAAS,EAAGk8D,EAC5B,GAGF,yBAKE9rC,YAAYsnC,EAA2BzmB,EAAW,GAChD,GAFF,KAAA8W,YAAc,EAEK,IAAb9W,EACF5tC,KAAKq4D,eAAiBhE,EAAG0E,MACzB/4D,KAAKu4D,OAASlE,EAAG0E,MACjB/4D,KAAK+rC,YAAcsoB,EAAG2E,cACtBh5D,KAAK0kD,YAAc9W,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAIpvC,MAAM,+BAA+BovC,KAL/C5tC,KAAKq4D,eAAiBhE,EAAGqE,KACzB14D,KAAKu4D,OAASlE,EAAGqE,KACjB14D,KAAK+rC,YAAcsoB,EAAG2E,cACtBh5D,KAAK0kD,YAAc9W,C,CAIvB,CACA/yB,OAAO3kB,EAAiB+iE,GACtB,OAAO,IAAI//D,WAAWhD,EAAII,OAAQJ,EAAIgjE,WAAYhjE,EAAIuI,WACxD,CACAm6D,SAAS15C,GACP,OAAO,IAAIhmB,WAAWgmB,EAAOlf,KAAK0kD,YACpC,CACAjoD,OAAOnG,EAA+BuiE,GACpC,GAAIviE,aAAkB4C,WACpB,OAAO5C,EAAOqG,SAAS,EAAGk8D,GAE5B,MAAM,IAAIr6D,MAAM,uBAAuBlI,EAAOy2B,cAChD,E,yPC3JF,gBACA,UAqJA,SAAgBiY,EAAavU,EAAiB8oB,GAC5C,MAAMxU,EAAqB,GACrBZ,EAAqB,GACrBg1B,EAAuB,MAAR5f,GAAgBptC,MAAM8f,QAAQstB,IAAyB,IAAhBA,EAAKlgD,OAC3D+xD,EAAgB,MAAR7R,GAAgB4f,EAAgB,KAAOC,EAAe7f,EAAM9oB,GAAOkI,OACjF,IAAIliC,EAAI,EACR,IAAK,IAAIK,EAAI,EAAGA,EAAI25B,EAAMp3B,SAAUvC,EAAG,CACrC,GAAY,MAARs0D,EAAc,CAChB,GAAIA,EAAK30D,KAAOK,GAAkB,IAAb25B,EAAM35B,GACzB,MAAM,IAAI0H,MAAM,sBAAsB1H,oBAAoB25B,EAAM35B,iBAElD,MAAXs0D,EAAK30D,IAAc20D,EAAK30D,GAAKK,IAAmB,IAAb25B,EAAM35B,KAC5CiuC,EAASrkC,KAAK+vB,EAAM35B,IACpBqtC,EAASzjC,KAAK5J,IAEZs0D,EAAK30D,IAAMK,GACbL,G,CAGa,IAAbg6B,EAAM35B,KACRiuC,EAASrkC,KAAK+vB,EAAM35B,IACpBqtC,EAASzjC,KAAK5J,G,CAGlB,MAAO,CAACiuC,WAAUZ,WACpB,CAEA,SAAgBi1B,EAAe7f,EAAuB9oB,GACpD,MAAMkQ,EAAOlQ,EAAMp3B,OAkBnB,OAfAkgD,EAAe,MAARA,EAAe9oB,EAAMmI,KAAI,CAACphC,EAAGV,IAAMA,IAAM,GAAgB46C,OAAO6H,IAGvE,IAAA8f,QACI9f,EAAKsT,OAAMyM,GAAMA,IAAO34B,GAAQ24B,EAAK34B,KACrC,IAAM,+CAA+CA,MAASA,mBAC9C4Y,OAGpB,IAAA8f,QACI9f,EAAKsT,MAAM0M,IACX,IACI,0DAAYhgB,MAGbA,EAAK3gB,KAAI5hC,GAAKA,EAAI,EAAI2pC,EAAO3pC,EAAIA,GAC1C,CACA,SAAgBuiE,EAAMviE,GACpB,OAAOA,EAAI,GAAM,CACnB,CACA,SAAgBwiE,EAAc/oC,GAC5B,GAAqB,IAAjBA,EAAMp3B,OAER,OAAO,EAET,IAAI6lB,EAAOuR,EAAM,GACjB,IAAK,IAAI35B,EAAI,EAAGA,EAAI25B,EAAMp3B,OAAQvC,IAChCooB,GAAQuR,EAAM35B,GAEhB,OAAOooB,CACT,CAQA,SAAgBu6C,EAAoBv6C,GAClC,MAAM8f,EAAQr2B,KAAK+R,KAAK/R,KAAK8sC,KAAKv2B,IAClC,MAAO,CAAC8f,EAAOr2B,KAAK+R,KAAKwE,EAAO8f,GAClC,CA1MA,uCACEjS,YAAmBoqC,GAAA,KAAAA,eAAAA,CAAyB,CAC5CuC,iBAAiBjpC,EAA0BkpC,GAEzC,GAAqB,IAAjBlpC,EAAMp3B,OACR,MAAO,CAAC,EAAG,GAEb,MAAM89D,EAAiBn3D,KAAKm3D,eAC5B,GAAIwC,QAA6B7/C,IAApB6/C,EAAMC,UAAyB,CAE1C,MAAMC,EAAQF,EAAMC,WAAanpC,EAAMp3B,OAAS,EAAIo3B,EAAMl3B,MAAMogE,EAAMC,WAAW/O,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAChG6hE,EAAQH,EAAMC,WAAa,EAAI,EAAInpC,EAAMl3B,MAAM,EAAGogE,EAAMC,WAAW/O,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAC9F,KAAI4hE,EAAQ1C,GAAkB2C,EAAQ3C,GAOpC,MAAO,CAAC0C,EAAOC,GAJf,EAAAz8B,OAAOE,QACH,gBACA,2DAA2D9M,gBAAoBkpC,EAAMC,Y,CAK7F,MAAMG,EAAYtpC,EAAMo6B,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAE7C,IAAI+mC,EAAQr2B,KAAKqD,MAAMrD,KAAK8sC,KAAKskB,IAEjC,KAAO/6B,EAAQm4B,GAAkBn4B,EAAQ+6B,GACnCA,EAAY/6B,GAAU,EADwBA,KAMpD,GAAIA,GAASm4B,GAAkB4C,EAAY/6B,GAAU,EACnD,MAAM,IAAIxgC,MAAM,2DAA2DiyB,KAE7E,MAAO,CAACuO,EAAO+6B,EAAY/6B,EAC7B,GAGF,8BACEjS,YAAmBoqC,GAAA,KAAAA,eAAAA,CAAyB,CAC5CuC,iBAAiBjpC,EAA0BkpC,GACzC,MAAMK,EAAKh6D,KAAKi6D,eAAexpC,EAAOkpC,GAKtC,OAJIA,GAASA,EAAMj7B,WACjBs7B,EAAG,IAAM,EACTA,EAAG,IAAM,GAEPL,GAASA,EAAMprB,UACV,CAACyrB,EAAG,GAAIA,EAAG,IAEbA,CACT,CAEAC,eAAexpC,EAA0BkpC,GACvC,MAAMj7B,EAAWi7B,GAASA,EAAMj7B,SAEhC,GAAqB,IAAjBjO,EAAMp3B,OACR,OAAOqlC,EAAW,CAAC,EAAG,GAAK,CAAC,EAAG,GAEjC,IAAIy4B,EAAiBn3D,KAAKm3D,eAC1B,GAAIwC,QAA6B7/C,IAApB6/C,EAAMC,UAAyB,CAE1C,MAAMC,EAAQF,EAAMC,WAAanpC,EAAMp3B,OAAS,EAAIo3B,EAAMl3B,MAAMogE,EAAMC,WAAW/O,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAChG6hE,EAAQH,EAAMC,WAAa,EAAI,EAAInpC,EAAMl3B,MAAM,EAAGogE,EAAMC,WAAW/O,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAC9F,KAAI4hE,EAAQ1C,GAAkB2C,EAAQ3C,GAOpC,MAAO,CAAC0C,EAAOC,GAJf,EAAAz8B,OAAOE,QACH,gBACA,2DAA2D9M,gBAAoBkpC,EAAMC,Y,CAK7F,IAAIM,EAAWzpC,EAAMl3B,MAAM,GAoB3B,GAnBImlC,IACFy4B,GAAkC,EAOlC+C,EAAWA,EAASthC,KAChB,CAAC/gC,EAAGf,IAAMA,GAAKojE,EAAS7gE,OAAS,EAAK6gE,EAASpjE,GAAK,GAAM,EAAIojE,EAASpjE,GAAKojE,EAASpjE,GAAK,EAAKojE,EAASpjE,KAIpF,IAApBojE,EAAS7gE,SACX6gE,EAAW,CAAC,EAAGA,EAAS,MAKJ,IAApBA,EAAS7gE,OAAc,CACzB,MAAM8gE,EAAgBn1B,EAAak1B,GACnCA,EAAWC,EAAcp1B,Q,CAG3B,MAAM7lB,EAAOs6C,EAAcU,GAC3B,OAAIA,EAAS7gE,QAAU,GAAK6lB,GAAQi4C,EAC3B,CAAC,EAAGj4C,GACkB,IAApBg7C,EAAS7gE,QAAgB6gE,EAAS,IAAM/C,GAAkB+C,EAAS,IAAM/C,EAC3E+C,EACsB,IAApBA,EAAS7gE,QAAgB6gE,EAAS,GAAKA,EAAS,IAAM/C,GAAkB+C,EAAS,IAAM/C,EACzF,CAAC+C,EAAS,GAAKA,EAAS,GAAIA,EAAS,IACf,IAApBA,EAAS7gE,QAAgB6gE,EAAS,IAAM/C,GAAkB+C,EAAS,GAAKA,EAAS,IAAM/C,EACzF,CAAC+C,EAAS,GAAIA,EAAS,GAAKA,EAAS,IAEtB,IAApBA,EAAS7gE,QAAgB6gE,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAM/C,GACpE+C,EAAS,IAAM/C,EACV,CAAC+C,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAIA,EAAS,IAEpC,IAApBA,EAAS7gE,QAAgB6gE,EAAS,IAAM/C,GACxC+C,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAM/C,EACtC,CAAC+C,EAAS,GAAIA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAEtDx7B,EAMK+6B,EAAoBv6C,EAAO,GAAG0Z,KAAI/gC,GAAS,EAAJA,IAEzC4hE,EAAoBv6C,EAE/B,GAGF,iBA2BA,mBAqBA,UAGA,kBAWA,uBAA4BuR,GAC1B,GAAqB,IAAjBA,EAAMp3B,OACR,MAAMmF,MAAM,wDAGd,MAAO,CAACiyB,EAAMp3B,OAAS,EAAIo3B,EAAMA,EAAMp3B,OAAS,GAAK,EAAGo3B,EAAMA,EAAMp3B,OAAS,GAC/E,EACA,wBAIA,uBAA4Bo3B,EAAiB2pC,EAAa,GACxD,OAAOZ,EAAc/oC,EAAMl3B,MAAM,EAAGk3B,EAAMp3B,OAAS+gE,GACrD,C,2LCjOA,gBAGA,UAEa,EAAAvtB,mCACT,CAACmnB,EAA8CvjC,EAC9Csb,KACC,MAAMkO,EAAWlO,IAAgB,EAAAqB,YAAY6B,UAAYlD,IAAgB,EAAAqB,YAAY4Z,iBAAoB,EAAI,EACvGtoB,EAAWqN,IAAgB,EAAAqB,YAAYC,OACvCkB,EAAaxC,IAAgB,EAAAqB,YAAY4Z,kBAAoBjb,IAAgB,EAAAqB,YAAYC,OACzFusB,EAAY7tB,IAAgB,EAAAqB,YAAYM,oBAAsBjd,EAAMp3B,OAAS,OAAIygB,EACjFglB,EAAgBiN,IAAgB,EAAAqB,YAAYM,oBAC9Cjd,EAAMmI,KAAI,CAAC/gC,EAAGf,IAAMA,IAAM25B,EAAMp3B,OAAS,EAAQ,EAAJxB,EAAQA,SACrDiiB,EACJ,OAAO,IAAAw0B,8BACH0lB,EAAuBvjC,EAAOwpB,EAASnb,EAAe,CAACJ,WAAU6P,YAAWqrB,aAAW,EAGpF,EAAA9tB,+BACT,CAACkoB,EAA8CvjC,EAA0Bsb,KAEnE,MAAMlG,GAAS,IAAAgH,oCAAmCmnB,EAAuBvjC,EAAOsb,GAChF,MAAO,CAAClG,EAAO7G,MAAO6G,EAAO5G,OAAO,EAMjC,EAAAqP,6BACT,CAAC0lB,EAA8CvjC,EAA0Bmd,EAAgB,EACxF9O,EAAmC66B,KAClC,MAAMj7B,KAAci7B,IAASA,EAAMj7B,WAC5BM,EAAOC,GAAU+0B,EAAsB0F,iBAAiBh7B,GAAWI,GAAyBrO,EAAOkpC,GACpGh5B,EAAOlQ,EAAMp3B,OACnB,IAAIghE,EAAe5pC,EAAMl3B,MAAM,GAI/B,GAHa,IAATonC,IACF05B,EAAe,CAAC,IAED,IAAbzsB,EAEF9O,EAAgBrO,OACX,GAAIiO,EAAU,CACnB,GAAiB,IAAbkP,EACF,MAAM,IAAIpvC,MAAM,sCAElBsgC,EAAgBrO,EACZkQ,EAAO,IACT05B,EAAa15B,EAAO,GAAKh4B,KAAK+R,KAAK2/C,EAAa15B,EAAO,GAAK,IAE1DA,EAAO,IACT05B,EAAa15B,EAAO,GAAKh4B,KAAK+R,KAAK2/C,EAAa15B,EAAO,GAAK,G,MAEzD,IAAK7B,EACV,MAAM,IAAItgC,MAAM,oDAElB,MAAO,CACLwgC,QACAC,SACA2O,WACAlP,WACAjO,MAAO4pC,EACPz5B,QAAS,EAAAiC,UAAUsM,eAAekrB,GAClCv7B,gBACAw7B,WAAaX,GAASA,EAAMprB,UAC7B,C,uGCjEP,gBAsBA,uBAMExhB,YACWoQ,EAAgC6O,EAA8C+nB,EAC7EwG,GADD,KAAAp9B,UAAAA,EAAgC,KAAA6O,eAAAA,EAA8C,KAAA+nB,SAAAA,EAC7E,KAAAwG,OAAAA,EAJK,KAAAC,YAAuE,IAAInhC,IAKtFkhC,EAAOjD,gBACTt3D,KAAKy6D,cAAgB,IAAIphC,IACzBr5B,KAAK06D,aAAe,IAAIrhC,IACxBr5B,KAAK26D,cAAgB,IAAIthC,IAE7B,CACAuV,wBACI1f,EAA2B2W,EAAuB3iC,EAA0BwrC,GAC9E,MAAMksB,EAAkB56D,KAAK66D,cAAc3rC,GAErC4rC,EAAU96D,KAAKm9B,UAAU49B,WAAWH,EAAiB/0B,EAAO+H,UAAY,EAAGc,GACjF,GAAI7I,EAAOnH,UAAsB,IAAVgQ,EACrB,MAAM,IAAIlwC,MAAM,mBAElB,MAAMwgC,EAAQ6G,EAAO7G,MACfC,EAAS4G,EAAO5G,OAEtB,IAAI9Q,EACAssC,EACJ,GAAIz6D,KAAKu6D,OAAOjD,cAAe,CAC7BnpC,EAAM,GAAG6Q,KAASC,KAAU67B,EAAQvC,UAAUuC,EAAQzC,kBAAkByC,EAAQ/uB,cAChF0uB,EAAgBz6D,KAAKy6D,cAAc31D,IAAIqpB,GAClCssC,IACHA,EAAgB,GAChBz6D,KAAKy6D,cAAcruD,IAAI+hB,EAAKssC,IAG9B,MAAMC,EAAe16D,KAAK06D,aAAa51D,IAAIqpB,GAC3C,GAAIusC,GAAgBA,EAAarhE,OAAS,EAAG,CAC3C,MAAMkzC,EAAUmuB,EAAar2D,MAK7B,OAJAo2D,EAAc/5D,KAAK6rC,GACL,IAAVmC,GACF1uC,KAAKm9B,UAAU69B,cAAczuB,EAASvN,EAAOC,EAAQ67B,EAAS96D,KAAKi7D,cAAc/rC,EAAUhsB,IAEtFqpC,C,EAIX,EAAAlP,OAAOE,QAAQ,iBAAkB,gCAAgCsI,EAAO7G,SAAS6G,EAAO5G,UACxF,MAAMsN,EAAUvsC,KAAKm9B,UAAU+9B,gBAAgBl8B,EAAOC,EAAQ67B,EAAS96D,KAAKi7D,cAAc/rC,EAAUhsB,IAMpG,OAJIlD,KAAKu6D,OAAOjD,gBACdmD,EAAe/5D,KAAK6rC,GACpBvsC,KAAK26D,cAAcvuD,IAAImgC,EAASpe,IAE3Boe,CACT,CACAyD,YAAY1C,EAAiBpe,EAA2B0e,GAItD,OAHKA,IACHA,EAAW,GAEN5tC,KAAK+zD,SAASK,MAAM,UAAW,8BAA8B,KAClE,MAAMyE,EAAWvrB,EAAG7c,MAAMo6B,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAAK21C,EAC9C1qC,EAAOlD,KAAKm9B,UAAU6S,YACxB1C,EAAGf,QAASe,EAAGtO,MAAOsO,EAAGrO,OAAQ45B,EAAU74D,KAAK66D,cAAc3rC,GAAW0e,GAC7E,OAAO5tC,KAAKm7D,aAAajsC,EAAUhsB,EAAK,GAE5C,CACAk0B,uBAAuBkW,EAAiBpe,EAA2B0e,GACjE,MAAMJ,EAASF,EAAGH,OAAOK,OAIzB,GAHKI,IACHA,EAAW,GAET5tC,KAAKw6D,YAAY5zB,IAAI4G,GAAS,CAChC,MAAM4tB,EAAcp7D,KAAKw6D,YAAY11D,IAAI0oC,GACzC,OAAO,IAAIl2C,SAA2Bqb,GAAWyoD,aAAW,EAAXA,EAAa16D,KAAKiS,I,CAErE,OAAO3S,KAAK+zD,SAASK,MAAM,UAAW,mCAAmCh9B,UACvEp3B,KAAKw6D,YAAYpuD,IAAIohC,EAAQ,IAC7B,MAAMqrB,EAAWvrB,EAAG7c,MAAMo6B,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAAK21C,QAE9C5tC,KAAKm9B,UAAUk+B,wBACrB,MAAMn4D,EAAOlD,KAAKm9B,UAAU6S,YACxB1C,EAAGf,QAASe,EAAGtO,MAAOsO,EAAGrO,OAAQ45B,EAAU74D,KAAK66D,cAAc3rC,GAAW0e,GACvE0tB,EAAat7D,KAAKm7D,aAAajsC,EAAUhsB,GACzCk4D,EAAcp7D,KAAKw6D,YAAY11D,IAAI0oC,GAGzC,OAFAxtC,KAAKw6D,YAAY/gC,OAAO+T,GACxB4tB,SAAAA,EAAar4D,SAAQ4P,GAAWA,EAAQ2oD,KACjCA,CAAU,GAErB,CACA9qB,wBAAwBlD,GACtB,OAAOttC,KAAK+zD,SAASK,MAAM,UAAW,0CAA0C,KAC9E,MAAMyE,EAAWvrB,EAAG7c,MAAMo6B,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IACzCiL,EAAOlD,KAAKm9B,UAAU6S,YAAY1C,EAAGf,QAASe,EAAGtO,MAAOsO,EAAGrO,OAAmB,EAAX45B,EAAc,OAAQ,GAC/F,OAAO,IAAI/6D,aAAaoF,EAAK5M,OAAQ4M,EAAKg2D,WAAYL,EAAS,GAEnE,CACAvoB,eAAeR,EAA0ByrB,GACvC,IAAIptC,EACJ,GAAInuB,KAAKu6D,OAAOjD,gBACdnpC,EAAMnuB,KAAK26D,cAAc71D,IAAIgrC,EAAYvD,SACrCpe,GAAK,CACHotC,GACFv7D,KAAK26D,cAAclhC,OAAOtL,GAE5B,MAAMssC,EAAgBz6D,KAAKy6D,cAAc31D,IAAIqpB,GAC7C,GAAIssC,EAAe,CACjB,MAAMtgD,EAAQsgD,EAAcngE,QAAQw1C,EAAYvD,SAChD,IAAe,IAAXpyB,EAAc,CAChBsgD,EAAc53D,OAAOsX,EAAO,GAC5B,IAAIugD,EAAe16D,KAAK06D,aAAa51D,IAAIqpB,GACpCusC,IACHA,EAAe,GACf16D,KAAK06D,aAAatuD,IAAI+hB,EAAKusC,IAE7BA,EAAah6D,KAAKovC,EAAYvD,Q,GAMjCpe,IAAOotC,IACV,EAAAl+B,OAAOE,QAAQ,iBAAkB,4BAA4BuS,EAAY9Q,SAAS8Q,EAAY7Q,UAC9Fj/B,KAAKm9B,UAAUo+B,cAAczrB,EAAYvD,SAE7C,CACA4uB,aAAajsC,EAA2BhsB,GACtC,OAAQgsB,GACN,IAAK,QACH,OAAOhsB,aAAgB7F,WAAa6F,EAAO7F,WAAWq2B,KAAKxwB,GAC7D,IAAK,QACH,OAAOA,aAAgB3F,WAAa2F,EAAO3F,WAAWm2B,KAAKxwB,GAC7D,IAAK,OACH,OAAOA,aAAgB/F,UAAY+F,EAAO/F,UAAUu2B,KAAKxwB,GAC3D,IAAK,SACH,OAAOA,aAAgBxF,YAAcwF,EAAOxF,YAAYg2B,KAAKxwB,GAC/D,IAAK,SACH,OAAOA,aAAgBtF,YAAcsF,EAAOtF,YAAY81B,KAAKxwB,GAC/D,IAAK,QACL,IAAK,OACH,OAAOA,aAAgBhK,WAAagK,EAAOhK,WAAWw6B,KAAKxwB,GAC7D,IAAK,UACH,OAAOA,aAAgBpF,aAAeoF,EAAOpF,aAAa41B,KAAKxwB,GACjE,IAAK,UACH,OAAOA,aAAgBlF,aAAekF,EAAOlF,aAAa01B,KAAKxwB,GACjE,QACE,MAAM,IAAI1E,MAAM,mBAAmB0wB,sBAEzC,CACA+rC,cAAc/rC,EAA2BhsB,GACvC,GAAKA,EAGL,OAAQA,aAAgBpF,aAAgBoF,EAAO,IAAIpF,aAAaoF,EAmBlE,CACA23D,cAAcW,GACZ,MAAO,OAgBT,CACAnrB,sBACErwC,KAAKm9B,UAAUkT,qBACjB,E,4BCjLF,IAAYjD,E,uEAAAA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACrB,yBACA,2CACA,uBACA,mDACA,gD,sSC3CF,gBAOA,0BAA+BtO,GAC7B,MAAMvf,EAAMuf,EAAczlC,OAC1B,OAAOylC,EAAcvlC,MAAM,EAAGgmB,EAAM,GAAGmyB,OAAO5S,EAAcvf,EAAM,GAAK,EACzE,EAEA,cAAO6X,eACHqkC,EAAwBC,EAAU,CAACC,GAAqB,GAAGC,GAC7D,OAAO,IAAItkE,SAAc,CAACqb,EAAS0H,KACjC,IAAIwhD,EAAW,EAEf,MAAMC,EAAQ,KACZ,GAAIL,IAEF,YADA9oD,IAIFkpD,IAEA,MAAME,EAAcL,EAAQG,GAEV,MAAdD,GAAsBC,GAAYD,EACpCvhD,IAGFrM,WAAW8tD,EAAOC,EAAY,EAGhCD,GAAO,GAEX,EAMA,sDAA2D16B,GAEzD,OADA,IAAAi4B,aAA8B,IAAhBj4B,GAAsD,IAAvBA,EAAY/nC,QAAc,IAAM,wCACtE,MAAQ+nC,EAAY3mB,OAAO,GAAGuhD,cAAgB56B,EAAY7nC,MAAM,EACzE,EAMA,iEAAsE6nC,GAEpE,OADA,IAAAi4B,aAA8B,IAAhBj4B,GAAsD,IAAvBA,EAAY/nC,QAAc,IAAM,wCACtE,MAAQ+nC,EAAY3mB,OAAO,GAAGuhD,cAAgB56B,EAAY7nC,MAAM,GAAK,aAC9E,EAGA,6BAAkCigD,EAA+BtV,GAE/D,IAAIE,EAA0BG,KAAKhkB,MAAMgkB,KAAKC,UAAUgV,IAExD,OADApV,EAAgBF,EACTE,CACT,EAGA,6BAAkCnqB,EAAkBkqB,GAClD,OAAOA,EAASvL,KAAI/gC,GAAKoiB,EAAOpiB,KAAIqjB,KAAK,KAC3C,EAGA,6BAAkCylB,GAChC,GAAIA,GAAQ,EACV,MAAO,MACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QAEP,MAAMniC,MAAM,gBAAgBmiC,yBAEhC,EAEA,yBAA8BA,EAAO,GACnC,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKpnC,MAAM,EAAGonC,EACjD,C,mIC1FA,gBAEA,UAEM5e,EAA6C,CAAC,EAuCpD,SAAgBk6C,EAAsBl/B,GACpC,MAAMm/B,EAyCR,WACE,GAAwB,oBAAblmE,SAA0B,CACnC,GAA+B,oBAApBmmE,gBACT,MAAM,IAAIp8C,UAAU,6DAEtB,OAAO,IAAIo8C,gBAAgB,EAAG,E,CAEhC,MAAMD,EAA4BlmE,SAASomE,cAAc,UAGzD,OAFAF,EAAOl9B,MAAQ,EACfk9B,EAAOj9B,OAAS,EACTi9B,CACT,CApDiBG,GAUf,IAAIhI,EACJ,MAAMxjD,EAV4C,CAChDkyC,OAAO,EACPuZ,OAAO,EACPC,WAAW,EACXC,SAAS,EACTC,uBAAuB,EACvBC,oBAAoB,EACpBC,8BAA8B,GAIhC,KAAK5/B,GAA2B,WAAdA,KAChBs3B,EAAK6H,EAAOU,WAAW,SAAU/rD,GAC7BwjD,GACF,IACE,OAAO,IAAI,EAAAwI,aAAaxI,EAAI,E,CAC5B,MAAO/5C,GACP,EAAA+iB,OAAOG,QAAQ,mBAAoB,kEAAkEljB,I,CAI3G,KAAKyiB,GAA2B,UAAdA,KAChBs3B,EAAK6H,EAAOU,WAAW,QAAS/rD,IAAOqrD,EAAOU,WAAW,qBAAsB/rD,GAC3EwjD,GACF,IACE,OAAO,IAAI,EAAAwI,aAAaxI,EAAI,E,CAC5B,MAAO/5C,GACP,EAAA+iB,OAAOG,QACH,mBACA,yFAAyFljB,I,CAKnG,MAAM,IAAI9b,MAAM,yBAClB,CArEA,8BAAgB4+B,EAAmBL,GACjC,IAAIU,EACEV,GAA2B,WAAdA,KAA2B,WAAYhb,GAE7Cgb,GAA2B,UAAdA,KAA0B,UAAWhb,KAC7D0b,EAAU1b,EAAM2a,OAFhBe,EAAU1b,EAAM+6C,OAKlBr/B,EAAUA,GAAWw+B,EAAsBl/B,GAC3CA,EAAYA,GAAiC,IAApBU,EAAQ/M,QAAgB,QAAU,SAC3D,MAAM2jC,EAAK52B,EAAQ42B,GAInB,OAFAtyC,EAAMgb,GAAaU,EAEf42B,EAAG0I,wBACEh7C,EAAMgb,GACNK,EAAmBL,KAG5Bs3B,EAAG2I,QAAQ3I,EAAG4I,YACd5I,EAAG2I,QAAQ3I,EAAG6I,cACd7I,EAAG2I,QAAQ3I,EAAG8I,OACd9I,EAAG2I,QAAQ3I,EAAG+I,QACd/I,EAAG2I,QAAQ3I,EAAGgJ,qBACdhJ,EAAG2I,QAAQ3I,EAAGiJ,iBACdjJ,EAAGkJ,OAAOlJ,EAAGmJ,cACbnJ,EAAGkJ,OAAOlJ,EAAGoJ,WACbpJ,EAAGqJ,SAASrJ,EAAGsJ,MAERlgC,EACT,EAEA,yB,0wBC3CA,gBAEA,aAEA,UAWA,SAAgBmgC,EAAqBziC,GACnC,IAAIrkC,EAAI,EACR,KAAOA,EAAIqkC,EAAI9hC,QACE8hC,EAAIrkC,OADIA,GAMzB,OAAOA,EAAI,CACb,CATA,yBAcA,qBAwCEi2B,YAAYsnC,EAA2B3jC,GAF/B,KAAAmtC,kBAAmB,EAogBnB,KAAAC,YAA0B,GAjgBhC99D,KAAKq0D,GAAKA,EACVr0D,KAAK0wB,QAAUA,EAEf1wB,KAAK+9D,gBACL/9D,KAAKg+D,aAAeh+D,KAAKi+D,qBACzBj+D,KAAKk+D,YAAcl+D,KAAKm+D,oBACxBn+D,KAAKo+D,sBACP,CAEAlD,gBAAgBl8B,EAAeC,EAAgB67B,EAAsB53D,GACnE,MAAMmxD,EAAKr0D,KAAKq0D,GAEV9nB,EAAU8nB,EAAGgK,gBAEnBhK,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAC9B8nB,EAAGkK,cAAclK,EAAGiK,WAAYjK,EAAGmK,mBAAoBnK,EAAGoK,SAC1DpK,EAAGkK,cAAclK,EAAGiK,WAAYjK,EAAGqK,mBAAoBrK,EAAGoK,SAC1DpK,EAAGkK,cAAclK,EAAGiK,WAAYjK,EAAGsK,eAAgBtK,EAAGuK,eACtDvK,EAAGkK,cAAclK,EAAGiK,WAAYjK,EAAGwK,eAAgBxK,EAAGuK,eACtD,MAAMtoE,EAAS4M,EAAO43D,EAAQjgD,OAAO3X,EAAM87B,EAAQC,GAAU,KAQ7D,OAPAo1B,EAAGyK,WACCzK,EAAGiK,WACH,EACAxD,EAAQzC,eAAgBr5B,EAAOC,EAC/B,EACA67B,EAAQvC,OAAQuC,EAAQ/uB,YAAaz1C,GACzC0J,KAAK++D,aACExyB,CACT,CACAyuB,cACIzuB,EAAuBvN,EAAeC,EAAgB67B,EAAsB53D,GAC9E,MAAMmxD,EAAKr0D,KAAKq0D,GAChBA,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAC9B,MAAMj2C,EAASwkE,EAAQjgD,OAAO3X,EAAM87B,EAAQC,GAC5Co1B,EAAG2K,cACC3K,EAAGiK,WACH,EACA,EACA,EACAt/B,EAAOC,EAAQ67B,EAAQvC,OAAQuC,EAAQ/uB,YAAaz1C,GACxD0J,KAAK++D,YACP,CACAhJ,kBAAkBxpB,EAAuBvN,EAAeC,GACtD,MAAMo1B,EAAKr0D,KAAKq0D,GAEhBA,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAC9B8nB,EAAG4K,gBAAgB5K,EAAG6K,YAAal/D,KAAKk+D,aACxC7J,EAAG8K,qBACC9K,EAAG6K,YAAa7K,EAAG+K,kBAAmB/K,EAAGiK,WAAY/xB,EACrD,GACJvsC,KAAK++D,aACL1K,EAAGgL,SAAS,EAAG,EAAGrgC,EAAOC,GACzBo1B,EAAGiL,QAAQ,EAAG,EAAGtgC,EAAOC,EAC1B,CACA+Q,YACIzD,EAAuBvN,EAAeC,EAAgB45B,EAAkB3pC,EACxE0e,GACF,MAAMymB,EAAKr0D,KAAKq0D,GACXzmB,IACHA,EAAW,GAER5tC,KAAK69D,kBACR79D,KAAK+1D,kBAAkBxpB,EAASvN,EAAOC,GAEzC,MAAM67B,EAAU96D,KAAK+6D,WAAW7rC,EAAU0e,GACpCt3C,EAASwkE,EAAQlC,SAAS55B,EAAQC,GAUxC,OARAo1B,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAC9B8nB,EAAG8K,qBACC9K,EAAG6K,YAAa7K,EAAG+K,kBAAmB/K,EAAGiK,WAAY/xB,EACrD,GAEJ8nB,EAAGkL,WAAW,EAAG,EAAGvgC,EAAOC,EAAQo1B,EAAGqE,KAAMoC,EAAQ/uB,YAAaz1C,GACjE0J,KAAK++D,aAEEjE,EAAQr+D,OAAOnG,EAAQuiE,EAChC,CAEA2G,qBAEE,OAAO,CACT,CACAC,mBACE,MAAMpL,EAAKr0D,KAAKq0D,GAEhB,MAAO,WADGA,EAAGqL,aAAa1/D,KAAKq0D,GAAGsL,gBACZtL,EAAGuL,SAC3B,CACAC,oBACE,OAAO7/D,KAAKq0D,GAAGqL,aAAa1/D,KAAKq0D,GAAGyL,mBACtC,CACAC,wBACE,OAAO//D,KAAKq0D,GAAGqL,aAAa1/D,KAAKq0D,GAAG2L,oBACtC,CACA5J,oBAAoBJ,EAAwBE,GAC1C,MAAM7B,EAAKr0D,KAAKq0D,GAChBA,EAAG4L,oBAAoBjK,EAAgB,EAAG3B,EAAGh6B,OAAO,EAAO,GAAI,GAC/Dg6B,EAAG6L,wBAAwBlK,IACC,IAAxBE,IACF7B,EAAG4L,oBAAoB/J,EAAoB,EAAG7B,EAAGh6B,OAAO,EAAO,GAAI,IACnEg6B,EAAG6L,wBAAwBhK,IAE7Bl2D,KAAK++D,YACP,CACAjJ,cACIjB,EACAe,GAEF,MAAMvB,EAAKr0D,KAAKq0D,GACVnoB,EAAUmoB,EAAGyB,gBAMnB,OAHAzB,EAAG8L,aAAaj0B,EAAS2oB,GACzBR,EAAG8L,aAAaj0B,EAAS0pB,GACzBvB,EAAG+L,YAAYl0B,GACRA,CACT,CACAupB,cAAczsB,EAAsBq3B,GAClC,MAAMhM,EAAKr0D,KAAKq0D,GACViM,EAASjM,EAAGkM,aAAaF,GAC/B,IAAKC,EACH,MAAM,IAAI9hE,MAAM,0CAA0C6hE,KAK5D,GAFAhM,EAAGrrB,aAAas3B,EAAQt3B,GACxBqrB,EAAGoB,cAAc6K,IACwC,IAArDjM,EAAGmM,mBAAmBF,EAAQjM,EAAGoM,gBACnC,MAAM,IAAIjiE,MAAM,6BAA6B61D,EAAGqM,iBAAiBJ,uBAErEt3B,KAEE,OAAOs3B,CACT,CACAxL,aAAawL,GACXtgE,KAAKq0D,GAAGS,aAAawL,EACvB,CACAxJ,qBAAqBvqB,EAAuB0pB,EAAkBY,GAC5D,MAAMxC,EAAKr0D,KAAKq0D,GAChBA,EAAGsM,cAActM,EAAGuL,SAAW3J,GAC/Bj2D,KAAK++D,aACL1K,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAC9BvsC,KAAK++D,aACL1K,EAAGuC,UAAUC,EAAeZ,GAC5Bj2D,KAAK++D,YACP,CACAnK,OACE50D,KAAKq0D,GAAGuM,WAAW5gE,KAAKq0D,GAAGwM,eAAgB,EAAG,GAC9C7gE,KAAK++D,YACP,CACAA,aACE,GAAI,EAAArnC,IAAIi+B,MAAO,CACb,MAAMtB,EAAKr0D,KAAKq0D,GACVr6D,EAAQq6D,EAAGyM,WACjB,IAAIC,EAAQ,GACZ,OAAQ/mE,GACN,KAAMq6D,EAAW,SACf,OACF,KAAMA,EAAe,aACnB0M,EAAQ,eACR,MACF,KAAM1M,EAAgB,cACpB0M,EAAQ,gBACR,MACF,KAAM1M,EAAoB,kBACxB0M,EAAQ,oBACR,MACF,KAAM1M,EAAgC,8BACpC0M,EAAQ,gCACR,MACF,KAAM1M,EAAgB,cACpB0M,EAAQ,gBACR,MACF,KAAM1M,EAAqB,mBACzB0M,EAAQ,qBACR,MACF,QACEA,EAAQ,wBAAwB/mE,EAAM0Q,SAAS,MAEnD,MAAM,IAAIlM,MAAMuiE,E,CAEpB,CACAxF,cAAchvB,GACZvsC,KAAKq0D,GAAGkH,cAAchvB,EACxB,CACAwoB,cAAc7oB,GACZlsC,KAAKq0D,GAAGU,cAAc7oB,EACxB,CACA6uB,WAAW7rC,EAA4B0e,EAAkBc,EAAA,GACvD,GAAqB,IAAjB1uC,KAAK0wB,QACP,OAAO,IAAIswC,EAAaC,sBAAsBjhE,KAAKq0D,GAA8BzmB,GAGnF,OAAQ1e,GACN,IAAK,QACH,OAAc,IAAVwf,GAAsC1uC,KAAKkhE,yBACtC,IAAIF,EAAaG,qBAAqBnhE,KAAKq0D,GAAIzmB,GAE/C,IAAIozB,EAAaG,qBACpBnhE,KAAKq0D,GAAIzmB,EAAU5tC,KAAKohE,0BAA2BC,gBAE3D,IAAK,MACH,MAAM,IAAI7iE,MAAM,mBAClB,IAAK,OACH,OAAO,IAAIwiE,EAAaM,iBAAiBthE,KAAKq0D,GAAIzmB,GACpD,QACE,MAAM,IAAIpvC,MAAM,qBAAqB0wB,KAE3C,CACAmhB,sBACE,MAAMgkB,EAAKr0D,KAAKq0D,GAChB,IAAK,IAAIkN,EAAO,EAAGA,EAAOvhE,KAAKwhE,uBAAwBD,EACrDlN,EAAGsM,cAActM,EAAGuL,SAAW2B,GAC/BlN,EAAGmC,YAAYnC,EAAGiK,WAAY,KAElC,CACA/hC,UACE,GAAIv8B,KAAKyhE,SACP,OAEF,MAAMpN,EAAKr0D,KAAKq0D,GAChBA,EAAG4K,gBAAgB5K,EAAG6K,YAAa,MACnC7K,EAAGqN,kBAAkB1hE,KAAKk+D,aAC1B7J,EAAGsN,WAAWtN,EAAGuN,aAAc,MAC/BvN,EAAGwN,aAAa7hE,KAAKg+D,cACrB3J,EAAGsN,WAAWtN,EAAGyN,qBAAsB,MACvCzN,EAAGhhC,SACHrzB,KAAKyhE,UAAW,CAClB,CAEQM,wBAEN,OAAO,IAAIjkE,aAAa,EACrB,EAAK,EAAM,EAAK,EAAK,GACrB,GAAM,EAAK,EAAK,EAAK,EACtB,EAAM,EAAM,EAAK,EAAK,EACtB,GAAO,EAAK,EAAK,EAAK,GAE1B,CACQmgE,qBACN,MAAM5J,EAAKr0D,KAAKq0D,GACV/9D,EAAS+9D,EAAG2N,eAClB,IAAK1rE,EACH,MAAM,IAAIkI,MAAM,gCAElB,MAAMyjE,EAAWjiE,KAAK+hE,wBAItB,OAHA1N,EAAGsN,WAAWtN,EAAGuN,aAActrE,GAC/B+9D,EAAG6N,WAAW7N,EAAGuN,aAAcK,EAAU5N,EAAG8N,aAC5CniE,KAAK++D,aACEzoE,CACT,CACQ6nE,oBACN,MAAM5pD,EAAKvU,KAAKq0D,GAAG8J,oBACnB,IAAK5pD,EACH,MAAM,IAAI/V,MAAM,mCAElB,OAAO+V,CACT,CAEQ6pD,uBACN,MAAM/J,EAAKr0D,KAAKq0D,GAMhB,GAJAr0D,KAAKoiE,sCAAwCpiE,KAAKqiE,2CAClDriE,KAAKkhE,yBAA2BlhE,KAAKsiE,qBACrCtiE,KAAKuwC,2BAA6BvwC,KAAKuiE,uBAElB,IAAjBviE,KAAK0wB,UAAkB1wB,KAAKohE,4BAA8BphE,KAAKkhE,yBACjE,MAAM,IAAI1iE,MAAM,0DAGlBwB,KAAKwiE,kBAAoBxiE,KAAKkhE,0BAA4BlhE,KAAKyiE,oBAG/DziE,KAAKm3D,eAAiB9C,EAAGqL,aAAarL,EAAGqO,kBACzC1iE,KAAKwhE,qBAAuBnN,EAAGqL,aAAarL,EAAGsO,yBAM3C3iE,KAAK0wB,OAMX,CACQqtC,gBACe,IAAjB/9D,KAAK0wB,SACP1wB,KAAK4iE,0BAA4B5iE,KAAKq0D,GAAGwO,aAAa,0BACtD7iE,KAAK8iE,kCAAoC9iE,KAAKq0D,GAAGwO,aAAa,qCAE9D7iE,KAAK+iE,sBAAwB/iE,KAAKq0D,GAAGwO,aAAa,qBAClD7iE,KAAKohE,0BAA4BphE,KAAKq0D,GAAGwO,aAAa,0BAE1D,CAEQR,2CAGN,MAAMhO,EAAKr0D,KAAKq0D,GACV9nB,EAAU8nB,EAAGgK,gBACnBhK,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAE9B,MAAM8rB,EAAkC,IAAjBr4D,KAAK0wB,QAAiB2jC,EAAoCoE,QAAUpE,EAAGqE,KAC9FrE,EAAGyK,WAAWzK,EAAGiK,WAAY,EAAGjG,EAAgB,EAAG,EAAG,EAAGhE,EAAGqE,KAAMrE,EAAGh6B,MAAO,MAE5E,MAAM2oC,EAAc3O,EAAG8J,oBACvB9J,EAAG4K,gBAAgB5K,EAAG6K,YAAa8D,GAEnC3O,EAAG8K,qBAAqB9K,EAAG6K,YAAa7K,EAAG+K,kBAAmB/K,EAAGiK,WAAY/xB,EAAS,GAEtF,MAAM02B,EAAa5O,EAAG6O,uBAAuB7O,EAAG6K,eAAiB7K,EAAG8O,qBAKpE,OAJA9O,EAAGmC,YAAYnC,EAAGiK,WAAY,MAC9BjK,EAAG4K,gBAAgB5K,EAAG6K,YAAa,MACnC7K,EAAGkH,cAAchvB,GACjB8nB,EAAGqN,kBAAkBsB,GACdC,CACT,CAEQX,qBACN,GAAqB,IAAjBtiE,KAAK0wB,SACP,IAAK1wB,KAAK4iE,0BACR,OAAO,OAGT,IAAK5iE,KAAK+iE,sBACR,OAAO,EAGX,OAAO/iE,KAAKoiE,qCACd,CAEQG,uBACN,GAAqB,IAAjBviE,KAAK0wB,SACP,IAAK1wB,KAAK4iE,0BACR,OAAO,MAEJ,CACL,IAAK5iE,KAAK+iE,sBACR,OAAO,EAET,IAAK/iE,KAAKq0D,GAAGwO,aAAa,4BACxB,OAAO,C,CAGX,OAAO7iE,KAAKoiE,qCACd,CAKQK,oBAIN,MAAMpO,EAAKr0D,KAAKq0D,GAEhB,IAAI9nB,EACAy2B,EACAnO,EACAuO,EACAl3B,EAEJ,IACEK,EAAU8nB,EAAGgK,gBACb2E,EAAc3O,EAAG8J,oBACjB9J,EAAGmC,YAAYnC,EAAGiK,WAAY/xB,GAG9B,MAAM8rB,EAAkC,IAAjBr4D,KAAK0wB,QAAiB2jC,EAAoCoE,QAAUpE,EAAGqE,KAS9F,OARArE,EAAGyK,WAAWzK,EAAGiK,WAAY,EAAGjG,EAAgB,EAAG,EAAG,EAAGhE,EAAGqE,KAAMrE,EAAGh6B,MAAO,MAE5Eg6B,EAAG4K,gBAAgB5K,EAAG6K,YAAa8D,GACnC3O,EAAG8K,qBAAqB9K,EAAG6K,YAAa7K,EAAG+K,kBAAmB/K,EAAGiK,WAAY/xB,EAAS,GAEtF8nB,EAAGkJ,OAAOlJ,EAAG8I,OAEbtI,EAAeR,EAAGkM,aAAalM,EAAGqB,iBAC7Bb,IAGLR,EAAGrrB,aAAa6rB,EAAc,iBAC9BR,EAAGoB,cAAcZ,GAEjBuO,EAAiB/O,EAAGkM,aAAalM,EAAGwB,mBAC/BuN,IAGL/O,EAAGrrB,aAAao6B,EAAgB,8DAChC/O,EAAGoB,cAAc2N,GAEjBl3B,EAAUmoB,EAAGyB,kBACR5pB,IAGLmoB,EAAG8L,aAAaj0B,EAAS2oB,GACzBR,EAAG8L,aAAaj0B,EAASk3B,GACzB/O,EAAG+L,YAAYl0B,GACfmoB,EAAGC,WAAWpoB,GAEdmoB,EAAGuM,WAAWvM,EAAGgP,OAAQ,EAAG,GACrBhP,EAAGyM,aAAezM,EAAGiP,W,SAG5BjP,EAAG2I,QAAQ3I,EAAG8I,OAEVjxB,GACFmoB,EAAGU,cAAc7oB,GAEf2oB,GACFR,EAAGS,aAAaD,GAEduO,GACF/O,EAAGS,aAAasO,GAEdJ,IACF3O,EAAG4K,gBAAgB5K,EAAG6K,YAAa,MACnC7K,EAAGqN,kBAAkBsB,IAEnBz2B,IACF8nB,EAAGmC,YAAYnC,EAAGiK,WAAY,MAC9BjK,EAAGkH,cAAchvB,G,CAGvB,CAEAg3B,aACE,GAAqB,IAAjBvjE,KAAK0wB,SAAiB1wB,KAAK8iE,kCAAmC,CAChE,MAAMU,EAAMxjE,KAAKq0D,GACXoP,EAAMzjE,KAAK8iE,kCAEXY,EAAQF,EAAIG,cAElB,OADAH,EAAII,WAAWH,EAAII,iBAAkBH,GAC9BA,C,CAGP,MAAM,IAAIllE,MAAM,4CAEpB,CAEAslE,WACE,GAAqB,IAAjB9jE,KAAK0wB,UAAiB1wB,KAAK8iE,kCAO7B,MAAM,IAAItkE,MAAM,4CAPlB,CACE,MAAMglE,EAAMxjE,KAAKq0D,GACXoP,EAAMzjE,KAAK8iE,kCACjBU,EAAIO,SAASN,EAAII,iB,CAMrB,CAEAG,uBAAuBN,GACrB,IAAIO,GAAY,EAAOC,GAAW,EAClC,GAAqB,IAAjBlkE,KAAK0wB,UAAiB1wB,KAAK8iE,kCAQ7B,MAAM,IAAItkE,MAAM,4CARgD,CAChE,MAAMglE,EAAMxjE,KAAKq0D,GACXoP,EAAMzjE,KAAK8iE,kCAEjBmB,EAAYT,EAAIW,kBAAkBT,EAAOF,EAAIY,wBAC7CF,EAAWV,EAAI9D,aAAa+D,EAAIY,iB,CAMlC,OAAOJ,IAAcC,CACvB,CAEAI,eAAeZ,GACb,IAAIa,EAAc,EAClB,GAAqB,IAAjBvkE,KAAK0wB,QAMP,MAAM,IAAIlyB,MAAM,4CANM,CACtB,MAAMglE,EAAMxjE,KAAKq0D,GACjBkQ,EAAcf,EAAIW,kBAAkBT,EAAOF,EAAIgB,cAC/ChB,EAAIiB,YAAYf,E,CAMlB,OAAOa,EAAc,GACvB,CAEAntC,6BAA6BssC,GAE3B,aADM,IAAAgB,cAAY,IAAM1kE,KAAKgkE,uBAAuBN,KAC7C1jE,KAAKskE,eAAeZ,EAC7B,CAEOtsC,8BACL,MAAMutC,EAAe3kE,KAAK4kE,YAAY5kE,KAAKq0D,IAC3C,OAAOr0D,KAAK6kE,UAAUF,EACxB,CAEQC,YAAYvQ,GAClB,IAAIyQ,EACJ,MAAMtB,EAAMnP,EACNqP,EAAQF,EAAIuB,UAAUvB,EAAIwB,2BAA4B,GAU5D,OATA3Q,EAAG4Q,QAEDH,EADY,OAAVpB,EACc,KAAM,EAEN,KACd,MAAM1oE,EAASwoE,EAAI0B,eAAexB,EAAO,EAAG,GAC5C,OAAO1oE,IAAWwoE,EAAI2B,kBAAoBnqE,IAAWwoE,EAAI4B,mBAAmB,EAGzE,CAAC1B,QAAOoB,gBACjB,CAEA1tC,gBAAgButC,GACd,OAAO,IAAIrtE,SAAcqb,IAClB3S,KAAKqlE,eAAc,IAAMV,EAAaG,kBAAiB,IAAMnyD,KAAU,GAEhF,CAIA2yD,YAEE,MAAMnrD,EAAQyjD,EAAqB59D,KAAK89D,YAAYllC,KAAIh/B,GAAKA,EAAE2rE,YAC/D,IAAK,IAAIzuE,EAAI,EAAGA,GAAKqjB,IAASrjB,EAAG,CAC/B,MAAM,UAAC0uE,GAAaxlE,KAAK89D,YAAYhnE,GACrC0uE,G,CAEFxlE,KAAK89D,YAAc99D,KAAK89D,YAAYvkE,MAAM4gB,EAAQ,EACpD,CAEQid,oBAAoBmuC,EAAyBC,GACnDxlE,KAAK89D,YAAYp9D,KAAK,CAAC6kE,WAAUC,cAC7BxlE,KAAK89D,YAAYzkE,OAAS,SAKxB,IAAAqrE,cAAY,KAChB1kE,KAAKslE,YAE8B,IAA5BtlE,KAAK89D,YAAYzkE,SAE5B,E,sGC7lBF,gBAIA,MAAMosE,EACJ14C,YAAmBirC,EAAqBv/D,GAArB,KAAAu/D,GAAAA,EAAqB,KAAAv/D,KAAAA,CAAmB,EAG7D,sBACEs0B,YAAoBiB,EAAcy9B,EAAyBsI,GAAvC,KAAA/lC,MAAAA,EAAuC,KAAA+lC,SAAAA,EACzD/zD,KAAKq8B,WAAWovB,EAClB,CAEApvB,WAAWovB,GACTzrD,KAAK+zD,SAASK,MAAM,UAAW,4BAA4B,KACzD,MAAM3tB,EAAazmC,KAAKguB,MAAM03C,WAC9B,GAAIj/B,EAAWptC,SAAWoyD,EAAIpyD,OAC5B,MAAM,IAAImF,MAAM,2CAGlBwB,KAAK2lE,KAAOla,EAAI7yB,KAAI,CAACo/B,EAAIlhE,IAAM,IAAI2uE,EAASzN,EAAIvxB,EAAW3vC,MAC3DkJ,KAAK+2B,QAGL/2B,KAAK4lE,SAAW,GAChB5lE,KAAK2lE,KAAK5iE,SAAQ,CAACi1D,EAAIlhE,KACrB,IAAI+uE,GAAW,EACf,IAAK,MAAMz4C,KAAS4qC,EAAGv/D,KAAK0zC,OAC1B,IACKnsC,KAAK8lE,QAAQ14C,KACsC,IAAjDptB,KAAKguB,MAAM+3C,kBAAkBzrE,QAAQ8yB,GAC1C,CACAy4C,GAAW,EACX,K,CAGAA,GACF7lE,KAAK4lE,SAASllE,KAAK5J,E,GAErB,GAEN,CAEAigC,QACE/2B,KAAK8lE,QAAU9lE,KAAKguB,MAAM6pC,YAAYj/B,KAAI9hC,GAAKA,EAAEq2C,QACnD,CAEA/V,cAAc4uC,EAAgCC,GAC5C,OAAOjmE,KAAK+zD,SAASK,MAAM,UAAW,yBAAyBh9B,UAE7Dp3B,KAAK+2B,QAGL,MAAM0f,EAAmBuvB,EAAevO,yBAGlCyO,EAAclmE,KAAKguB,MAAM+3C,kBAC/B,GAAIE,EAAY5sE,SAAW6sE,EAAY7sE,OACrC,MAAM,IAAImF,MAAM,kFACZynE,EAAY5sE,oBAAoB6sE,EAAY7sE,UAGlD4sE,EAAYljE,SAAQ,CAACqqB,EAAOt2B,KAC1B,MAAMqjB,EAAQ+rD,EAAYpvE,GAC1BkJ,KAAK8lE,QAAQ3rD,GAASiT,CAAK,IAI7B,MAAM+4C,EAAqBnmE,KAAK4lE,SAASrsE,MAAM,GAGzC6sE,EAAcpmE,KAAKguB,MAAM6pC,YACzBpxB,EAAazmC,KAAKguB,MAAM03C,WAE9B,IAAIW,EAAO,EACX,KAAOA,EAAOF,EAAS9sE,QAAQ,CAC7B,MAAMitE,EAAcH,EAASE,KACvBE,EAASvmE,KAAK2lE,KAAKW,GAGnBE,EAAYD,EAAO9tE,KAAK0zC,OAAOvT,KAAI9hC,GAAKkJ,KAAK8lE,QAAQhvE,KAC3D,IAAsC,IAAlC0vE,EAAUlsE,aAAQwf,GACpB,MAAM,IAAItb,MAAM,kCAAkC+nE,EAAO9tE,QAI3D,MAAMguE,EAAeD,EACrB,EAAAnpC,OAAOE,QACH,WACA,aAAagpC,EAAO9tE,KAAKwH,SACrBwmE,EAAa7tC,KAAI,CAAC7iC,EAAGe,IAAM,IAAIyvE,EAAO9tE,KAAK0zC,OAAOr1C,QAAQf,EAAE40B,QAAQ50B,EAAE24B,KAAKxT,KAAK,UAASA,KAAK,UAEtG,MAAMwrD,QAAmB1mE,KAAK+zD,SAASK,MACnC,OAAQmS,EAAO9tE,KAAKwH,MAAMm3B,SAAYmvC,EAAOvO,GAAGE,KAAKzhB,EAAkBgwB,EAAcF,EAAOvO,GAAGv6B,WAGnG,GAAIipC,EAAWrtE,SAAWktE,EAAO9tE,KAAKw3D,QAAQ52D,OAC5C,MAAM,IAAImF,MAAM,uDAIlBkoE,EAAW3jE,SAAQ,CAACsqB,EAAQv2B,KAC1B,MAAML,EAAI8vE,EAAO9tE,KAAKw3D,QAAQn5D,GAC9B,GAAIkJ,KAAK8lE,QAAQrvE,GACf,MAAM,IAAI+H,MAAM,WAAW/H,4BAA4B8vE,EAAO9tE,KAAKwH,QAErED,KAAK8lE,QAAQrvE,GAAK42B,CAAM,IAI1B,MAAMs5C,EAAkB,IAAIrgC,IAC5BogC,EAAW3jE,SAAQ,CAACsqB,EAAQv2B,KAC1B,MAAML,EAAI8vE,EAAO9tE,KAAKw3D,QAAQn5D,GAC9B,IAAK,MAAM8vE,KAA8BR,EAAY3vE,GAAGuiD,GAAI,CAC1D,MAAM6tB,EAAwBpgC,EAAWmgC,GACzC,IAAIf,GAAW,EACf,IAAK,MAAMzpE,KAAKyqE,EAAsB16B,OACpC,IAAKnsC,KAAK8lE,QAAQ1pE,GAAI,CACpBypE,GAAW,EACX,K,CAGAA,GACFc,EAAgBtgE,IAAIugE,E,KAI1BT,EAASzlE,QAAQimE,E,CAGnB,MAAMt5C,EAAmB,GACzB,IAAK,IAAIv2B,EAAI,EAAGA,EAAIkJ,KAAKguB,MAAM84C,mBAAmBztE,OAAQvC,IAAK,CAC7D,MAAMiwE,EAAc/mE,KAAKguB,MAAM84C,mBAAmBhwE,GAC5CkwE,EAAehnE,KAAK8lE,QAAQiB,GAClC,QAAqBjtD,IAAjBktD,EACF,MAAM,IAAIxoE,MAAM,oBAAoBuoE,0BAElB,IAAhBA,QACIC,EAAaC,UAGnBD,EAAa9jE,KAEfmqB,EAAO3sB,KAAKsmE,E,CAId,OAFA,EAAA3pC,OAAOE,QAAQ,WAAY,iCAC3BkZ,EAAiBla,UACVlP,CAAM,GAEjB,E,8FCvJF,gBAEA,UACA,UACA,UACA,UAEA,IAAOyL,EAAS,EAAAC,YAAYC,aAAaC,IAmE5B,EAAAiuC,MAAQ,CAInBxzC,KAAM,CAACyzC,EAA2C54C,IAC9C,IAAI64C,EAAUD,EAAY54C,IAGhC,MAAM84C,EACJt6C,YAAYyB,GACVxuB,KAAKsnE,WAAQxtD,EACb9Z,KAAKunE,IAAM,GACXvnE,KAAKmtC,YAASrzB,EACd9Z,KAAK2qB,UAAO7Q,EAER0U,IACFxuB,KAAK2qB,KAAO,EAAAsuB,UAAUuuB,yBAAyBh5C,EAAU7D,KAAM2F,YAEnE,CAGIoD,WACF,OAAO1zB,KAAKsnE,KACd,CAEItuB,SACF,OAAOh5C,KAAKunE,GACd,EAKF,MAAME,EACJ16C,YAAY26C,EAAyCznE,GAC/CynE,aAAsB,EAAAn+C,KAAK4D,WAC7BntB,KAAKC,KAAOynE,EAAWznE,KACvBD,KAAKutB,OAASm6C,EAAWn6C,OACzBvtB,KAAKm5B,WAAa,IAAI,EAAAD,UAAUwuC,EAAWp6C,YAClCo6C,aAAsB5uC,EAAO2uC,OACtCznE,KAAKC,KAAOA,QAAAA,EAAQynE,EAAWznE,OAC/BD,KAAKutB,OAASm6C,EAAWn6C,SACzBvtB,KAAKm5B,WAAa,IAAI,EAAAD,UAAU,EAAA+f,UAAU0uB,8BAA8BD,KAG1E1nE,KAAKmsC,OAAS,GACdnsC,KAAKiwD,QAAU,GACfjwD,KAAK4nE,aAAc,CACrB,EAUF,MAAMR,EAWJr6C,YAAYiB,EAAsC65C,GAChD,IAAK75C,EACH,MAAM,IAAIjO,UAAU,kBAItB/f,KAAK8nE,WAAW95C,GAGhBhuB,KAAK+nE,eAAeF,GAGpB7nE,KAAKgoE,gBACP,CAEAjC,kBACE,OAAO/lE,KAAKioE,gBACd,CAEAC,gBACE,OAAOloE,KAAKmoE,cACd,CAEArB,mBACE,OAAO9mE,KAAKooE,iBACd,CAEAC,iBACE,OAAOroE,KAAKsoE,eACd,CAEAzQ,YACE,OAAO73D,KAAKuoE,QACd,CAEA7C,WACE,OAAO1lE,KAAKwoE,MACd,CAEQV,WAAW95C,GAEjB,GAAIA,aAAiB,EAAAzE,KAAK+B,WACxBtrB,KAAKyoE,yBAAyBz6C,OACzB,MAAIA,aAAiB8K,EAAOouC,OAGjC,MAAM,IAAInnD,UAAU,gCAFpB/f,KAAK0oE,wBAAwB16C,E,CAIjC,CACQy6C,yBAAyBz6C,GAC/B,MAAM26C,EAAc,IAAItvC,IACxBr5B,KAAKuoE,SAAW,GAEhBvoE,KAAKioE,iBAAmB,GACxBjoE,KAAKmoE,eAAiB,GAEtBnoE,KAAKooE,kBAAoB,GACzBpoE,KAAKsoE,gBAAkB,GAEvBtoE,KAAKwoE,OAAS,GAEd,MAAMI,EAAe,IAAIvvC,IAGzB,IAAKrL,EAAMZ,MACT,MAAM,IAAI5uB,MAAM,uCAElB,MAAMqqE,EAAkB,GACxB,IAAK,MAAM/xE,KAAKk3B,EAAMZ,MAAO,CAC3B,GAAIu7C,EAAY/hC,IAAI9vC,EAAEmJ,MACpB,MAAM,IAAIzB,MAAM,0BAA0B1H,EAAEmJ,QAE9C,MAAM6oE,EAAe9oE,KAAKuoE,SAAS7nE,KAAK,IAAI2mE,EAAMvwE,IAAM,EACxD6xE,EAAYv8D,IAAItV,EAAEmJ,KAAO6oE,GACzBD,EAAgBnoE,KAAK5J,EAAEmJ,K,CAIzB,IAAK+tB,EAAMO,YACT,MAAM,IAAI/vB,MAAM,6CAElB,IAAK,MAAM1H,KAAKk3B,EAAMO,YAAa,CACjC,IAAIpU,EAAQwuD,EAAY7jE,IAAIhO,EAAEmJ,MAC9B,QAAc6Z,IAAVK,EAAqB,CACvB,MAAM6F,EAAQ,IAAIqnD,EAClBrnD,EAAM2K,KAAO,CACX8F,MAAO,CAAC/B,KAAM,EAAAuqB,UAAU8vB,oBAAoBjyE,EAAE43B,OAC9C4B,WAAY,EAAA2oB,UAAUC,wBAAwBpiD,EAAEo4B,WAElD/U,EAAQna,KAAKuoE,SAAS7nE,KAAKsf,GAAS,EACpC2oD,EAAYv8D,IAAItV,EAAEmJ,KAAOka,E,CAE3Bna,KAAKuoE,SAASpuD,GAAOmtD,OAAS,EAC9BtnE,KAAKuoE,SAASpuD,GAAOgzB,OAAS,EAAA5c,OAAO+K,UAAUxkC,E,CAIjD,IAAK,IAAIA,EAAI,EAAGA,EAAIkJ,KAAKuoE,SAASlvE,OAAQvC,IACnCkJ,KAAKuoE,SAASzxE,GAAGq2C,SACpBntC,KAAKioE,iBAAiBvnE,KAAK5J,GAC3BkJ,KAAKmoE,eAAeznE,KAAKmoE,EAAgB/xE,KAK7C,IAAKk3B,EAAMX,OACT,MAAM,IAAI7uB,MAAM,wCAElB,IAAK,MAAM1H,KAAKk3B,EAAMX,OAAQ,CAC5B,GAAIs7C,EAAY/hC,IAAI9vC,EAAEmJ,MACpB,MAAM,IAAIzB,MAAM,2BAA2B1H,EAAEmJ,QAE/C,MAAM6oE,EAAe9oE,KAAKuoE,SAAS7nE,KAAK,IAAI2mE,EAAMvwE,IAAM,EACxD6xE,EAAYv8D,IAAItV,EAAEmJ,KAAO6oE,GACzB9oE,KAAKooE,kBAAkB1nE,KAAKooE,GAC5B9oE,KAAKsoE,gBAAgB5nE,KAAK5J,EAAEmJ,K,CAI9B,IAAK+tB,EAAMv1B,KACT,MAAM,IAAI+F,MAAM,sCAElB,IAAK,MAAMwqE,KAAah7C,EAAMv1B,KAAM,CAClC,IAAKuwE,EAAU/oE,KAEb,IAAK,IAAIgpE,EAAO,GAAIA,IAAQ,CAC1B,MAAMhpE,EAAO,WAAW+oE,EAAUz7C,UAAU07C,IAC5C,IAAKL,EAAahiC,IAAI3mC,GAAO,CAC3B+oE,EAAU/oE,KAAOA,EACjB,K,EAKN,GAAI2oE,EAAahiC,IAAIoiC,EAAU/oE,MAC7B,MAAM,IAAIzB,MAAM,yBAAyBwqE,EAAU/oE,QAErD,MAAM6oE,EAAe9oE,KAAKwoE,OAAO9nE,KAAK,IAAI+mE,EAAKuB,IAAc,EAC7DJ,EAAax8D,IAAI48D,EAAU/oE,KAAM6oE,E,CAInC,IAAK,IAAIhyE,EAAI,EAAGA,EAAIkJ,KAAKwoE,OAAOnvE,OAAQvC,IAAK,CAC3C,MAAM2B,EAAOuH,KAAKwoE,OAAO1xE,GACnBkyE,EAAYh7C,EAAMv1B,KAAK3B,GAC7B,IAAKkyE,EAAU37C,OACb,MAAM,IAAI7uB,MAAM,4BAA4BwqE,EAAU/oE,QAExD,IAAK,MAAMotB,KAAU27C,EAAU37C,OAAQ,CACrC,IAAI67C,EAAYP,EAAY7jE,IAAIuoB,GAOhC,QANyB,IAAd67C,IACTA,EAAYlpE,KAAKuoE,SAAS7nE,KAAK,IAAI2mE,GAAW,EAC9CsB,EAAYv8D,IAAIihB,EAAQ67C,IAE1BzwE,EAAKw3D,QAAQvvD,KAAKwoE,QAEqBpvD,IAAnC9Z,KAAKuoE,SAASW,GAAW5B,MAC3B,MAAM,IAAI9oE,MAAM,4CAA4C0qE,KAM9D,GAJAlpE,KAAKuoE,SAASW,GAAW5B,MAAQxwE,EAIR,aAArBkyE,EAAUz7C,OAAuB,CACnC,IAAKy7C,EAAU17C,WAA4C,IAA/B07C,EAAU17C,UAAUj0B,SAAiB2vE,EAAU17C,UAAU,GAAGv3B,EACtF,MAAM,IAAIyI,MAAM,uFAElB,IAAKwqE,EAAU37C,QAAsC,IAA5B27C,EAAU37C,OAAOh0B,OACxC,MAAM,IAAImF,MAAM,4EAElB/F,EAAKw3D,QAAQ5rD,MACb5L,EAAKmvE,aAAc,EAEnB5nE,KAAKuoE,SAASW,GAAW5B,OAAS,EAClCtnE,KAAKuoE,SAASW,GAAW/7B,OAAS,EAAA5c,OAAO+K,UAAU0tC,EAAU17C,UAAU,GAAGv3B,E,GAMhF,IAAK,IAAIe,EAAI,EAAGA,EAAIkJ,KAAKwoE,OAAOnvE,OAAQvC,IAAK,CAC3C,MAAM2B,EAAOuH,KAAKwoE,OAAO1xE,GACnBkyE,EAAYh7C,EAAMv1B,KAAK3B,GAE7B,IAAKkyE,EAAU57C,MACb,MAAM,IAAI5uB,MAAM,2BAA2BwqE,EAAU/oE,QAEvD,IAAK,MAAMmtB,KAAS47C,EAAU57C,MAAO,CACnC,MAAM87C,EAAYP,EAAY7jE,IAAIsoB,GAClC,QAAyB,IAAd87C,EAA2B,CAEpC,GAAc,KAAV97C,GAA2C,IAA3B47C,EAAU57C,MAAM/zB,QAAqC,WAArB2vE,EAAUz7C,OAC5D,SAEF,MAAM,IAAI/uB,MAAM,uBAAuB4uB,gBAAoB47C,EAAU/oE,O,CAEvExH,EAAK0zC,OAAOzrC,KAAKwoE,GAEjBlpE,KAAKuoE,SAASW,GAAW3B,IAAI7mE,KAAK5J,E,EAItC,OAAO,CACT,CAEQ4xE,wBAAwB16C,G,UAC9B,MAAM26C,EAAc,IAAItvC,IACxBr5B,KAAKuoE,SAAW,GAEhBvoE,KAAKioE,iBAAmB,GACxBjoE,KAAKmoE,eAAiB,GAEtBnoE,KAAKooE,kBAAoB,GACzBpoE,KAAKsoE,gBAAkB,GAEvBtoE,KAAKwoE,OAAS,GAEd,MAAMI,EAAe,IAAIvvC,IAGnBwvC,EAAkB,GACxB,IAAK,IAAI/xE,EAAI,EAAGA,EAAIk3B,EAAMm7C,eAAgBryE,IAAK,CAC7C,MAAMsyE,EAAYp7C,EAAMme,OAAOr1C,GAC/B,GAAI6xE,EAAY/hC,IAAIwiC,GAClB,MAAM,IAAI5qE,MAAM,0BAA0B4qE,KAG5C,IAAK,IAAI3yE,EAAI,EAAGA,EAAIu3B,EAAMq7C,iBAAkB5yE,IAC1C,IAAqB,QAAjB,EAAAu3B,EAAMs7C,SAAS7yE,UAAE,eAAEwJ,UAAWmpE,EAAW,CAC3C,MAAMppD,EAAQ,IAAIqnD,EAElB,IAD2C,QAAzB,EAAiB,QAAjB,EAAAr5C,EAAMs7C,SAAS7yE,UAAE,eAAEk0B,cAAM,eAAE4+C,eAC3BzwC,EAAO0wC,cAAcC,YACrC,MAAM,IAAIjrE,MAAM,0CAElB,MAAMgwB,EAAYR,EAAMs7C,SAAS7yE,GAAIk0B,OAAQ3K,MAAM,IAAI8Y,EAAO4wC,oBACxD/+C,EAAO,EAAAsuB,UAAUC,wBAAwB1qB,EAAUgC,YACnDC,EAAQjC,EAAUiC,QAClB/B,EAAO,GACb,IAAK,IAAItyB,EAAI,EAAGA,EAAIq0B,EAAMk5C,YAAcvtE,IACtCsyB,EAAKhuB,KAAK,EAAAu6B,SAASC,aAAazK,EAAMZ,IAAIzzB,GAAI4jB,QAASgQ,aAEzDhQ,EAAM2K,KAAO,CAAC8F,MAAO,CAAC/B,QAAO4B,WAAY3F,GACzC,MAAMm+C,EAAe9oE,KAAKuoE,SAAS7nE,KAAKsf,GAAS,EACjD2oD,EAAYv8D,IAAIg9D,EAAWN,GAC3BD,EAAgBnoE,KAAK0oE,E,EAK3B,IAAK,IAAItyE,EAAI,EAAGA,EAAIk3B,EAAM47C,qBAAsB9yE,IAAK,CACnD,MAAMy3B,EAAcP,EAAM4pC,aAAa9gE,GACvC,IAAIqjB,EAAQwuD,EAAY7jE,IAAIypB,EAAYtuB,QACxC,QAAc6Z,IAAVK,EAAqB,CACvB,MAAM6F,EAAQ,IAAIqnD,EACZ34C,EAAO,EAAAuqB,UAAU4wB,wBAAwBt7C,GACzC5D,EAAO,EAAAsuB,UAAUC,wBAAwB3qB,EAAYW,YAC3DlP,EAAM2K,KAAO,CAAC8F,MAAO,CAAC/B,QAAO4B,WAAY3F,GACzCxQ,EAAQna,KAAKuoE,SAAS7nE,KAAKsf,GAAS,EACpC2oD,EAAYv8D,IAAImiB,EAAYtuB,OAASka,E,CAEvCna,KAAKuoE,SAASpuD,GAAOmtD,OAAS,EAC9BtnE,KAAKuoE,SAASpuD,GAAOgzB,OAAS,EAAA5c,OAAOgL,cAAchN,E,CAIrD,IAAK,IAAIz3B,EAAI,EAAGA,EAAIkJ,KAAKuoE,SAASlvE,OAAQvC,IACnCkJ,KAAKuoE,SAASzxE,GAAGq2C,SACpBntC,KAAKioE,iBAAiBvnE,KAAK5J,GAC3BkJ,KAAKmoE,eAAeznE,KAAKmoE,EAAgB/xE,KAK7C,IAAK,IAAIA,EAAI,EAAGA,EAAIk3B,EAAM87C,gBAAiBhzE,IAAK,CAC9C,MAAMizE,EAAa/7C,EAAMiiC,QAAQn5D,GACjC,GAAI6xE,EAAY/hC,IAAImjC,GAClB,MAAM,IAAIvrE,MAAM,2BAA2BurE,KAE7C,MAAMjB,EAAe9oE,KAAKuoE,SAAS7nE,KAAK,IAAI2mE,GAAW,EACvDsB,EAAYv8D,IAAI29D,EAAYjB,GAC5B9oE,KAAKooE,kBAAkB1nE,KAAKooE,GAC5B9oE,KAAKsoE,gBAAgB5nE,KAAKqpE,E,CAI5B,IAAK/7C,EAAMoY,MACT,MAAM,IAAI5nC,MAAM,sCAElB,IAAK,IAAI1H,EAAI,EAAGA,EAAIk3B,EAAMg8C,cAAelzE,IAAK,CAC5C,MAAMkyE,EAAYh7C,EAAMoY,MAAMtvC,GAC9B,IAAImJ,EAAO+oE,EAAW/oE,OACtB,IAAKA,EAEH,IAAK,IAAIgpE,EAAO,EACdhpE,EAAO,WAAW+oE,EAAWz7C,YAAY07C,IACpCL,EAAahiC,IAAI3mC,GAFJgpE,KAStB,GAAIL,EAAahiC,IAAI3mC,GACnB,MAAM,IAAIzB,MAAM,yBAAyByB,KAE3C,MAAM6oE,EAAe9oE,KAAKwoE,OAAO9nE,KAAK,IAAI+mE,EAAKuB,EAAY/oE,IAAS,EACpE2oE,EAAax8D,IAAInM,EAAM6oE,E,CAIzB,IAAK,IAAIhyE,EAAI,EAAGA,EAAIkJ,KAAKwoE,OAAOnvE,OAAQvC,IAAK,CAC3C,MAAM2B,EAAOuH,KAAKwoE,OAAO1xE,GACnBkyE,EAAYh7C,EAAMoY,MAAMtvC,GAC9B,GAAiB,MAAbkyE,EACF,MAAM,IAAIxqE,MAAM,2BAA2B1H,KAE7C,GAAmC,KAA/BkyE,aAAS,EAATA,EAAWc,iBACb,MAAM,IAAItrE,MAAM,4BAA4BwqE,EAAU/oE,QAExD,IAAK,IAAIxJ,EAAI,EAAGA,GAAIuyE,aAAS,EAATA,EAAWc,iBAAiBrzE,IAAK,CACnD,MAAM42B,EAAS27C,aAAS,EAATA,EAAW/Y,QAAQx5D,GAClC,IAAIyyE,EAAYP,EAAY7jE,IAAIuoB,GAOhC,QANyB,IAAd67C,IACTA,EAAYlpE,KAAKuoE,SAAS7nE,KAAK,IAAI2mE,GAAW,EAC9CsB,EAAYv8D,IAAIihB,EAAQ67C,IAE1BzwE,EAAKw3D,QAAQvvD,KAAKwoE,QAEqBpvD,IAAnC9Z,KAAKuoE,SAASW,GAAW5B,MAC3B,MAAM,IAAI9oE,MAAM,4CAA4C0qE,KAM9D,GAJAlpE,KAAKuoE,SAASW,GAAW5B,MAAQxwE,EAIN,aAAvBkyE,EAAUz7C,SAAyB,CACrC,GAAqC,IAAjCy7C,EAAUiB,qBAA6BjB,EAAU7vC,WAAW,GAAIpjC,IAClE,MAAM,IAAIyI,MAAM,uFAElB,GAAkC,IAA9BwqE,EAAUc,gBACZ,MAAM,IAAItrE,MAAM,4EAElB/F,EAAKw3D,QAAQ5rD,MACb5L,EAAKmvE,aAAc,EAEnB5nE,KAAKuoE,SAASW,GAAW5B,OAAS,EAClCtnE,KAAKuoE,SAASW,GAAW/7B,OAAS,EAAA5c,OAAOgL,cAAcytC,EAAU7vC,WAAW,GAAIpjC,I,GAMtF,IAAK,IAAIe,EAAI,EAAGA,EAAIkJ,KAAKwoE,OAAOnvE,OAAQvC,IAAK,CAC3C,MAAM2B,EAAOuH,KAAKwoE,OAAO1xE,GACnBkyE,EAAYh7C,EAAMoY,MAAMtvC,GAE9B,GAAiC,IAA7BkyE,EAAUG,eACZ,MAAM,IAAI3qE,MAAM,2BAA2BwqE,EAAU/oE,QAEvD,IAAK,IAAIxJ,EAAI,EAAGA,EAAIuyE,EAAUG,eAAiB1yE,IAAK,CAClD,MAAM22B,EAAQ47C,EAAU78B,OAAO11C,GACzByyE,EAAYP,EAAY7jE,IAAIsoB,GAClC,QAAyB,IAAd87C,EACT,MAAM,IAAI1qE,MAAM,uBAAuB4uB,gBAAoB47C,EAAW/oE,UAExExH,EAAK0zC,OAAOzrC,KAAKwoE,GAEjBlpE,KAAKuoE,SAASW,GAAW3B,IAAI7mE,KAAK5J,E,EAGxC,CAEQkxE,iBAEN,MAAMkC,EAAwB,IAAI5jC,IAClCtmC,KAAKioE,iBAAiBllE,SAAQjM,IACfkJ,KAAKuoE,SAASzxE,GACtBywE,IAAIxkE,SAAQtM,IACfyzE,EAAS7jE,IAAI5P,EAAE,GACf,IAIJ,MAAM0zE,EAAah+D,MAAMunB,KAAKw2C,GACxBE,EAAa,IAAIj+D,MAAcnM,KAAKwoE,OAAOnvE,QAAQigD,KAAK,SAE9D,KAAO6wB,EAAW9wE,OAAS,GAAG,CAC5B,MAAMgxE,EAAYF,EAAW9lE,MAEC,SAA1B+lE,EAAWC,GACbD,EAAWC,GAAa,SAGxBF,EAAWzpE,KAAK2pE,GAChBD,EAAWC,GAAa,OAExBrqE,KAAKwoE,OAAO6B,GAAWpa,QAAQltD,SAASunE,IACtC,MAAMpnE,EAAOlD,KAAKuoE,SAAS+B,GAC3B,QAA2B,IAAhBpnE,EAAKiqC,OACd,MAAM,IAAI3uC,MAAM,0CAElB,GAAI0E,EAAKokE,QAAU+C,EACjB,MAAM,IAAI7rE,MAAM,iFAElB0E,EAAKqkE,IAAIxkE,SAASwnE,IAEhB,GAAwC,SAApCH,EAAWG,GACb,MAAM,IAAI/rE,MAAM,yBAG2B,UAApC4rE,EAAWG,IAClBJ,EAAWzpE,KAAK6pE,E,GAElB,I,CAIV,CAEQxC,eAAeF,GAErB7nE,KAAKwqE,yBACLxqE,KAAKyqE,wBACLzqE,KAAK0qE,0BAED7C,GACFA,EAAiBE,eAAe/nE,MAIlCA,KAAK2qE,eACP,CAQAA,gBACE,IAAIzwD,EAAS,EAEb,IAAK,IAAIpjB,EAAI,EAAGA,EAAIkJ,KAAKwoE,OAAOnvE,OAAQvC,IACjCkJ,KAAKwoE,OAAO1xE,GAAG8wE,YAWhB1tD,EAAS,IAEXla,KAAKwoE,OAAO1xE,GAAGq1C,OAAOppC,SAAQid,IAC5B,MAAM4qD,EAAM5qE,KAAKuoE,SAASvoD,GAAOunD,IAAIjtE,QAAQxD,EAAIojB,IACpC,IAAT0wD,IACF5qE,KAAKuoE,SAASvoD,GAAOunD,IAAIqD,GAAO9zE,E,IAGpCkJ,KAAKwoE,OAAO1xE,GAAGm5D,QAAQltD,SAAQid,IACzBhgB,KAAKuoE,SAASvoD,GAAOsnD,OAAStnE,KAAKuoE,SAASvoD,GAAOsnD,QAAWxwE,EAAIojB,IACpEla,KAAKuoE,SAASvoD,GAAOsnD,MAASxwE,E,MAnBlCojB,IAEAla,KAAKwoE,OAAO1xE,GAAGm5D,QAAQltD,SAAQ6nE,IAC7B5qE,KAAKuoE,SAASqC,GAAKtD,OAAS,CAAC,IAE/BtnE,KAAKwoE,OAAO3lE,OAAO/L,EAAG,GACtBA,KAkBJojB,EAAS,EAET,IAAK,IAAIpjB,EAAI,EAAGA,EAAIkJ,KAAKuoE,SAASlvE,OAAQvC,IAExC,IAA+B,IAA3BkJ,KAAKuoE,SAASzxE,GAAG48B,OAA+D,IAAhD1zB,KAAKooE,kBAAkB9tE,QAAQxD,EAAIojB,IAMvE,GAAIA,EAAS,EAAG,CACd,IAAI0wD,GAAO,OAGmB9wD,IAA1B9Z,KAAKuoE,SAASzxE,GAAG48B,OAAiD,IAA3B1zB,KAAKuoE,SAASzxE,GAAG48B,MAC1Dk3C,EAAM5qE,KAAKwoE,OAAOxoE,KAAKuoE,SAASzxE,GAAG48B,MAAMu8B,QAAQ31D,QAAQxD,EAAIojB,IAChD,IAAT0wD,IACF5qE,KAAKwoE,OAAOxoE,KAAKuoE,SAASzxE,GAAG48B,MAAMu8B,QAAQ2a,GAAO9zE,KAIpD8zE,EAAM5qE,KAAKioE,iBAAiB3tE,QAAQxD,EAAIojB,IAC3B,IAAT0wD,IACF5qE,KAAKioE,iBAAiB2C,GAAO9zE,IAKjCkJ,KAAKuoE,SAASzxE,GAAGkiD,GAAGj2C,SAAQtK,IAC1BmyE,EAAM5qE,KAAKwoE,OAAO/vE,GAAM0zC,OAAO7xC,QAAQxD,EAAIojB,IAC9B,IAAT0wD,IACF5qE,KAAKwoE,OAAO/vE,GAAM0zC,OAAOy+B,GAAO9zE,E,IAGD,IAA/BkJ,KAAKuoE,SAASzxE,GAAGkiD,GAAG3/C,SAEtBuxE,EAAM5qE,KAAKooE,kBAAkB9tE,QAAQxD,EAAIojB,IAC5B,IAAT0wD,IACF5qE,KAAKooE,kBAAkBwC,GAAO9zE,G,OAjClCojB,IACAla,KAAKuoE,SAAS1lE,OAAO/L,EAAG,GACxBA,GAoCN,CAOQ+zE,WAAWR,GACjB,MAAM5xE,EAAOuH,KAAKwoE,OAAO6B,GACzB,GAAI5xE,EAAKw3D,QAAQ52D,OAAS,EACxB,IAAK,IAAIvC,EAAI,EAAGA,EAAI2B,EAAKw3D,QAAQ52D,OAAQvC,IACvC,GAAIkJ,KAAKuoE,SAAS9vE,EAAKw3D,QAAQn5D,IAAIkiD,GAAG3/C,OAAS,EAC7C,MAAM,IAAImF,MAAM,uFAMtB/F,EAAKmvE,aAAc,EACnB,MAAMkD,EAAkBryE,EAAK0zC,OAAO,GAC9B4+B,EAAmBtyE,EAAKw3D,QAAQ,GAChC+a,EAAuBhrE,KAAKuoE,SAASwC,GAAkB/xB,GAGvDiyB,EAAWjrE,KAAKuoE,SAASuC,GAAiB9xB,GAAG1+C,QAAQ+vE,GAE3D,IAAkB,IAAdY,EACF,MAAM,IAAIzsE,MAAM,yEAElBwB,KAAKuoE,SAASuC,GAAiB9xB,GAAGn2C,OAAOooE,EAAU,GAGnDjrE,KAAKuoE,SAASwC,GAAkBxD,IAAM,GAGtC,MAAMptD,EAAQna,KAAKooE,kBAAkB9tE,QAAQywE,GAM7C,IALe,IAAX5wD,IACFna,KAAKooE,kBAAkBjuD,GAAS2wD,GAI9BE,GAAwBA,EAAqB3xE,OAAS,EACxD,IAAK,MAAMgxE,KAAaW,EAAsB,CAC5C,MAAME,EAAelrE,KAAKwoE,OAAO6B,GAAWl+B,OAAO7xC,QAAQywE,GAE3D,IAAsB,IAAlBG,EACF,MAAM,IAAI1sE,MAAM,4EAElBwB,KAAKwoE,OAAO6B,GAAWl+B,OAAO++B,GAAgBJ,EAC9C9qE,KAAKuoE,SAASuC,GAAiB9xB,GAAGt4C,KAAK2pE,E,CAG7C,CAEAI,wBACE,IAAIJ,EAAY,EAChB,IAAK,MAAM5xE,KAAQuH,KAAKwoE,OAAQ,CAE9B,GAAoB,YAAhB/vE,EAAK80B,OAAsB,CAE7B,GAA2B,IAAvB90B,EAAK0zC,OAAO9yC,OACd,MAAM,IAAImF,MAAM,iDAElB,GAA4B,IAAxB/F,EAAKw3D,QAAQ52D,QAAwC,IAAxBZ,EAAKw3D,QAAQ52D,OAC5C,MAAM,IAAImF,MAAM,wDAGlB,GAA4B,IAAxB/F,EAAKw3D,QAAQ52D,QAA8D,IAA9C2G,KAAKuoE,SAAS9vE,EAAKw3D,QAAQ,IAAIsX,IAAIluE,OAClE,MAAM,IAAImF,MAAM,yEAElBwB,KAAK6qE,WAAWR,E,CAElBA,G,CAEJ,CAEAG,yBACE,IAAIH,EAAY,EAChB,IAAK,MAAM5xE,KAAQuH,KAAKwoE,OAEF,aAAhB/vE,EAAK80B,QACPvtB,KAAK6qE,WAAWR,GAElBA,GAEJ,CAEAc,aAAa/0E,GACX,OAAQA,EAAEm3B,QAER,IAAK,OACL,IAAK,UACL,IAAK,OACH,OAAO,EACT,QACE,OAAO,EAEb,CAEAm9C,0BACE,IAAK,MAAMjyE,KAAQuH,KAAKwoE,OACtB,GAAoB,SAAhB/vE,EAAK80B,OAAmB,CAC1B,MAAM4I,EAAOn2B,KAAKuoE,SAAS9vE,EAAKw3D,QAAQ,IAAIsX,IAC5C,GAAoB,IAAhBpxC,EAAK98B,QAAgB2G,KAAKmrE,aAAanrE,KAAKwoE,OAAOryC,EAAK,KAAM,CAChE,MAAMi1C,EAAQprE,KAAKwoE,OAAOryC,EAAK,IAC/B,GAAqB,SAAjBi1C,EAAM79C,OACR,GAA4B,IAAxB69C,EAAMj/B,OAAO9yC,OACf,IACEZ,EAAK0gC,WAAW/sB,IACZ,oBAAqB,SACrB,CAACg/D,EAAMjyC,WAAWO,SAAS,OAAQ0xC,EAAMjyC,WAAWO,SAAS,Q,CACjE,MAAOhjC,GACP+B,EAAK0gC,WAAW/sB,IAAI,oBAAqB,SAAU,CAAC,EAAA61C,SAAU,EAAAC,U,KAE3D,MACHkpB,EAAMj/B,OAAO9yC,QAAU,QAA+CygB,IAA1C9Z,KAAKuoE,SAAS6C,EAAMj/B,OAAO,IAAIgB,aACjBrzB,IAA1C9Z,KAAKuoE,SAAS6C,EAAMj/B,OAAO,IAAIgB,QAMjC,SALA10C,EAAK0gC,WAAW/sB,IAAI,oBAAqB,SAAU,CACjDpM,KAAKuoE,SAAS6C,EAAMj/B,OAAO,IAAIgB,OAAQxe,UAAU,GAAI3uB,KAAKuoE,SAAS6C,EAAMj/B,OAAO,IAAIgB,OAAQxe,UAAU,I,CAO5Gl2B,EAAK0gC,WAAW/sB,IAAI,aAAc,SAAWg/D,EAAY,QACzDprE,KAAK6qE,WAAW10C,EAAK,G,EAI7B,E,8GC7pBF,MAAMk1C,EAAiB,CACrB9tC,QAAS,IACT+tC,KAAM,IACN9tC,QAAS,IACTxjC,MAAO,IACPuxE,MAAO,KAGHC,EAA+E,CACnF,KAAU,IAtCZ,MACEpwE,IAAIqwE,EAA4BC,EAAkBC,GAElD,GAoCA,QAAa,IAlCf,MACEvwE,IAAIwwE,EAA2BC,EAAiBC,GAE9C/xE,QAAQqB,IAAI,GAAG4E,KAAK+rE,MAAMH,MAAaE,EAAW,QAAaA,EAAW,QAAa,KAAKD,IAC9F,CAEQE,MAAMH,GACZ,OAAQA,GACN,IAAK,UACH,MAAO,gBACT,IAAK,OACH,MAAO,aACT,IAAK,UACH,MAAO,gBACT,IAAK,QACH,MAAO,gBACT,IAAK,QACH,MAAO,cACT,QACE,MAAM,IAAIptE,MAAM,yBAAyBotE,KAE/C,IAeII,EAAwB,CAC5BC,SAAU,UACVC,gBAAiB,UACjBC,aAAa,EACbC,mBAAmB,GAErB,IAAIC,EAC0D,CAAC,GAAML,GAMrE,SAAS5wE,EACLkxE,EAA8BC,EAAeC,EAAsBC,GACrE,QAAa3yD,IAATyyD,EAEF,OAkB6BT,EAlBEQ,EAmB1B,CACL/uC,QAASniC,EAAImiC,QAAQliC,KAAK,KAAMywE,GAChCR,KAAMlwE,EAAIkwE,KAAKjwE,KAAK,KAAMywE,GAC1BtuC,QAASpiC,EAAIoiC,QAAQniC,KAAK,KAAMywE,GAChC9xE,MAAOoB,EAAIpB,MAAMqB,KAAK,KAAMywE,GAC5BP,MAAOnwE,EAAImwE,MAAMlwE,KAAK,KAAMywE,IAvBvB,QAAahyD,IAAT0yD,EAETE,EAAYJ,EAAyBC,QAChC,GAAoB,iBAATC,QAA8B1yD,IAAT2yD,EAErCC,EAAYJ,EAAyBC,QAChC,GAAoB,iBAATC,QAA8B1yD,IAAT2yD,EAErCC,EAAYJ,EAAyBE,EAAM,EAAGD,OACzC,IAAoB,iBAATC,GAAqC,iBAATC,EAI5C,MAAM,IAAI1sD,UAAU,kBAFpB2sD,EAAYJ,EAAyBE,EAAMC,EAAMF,E,CAMrD,IAAiCT,CAFjC,CAeA,SAASY,EAAYd,EAA2BC,EAAiBr3C,EAAes3C,GAC9E,MAAMvR,EAAS8R,EAAkBP,GAAY,KAAOO,EAAkB,IAClEhB,EAAeO,GAAYP,EAAe9Q,EAAO2R,mBAIjD3R,EAAO4R,cACTN,EAAU,IAAG,IAAIrjE,MAAOmkE,iBAAiBd,KAGvCtR,EAAO6R,kBAIXZ,EAAoBjR,EAAO0R,UAAU7wE,IAAIwwE,EAAUC,EAASC,GAC9D,EAGA,SAAU1wE,GA2BR,SAAgB27B,EAAMwjC,GACpB8R,EAAoB,CAAC,EACrBjgE,EAAI,GAAImuD,GAAU,CAAC,EACrB,CACA,SAAgBnuD,EAAI0/D,EAAkBvR,GACpC,GAAiB,MAAbuR,EACF/0C,EAAMwjC,OACD,CACL,MAAMqS,EAAiBP,EAAkBP,IAAaE,EACtDK,EAAkBP,GAAY,CAC5BG,SAAU1R,EAAO0R,UAAYW,EAAeX,SAC5CC,gBAAiB3R,EAAO2R,iBAAmBU,EAAeV,gBAC1DC,iBAAqCryD,IAAvBygD,EAAO4R,YAA6BS,EAAeT,YAAc5R,EAAO4R,YACtFC,uBAAiDtyD,IAA7BygD,EAAO6R,kBAAmCQ,EAAeR,kBACf7R,EAAO6R,kB,CAK3E,CA3CgB,EAAA7uC,QAAhB,SAAwB+uC,EAAcC,GACpCnxE,EAAI,UAAWkxE,EAAMC,EACvB,EAGgB,EAAAjB,KAAhB,SAAqBgB,EAAcC,GACjCnxE,EAAI,OAAQkxE,EAAMC,EACpB,EAGgB,EAAA/uC,QAAhB,SAAwB8uC,EAAcC,GACpCnxE,EAAI,UAAWkxE,EAAMC,EACvB,EAGgB,EAAAvyE,MAAhB,SAAsBsyE,EAAcC,GAClCnxE,EAAI,QAASkxE,EAAMC,EACrB,EAGgB,EAAAhB,MAAhB,SAAsBe,EAAcC,GAClCnxE,EAAI,QAASkxE,EAAMC,EACrB,EAEgB,EAAAx1C,MAAK,EAIL,EAAA3qB,IAAG,EAiBH,EAAAkxB,WAAhB,SAA2B5F,GACzB,MAAM6iC,EAAwB,CAAC,EAC3B7iC,EAAIm1C,WACNtS,EAAO2R,gBAAkBx0C,EAAIm1C,UAE/BzgE,EAAI,GAAImuD,EACV,CACD,CAvDD,CAAUn/D,IAAAA,EAAG,KA0DA,EAAAiiC,OAAiBjiC,EAkB9B,MAAM0xE,EACJ//C,YACW++C,EAAyC7rE,EAAqB8sE,EAC7DC,EAAsDC,EAA2BjzD,GADlF,KAAA8xD,SAAAA,EAAyC,KAAA7rE,KAAAA,EAAqB,KAAA8sE,UAAAA,EAC7D,KAAAC,YAAAA,EAAsD,KAAAC,MAAAA,EAA2B,KAAAjzD,IAAAA,CAAqB,CAElHe,MACE,OAAO/a,KAAKgtE,YAAYhtE,KAC1B,CAEAo3B,mBACE,QAAiBtd,IAAb9Z,KAAKga,UAAoCF,IAAf9Z,KAAKitE,MACjC,MAAM,IAAIzuE,MAAM,wBAGhB,OADAwB,KAAKga,IAAI8pD,WACF9jE,KAAKga,IAAIkzD,uBAAuBltE,KAAKitE,MAEhD,EAGF,MAAME,EACJpgD,YACW++C,EAAyC7rE,EAAqB8sE,EAA0BK,GAAxF,KAAAtB,SAAAA,EAAyC,KAAA7rE,KAAAA,EAAqB,KAAA8sE,UAAAA,EAA0B,KAAAK,QAAAA,CAAkB,EAGvH,iBACEhzC,cAAcmgC,GACZ,YAAezgD,IAAXygD,EACK,IAAIv6D,KAEN,IAAIA,KAAKu6D,EAAO8S,gBAAiB9S,EAAO+S,eAAgB/S,EAAOgT,4BACxE,CAEA,YAAoBF,EAA0BC,EAAyBC,GA+H/D,KAAAC,UAAW,EASX,KAAAC,cAAgB,EAvItBztE,KAAKwtE,UAAW,EAChBxtE,KAAK0tE,sBAAuC5zD,IAApBuzD,EAAgC,IAAQA,EAChErtE,KAAK2tE,qBAAqC7zD,IAAnBwzD,EAA+B,GAAKA,EAC3DttE,KAAK4tE,kCAA+D9zD,IAAhCyzD,EAA4C,IAAOA,CACzF,CAGAzyD,QACE9a,KAAKwtE,UAAW,EAChBxtE,KAAK6tE,cAAgB,GACrB7tE,KAAK8tE,YAAa,IAAA5sE,OAClBlB,KAAKytE,cAAgB,CACvB,CAGAM,OAEE,IADA/tE,KAAKwtE,UAAW,EACTxtE,KAAKytE,cAAgBztE,KAAK6tE,cAAcx0E,OAAQ2G,KAAKytE,gBAC1DztE,KAAKguE,YAAYhuE,KAAK6tE,cAAc7tE,KAAKytE,eAE7C,CAMArZ,MAAS0X,EAAkC7rE,EAAcwhD,EAA4BznC,GAEnF,MAAMo6C,EAAQp0D,KAAKwtE,SAAWxtE,KAAK2vB,MAAMm8C,EAAU7rE,EAAM+Z,QAAOF,EAChE,IAAIm0D,GAAY,EAEhB,MAAMzmD,EAAMi6B,IAGZ,GAAIj6B,GAA2C,mBAA5BA,EAAmBjV,KAEpC,OADA07D,GAAY,EACL,IAAI32E,SAAW,CAACqb,EAAS0H,KAC7BmN,EACIjV,MACG6kB,MAAMpX,IACAo0C,SACIA,EAAMr5C,MAEdpI,EAAQqN,EAAM,IAEhBoX,MAAM82C,IACA9Z,SACIA,EAAMr5C,MAEdV,EAAO6zD,EAAO,GACd,IAGd,IAAKD,GAAa7Z,EAAO,CACvB,MAAM+Z,EAAW/Z,EAAMr5C,MACvB,GAAIozD,GAAqC,mBAAlBA,EAAS57D,KAC9B,OAAO,IAAIjb,SAAW,CAACqb,EAAS0H,KAC9B,EAAW9H,MACP,KACEI,EAAQ6U,EAAI,IAEb0mD,IACC7zD,EAAO6zD,EAAO,GACd,G,CAIZ,OAAO1mD,CACT,CAGAmI,MAAMm8C,EAAkC7rE,EAAc+Z,GACpD,IAAKha,KAAKwtE,SACR,MAAM,IAAIhvE,MAAM,+BAElB,QAAYsb,IAARE,EAAmB,CACrB,MAAM+yD,GAAY,IAAA7rE,OAElB,OADAlB,KAAKilE,MAAM8H,GACJ,IAAID,EAAMhB,EAAU7rE,EAAM8sE,GAAWr2E,GAAKsJ,KAAKouE,QAAQ13E,I,CACzD,CACL,MAAMu2E,EAAoBjzD,EAAIupD,aAC9B,OAAO,IAAIuJ,EAAMhB,EAAU7rE,EAAM,GAAGm3B,MAAM1gC,GAAKsJ,KAAK+a,IAAIrkB,IAAIu2E,EAAOjzD,E,CAEvE,CAGQod,UAAUg9B,GAChB,MAAMgZ,QAAwBhZ,EAAMia,aAChCruE,KAAK6tE,cAAcx0E,OAAS2G,KAAK0tE,mBACnC1tE,KAAK6tE,cAAcntE,KAAK,IAAIysE,EAAY/Y,EAAM0X,SAAU1X,EAAMn0D,KAAMm0D,EAAM2Y,UAAWK,IACrFptE,KAAKilE,MAAMmI,GAEf,CAEQgB,QAAQha,GACd,MAAMgZ,GAAkB,IAAAlsE,OACpBlB,KAAK6tE,cAAcx0E,OAAS2G,KAAK0tE,mBACnC1tE,KAAK6tE,cAAcntE,KAAK,IAAIysE,EAAY/Y,EAAM0X,SAAU1X,EAAMn0D,KAAMm0D,EAAM2Y,UAAWK,IACrFptE,KAAKilE,MAAMmI,GAEf,CAEQY,YAAY5Z,GAClB,EAAA/2B,OAAOE,QACH,YAAY62B,EAAM0X,WAClB,IAAI1X,EAAMgZ,QAAUhZ,EAAM2Y,WAAWuB,QAAQ,kBAAkBla,EAAMn0D,YAAYm0D,EAAMgZ,QAAQkB,QAAQ,KAC7G,CAEQrJ,MAAMsJ,GACZ,GAAIvuE,KAAK6tE,cAAcx0E,OAAS2G,KAAKytE,eAAiBztE,KAAK2tE,iBACvDY,EAAcvuE,KAAK8tE,YAAc9tE,KAAK4tE,6BAA8B,CAGtE,IAAK,MAAMY,EAAkBxuE,KAAKytE,cAAeztE,KAAKytE,cAAgBe,EAAkBxuE,KAAK2tE,iBACxF3tE,KAAKytE,cAAgBztE,KAAK6tE,cAAcx0E,OACxC2G,KAAKytE,gBACRztE,KAAKguE,YAAYhuE,KAAK6tE,cAAc7tE,KAAKytE,gBAG3CztE,KAAK8tE,YAAa,IAAA5sE,M,CAEtB,CAEIutE,cACF,OAAOzuE,KAAKwtE,QACd,GAgBW,EAAAtsE,IAA8B,oBAAhBhG,aAA+BA,YAAYgG,IAAO,IAAMhG,YAAYgG,MAAQsH,KAAKtH,G,8FC3b5G,gBACA,UAEA,UAEA,UACA,UAEA,IAAO43B,EAAS,EAAAC,YAAYC,aAAaC,IAEzC,cAEElM,cAAe,CAEf2hD,KAAKxyD,EAAiB2rD,EAAsC8G,GAC1D,IAAKA,EAEH,IAEE,YADA3uE,KAAK4uE,mBAAmB1yD,EAAK2rD,E,CAE7B,MAAOnxE,GACP,QAAoBojB,IAAhB60D,EACF,MAAMj4E,C,CAKZsJ,KAAK6uE,kBAAkB3yD,EAAK2rD,EAC9B,CAEQ+G,mBAAmB1yD,EAAiB2rD,GAC1C,MAAMiH,EAAa,EAAAvlD,KAAKkE,WAAWhxB,OAAOyf,GAE1C,GADkB,EAAA+e,SAASC,aAAa4zC,EAAWlhD,WACnC,EACd,MAAM,IAAIpvB,MAAM,8CAGlBwB,KAAK+uE,QACDD,EAAWphD,YAAYkL,KAAI9hC,IAAK,CAAE02B,OAAQ12B,EAAE02B,OAAkBkD,QAAS,EAAAuK,SAASC,aAAapkC,EAAE45B,aAEnG1wB,KAAKgvE,OAAS,EAAA9H,MAAMxzC,KAAKo7C,EAAW9gD,MAAQ65C,EAC9C,CAEQgH,kBAAkB3yD,EAAiB2rD,GACzC,MAAMtzD,EAAK,IAAI,EAAA06D,YAAYC,WAAWhzD,GAChCizD,EAAWr2C,EAAOs2C,iBAAiBC,0BAA0B96D,GAAI+6D,QAEvE,GADkB,EAAAr0C,SAASC,aAAai0C,EAASvhD,aACjC,EACd,MAAM,IAAIpvB,MAAM,8CAElBwB,KAAK+uE,QAAU,GACf,IAAK,IAAIj4E,EAAI,EAAGA,EAAIq4E,EAASI,oBAAqBz4E,IAAK,CACrD,MAAM04E,EAAUL,EAASzhD,YAAY52B,GACrCkJ,KAAK+uE,QAAQruE,KAAK,CAAC8sB,OAAQgiD,aAAO,EAAPA,EAAShiD,SAAoBkD,QAAS,EAAAuK,SAASC,aAAas0C,EAAQ9+C,Y,CAGjG1wB,KAAKgvE,OAAS,EAAA9H,MAAMxzC,KAAKy7C,EAASnhD,QAAU65C,EAC9C,CAGI75C,YACF,OAAOhuB,KAAKgvE,MACd,CAGIjX,aACF,OAAO/3D,KAAK+uE,OACd,E,4HCvDW,EAAAtsB,aACT,CAAC,UAAW,UAAW,QAAS,QAAS,OAAQ,SAAU,SAAU,SAC5D,EAAAgtB,UAAwC,CAAC,QAAS,QAAS,OAAQ,SAAU,SAAU,SACvF,EAAAC,YAA0C,CAAC,UAAW,U,4BCgCnE,SAASC,EAAcj/C,EAAiBk/C,GACtC,GAAIA,EAASC,SAAS,KAAM,CAE1B,MAAMC,EAAajnE,OAAOua,SAASwsD,EAAS7jE,UAAU,EAAG6jE,EAASv2E,OAAS,GAAI,IAC/E,OAAQyjB,MAAMgzD,IAAeA,GAAcp/C,C,CACtC,GAAmC,IAA/Bk/C,EAAS9jE,MAAM,KAAKzS,OAAc,CAE3C,MAAM02E,EAAOH,EAAS9jE,MAAM,KACtBgkE,EAAajnE,OAAOua,SAAS2sD,EAAK,GAAI,IACtCC,EAAWnnE,OAAOua,SAAS2sD,EAAK,GAAI,IAC1C,OAAQjzD,MAAMgzD,KAAgBhzD,MAAMkzD,IAAaF,GAAcp/C,GAAWA,GAAWs/C,C,CAGrF,OAAOnnE,OAAOua,SAASwsD,EAAU,MAAQl/C,CAE7C,C,0EAvCA,2BAAgCj4B,EAAkBs/D,EAA0BkY,GAC1E,IAAK,MAAMC,KAAQD,EAAO,CACxB,MAAM1iD,EAAS2iD,EAAK,GACd1iD,EAAS0iD,EAAK,GACdC,EAAkBD,EAAK,GACvB/X,EAAS+X,EAAK,GACd9X,EAAS8X,EAAK,GAEpB,GAAIz3E,EAAK80B,SAAWA,EAClB,IAAK,MAAM2lC,KAAS6E,EAElB,IAAI7E,EAAM1lC,SAAWA,GAA4B,YAAjB0lC,EAAM1lC,QAAmC,KAAXA,IACxDmiD,EAAczc,EAAMxiC,QAASy/C,GAC/B,MAAO,CAAChY,SAAQC,S,CAO1B,MAAM,IAAIr4C,UAAU,4BAA4BtnB,EAAK80B,wBACjDwqC,EAAOn/B,KAAIxsB,GAAO,GAAGA,EAAIohB,QAAU,cAAcphB,EAAIskB,YAAWxV,KAAK,QAC3E,C,oGC7CA,gBAKA,IAAiB6d,EAAYC,EAAZD,EAAA,EAAAA,cAAA,EAAAA,YAAW,IAAc,SAAAE,GACxC,IAAYnM,GAAZ,SAAYA,GACV,6BACA,qBACA,iBACA,uBACA,uBACA,qBACA,uBACA,mBACA,yBACA,yBACA,wBACA,sCACA,uCACD,CAdD,CAAYA,EAAA,EAAAA,gBAAA,EAAAA,cAAa,IAe1B,CAhByC,EAAbkM,EAAA,EAAAA,eAAA,EAAAA,aAAY,KAACC,MAAA,EAAAA,IAAG,KAqB7C,SAAiBF,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYm3C,GAAZ,SAAYA,GAAoB,yBAAa,qBAAW,oBAAU,CAAlE,CAAYA,EAAA,EAAAA,qBAAA,EAAAA,mBAAkB,IAC/B,CAFyC,GAAAn3C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYo3C,GAAZ,SAAYA,GACV,6BACA,qBACA,qBACA,mBACA,uBACA,qBACA,qBACA,qBACA,uBACA,mBACA,0BACA,wBACA,wBACA,wBACA,8BACA,gCACA,2BACD,CAlBD,CAAYA,EAAA,EAAAA,iBAAA,EAAAA,eAAc,IAmB3B,CApByC,GAAAp3C,MAAA,EAAAA,IAAG,IAoB5C,CApB4B,GAAAD,eAAA,EAAAA,aAAY,IAoBxC,CApBD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyB5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYq3C,GAAZ,SAAYA,GAAU,6BAAe,oBAAU,CAA/C,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,IACrB,CAFyC,GAAAr3C,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYuwC,GAAZ,SAAYA,GAAe,mBAAU,iCAAiB,qCAAmB,0BAAa,CAAtF,CAAYA,EAAA,EAAAA,gBAAA,EAAAA,cAAa,IAC1B,CAFyC,GAAAvwC,MAAA,EAAAA,IAAG,IAE5C,CAF4B,GAAAD,eAAA,EAAAA,aAAY,IAExC,CAFD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAas3C,EAAb,cACE,KAAAx8D,GAAkC,KAElC,KAAAy8D,OAAS,CAqGX,CA/FEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,sBAAsBrmB,EAA4ByN,GAChD,OAAQA,GAAO,IAAI+uD,GAASE,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAClF,CAOAqmB,kCAAkCrmB,EAA4ByN,GAE5D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAI+uD,GAASE,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAClF,CAOA8b,IAAI1V,EAAeqH,GACjB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAInJ,WACpC2gD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKA41D,YACE,IAAIzvD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,kBAAkB62C,GAChBA,EAAQC,YAAY,EACtB,CAMA92C,cAAc62C,EAA8BvmC,GAC1CumC,EAAQE,eAAe,EAAGzmC,EAAW,EACvC,CAOAtQ,uBAAuB62C,EAA8B/tE,GACnD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,sBAAsB62C,EAA8BM,GAClDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,gBAAgB62C,GAEd,OADaA,EAAQO,WAEvB,CAEAp3C,mBAAmB62C,EAA8BvmC,GAG/C,OAFA6lC,EAAMkB,WAAWR,GACjBV,EAAMmB,OAAOT,EAASvmC,GACf6lC,EAAMoB,SAASV,EACxB,EAvGW,EAAAV,MAAK,CAyGnB,CA1GyC,GAAAt3C,MAAA,EAAAA,IAAG,IA0G5C,CA1G4B,GAAAD,eAAA,EAAAA,aAAY,IA0GxC,CA1GD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA8G5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAanJ,EAAb,cACE,KAAA/b,GAAkC,KAElC,KAAAy8D,OAAS,CA6FX,CAvFEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,0BAA0BrmB,EAA4ByN,GACpD,OAAQA,GAAO,IAAIsO,GAAa2gD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACtF,CAOAqmB,sCAAsCrmB,EAA4ByN,GAEhE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIsO,GAAa2gD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACtF,CAMAiM,MAAMwB,GACJ,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI24C,gBACpCnB,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAQAmc,WAAW2hD,GACT,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAz3C,sBAAsB62C,GACpBA,EAAQC,YAAY,EACtB,CAMA92C,gBAAgB62C,EAA8Bc,GAC5Cd,EAAQE,eAAe,EAAGY,EAAa,EACzC,CAMA33C,qBAAqB62C,EAA8Be,GACjDf,EAAQE,eAAe,EAAGa,EAAkB,EAC9C,CAMA53C,oBAAoB62C,GAElB,OADaA,EAAQO,WAEvB,CAEAp3C,uBACI62C,EAA8Bc,EAC9BC,GAIF,OAHAliD,EAAUmiD,eAAehB,GACzBnhD,EAAUoiD,SAASjB,EAASc,GAC5BjiD,EAAUqiD,cAAclB,EAASe,GAC1BliD,EAAUsiD,aAAanB,EAChC,EA/FW,EAAAnhD,UAAS,CAiGvB,CAlGyC,GAAAmJ,MAAA,EAAAA,IAAG,IAkG5C,CAlG4B,GAAAD,eAAA,EAAAA,aAAY,IAkGxC,CAlGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa24C,EAAb,cACE,KAAA79D,GAAkC,KAElC,KAAAy8D,OAAS,CA4GX,CAtGEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,+BAA+BrmB,EAA4ByN,GACzD,OAAQA,GAAO,IAAIowD,GAAkBnB,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC3F,CAOAqmB,2CAA2CrmB,EAA4ByN,GAErE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIowD,GAAkBnB,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC3F,CAKAs+D,UACE,IAAIn4D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAIu+D,SAAStyE,KAAKwwE,OAASt2D,GACzC6e,EAAYC,aAAaC,IAAIm3C,mBAAmBmC,OAClE,CAKAviD,WACE,IAAI9V,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAKwwE,OAASt2D,GAAUla,KAAK+T,GAAI0+D,WAAW,EAAG,EACpF,CAQAxiD,SAAS4hD,GACP,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAz3C,2BAA2B62C,GACzBA,EAAQC,YAAY,EACtB,CAMA92C,kBAAkB62C,EAA8BoB,GAC9CpB,EAAQyB,aAAa,EAAGL,EAASt5C,EAAYC,aAAaC,IAAIm3C,mBAAmBmC,QACnF,CAMAn4C,mBAAmB62C,EAA8BjhD,GAC/CihD,EAAQ0B,cAAc,EAAG3iD,EAAUihD,EAAQwB,WAAW,EAAG,GAC3D,CAMAr4C,mBAAmB62C,EAA8B2B,GAC/C3B,EAAQE,eAAe,EAAGyB,EAAgB,EAC5C,CAMAx4C,yBAAyB62C,GAEvB,OADaA,EAAQO,WAEvB,CAEAp3C,4BACI62C,EAA8BoB,EAC9BriD,EAA4B4iD,GAK9B,OAJAhB,EAAeiB,oBAAoB5B,GACnCW,EAAekB,WAAW7B,EAASoB,GACnCT,EAAemB,YAAY9B,EAASjhD,GACpC4hD,EAAeoB,YAAY/B,EAAS2B,GAC7BhB,EAAeqB,kBAAkBhC,EAC1C,EA9GW,EAAAW,eAAc,CAgH5B,CAjHyC,GAAA34C,MAAA,EAAAA,IAAG,IAiH5C,CAjH4B,GAAAD,eAAA,EAAAA,aAAY,IAiHxC,CAjHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAaywC,EAAb,cACE,KAAA31D,GAAkC,KAElC,KAAAy8D,OAAS,CA4FX,CAtFEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,mCAAmCrmB,EAA4ByN,GAC7D,OAAQA,GAAO,IAAIkoD,GAAsB+G,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC/F,CAOAqmB,+CAA+CrmB,EAA4ByN,GAGzE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIkoD,GAAsB+G,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC/F,CAKAyc,WACE,IAAItW,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAASt2D,GAC1C6e,EAAYC,aAAaC,IAAIo3C,eAAe6C,SAC9D,CAMAziD,MAAMjP,GACJ,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIs3C,OACpCE,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAKAqmB,+BAA+B62C,GAC7BA,EAAQC,YAAY,EACtB,CAMA92C,mBAAmB62C,EAA8BzgD,GAC/CygD,EAAQkC,cAAc,EAAG3iD,EAAUuI,EAAYC,aAAaC,IAAIo3C,eAAe6C,UACjF,CAMA94C,gBAAgB62C,EAA8BmC,GAC5CnC,EAAQE,eAAe,EAAGiC,EAAa,EACzC,CAMAh5C,6BAA6B62C,GAE3B,OADaA,EAAQO,WAEvB,CAEAp3C,gCACI62C,EAA8BzgD,EAC9B4iD,GAIF,OAHA1J,EAAmB2J,wBAAwBpC,GAC3CvH,EAAmB4J,YAAYrC,EAASzgD,GACxCk5C,EAAmB6J,SAAStC,EAASmC,GAC9B1J,EAAmB8J,sBAAsBvC,EAClD,EA9FW,EAAAvH,mBAAkB,CAgGhC,CAjGyC,GAAAzwC,MAAA,EAAAA,IAAG,IAiG5C,CAjG4B,GAAAD,eAAA,EAAAA,aAAY,IAiGxC,CAjGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAaw6C,EAAb,cACE,KAAA1/D,GAAkC,KAElC,KAAAy8D,OAAS,CA2FX,CArFEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,wBAAwBrmB,EAA4ByN,GAClD,OAAQA,GAAO,IAAIiyD,GAAWhD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACpF,CAOAqmB,oCAAoCrmB,EAA4ByN,GAE9D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIiyD,GAAWhD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACpF,CAKA2/D,UACE,IAAIx5D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAASt2D,GAC1C6e,EAAYC,aAAaC,IAAIo3C,eAAe6C,SAC9D,CAMA3J,UAAU/nD,GACR,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI06C,UACpClD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAKAqmB,oBAAoB62C,GAClBA,EAAQC,YAAY,EACtB,CAMA92C,kBAAkB62C,EAA8ByC,GAC9CzC,EAAQkC,cAAc,EAAGO,EAAS36C,EAAYC,aAAaC,IAAIo3C,eAAe6C,UAChF,CAMA94C,oBAAoB62C,EAA8B2C,GAChD3C,EAAQE,eAAe,EAAGyC,EAAiB,EAC7C,CAMAx5C,kBAAkB62C,GAEhB,OADaA,EAAQO,WAEvB,CAEAp3C,qBACI62C,EAA8ByC,EAC9BE,GAIF,OAHAH,EAAQI,aAAa5C,GACrBwC,EAAQK,WAAW7C,EAASyC,GAC5BD,EAAQM,aAAa9C,EAAS2C,GACvBH,EAAQO,WAAW/C,EAC5B,EA7FW,EAAAwC,QAAO,CA+FrB,CAhGyC,GAAAx6C,MAAA,EAAAA,IAAG,IAgG5C,CAhG4B,GAAAD,eAAA,EAAAA,aAAY,IAgGxC,CAhGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAoG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAag7C,EAAb,cACE,KAAAlgE,GAAkC,KAElC,KAAAy8D,OAAS,CAuEX,CAjEEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,6BAA6BrmB,EAA4ByN,GACvD,OAAQA,GAAO,IAAIyyD,GAAgBxD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACzF,CAOAqmB,yCAAyCrmB,EAA4ByN,GAEnE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIyyD,GAAgBxD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACzF,CAMAyc,SAAShP,GACP,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI06C,UACpClD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAKAqmB,yBAAyB62C,GACvBA,EAAQC,YAAY,EACtB,CAMA92C,mBAAmB62C,EAA8BiD,GAC/CjD,EAAQE,eAAe,EAAG+C,EAAgB,EAC5C,CAMA95C,uBAAuB62C,GAErB,OADaA,EAAQO,WAEvB,CAEAp3C,0BAA0B62C,EAA8BiD,GAGtD,OAFAD,EAAaE,kBAAkBlD,GAC/BgD,EAAaX,YAAYrC,EAASiD,GAC3BD,EAAaG,gBAAgBnD,EACtC,EAzEW,EAAAgD,aAAY,CA2E1B,CA5EyC,GAAAh7C,MAAA,EAAAA,IAAG,IA4E5C,CA5E4B,GAAAD,eAAA,EAAAA,aAAY,IA4ExC,CA5ED,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAgF5B,SAAiBA,IAAY,SAAAC,IAAa,EAAAC,MAAA,EAAAA,IAAG,KAC9Bo7C,QAAb,oBACE,KAAAtgE,GAAkC,KAElC,KAAAy8D,OAAS,CAiDX,CA3CEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAKAqqE,YACE,OAAOrqE,KAAK+T,GAAIugE,WAAWt0E,KAAKwwE,OAClC,CAKA+D,cACE,OAAOv0E,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAAS,EAC1C,CAKAgE,cACE,OAAOx0E,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAAS,EAC1C,CASAp2C,qBACI62C,EAA8BwD,EAAoBC,EAClDC,GAKF,OAJA1D,EAAQ2D,KAAK,EAAG,IAChB3D,EAAQ4D,WAAWF,GACnB1D,EAAQ4D,WAAWH,GACnBzD,EAAQ4D,WAAWJ,GACZxD,EAAQ/2D,QACjB,EAEH,CAtD4B,GAAA8e,eAAA,EAAAA,aAAY,IAsDxC,CAtDD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0D5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa67C,EAAb,cACE,KAAA/gE,GAAkC,KAElC,KAAAy8D,OAAS,CAgJX,CA1IEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,yBAAyBrmB,EAA4ByN,GACnD,OAAQA,GAAO,IAAIszD,GAAYrE,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACrF,CAOAqmB,qCAAqCrmB,EAA4ByN,GAE/D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIszD,GAAYrE,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACrF,CAKAs2D,YACE,IAAInwD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIugE,WAAWt0E,KAAKwwE,OAASt2D,GAAU,CAC9D,CAOA66D,WAAW56D,EAAeqH,GACxB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIo7C,SACpC5D,OAAOzwE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,GAARC,EAAYna,KAAK+T,IACvE,IAClB,CAKAihE,mBACE,IAAI96D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOA+6D,YAAY96D,EAAeqH,GACzB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIo7C,SACpC5D,OAAOzwE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,GAARC,EAAYna,KAAK+T,IACvE,IAClB,CAKAmhE,oBACE,IAAIh7D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,qBAAqB62C,GACnBA,EAAQC,YAAY,EACtB,CAMA92C,oBAAoB62C,EAA8B5G,GAChD4G,EAAQkC,cAAc,EAAG9I,EAAW,EACtC,CAMAjwC,qBAAqB62C,EAA8BkE,GACjDlE,EAAQE,eAAe,EAAGgE,EAAkB,EAC9C,CAMA/6C,6BAA6B62C,EAA8BM,GACzDN,EAAQG,YAAY,GAAIG,EAAU,EACpC,CAMAn3C,sBAAsB62C,EAA8BmE,GAClDnE,EAAQE,eAAe,EAAGiE,EAAmB,EAC/C,CAMAh7C,8BAA8B62C,EAA8BM,GAC1DN,EAAQG,YAAY,GAAIG,EAAU,EACpC,CAMAn3C,mBAAmB62C,GAEjB,OADaA,EAAQO,WAEvB,CAEAp3C,sBACI62C,EAA8B5G,EAAmB8K,EACjDC,GAKF,OAJAN,EAASO,cAAcpE,GACvB6D,EAASQ,aAAarE,EAAS5G,GAC/ByK,EAASS,cAActE,EAASkE,GAChCL,EAASU,eAAevE,EAASmE,GAC1BN,EAASW,YAAYxE,EAC9B,EAlJW,EAAA6D,SAAQ,CAoJtB,CArJyC,GAAA77C,MAAA,EAAAA,IAAG,IAqJ5C,CArJ4B,GAAAD,eAAA,EAAAA,aAAY,IAqJxC,CArJD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAawuC,EAAb,cACE,KAAA1zD,GAAkC,KAElC,KAAAy8D,OAAS,CAodX,CA9cEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,qBAAqBrmB,EAA4ByN,GAC/C,OAAQA,GAAO,IAAIimD,GAAQgJ,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACjF,CAOAqmB,iCAAiCrmB,EAA4ByN,GAE3D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIimD,GAAQgJ,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACjF,CAQA9T,KAAK4xE,GACH,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQAnnD,UAAUmnD,GACR,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQArkD,OAAOqkD,GACL,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKA6D,eACE,IAAIx7D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAASt2D,GAAU,CAC7D,CAKAC,QACE,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIugE,WAAWt0E,KAAKwwE,OAASt2D,GAAU,CAC9D,CAQAqT,OAAOskD,GACL,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAlnD,OACE,IAAIzQ,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAASt2D,GAC1C6e,EAAYC,aAAaC,IAAIq3C,SAASqF,SACxD,CAQAC,sBAAsB/D,GACpB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CASA1lC,OAAOhyB,EAAe03D,GACpB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKA1I,eACE,IAAIjvD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CASA+1C,QAAQ91C,EAAe03D,GACrB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKA/H,gBACE,IAAI5vD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOAif,WAAWhf,EAAeqH,GAExB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIC,WACpCu3C,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAk2D,mBACE,IAAI/vD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAMA27D,eAAe17D,GACb,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI28D,UAAU1wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAa,CAC5F,CAKA27D,uBACE,IAAI57D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKA67D,sBACE,IAAI77D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EACH,IAAI3c,WACAyC,KAAK+T,GAAIoV,QAAQ7yB,OAAQ0J,KAAK+T,GAAIoV,QAAQ+vC,WAAal5D,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GACvFla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,IACxC,IACN,CASA87D,eAAe77D,EAAe03D,GAC5B,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKAoE,uBACE,IAAI/7D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,iBAAiB62C,GACfA,EAAQC,YAAY,GACtB,CAMA92C,eAAe62C,EAA8BiF,GAC3CjF,EAAQE,eAAe,EAAG+E,EAAY,EACxC,CAMA97C,oBAAoB62C,EAA8BkF,GAChDlF,EAAQE,eAAe,EAAGgF,EAAiB,EAC7C,CAMA/7C,iBAAiB62C,EAA8BmF,GAC7CnF,EAAQE,eAAe,EAAGiF,EAAc,EAC1C,CAMAh8C,uBAAuB62C,EAA8ByE,GACnDzE,EAAQkC,cAAc,EAAGuC,EAAc,EACzC,CAMAt7C,gBAAgB62C,EAA8B92D,GAC5C82D,EAAQkC,cAAc,EAAGh5D,EAAO,EAClC,CAMAigB,iBAAiB62C,EAA8BoF,GAC7CpF,EAAQE,eAAe,EAAGkF,EAAc,EAC1C,CAMAj8C,eAAe62C,EAA8BtmD,GAC3CsmD,EAAQkC,cAAc,EAAGxoD,EAAMoO,EAAYC,aAAaC,IAAIq3C,SAASqF,UACvE,CAMAv7C,gCAAgC62C,EAA8BqF,GAC5DrF,EAAQE,eAAe,EAAGmF,EAA6B,EACzD,CAMAl8C,iBAAiB62C,EAA8BsF,GAC7CtF,EAAQE,eAAe,EAAGoF,EAAc,EAC1C,CAOAn8C,0BAA0B62C,EAA8B/tE,GACtD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,yBAAyB62C,EAA8BM,GACrDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,kBAAkB62C,EAA8BuF,GAC9CvF,EAAQE,eAAe,EAAGqF,EAAe,EAC3C,CAOAp8C,2BAA2B62C,EAA8B/tE,GACvD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,0BAA0B62C,EAA8BM,GACtDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,qBAAqB62C,EAA8BwF,GACjDxF,EAAQE,eAAe,GAAIsF,EAAkB,EAC/C,CAOAr8C,8BAA8B62C,EAA8B/tE,GAC1D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,6BAA6B62C,EAA8BM,GACzDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,yBAAyB62C,EAA8ByF,GACrDzF,EAAQE,eAAe,GAAIuF,EAAsB,EACnD,CAOAt8C,kCAAkC62C,EAA8B/tE,GAC9D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ0F,SAASzzE,EAAKpM,IAExB,OAAOm6E,EAAQK,WACjB,CAMAl3C,iCAAiC62C,EAA8BM,GAC7DN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,yBAAyB62C,EAA8B2F,GACrD3F,EAAQE,eAAe,GAAIyF,EAAsB,EACnD,CAOAx8C,kCAAkC62C,EAA8B/tE,GAC9D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,iCAAiC62C,EAA8BM,GAC7DN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,eAAe62C,GAEb,OADaA,EAAQO,WAEvB,CAEAp3C,kBACI62C,EAA8BiF,EAAgCC,EAC9DC,EAAkCV,EAAsBv7D,EAAek8D,EACvE1rD,EAA6C2rD,EAC7CC,EAAkCC,EAAmCC,EACrEC,EAA0CE,GAe5C,OAdAnP,EAAKoP,UAAU5F,GACfxJ,EAAKqP,QAAQ7F,EAASiF,GACtBzO,EAAKsP,aAAa9F,EAASkF,GAC3B1O,EAAKuP,UAAU/F,EAASmF,GACxB3O,EAAKwP,gBAAgBhG,EAASyE,GAC9BjO,EAAKyP,SAASjG,EAAS92D,GACvBstD,EAAK0P,UAAUlG,EAASoF,GACxB5O,EAAK2P,QAAQnG,EAAStmD,GACtB88C,EAAK4P,yBAAyBpG,EAASqF,GACvC7O,EAAK6P,UAAUrG,EAASsF,GACxB9O,EAAK8P,WAAWtG,EAASuF,GACzB/O,EAAK+P,cAAcvG,EAASwF,GAC5BhP,EAAKgQ,kBAAkBxG,EAASyF,GAChCjP,EAAKiQ,kBAAkBzG,EAAS2F,GACzBnP,EAAKkQ,QAAQ1G,EACtB,EAtdW,EAAAxJ,KAAI,CAwdlB,CAzdyC,GAAAxuC,MAAA,EAAAA,IAAG,IAyd5C,CAzd4B,GAAAD,eAAA,EAAAA,aAAY,IAydxC,CAzdD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa2+C,EAAb,cACE,KAAA7jE,GAAkC,KAElC,KAAAy8D,OAAS,CAiHX,CA3GEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,0BAA0BrmB,EAA4ByN,GACpD,OAAQA,GAAO,IAAIo2D,GAAanH,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACtF,CAOAqmB,sCAAsCrmB,EAA4ByN,GAEhE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIo2D,GAAanH,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACtF,CAQA9T,KAAK4xE,GACH,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQAnnD,UAAUmnD,GACR,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAMAlnD,KAAKnJ,GACH,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI06C,UACpClD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAKAqmB,sBAAsB62C,GACpBA,EAAQC,YAAY,EACtB,CAMA92C,eAAe62C,EAA8BiF,GAC3CjF,EAAQE,eAAe,EAAG+E,EAAY,EACxC,CAMA97C,oBAAoB62C,EAA8BkF,GAChDlF,EAAQE,eAAe,EAAGgF,EAAiB,EAC7C,CAMA/7C,eAAe62C,EAA8B4G,GAC3C5G,EAAQE,eAAe,EAAG0G,EAAY,EACxC,CAMAz9C,oBAAoB62C,GAElB,OADaA,EAAQO,WAEvB,CAEAp3C,uBACI62C,EAA8BiF,EAAgCC,EAC9D0B,GAKF,OAJAD,EAAUE,eAAe7G,GACzB2G,EAAUd,QAAQ7F,EAASiF,GAC3B0B,EAAUb,aAAa9F,EAASkF,GAChCyB,EAAUR,QAAQnG,EAAS4G,GACpBD,EAAUG,aAAa9G,EAChC,EAnHW,EAAA2G,UAAS,CAqHvB,CAtHyC,GAAA3+C,MAAA,EAAAA,IAAG,IAsH5C,CAtH4B,GAAAD,eAAA,EAAAA,aAAY,IAsHxC,CAtHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0H5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa06C,EAAb,cACE,KAAA5/D,GAAkC,KAElC,KAAAy8D,OAAS,CA6GX,CAvGEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,yBAAyBrmB,EAA4ByN,GACnD,OAAQA,GAAO,IAAImyD,GAAYlD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACrF,CAOAqmB,qCAAqCrmB,EAA4ByN,GAE/D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAImyD,GAAYlD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACrF,CAQAmc,WAAW2hD,GACT,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAtI,YACE,IAAIrvD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAIikE,UAAUh4E,KAAKwwE,OAASt2D,GAC1C6e,EAAYC,aAAaC,IAAIuwC,cAAcyO,IAC7D,CAMAj4D,MAAmCwB,GACjC,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAImkE,QAAQ12D,EAAKxhB,KAAKwwE,OAASt2D,GAAU,IAChE,CAKAkgB,qBAAqB62C,GACnBA,EAAQC,YAAY,EACtB,CAMA92C,qBAAqB62C,EAA8Be,GACjDf,EAAQE,eAAe,EAAGa,EAAkB,EAC9C,CAMA53C,oBAAoB62C,EAA8B1H,GAChD0H,EAAQyB,aAAa,EAAGnJ,EAAWxwC,EAAYC,aAAaC,IAAIuwC,cAAcyO,KAChF,CAMA79C,gBAAgB62C,EAA8Bc,GAC5Cd,EAAQE,eAAe,EAAGY,EAAa,EACzC,CAMA33C,mBAAmB62C,GAEjB,OADaA,EAAQO,WAEvB,CAEAp3C,sBACI62C,EAA8Be,EAC9BzI,EAAuDwI,GAKzD,OAJA4B,EAASwE,cAAclH,GACvB0C,EAASxB,cAAclB,EAASe,GAChC2B,EAASI,aAAa9C,EAAS1H,GAC/BoK,EAASzB,SAASjB,EAASc,GACpB4B,EAASyE,YAAYnH,EAC9B,EA/GW,EAAA0C,SAAQ,CAiHtB,CAlHyC,GAAA16C,MAAA,EAAAA,IAAG,IAkH5C,CAlH4B,GAAAD,eAAA,EAAAA,aAAY,IAkHxC,CAlHD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAao/C,EAAb,cACE,KAAAtkE,GAAkC,KAElC,KAAAy8D,OAAS,CAyFX,CAnFEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,8BAA8BrmB,EAA4ByN,GACxD,OAAQA,GAAO,IAAI62D,GAAiB5H,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC1F,CAOAqmB,0CAA0CrmB,EAA4ByN,GAEpE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAI62D,GAAiB5H,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC1F,CAQAyZ,OAAOqkD,GACL,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAnhD,UACE,IAAIxW,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAKwwE,OAASt2D,GAAUla,KAAK+T,GAAI0+D,WAAW,EAAG,EACpF,CAKAr4C,0BAA0B62C,GACxBA,EAAQC,YAAY,EACtB,CAMA92C,iBAAiB62C,EAA8BmF,GAC7CnF,EAAQE,eAAe,EAAGiF,EAAc,EAC1C,CAMAh8C,kBAAkB62C,EAA8BvgD,GAC9CugD,EAAQ0B,cAAc,EAAGjiD,EAASugD,EAAQwB,WAAW,EAAG,GAC1D,CAMAr4C,wBAAwB62C,GAEtB,OADaA,EAAQO,WAEvB,CAEAp3C,2BACI62C,EAA8BmF,EAAkC1lD,GAIlE,OAHA2nD,EAAcC,mBAAmBrH,GACjCoH,EAAcrB,UAAU/F,EAASmF,GACjCiC,EAAcE,WAAWtH,EAASvgD,GAC3B2nD,EAAcG,iBAAiBvH,EACxC,EA3FW,EAAAoH,cAAa,CA6F3B,CA9FyC,GAAAp/C,MAAA,EAAAA,IAAG,IA8F5C,CA9F4B,GAAAD,eAAA,EAAAA,aAAY,IA8FxC,CA9FD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAkG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa1I,EAAb,cACE,KAAAxc,GAAkC,KAElC,KAAAy8D,OAAS,CA6QX,CAvQEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,uBAAuBrmB,EAA4ByN,GACjD,OAAQA,GAAO,IAAI+O,GAAUkgD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACnF,CAOAqmB,mCAAmCrmB,EAA4ByN,GAE7D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAI+O,GAAUkgD,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACnF,CAQA9T,KAAK4xE,GACH,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQAnnD,UAAUmnD,GACR,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAMAnjD,KAAKvU,GACH,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAC7Dna,KAAK+T,GAAI0+D,WAAW,EAAG,EACzC,CAKAgG,aACE,IAAIv+D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAgV,WACE,IAAIhV,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAASt2D,GAC1C6e,EAAYC,aAAaC,IAAIo3C,eAAe6C,SAC9D,CAMA9jD,QAAQjV,GACN,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIikE,UAAUh4E,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAUC,GAAS,CACxF,CAKAu+D,gBACE,IAAIx+D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAy+D,eACE,IAAIz+D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EACH,IAAIhhB,WACA8G,KAAK+T,GAAIoV,QAAQ7yB,OAAQ0J,KAAK+T,GAAIoV,QAAQ+vC,WAAal5D,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GACvFla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,IACxC,IACN,CASA2U,WAAW1U,EAAe03D,GACxB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKA+G,mBACE,IAAI1+D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,mBAAmB62C,GACjBA,EAAQC,YAAY,EACtB,CAMA92C,eAAe62C,EAA8BiF,GAC3CjF,EAAQE,eAAe,EAAG+E,EAAY,EACxC,CAMA97C,oBAAoB62C,EAA8BkF,GAChDlF,EAAQE,eAAe,EAAGgF,EAAiB,EAC7C,CAMA/7C,eAAe62C,EAA8B4H,GAC3C5H,EAAQE,eAAe,EAAG0H,EAAY,EACxC,CAOAz+C,wBAAwB62C,EAA8B/tE,GACpD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ6H,SAAS51E,EAAKpM,IAExB,OAAOm6E,EAAQK,WACjB,CAMAl3C,uBAAuB62C,EAA8BM,GACnDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,mBAAmB62C,EAA8B/hD,GAC/C+hD,EAAQkC,cAAc,EAAGjkD,EAAU6J,EAAYC,aAAaC,IAAIo3C,eAAe6C,UACjF,CAMA94C,kBAAkB62C,EAA8B8H,GAC9C9H,EAAQE,eAAe,EAAG4H,EAAe,EAC3C,CAOA3+C,2BAA2B62C,EAA8B/tE,GACvD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ+H,QAAQ91E,EAAKpM,IAEvB,OAAOm6E,EAAQK,WACjB,CAMAl3C,0BAA0B62C,EAA8BM,GACtDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,qBAAqB62C,EAA8BgI,GACjDhI,EAAQE,eAAe,EAAG8H,EAAkB,EAC9C,CAOA7+C,8BAA8B62C,EAA8B/tE,GAC1D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,6BAA6B62C,EAA8BM,GACzDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,iBAAiB62C,GAEf,OADaA,EAAQO,WAEvB,CAEAp3C,oBACI62C,EAA8BiF,EAAgCC,EAC9D0C,EAAgC3pD,EAChC6pD,EAAmCE,GAQrC,OAPA1oD,EAAO2oD,YAAYjI,GACnB1gD,EAAOumD,QAAQ7F,EAASiF,GACxB3lD,EAAOwmD,aAAa9F,EAASkF,GAC7B5lD,EAAO4oD,QAAQlI,EAAS4H,GACxBtoD,EAAO6oD,YAAYnI,EAAS/hD,GAC5BqB,EAAO8oD,WAAWpI,EAAS8H,GAC3BxoD,EAAO+oD,cAAcrI,EAASgI,GACvB1oD,EAAOgpD,UAAUtI,EAC1B,EA/QW,EAAA1gD,OAAM,CAiRpB,CAlRyC,GAAA0I,MAAA,EAAAA,IAAG,IAkR5C,CAlR4B,GAAAD,eAAA,EAAAA,aAAY,IAkRxC,CAlRD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsR5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAaugD,EAAb,cACE,KAAAzlE,GAAkC,KAElC,KAAAy8D,OAAS,CA6IX,CAvIEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,6BAA6BrmB,EAA4ByN,GACvD,OAAQA,GAAO,IAAIg4D,GAAgB/I,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACzF,CAOAqmB,yCAAyCrmB,EAA4ByN,GAEnE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIg4D,GAAgB/I,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACzF,CAMApR,OAAO6e,GACL,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI1I,QACpCkgD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAMA0lE,QAAQj4D,GACN,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI1I,QACpCkgD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAMA2a,KAAKvU,GACH,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAC7Dna,KAAK+T,GAAI0+D,WAAW,EAAG,EACzC,CAKAgG,aACE,IAAIv+D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,yBAAyB62C,GACvBA,EAAQC,YAAY,EACtB,CAMA92C,iBAAiB62C,EAA8ByI,GAC7CzI,EAAQE,eAAe,EAAGuI,EAAc,EAC1C,CAMAt/C,kBAAkB62C,EAA8B0I,GAC9C1I,EAAQE,eAAe,EAAGwI,EAAe,EAC3C,CAMAv/C,eAAe62C,EAA8B4H,GAC3C5H,EAAQE,eAAe,EAAG0H,EAAY,EACxC,CAOAz+C,wBAAwB62C,EAA8B/tE,GACpD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ6H,SAAS51E,EAAKpM,IAExB,OAAOm6E,EAAQK,WACjB,CAMAl3C,uBAAuB62C,EAA8BM,GACnDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,uBAAuB62C,GAErB,OADaA,EAAQO,WAEvB,CAEAp3C,0BACI62C,EAA8ByI,EAAkCC,EAChEd,GAKF,OAJAW,EAAaI,kBAAkB3I,GAC/BuI,EAAaK,UAAU5I,EAASyI,GAChCF,EAAaM,WAAW7I,EAAS0I,GACjCH,EAAaL,QAAQlI,EAAS4H,GACvBW,EAAaO,gBAAgB9I,EACtC,EA/IW,EAAAuI,aAAY,CAiJ1B,CAlJyC,GAAAvgD,MAAA,EAAAA,IAAG,IAkJ5C,CAlJ4B,GAAAD,eAAA,EAAAA,aAAY,IAkJxC,CAlJD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAaC,EAAb,cACE,KAAAnlB,GAAkC,KAElC,KAAAy8D,OAAS,CAidX,CA3cEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,0BAA0BrmB,EAA4ByN,GACpD,OAAQA,GAAO,IAAI0X,GAAau3C,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACtF,CAOAqmB,sCAAsCrmB,EAA4ByN,GAEhE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAI0X,GAAau3C,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACtF,CAQA9T,KAAK4xE,GACH,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQAnnD,UAAUmnD,GACR,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAlnD,OACE,IAAIzQ,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAAkBla,KAAK+T,GAAI28D,UAAU1wE,KAAKwwE,OAASt2D,GAC1C6e,EAAYC,aAAaC,IAAInM,cAAcomD,SAC7D,CAKA37E,IACE,IAAI2iB,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIimE,YAAYh6E,KAAKwwE,OAASt2D,GAAU,CAC/D,CAKApjB,IACE,IAAIojB,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAKwwE,OAASt2D,GAAUla,KAAK+T,GAAI0+D,WAAW,EAAG,EACpF,CAQAj7E,EAAEq6E,GACA,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAMA97E,EAAEyrB,GACA,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI1I,QACpCkgD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAMA7b,EAAEspB,GACA,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIiuC,OACpCuJ,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAMAqW,OAAOjQ,GACL,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIimE,YAAYh6E,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAa,CAC9F,CAKA8/D,eACE,IAAI//D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKA0hB,cACE,IAAI1hB,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EACH,IAAIpc,aACAkC,KAAK+T,GAAIoV,QAAQ7yB,OAAQ0J,KAAK+T,GAAIoV,QAAQ+vC,WAAal5D,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GACvFla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,IACxC,IACN,CAMAmQ,KAAKlQ,GACH,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAC7Dna,KAAK+T,GAAI0+D,WAAW,EAAG,EACzC,CAKA52C,aACE,IAAI3hB,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CASAoQ,QAAQnQ,EAAe03D,GACrB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKA/1C,gBACE,IAAI5hB,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOAqQ,QAAQpQ,EAAeqH,GACrB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI1I,QACpCkgD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAgoB,gBACE,IAAI7hB,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOAsQ,OAAOrQ,EAAeqH,GACpB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIiuC,OACpCuJ,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAmmE,eACE,IAAIhgE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,sBAAsB62C,GACpBA,EAAQC,YAAY,GACtB,CAMA92C,eAAe62C,EAA8BiF,GAC3CjF,EAAQE,eAAe,EAAG+E,EAAY,EACxC,CAMA97C,oBAAoB62C,EAA8BkF,GAChDlF,EAAQE,eAAe,EAAGgF,EAAiB,EAC7C,CAMA/7C,eAAe62C,EAA8BtmD,GAC3CsmD,EAAQkC,cAAc,EAAGxoD,EAAMoO,EAAYC,aAAaC,IAAInM,cAAcomD,UAC5E,CAMA94C,YAAY62C,EAA8B15E,GACxC05E,EAAQkJ,gBAAgB,EAAG5iF,EAAG,EAChC,CAMA6iC,YAAY62C,EAA8Bn6E,GACxCm6E,EAAQ0B,cAAc,EAAG77E,EAAGm6E,EAAQwB,WAAW,EAAG,GACpD,CAMAr4C,YAAY62C,EAA8BmJ,GACxCnJ,EAAQE,eAAe,EAAGiJ,EAAS,EACrC,CAMAhgD,YAAY62C,EAA8BoJ,GACxCpJ,EAAQE,eAAe,EAAGkJ,EAAS,EACrC,CAMAjgD,YAAY62C,EAA8BqJ,GACxCrJ,EAAQE,eAAe,EAAGmJ,EAAS,EACrC,CAMAlgD,iBAAiB62C,EAA8BsJ,GAC7CtJ,EAAQE,eAAe,EAAGoJ,EAAc,EAC1C,CAOAngD,0BAA0B62C,EAA8B/tE,GACtD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQuJ,WAAWt3E,EAAKpM,IAE1B,OAAOm6E,EAAQK,WACjB,CAMAl3C,yBAAyB62C,EAA8BM,GACrDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,eAAe62C,EAA8BwJ,GAC3CxJ,EAAQE,eAAe,EAAGsJ,EAAY,EACxC,CAOArgD,wBAAwB62C,EAA8B/tE,GACpD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ6H,SAAS51E,EAAKpM,IAExB,OAAOm6E,EAAQK,WACjB,CAMAl3C,uBAAuB62C,EAA8BM,GACnDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,kBAAkB62C,EAA8ByJ,GAC9CzJ,EAAQE,eAAe,GAAIuJ,EAAe,EAC5C,CAOAtgD,2BAA2B62C,EAA8B/tE,GACvD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,0BAA0B62C,EAA8BM,GACtDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,kBAAkB62C,EAA8B0J,GAC9C1J,EAAQE,eAAe,GAAIwJ,EAAe,EAC5C,CAOAvgD,2BAA2B62C,EAA8B/tE,GACvD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,0BAA0B62C,EAA8BM,GACtDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,iBAAiB62C,EAA8B2J,GAC7C3J,EAAQE,eAAe,GAAIyJ,EAAc,EAC3C,CAOAxgD,0BAA0B62C,EAA8B/tE,GACtD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,yBAAyB62C,EAA8BM,GACrDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,oBAAoB62C,GAElB,OADaA,EAAQO,WAEvB,CAEAp3C,uBACI62C,EAA8BiF,EAAgCC,EAC9DxrD,EAAkDpzB,EAAWT,EAAqBsjF,EAClFC,EAA6BC,EAA6BC,EAC1DE,EAAgCC,EAAmCC,EACnEC,GAeF,OAdA1hD,EAAU2hD,eAAe5J,GACzB/3C,EAAU49C,QAAQ7F,EAASiF,GAC3Bh9C,EAAU69C,aAAa9F,EAASkF,GAChCj9C,EAAUk+C,QAAQnG,EAAStmD,GAC3BuO,EAAU4hD,KAAK7J,EAAS15E,GACxB2hC,EAAU6hD,KAAK9J,EAASn6E,GACxBoiC,EAAU8hD,KAAK/J,EAASmJ,GACxBlhD,EAAU+hD,KAAKhK,EAASoJ,GACxBnhD,EAAUgiD,KAAKjK,EAASqJ,GACxBphD,EAAUiiD,UAAUlK,EAASsJ,GAC7BrhD,EAAUkiD,QAAQnK,EAASwJ,GAC3BvhD,EAAUmiD,WAAWpK,EAASyJ,GAC9BxhD,EAAUoiD,WAAWrK,EAAS0J,GAC9BzhD,EAAUqiD,UAAUtK,EAAS2J,GACtB1hD,EAAUsiD,aAAavK,EAChC,EAndW,EAAA/3C,UAAS,CAqdvB,CAtdyC,GAAAD,MAAA,EAAAA,IAAG,IAsd5C,CAtd4B,GAAAD,eAAA,EAAAA,aAAY,IAsdxC,CAtdD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAaiuC,EAAb,cACE,KAAAnzD,GAAkC,KAElC,KAAAy8D,OAAS,CAwaX,CAlaEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,sBAAsBrmB,EAA4ByN,GAChD,OAAQA,GAAO,IAAI0lD,GAASuJ,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAClF,CAOAqmB,kCAAkCrmB,EAA4ByN,GAE5D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAI0lD,GAASuJ,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAClF,CAOA6jD,aAAaz9C,EAAeqH,GAC1B,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI1I,QACpCkgD,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKA61D,qBACE,IAAI1vD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOAovD,SAASnvD,EAAeqH,GACtB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI2+C,WACpCnH,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAs1D,iBACE,IAAInvD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOAksB,MAAMjsB,EAAeqH,GACnB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIwuC,MACpCgJ,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAi2D,cACE,IAAI9vD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAuhE,eACE,IAAIvhE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIugE,WAAWt0E,KAAKwwE,OAASt2D,GAAU,CAC9D,CAOAwhE,UAAUvhE,EAAeqH,GACvB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI67C,UACpCrE,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKA4nE,kBACE,IAAIzhE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CASAiyB,OAAOhyB,EAAe03D,GACpB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKA1I,eACE,IAAIjvD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CASA+1C,QAAQ91C,EAAe03D,GACrB,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,EAAW03D,GAAoB,IAC7G,CAKA/H,gBACE,IAAI5vD,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAOA0hE,mBAAmBzhE,EAAeqH,GAEhC,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIugD,cACpC/I,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKA8nE,2BACE,IAAI3hE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,kBAAkB62C,GAChBA,EAAQC,YAAY,EACtB,CAMA92C,uBAAuB62C,EAA8B6K,GACnD7K,EAAQE,eAAe,EAAG2K,EAAoB,EAChD,CAOA1hD,gCAAgC62C,EAA8B/tE,GAC5D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,+BAA+B62C,EAA8BM,GAC3DN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,mBAAmB62C,EAA8B8K,GAC/C9K,EAAQE,eAAe,EAAG4K,EAAgB,EAC5C,CAOA3hD,4BAA4B62C,EAA8B/tE,GACxD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,2BAA2B62C,EAA8BM,GACvDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,gBAAgB62C,EAA8B+K,GAC5C/K,EAAQE,eAAe,EAAG6K,EAAa,EACzC,CAOA5hD,yBAAyB62C,EAA8B/tE,GACrD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,wBAAwB62C,EAA8BM,GACpDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,uBAAuB62C,EAA8BwK,GACnDxK,EAAQkC,cAAc,EAAGsI,EAAc,EACzC,CAMArhD,oBAAoB62C,EAA8BgL,GAChDhL,EAAQE,eAAe,EAAG8K,EAAiB,EAC7C,CAOA7hD,6BAA6B62C,EAA8B/tE,GACzD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,4BAA4B62C,EAA8BM,GACxDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,iBAAiB62C,EAA8BsF,GAC7CtF,EAAQE,eAAe,EAAGoF,EAAc,EAC1C,CAOAn8C,0BAA0B62C,EAA8B/tE,GACtD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,yBAAyB62C,EAA8BM,GACrDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,kBAAkB62C,EAA8BuF,GAC9CvF,EAAQE,eAAe,EAAGqF,EAAe,EAC3C,CAOAp8C,2BAA2B62C,EAA8B/tE,GACvD+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,0BAA0B62C,EAA8BM,GACtDN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,6BAA6B62C,EAA8BiL,GACzDjL,EAAQE,eAAe,EAAG+K,EAA0B,EACtD,CAOA9hD,sCAAsC62C,EAA8B/tE,GAElE+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,qCAAqC62C,EAA8BM,GACjEN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,gBAAgB62C,GAEd,OADaA,EAAQO,WAEvB,CAEAp3C,mBACI62C,EAA8B6K,EAAwCC,EACtEC,EAAiCP,EAAsBQ,EACvD1F,EAAkCC,EAClC0F,GAUF,OATAhV,EAAMiV,WAAWlL,GACjB/J,EAAMkV,gBAAgBnL,EAAS6K,GAC/B5U,EAAMmV,YAAYpL,EAAS8K,GAC3B7U,EAAMoV,SAASrL,EAAS+K,GACxB9U,EAAMqV,gBAAgBtL,EAASwK,GAC/BvU,EAAMsV,aAAavL,EAASgL,GAC5B/U,EAAMoQ,UAAUrG,EAASsF,GACzBrP,EAAMqQ,WAAWtG,EAASuF,GAC1BtP,EAAMuV,sBAAsBxL,EAASiL,GAC9BhV,EAAMwV,SAASzL,EACxB,EA1aW,EAAA/J,MAAK,CA4anB,CA7ayC,GAAAjuC,MAAA,EAAAA,IAAG,IA6a5C,CA7a4B,GAAAD,eAAA,EAAAA,aAAY,IA6axC,CA7aD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAib5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa0jD,EAAb,cACE,KAAA5oE,GAAkC,KAElC,KAAAy8D,OAAS,CAoQX,CA9PEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,sBAAsBrmB,EAA4ByN,GAChD,OAAQA,GAAO,IAAIm7D,GAASlM,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAClF,CAOAqmB,kCAAkCrmB,EAA4ByN,GAE5D,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIm7D,GAASlM,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAClF,CAKA6Z,YACE,IAAI1T,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAKwwE,OAASt2D,GAAUla,KAAK+T,GAAI0+D,WAAW,EAAG,EACpF,CAOA/kD,YAAYvT,EAAeqH,GAEzB,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIo/C,eACpC5H,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAw7D,oBACE,IAAIr1D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAQA2T,aAAagkD,GACX,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQA/jD,gBAAgB+jD,GACd,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAQArkD,OAAOqkD,GACL,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKA9jD,eACE,IAAI7T,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAIy+D,UAAUxyE,KAAKwwE,OAASt2D,GAAUla,KAAK+T,GAAI0+D,WAAW,EAAG,EACpF,CAQA/nD,UAAUmnD,GACR,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAMA7jD,MAAMxM,GACJ,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIiuC,OACpCuJ,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAQA6oE,eAAe/K,GACb,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,IAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAKAz3C,kBAAkB62C,GAChBA,EAAQC,YAAY,EACtB,CAMA92C,oBAAoB62C,EAA8BrjD,GAChDqjD,EAAQ0B,cAAc,EAAG/kD,EAAWqjD,EAAQwB,WAAW,EAAG,GAC5D,CAMAr4C,sBAAsB62C,EAA8B4L,GAClD5L,EAAQE,eAAe,EAAG0L,EAAmB,EAC/C,CAOAziD,+BAA+B62C,EAA8B/tE,GAC3D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,8BAA8B62C,EAA8BM,GAC1DN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,uBAAuB62C,EAA8B6L,GACnD7L,EAAQE,eAAe,EAAG2L,EAAoB,EAChD,CAMA1iD,0BAA0B62C,EAA8B8L,GACtD9L,EAAQE,eAAe,EAAG4L,EAAuB,EACnD,CAMA3iD,iBAAiB62C,EAA8BmF,GAC7CnF,EAAQE,eAAe,EAAGiF,EAAc,EAC1C,CAMAh8C,uBAAuB62C,EAA8BljD,GACnDkjD,EAAQ0B,cAAc,EAAG5kD,EAAckjD,EAAQwB,WAAW,EAAG,GAC/D,CAMAr4C,oBAAoB62C,EAA8BkF,GAChDlF,EAAQE,eAAe,EAAGgF,EAAiB,EAC7C,CAMA/7C,gBAAgB62C,EAA8B+L,GAC5C/L,EAAQE,eAAe,EAAG6L,EAAa,EACzC,CAMA5iD,yBAAyB62C,EAA8BgM,GACrDhM,EAAQE,eAAe,EAAG8L,EAAsB,EAClD,CAMA7iD,gBAAgB62C,GAEd,OADaA,EAAQO,WAEvB,CAEAp3C,mBACI62C,EAA8BrjD,EAA6BivD,EAC3DC,EAAwCC,EACxC3G,EAAkCroD,EAAgCooD,EAClE6G,EAAiCC,GAWnC,OAVAN,EAAMO,WAAWjM,GACjB0L,EAAMQ,aAAalM,EAASrjD,GAC5B+uD,EAAMS,eAAenM,EAAS4L,GAC9BF,EAAMU,gBAAgBpM,EAAS6L,GAC/BH,EAAMW,mBAAmBrM,EAAS8L,GAClCJ,EAAM3F,UAAU/F,EAASmF,GACzBuG,EAAMY,gBAAgBtM,EAASljD,GAC/B4uD,EAAM5F,aAAa9F,EAASkF,GAC5BwG,EAAMa,SAASvM,EAAS+L,GACxBL,EAAMc,kBAAkBxM,EAASgM,GAC1BN,EAAMe,SAASzM,EACxB,EAtQW,EAAA0L,MAAK,CAwQnB,CAzQyC,GAAA1jD,MAAA,EAAAA,IAAG,IAyQ5C,CAzQ4B,GAAAD,eAAA,EAAAA,aAAY,IAyQxC,CAzQD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6Q5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa0kD,EAAb,cACE,KAAA5pE,GAAkC,KAElC,KAAAy8D,OAAS,CAiKX,CA3JEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,kCAAkCrmB,EAA4ByN,GAC5D,OAAQA,GAAO,IAAIm8D,GAAqBlN,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC9F,CAOAqmB,8CAA8CrmB,EAA4ByN,GAGxE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIm8D,GAAqBlN,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC9F,CAMA6pE,YAAYzjE,GACV,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIugE,WAAWt0E,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAa,CAC7F,CAKA0jE,oBACE,IAAI3jE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKA4jE,mBACE,IAAI5jE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EACH,IAAItc,YACAoC,KAAK+T,GAAIoV,QAAQ7yB,OAAQ0J,KAAK+T,GAAIoV,QAAQ+vC,WAAal5D,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GACvFla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,IACxC,IACN,CAMA6jE,gBAAgB5jE,GACd,IAAID,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIiqE,WAAWh+E,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAC9Dna,KAAK+T,GAAI0+D,WAAW,EAAG,EACzC,CAKAwL,wBACE,IAAI/jE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,8BAA8B62C,GAC5BA,EAAQC,YAAY,EACtB,CAMA92C,sBAAsB62C,EAA8BiN,GAClDjN,EAAQE,eAAe,EAAG+M,EAAmB,EAC/C,CAOA9jD,+BAA+B62C,EAA8B/tE,GAC3D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ0F,SAASzzE,EAAKpM,IAExB,OAAOm6E,EAAQK,WACjB,CAMAl3C,8BAA8B62C,EAA8BM,GAC1DN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,0BAA0B62C,EAA8BkN,GACtDlN,EAAQE,eAAe,EAAGgN,EAAuB,EACnD,CAOA/jD,mCAAmC62C,EAA8B/tE,GAC/D+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQ6H,SAAS51E,EAAKpM,IAExB,OAAOm6E,EAAQK,WACjB,CAMAl3C,kCAAkC62C,EAA8BM,GAC9DN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,4BAA4B62C,GAE1B,OADaA,EAAQO,WAEvB,CAEAp3C,+BACI62C,EAA8BiN,EAC9BC,GAIF,OAHAR,EAAkBS,uBAAuBnN,GACzC0M,EAAkBU,eAAepN,EAASiN,GAC1CP,EAAkBW,mBAAmBrN,EAASkN,GACvCR,EAAkBY,qBAAqBtN,EAChD,EAnKW,EAAA0M,kBAAiB,CAqK/B,CAtKyC,GAAA1kD,MAAA,EAAAA,IAAG,IAsK5C,CAtK4B,GAAAD,eAAA,EAAAA,aAAY,IAsKxC,CAtKD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0K5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAaulD,EAAb,cACE,KAAAzqE,GAAkC,KAElC,KAAAy8D,OAAS,CA+FX,CAzFEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,qCAAqCrmB,EAA4ByN,GAC/D,OAAQA,GAAO,IAAIg9D,GAAwB/N,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACjG,CAOAqmB,iDAAiDrmB,EAA4ByN,GAG3E,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIg9D,GAAwB/N,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACjG,CAQA0qE,QAAQ5M,GACN,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAMA6M,aAAal9D,GACX,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI0lD,cACpClO,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAKAqmB,iCAAiC62C,GAC/BA,EAAQC,YAAY,EACtB,CAMA92C,kBAAkB62C,EAA8B2N,GAC9C3N,EAAQE,eAAe,EAAGyN,EAAe,EAC3C,CAMAxkD,uBAAuB62C,EAA8B4N,GACnD5N,EAAQE,eAAe,EAAG0N,EAAoB,EAChD,CAMAzkD,+BAA+B62C,GAC7B,IAAI/2D,EAAS+2D,EAAQO,YAErB,OADAP,EAAQ6N,cAAc5kE,EAAQ,GACvBA,CACT,CAEAkgB,kCACI62C,EAA8B2N,EAC9BC,GAIF,OAHAL,EAAqBO,0BAA0B9N,GAC/CuN,EAAqBQ,WAAW/N,EAAS2N,GACzCJ,EAAqBS,gBAAgBhO,EAAS4N,GACvCL,EAAqBU,wBAAwBjO,EACtD,EAjGW,EAAAuN,qBAAoB,CAmGlC,CApGyC,GAAAvlD,MAAA,EAAAA,IAAG,IAoG5C,CApG4B,GAAAD,eAAA,EAAAA,aAAY,IAoGxC,CApGD,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAwG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAa0lD,EAAb,cACE,KAAA5qE,GAAkC,KAElC,KAAAy8D,OAAS,CA6HX,CAvHEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,6BAA6BrmB,EAA4ByN,GACvD,OAAQA,GAAO,IAAIm9D,GAAgBlO,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACzF,CAOAqmB,yCAAyCrmB,EAA4ByN,GAEnE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAIm9D,GAAgBlO,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EACzF,CAMAorE,QAAQ39D,GACN,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI0kD,mBACpClN,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAOAqrE,sBAAsBjlE,EAAeqH,GAEnC,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAIulD,sBACpC/N,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAK+T,GAAIg9D,SAAS/wE,KAAKwwE,OAASt2D,GAAkB,EAARC,GAAYna,KAAK+T,IAC3F,IAClB,CAKAsrE,8BACE,IAAInlE,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAIi9D,aAAahxE,KAAKwwE,OAASt2D,GAAU,CAChE,CAKAkgB,yBAAyB62C,GACvBA,EAAQC,YAAY,EACtB,CAMA92C,kBAAkB62C,EAA8BqO,GAC9CrO,EAAQE,eAAe,EAAGmO,EAAe,EAC3C,CAMAllD,gCAAgC62C,EAA8BsO,GAC5DtO,EAAQE,eAAe,EAAGoO,EAA6B,EACzD,CAOAnlD,yCAAyC62C,EAA8B/tE,GAErE+tE,EAAQG,YAAY,EAAGluE,EAAK7J,OAAQ,GACpC,IAAK,IAAIvC,EAAIoM,EAAK7J,OAAS,EAAGvC,GAAK,EAAGA,IACpCm6E,EAAQI,UAAUnuE,EAAKpM,IAEzB,OAAOm6E,EAAQK,WACjB,CAMAl3C,wCAAwC62C,EAA8BM,GACpEN,EAAQG,YAAY,EAAGG,EAAU,EACnC,CAMAn3C,uBAAuB62C,GAErB,OADaA,EAAQO,WAEvB,CAEAp3C,0BACI62C,EAA8BqO,EAC9BC,GAIF,OAHAZ,EAAaa,kBAAkBvO,GAC/B0N,EAAac,WAAWxO,EAASqO,GACjCX,EAAae,yBAAyBzO,EAASsO,GACxCZ,EAAagB,gBAAgB1O,EACtC,EA/HW,EAAA0N,aAAY,CAiI1B,CAlIyC,GAAA1lD,MAAA,EAAAA,IAAG,IAkI5C,CAlI4B,GAAAD,eAAA,EAAAA,aAAY,IAkIxC,CAlID,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsI5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,MAAam2C,EAAb,cACE,KAAAr7D,GAAkC,KAElC,KAAAy8D,OAAS,CAyIX,CAnIEC,OAAO35E,EAAWid,GAGhB,OAFA/T,KAAKwwE,OAAS15E,EACdkJ,KAAK+T,GAAKA,EACH/T,IACT,CAOAo6B,iCAAiCrmB,EAA4ByN,GAC3D,OAAQA,GAAO,IAAI4tD,GAAoBqB,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC7F,CAOAqmB,6CAA6CrmB,EAA4ByN,GAEvE,OADAzN,EAAG48D,YAAY58D,EAAGkiD,WAAa,EAAAgZ,YAAY2B,qBACnCpvD,GAAO,IAAI4tD,GAAoBqB,OAAO18D,EAAG28D,UAAU38D,EAAGkiD,YAAcliD,EAAGkiD,WAAYliD,EAC7F,CAMAqmB,2BAA2BrmB,GACzB,OAAOA,EAAG6rE,iBAAiB,OAC7B,CAQAC,WAAWhO,GACT,IAAI33D,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,EAASla,KAAK+T,GAAI+9D,SAAS9xE,KAAKwwE,OAASt2D,EAAQ23D,GAAoB,IAC9E,CAMAvC,MAAM9tD,GACJ,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI0jD,OACpClM,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAMA2qE,aAAal9D,GACX,IAAItH,EAASla,KAAK+T,GAAI88D,SAAS7wE,KAAKwwE,OAAQ,GAC5C,OAAOt2D,GAAUsH,GAAO,IAAIuX,EAAYC,aAAaC,IAAI0lD,cACpClO,OAAOzwE,KAAK+T,GAAI+8D,WAAW9wE,KAAKwwE,OAASt2D,GAASla,KAAK+T,IAC5D,IAClB,CAKAqmB,6BAA6B62C,GAC3BA,EAAQC,YAAY,EACtB,CAMA92C,qBAAqB62C,EAA8B6O,GACjD7O,EAAQE,eAAe,EAAG2O,EAAkB,EAC9C,CAMA1lD,gBAAgB62C,EAA8B8O,GAC5C9O,EAAQE,eAAe,EAAG4O,EAAa,EACzC,CAMA3lD,uBAAuB62C,EAA8B4N,GACnD5N,EAAQE,eAAe,EAAG0N,EAAoB,EAChD,CAMAzkD,2BAA2B62C,GAEzB,OADaA,EAAQO,WAEvB,CAMAp3C,oCAAoC62C,EAA8B/2D,GAChE+2D,EAAQ59C,OAAOnZ,EAAQ,OACzB,CAMAkgB,gDAAgD62C,EAA8B/2D,GAC5E+2D,EAAQ59C,OAAOnZ,EAAQ,QAAQ,EACjC,CAEAkgB,8BACI62C,EAA8B6O,EAAsCC,EACpElB,GAKF,OAJAzP,EAAiB4Q,sBAAsB/O,GACvC7B,EAAiB6Q,cAAchP,EAAS6O,GACxC1Q,EAAiB8Q,SAASjP,EAAS8O,GACnC3Q,EAAiB6P,gBAAgBhO,EAAS4N,GACnCzP,EAAiB+Q,oBAAoBlP,EAC9C,EA3IW,EAAA7B,iBAAgB,CA6I9B,CA9IyC,GAAAn2C,MAAA,EAAAA,IAAG,IA8I5C,CA9I4B,GAAAD,eAAA,EAAAA,aAAY,IA8IxC,CA9ID,CAAiB,EAAAD,cAAA,EAAAA,YAAW,I,6GCxoH5B,gBAGA,UAEA,6BACEhM,YAAoBuK,GAAA,KAAAA,QAAAA,EAClBt3B,KAAKmhC,WAAanhC,KAAKs3B,QAAQ6J,WAC/BnhC,KAAKogF,YAAcpgF,KAAKs3B,QAAQ8oD,WAClC,CAEAhpD,gBAAgC,CAGhCA,UACIipD,EAAiCC,EACjCC,GACF,MAAMC,EAAW,IAAInnD,IACrB,IAAK,MAAMp5B,KAAQogF,EACjB,GAAIvoF,OAAOizB,eAAere,KAAK2zE,EAAOpgF,GAAO,CAC3C,MAAMwgF,EAAOJ,EAAMpgF,GACnBugF,EAASp0E,IACLnM,EACA,IAAI,SACAwgF,EAAK/xD,KAAM+xD,EAAK91D,UAA+B7Q,OAAWA,EAC1D2mE,EAAKv9E,M,CAGjB,MAAMw9E,QAAkB1gF,KAAKs3B,QAAQ4V,IAAIszC,GACnCnzD,EAAoC,CAAC,EAI3C,OAHAqzD,EAAU39E,SAAQ,CAACoqC,EAAQltC,KACzBotB,EAAOptB,GAAQ,IAAI,EAAAswB,OAAO4c,EAAOxiB,KAAMwiB,EAAOjqC,KAAMiqC,EAAOze,KAAK,IAE3DrB,CACT,CACAszD,iBACE3gF,KAAKs3B,QAAQqpD,gBACf,CACAC,eACE5gF,KAAKs3B,QAAQspD,cACf,E,gGCxCF,gBACA,UAEA,UACA,UAEA,UACA,UAiBA,gBACE7zD,YAAYwtC,EAAyB,CAAC,GACpCv6D,KAAK6gF,cAAe,EACpB7gF,KAAKk8B,YAAcq+B,EAAOr+B,YAC1Bl8B,KAAK+zD,SAAW,EAAA+sB,SAAS1gE,OAAOm6C,EAAOxG,UACvC/zD,KAAKy9B,QAAU,CAACs2B,SAAU/zD,KAAK+zD,SAAUgtB,gBAAiB,GAAIC,eAAgB,GAChF,CAEI7/C,iBACF,OAAOnhC,KAAKihF,OAAOjzD,MAAMk6C,eAC3B,CACIkY,kBACF,OAAOpgF,KAAKihF,OAAOjzD,MAAMq6C,gBAC3B,CAEAsY,iBACE3gF,KAAK+zD,SAASj5C,OAChB,CAEA8lE,eACE5gF,KAAK+zD,SAASga,MAChB,CAKA32C,gBAAgB33B,EAAoCy5D,EAAqB7/D,SACjE2G,KAAK+zD,SAASK,MAAM,UAAW,qBAAqBh9B,UAExD,MAAMgF,QAAgB,IAAAQ,gBAAe58B,KAAKk8B,aAI1C,GAHAl8B,KAAKgmE,eAAiB5pC,EAAQE,qBAAqBt8B,KAAKy9B,SAExDz9B,KAAKihF,OAAS,IAAI,EAAAtE,MACC,iBAARl9E,EAAkB,CAC3B,MAAMkvE,EAAclvE,EAAIowE,SAAS,QACjC,GAAqB,oBAAVx9D,MAAuB,CAEhC,MAAM6J,QAAY,IAAAglE,WAAU,EAAA/nF,SAAV,CAAoBsG,GACtCO,KAAKq8B,WAAWngB,EAAKyyD,E,KAChB,CAEL,MAAM7zE,QAAiBuX,MAAM5S,GACvByc,QAAYphB,EAAS2X,cAC3BzS,KAAKq8B,WAAW,IAAInjC,WAAWgjB,GAAMyyD,E,OAElC,GAAKvnC,YAAY+5C,OAAO1hF,GAM7BO,KAAKq8B,WAAW58B,OANmB,CAEnC,MAAM07B,EAAM,IAAIjiC,WAAWuG,EAAKy5D,GAAc,EAAG7/D,GAAUoG,EAAIhB,YAC/DuB,KAAKq8B,WAAWlB,E,IAMtB,CAEQkB,WAAW+kD,EAA4BzS,GAC7C,GAAI3uE,KAAK6gF,aACP,MAAM,IAAIriF,MAAM,uBAGlBwB,KAAK+zD,SAASK,MAAM,UAAW,sBAAsB,KAEnD,MAAMyT,EACF7nE,KAAKgmE,eAAe+B,eAAiB/nE,KAAKgmE,oBAAsClsD,EACpF9Z,KAAKihF,OAAOvS,KAAK0S,EAAgBvZ,EAAkB8G,GAG/C3uE,KAAKgmE,eAAerO,oBACtB33D,KAAKgmE,eAAerO,mBAAmB33D,KAAKihF,OAAOjzD,OAGrDhuB,KAAKqhF,cAAcrhF,KAAKihF,OAAOjzD,OAG/BhuB,KAAKshF,eAAiB,IAAI,EAAAC,cAAcvhF,KAAKihF,OAAOjzD,MAAOhuB,KAAK2lE,KAAM3lE,KAAK+zD,SAAS,IAGtF/zD,KAAK6gF,cAAe,CACtB,CAEAzpD,UAAU+U,GACR,IAAKnsC,KAAK6gF,aACR,MAAM,IAAIriF,MAAM,+BAGlB,OAAOwB,KAAK+zD,SAASK,MAAM,UAAW,eAAeh9B,UACnD,MAAMqvC,EAAezmE,KAAKwhF,2BAA2Br1C,GAE/Cs1C,QAAsBzhF,KAAKshF,eAAeI,QAAQ1hF,KAAKgmE,eAAgBS,GAE7E,OAAOzmE,KAAK2hF,aAAaF,EAAc,GAE3C,CAEQD,2BAA2Br1C,GACjC,MAAMy1C,EAAkB5hF,KAAKihF,OAAOjzD,MAAMk6C,gBAI1C,GAAI/7D,MAAM8f,QAAQkgB,IAChB,GAAIA,EAAO9yC,SAAWuoF,EAAgBvoF,OACpC,MAAM,IAAImF,MAAM,0CAA0CojF,EAAgBvoF,kBAAkB8yC,EAAO9yC,cAKlG,CACH,GAAI8yC,EAAOjtB,OAAS0iE,EAAgBvoF,OAClC,MAAM,IAAImF,MAAM,sCAAsCojF,EAAgBvoF,kBAAkB8yC,EAAOjtB,QAGjG,MAAM2iE,EAAe,IAAI11E,MAAcggC,EAAOjtB,MAC9C,IAAI4iE,EAAoB,EACxB,IAAK,IAAIhrF,EAAI,EAAGA,EAAI8qF,EAAgBvoF,SAAUvC,EAAG,CAC/C,MAAMq2C,EAAShB,EAAOrnC,IAAI88E,EAAgB9qF,IAC1C,IAAKq2C,EACH,MAAM,IAAI3uC,MAAM,8BAA8ByB,SAEhD4hF,EAAaC,KAAuB30C,C,CAGtChB,EAAS01C,C,CAKX,GAAK7hF,KAAKy9B,QAAQsjD,iBAA2D,IAAxC/gF,KAAKy9B,QAAQsjD,gBAAgB1nF,QAAiB2G,KAAKy9B,QAAQujD,gBACrD,IAAvChhF,KAAKy9B,QAAQujD,eAAe3nF,OAqB9B2G,KAAK+hF,wBAAwB/hF,KAAKy9B,QAAQujD,eAAgB70C,GAAQ,OArBtB,CAC5C,MAAM61C,EAAoBhiF,KAAKihF,OAAOjzD,MAAM+3C,kBACtCkc,EAAcjiF,KAAKihF,OAAOjzD,MAAM6pC,YAEhCmpB,EAAiB,IAAI70E,MAAyB61E,EAAkB3oF,QAEtE,IAAK,IAAIvC,EAAI,EAAGA,EAAIkrF,EAAkB3oF,SAAUvC,EAAG,CACjD,MAAMorF,EAAaD,EAAYD,EAAkBlrF,IACjDkqF,EAAelqF,GAAKorF,EAAWv3D,KAAM8F,MAAM/B,KAI3C1uB,KAAKy9B,QAAQsjD,gBAAiBrgF,KAAKwhF,EAAWv3D,KAAM2F,YACpDtwB,KAAKy9B,QAAQujD,eAAgBtgF,KAAKyrC,EAAOr1C,GAAG43B,K,CAG9C1uB,KAAK+hF,wBAAwBf,EAAgB70C,GAAQ,E,CAWvD,OAFAnsC,KAAKmiF,yBAAyBniF,KAAKy9B,QAAQsjD,gBAAkB50C,GAEtDA,CACT,CAEQg2C,yBAAyBpB,EAAoCqB,GACnE,IAAK,IAAItrF,EAAI,EAAGA,EAAIsrF,EAAY/oF,OAAQvC,IAAK,CAC3C,MAAMurF,EAAetB,EAAgBjqF,GAC/BwrF,EAAaF,EAAYtrF,GAAG6zB,KAClC,GAAI03D,IAAiBC,EACnB,MAAM,IAAI9jF,MAAM,gBAAgB1H,mCAAmCurF,cAAyBC,I,CAGlG,CAEQP,wBACJf,EAA0CoB,EAAuBG,GACnE,IAAK,IAAIzrF,EAAI,EAAGA,EAAIsrF,EAAY/oF,OAAQvC,IAAK,CAC3C,MAAM0rF,EAAexB,EAAelqF,GAC9B2rF,EAAaL,EAAYtrF,GAAG43B,KAClC,IAAK1uB,KAAK0iF,kBAAkBF,EAAcC,EAAYF,GACpD,MAAM,IAAI/jF,MAAM,gBAAgB1H,qCAAqC0rF,EAAatnE,KAAK,mBACnFunE,EAAWvnE,KAAK,Q,CAG1B,CAEQwnE,kBAAkBF,EAAiCC,EAA+BF,GAExF,GAAIC,EAAanpF,SAAWopF,EAAWppF,OACrC,OAAO,EAGT,IAAK,IAAIvC,EAAI,EAAGA,EAAI0rF,EAAanpF,SAAUvC,EACzC,GAAI0rF,EAAa1rF,KAAO2rF,EAAW3rF,MAAQyrF,GAAwC,IAApBC,EAAa1rF,IAE1E,OAAO,EAIX,OAAO,CACT,CAEQ6qF,aAAaF,GACnB,MAAMkB,EAAmB3iF,KAAKihF,OAAOjzD,MAAMq6C,iBAC3C,GAAIoZ,EAAcpoF,SAAWspF,EAAiBtpF,OAC5C,MAAM,IAAImF,MAAM,uEAGlB,MAAM6uB,EAAS,IAAIgM,IACnB,IAAK,IAAIviC,EAAI,EAAGA,EAAI6rF,EAAiBtpF,SAAUvC,EAC7Cu2B,EAAOjhB,IAAIu2E,EAAiB7rF,GAAI2qF,EAAc3qF,IAGhD,OAAOu2B,CACT,CAEQg0D,cAAcrzD,GACpB,MAAMoY,EAAQpY,EAAM03C,WACpB1lE,KAAK2lE,KAAO,IAAIx5D,MAAMi6B,EAAM/sC,QAE5B,IAAK,IAAIvC,EAAI,EAAGA,EAAIsvC,EAAM/sC,OAAQvC,IAChCkJ,KAAK2lE,KAAK7uE,GAAKkJ,KAAKgmE,eAAerzD,QAAQyzB,EAAMtvC,GAAIkJ,KAAKihF,OAAOlpB,OAAQ/pC,EAE7E,E,yLCjPF,gBACA,aACA,UAEA,UACA,UAEA,IAAO8K,EAAS,EAAAC,YAAYC,aAAaC,IAiCzC,MAAa1I,EAIPrtB,WACF,QAAmB4W,IAAf9Z,KAAK+hB,MAAqB,CAC5B,MAAM7e,EAAOlD,KAAK4iF,aAAc5iF,KAAKwtC,QACrC,GAAItqC,EAAK7J,SAAW2G,KAAKkf,KACvB,MAAM,IAAI1gB,MAAM,8FAElBwB,KAAK+hB,MAAQ7e,C,CAEf,OAAOlD,KAAK+hB,KACd,CAKI8M,iBACF,GAAkB,WAAd7uB,KAAK2qB,KACP,MAAM,IAAI5K,UAAU,2BAGtB,OAAO/f,KAAKkD,IACd,CAMI8kD,kBACF,OAAQhoD,KAAK2qB,MACX,IAAK,QACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,OACH,OAAO3qB,KAAKkD,KAEd,QACE,MAAM,IAAI6c,UAAU,8EAE1B,CAKI4O,gBACF,OAAQ3uB,KAAK2qB,MACX,IAAK,UACL,IAAK,UACH,OAAO3qB,KAAKkD,KAEd,QACE,MAAM,IAAI6c,UAAU,6CAE1B,CAMIguB,iBACF,GAAkB,WAAd/tC,KAAK2qB,KACP,OAAO3qB,KAAKkD,KAEd,MAAM,IAAI6c,UAAU,qCACtB,CAKAjb,IAAI20E,GACF,OAAOz5E,KAAKkD,KAAK,EAAA2/B,UAAU0H,gBAAgBkvC,EAASz5E,KAAK4gC,SAC3D,CAKAx0B,IAAIqtE,EAA4Bz5D,GAC9BhgB,KAAKkD,KAAK,EAAA2/B,UAAU0H,gBAAgBkvC,EAASz5E,KAAK4gC,UAAY5gB,CAChE,CAKAoX,gBAIE,YAHmBtd,IAAf9Z,KAAK+hB,QACP/hB,KAAK+hB,YAAc/hB,KAAK6iF,kBAAmB7iF,KAAKwtC,SAE3CxtC,KAAK+hB,KACd,CAWI6e,cAIF,OAHK5gC,KAAK8iF,WACR9iF,KAAK8iF,SAAW,EAAAjgD,UAAUsM,eAAenvC,KAAK0uB,OAEzC1uB,KAAK8iF,QACd,CAEA/1D,YAIoB2B,EAIA/D,EAA+Bi4D,EACvCC,EAA+C9gE,EAIvCyrB,EAAe,EAAA3tB,KAAKO,UATpB,KAAAsO,KAAAA,EAIA,KAAA/D,KAAAA,EAA+B,KAAAi4D,aAAAA,EACvC,KAAAC,kBAAAA,EAA+C,KAAA9gE,MAAAA,EAIvC,KAAAyrB,OAAAA,EAClBxtC,KAAKkf,KAAO,EAAA2jB,UAAUkgD,wBAAwBr0D,GAC9C,MAAMxP,EAAOlf,KAAKkf,KACZ8jE,OAA0BlpE,IAAjB8oE,QAAoD9oE,IAAtB+oE,QAA6C/oE,IAAViI,EAEhF,QAAcjI,IAAViI,GACEA,EAAM1oB,SAAW6lB,EACnB,MAAM,IAAI+D,WAAW,yCAIzB,GAAa,WAAT0H,EAAmB,CACrB,UAAc7Q,IAAViI,GAAyB5V,MAAM8f,QAAQlK,IAAWA,EAAM8qC,OAAM/1D,GAAkB,iBAANA,KAC5E,MAAM,IAAIipB,UAAU,kCAGlBijE,IACFhjF,KAAK+hB,MAAQ,IAAI5V,MAAc+S,G,KAE5B,CACL,QAAcpF,IAAViI,EAAqB,CACvB,MAAMgL,EAAck2D,EAAoBt4D,GACxC,KAAM5I,aAAiBgL,GACrB,MAAM,IAAIhN,UAAU,wBAAwBgN,EAAY9sB,O,CAI5D,GAAI+iF,EAAO,CACT,MAAM9mE,EAAM,IAAIkrB,YAAYloB,EA2JpC,SAAgByL,GACd,OAAQA,GACN,IAAK,OACL,IAAK,OACL,IAAK,QACH,OAAO,EACT,IAAK,QACL,IAAK,SACH,OAAO,EACT,IAAK,QACL,IAAK,SACL,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,MAAM,IAAInsB,MAAM,qCAAqCmsB,KAE3D,CA7K2Cu4D,CAAOv4D,IAC1C3qB,KAAK+hB,MAoMb,SAAoBohE,EAAyBx4D,GAC3C,OAAO,IAAKs4D,EAAoBt4D,GAAzB,CAAgCw4D,EACzC,CAtMqBC,CAAWlnE,EAAKyO,E,EAGnC,CAMAyP,iBAAiBipD,GACf,IAAKA,EACH,MAAM,IAAI7kF,MAAM,+CAElB,MAAMmsB,EAAO,EAAAsuB,UAAUC,wBAAwBmqC,EAAYn0D,UACrDR,EAAO,EAAAuqB,UAAU8vB,oBAAoBsa,EAAY30D,MAEjD1O,EAAQ,IAAIuQ,EAAO7B,EAAM/D,GAE/B,GAAa,WAATA,EAGF04D,EAAYx0D,WAAY9rB,SAAQ,CAACggB,EAAKjsB,KACpCkpB,EAAM9c,KAAKpM,IAAK,IAAA2kC,kBAAiB1Y,EAAI,SAGlC,GACHsgE,EAAYj0D,SAAqD,iBAAnCi0D,EAAYj0D,QAAQ3wB,YAClD4kF,EAAYj0D,QAAQ3wB,WAAa,EAAG,CAItC,MAAM6kF,EAAWtjE,EAAM9c,KACjBqgF,EACF,IAAIC,SAASH,EAAYj0D,QAAQ94B,OAAQ+sF,EAAYj0D,QAAQ8pC,WAAYmqB,EAAYj0D,QAAQ3wB,YAC3FglF,EAAcC,EAAYL,EAAYn0D,UACtC71B,EAASgqF,EAAYj0D,QAAQ3wB,WAAaglF,EAEhD,GAAIJ,EAAYj0D,QAAQ3wB,WAAaglF,GAAgB,EACnD,MAAM,IAAIjlF,MAAM,yBAElB,GAAI8kF,EAASjqF,SAAWA,EACtB,MAAM,IAAImF,MAAM,0BAGlB,IAAK,IAAI1H,EAAI,EAAGA,EAAIuC,EAAQvC,IAAK,CAC/B,MAAMV,EAAIutF,EAAUJ,EAAYF,EAAYn0D,SAAWp4B,EAAI2sF,GAC3DH,EAASxsF,GAAKV,C,MAEX,CAEL,IAAI20D,EACJ,OAAQs4B,EAAYn0D,UAClB,KAAK,EAAA3F,KAAK4B,YAAYuE,SAAS2K,MAC7B0wB,EAAQs4B,EAAY10D,UACpB,MACF,KAAK,EAAApF,KAAK4B,YAAYuE,SAASk0D,MAC/B,KAAK,EAAAr6D,KAAK4B,YAAYuE,SAASm0D,MAC/B,KAAK,EAAAt6D,KAAK4B,YAAYuE,SAASo0D,OAC/B,KAAK,EAAAv6D,KAAK4B,YAAYuE,SAASq0D,KAC/B,KAAK,EAAAx6D,KAAK4B,YAAYuE,SAASs0D,MAC/B,KAAK,EAAAz6D,KAAK4B,YAAYuE,SAASu0D,KAC7Bl5B,EAAQs4B,EAAYz0D,UACpB,MACF,KAAK,EAAArF,KAAK4B,YAAYuE,SAASw0D,MAC7Bn5B,EAAQs4B,EAAYv0D,UACpB,MACF,KAAK,EAAAvF,KAAK4B,YAAYuE,SAASy0D,OAC7Bp5B,EAAQs4B,EAAYr0D,WACpB,MACF,KAAK,EAAAzF,KAAK4B,YAAYuE,SAAS00D,OAC/B,KAAK,EAAA76D,KAAK4B,YAAYuE,SAAS20D,OAC7Bt5B,EAAQs4B,EAAYp0D,WACpB,MACF,QAEE,MAAM,IAAIzwB,MAAM,oBAGpB,GAAIusD,QACF,MAAM,IAAIvsD,MAAM,oDAGlB,MAAM0E,EAAO8c,EAAM9c,KACnB,GAAIA,EAAK7J,SAAW0xD,EAAM1xD,OACxB,MAAM,IAAImF,MAAM,yBAGlB,IAAK,IAAI1H,EAAI,EAAGA,EAAIi0D,EAAM1xD,OAAQvC,IAAK,CACrC,MAAMwtF,EAAUv5B,EAAMj0D,GAClB,UAAKyqB,OAAO+iE,GACdphF,EAAKpM,GAAKokC,EAAaopD,EAASjB,EAAYn0D,UAE5ChsB,EAAKpM,GAAKwtF,C,EAKhB,OAAOtkE,CACT,CASAoa,gBAAgBl3B,EAA2CwrB,EAAyB/D,GAClF,OAAO,IAAI4F,EAAO7B,EAAM/D,OAAM7Q,OAAWA,EAAW5W,EACtD,CAEAk3B,qBAAqBmqD,GACnB,IAAKA,EACH,MAAM,IAAI/lF,MAAM,+CAElB,MAAMkwB,EAAO,EAAAuqB,UAAU4wB,wBAAwB0a,GACzC55D,EAAO,EAAAsuB,UAAUC,wBAAwBqrC,EAAUr1D,YAEnDlP,EAAQ,IAAIuQ,EAAO7B,EAAM/D,GAE/B,GAAa,WAATA,EAGF,IAAK,IAAI7zB,EAAI,EAAGA,EAAIytF,EAAU3L,mBAAoB9hF,IAChDkpB,EAAM9c,KAAKpM,GAAKytF,EAAU11D,WAAW/3B,QAGlC,GACHytF,EAAU5L,gBAAuD,iBAA9B4L,EAAU7L,iBAAgC6L,EAAU7L,gBAAkB,EAAG,CAI9G,MAAM4K,EAAWtjE,EAAM9c,KACjBqgF,EAAa,IAAIC,SACnBe,EAAU5L,eAAgBriF,OAAQiuF,EAAU5L,eAAgBzf,WAAYqrB,EAAU7L,iBAChF+K,EAAcC,EAAYa,EAAUr1D,YACpC71B,EAASkrF,EAAU7L,gBAAkB+K,EAE3C,GAAIc,EAAU7L,gBAAkB+K,GAAgB,EAC9C,MAAM,IAAIjlF,MAAM,yBAElB,GAAI8kF,EAASjqF,SAAWA,EACtB,MAAM,IAAImF,MAAM,0BAGlB,IAAK,IAAI1H,EAAI,EAAGA,EAAIuC,EAAQvC,IAAK,CAC/B,MAAMV,EAAIutF,EAAUJ,EAAYgB,EAAUr1D,WAAYp4B,EAAI2sF,GAC1DH,EAASxsF,GAAKV,C,EAGlB,OAAO4pB,CACT,EAuBF,SAAS0jE,EAAY/4D,GACnB,OAAQA,GACN,KAAK,EAAApB,KAAK4B,YAAYuE,SAASs0D,MAC/B,KAAK,EAAAz6D,KAAK4B,YAAYuE,SAASq0D,KAC/B,KAAK,EAAAx6D,KAAK4B,YAAYuE,SAASu0D,KAC7B,OAAO,EACT,KAAK,EAAA16D,KAAK4B,YAAYuE,SAASo0D,OAC/B,KAAK,EAAAv6D,KAAK4B,YAAYuE,SAASm0D,MAC7B,OAAO,EACT,KAAK,EAAAt6D,KAAK4B,YAAYuE,SAAS2K,MAC/B,KAAK,EAAA9Q,KAAK4B,YAAYuE,SAASk0D,MAC/B,KAAK,EAAAr6D,KAAK4B,YAAYuE,SAAS00D,OAC7B,OAAO,EACT,KAAK,EAAA76D,KAAK4B,YAAYuE,SAASw0D,MAC/B,KAAK,EAAA36D,KAAK4B,YAAYuE,SAASy0D,OAC/B,KAAK,EAAA56D,KAAK4B,YAAYuE,SAAS20D,OAC7B,OAAO,EACT,QACE,MAAM,IAAI7lF,MAAM,qCAAqC,EAAA+qB,KAAK4B,YAAYuE,SAAS/E,MAErF,CAMA,SAASs4D,EAAoBt4D,GAC3B,OAAQA,GACN,IAAK,OACL,IAAK,QACH,OAAOzxB,WACT,IAAK,OACH,OAAOiE,UACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOK,YACT,IAAK,QACH,OAAOH,WACT,IAAK,SACH,OAAOK,YACT,IAAK,UACH,OAAOE,aACT,IAAK,UACH,OAAOE,aACT,QAEE,MAAM,IAAIQ,MAAM,qBAEtB,CAGA,SAAS08B,EAAapkC,EAAS6zB,GAE7B,GAAIA,IAAS,EAAApB,KAAK4B,YAAYuE,SAASw0D,OAASv5D,IAASmO,EAAOu3C,eAAe6T,OAC7E,GAAIptF,EAAE6uB,mBAAmB,aAAe7uB,EAAEwuB,UAAU,YAClD,MAAM,IAAIvF,UAAU,8BAEjB,IACH4K,IAAS,EAAApB,KAAK4B,YAAYuE,SAAS00D,QAAUz5D,IAASmO,EAAOu3C,eAAe+T,QAC5Ez5D,IAAS,EAAApB,KAAK4B,YAAYuE,SAAS20D,QAAU15D,IAASmO,EAAOu3C,eAAegU,OAK9E,MAAM,IAAItkE,UAAU,oBAAoB,EAAAwJ,KAAK4B,YAAYuE,SAAS/E,MAJlE,GAAI7zB,EAAE6uB,mBAAmB,aAAe7uB,EAAEwuB,SAAS,GACjD,MAAM,IAAIvF,UAAU,0B,CAMxB,OAAOjpB,EAAEitB,UACX,CAGA,SAAS4/D,EAAUa,EAAgB75D,EAAuDuuC,GACxF,OAAQvuC,GACN,KAAK,EAAApB,KAAK4B,YAAYuE,SAASu0D,KAC/B,KAAK,EAAA16D,KAAK4B,YAAYuE,SAASs0D,MAC7B,OAAOQ,EAAKC,SAASvrB,GACvB,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAASq0D,KAC7B,OAAOS,EAAKE,QAAQxrB,GACtB,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAASo0D,OAC7B,OAAOU,EAAKG,UAAUzrB,GAAY,GACpC,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAASm0D,MAC7B,OAAOW,EAAKI,SAAS1rB,GAAY,GACnC,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAAS2K,MAC7B,OAAOmqD,EAAKK,WAAW3rB,GAAY,GACrC,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAASk0D,MAC7B,OAAOY,EAAKM,SAAS5rB,GAAY,GACnC,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAAS00D,OAC7B,OAAOI,EAAKO,UAAU7rB,GAAY,GACpC,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAASw0D,MAC7B,OAAOhpD,EACH,UAAKlZ,SAASwiE,EAAKO,UAAU7rB,GAAY,GAAOsrB,EAAKO,UAAU7rB,EAAa,GAAG,IAAO,GAAQvuC,GACpG,KAAK,EAAApB,KAAK4B,YAAYuE,SAASy0D,OAC7B,OAAOK,EAAKQ,WAAW9rB,GAAY,GACrC,KAAK,EAAA3vC,KAAK4B,YAAYuE,SAAS20D,OAC7B,OAAOnpD,EACH,UAAKlZ,SAASwiE,EAAKO,UAAU7rB,GAAY,GAAOsrB,EAAKO,UAAU7rB,EAAa,GAAG,IAAO,GAAOvuC,GACnG,QACE,MAAM,IAAInsB,MAAM,sCAAsC,EAAA+qB,KAAK4B,YAAYuE,SAAS/E,MAEtF,CA3aA,U,iZCxCA,gBACA,aACA,UAIA,UAMA,4BAAiCwhB,KAAqB84C,GACpD,IAAK94C,GAAUA,EAAO9yC,SAAW4rF,EAAmB5rF,OAClD,OAAO,EAET,IAAK,IAAIvC,EAAI,EAAGA,EAAIq1C,EAAO9yC,OAAQvC,IACjC,IAAKq1C,EAAOr1C,GAAG43B,MAAQyd,EAAOr1C,GAAG43B,KAAKr1B,SAAW4rF,EAAmBnuF,GAClE,OAAO,EAGX,OAAO,CACT,EAGA,kBAAuBouF,EAAeC,GACpC,IAAKD,EACH,MAAM,IAAI1mF,MAAqB,iBAAR2mF,EAAmBA,EAAMA,IAEpD,EAEA,kBAOE/qD,mBACIgrD,EAEAC,GAEF,GAAID,EAAG/rF,SAAWgsF,EAAGhsF,OACnB,OAAO,EAET,IAAK,IAAIvC,EAAI,EAAGA,EAAIsuF,EAAG/rF,OAAQvC,IAC7B,GAAIsuF,EAAGtuF,KAAOuuF,EAAGvuF,GACf,OAAO,EAGX,OAAO,CACT,GAGF,MAAawuF,EAOXlrD,6BAA6BmrD,EAA0BC,GAYrD,MAAO,CAPqB,IAAjBD,EAAMlsF,OAAgB,CAAC,EAAGksF,EAAM,IAAMA,EAKrB,IAAjBC,EAAMnsF,OAAgB,CAACmsF,EAAM,GAAI,GAAKA,EAGnD,CASAprD,8BAA8Boe,EAAuBI,EAAeC,GAEpD,IAAVD,GAEFJ,EAAY31C,OAAO21C,EAAYn/C,OAAS,EAAG,GAG/B,IAAVw/C,GACFL,EAAYn0C,KAEhB,CAQA+1B,uBAAuBpjC,EAAqBiB,GAC1C,OAAQjB,EAAE,KAAOiB,EAAE,QAAM6hB,EAAY,CAAC9iB,EAAE,GAAIiB,EAAE,GAChD,EAjDF,eAoDA,MAAamqC,EAQXhI,iBAAiBqrD,EAA0BC,EAA0BC,GAAW,GAC9E,MAAM/+B,EAAQ6+B,EAAMpsF,OACdwtD,EAAQ6+B,EAAMrsF,OACpB,GAAc,IAAVutD,EACF,OAAO8+B,EAET,GAAc,IAAV7+B,EACF,OAAO4+B,EAET,MAAMG,EAAQj9E,KAAKC,IAAI68E,EAAMpsF,OAAQqsF,EAAMrsF,QACrCwsF,EAAQ,IAAI15E,MAAcy5E,GAGhC,GAAID,EAAU,CACZ,GAAI/+B,EAAQ,GAAKC,EAAQ,EACvB,OAEF,MAAMi/B,EACFR,EAAWS,gBAAgB,CAACN,EAAM7+B,EAAQ,GAAI6+B,EAAM7+B,EAAQ,IAAK,CAAC8+B,EAAM7+B,EAAQ,GAAI6+B,EAAM7+B,EAAQ,KACtG,QAAqB/sC,IAAjBgsE,EACF,QAEDD,EAAMD,EAAQ,GAAIC,EAAMD,EAAQ,IAAME,C,CAGzC,IAAK,IAAIhvF,EAAI6uF,EAAW,EAAI,EAAG7uF,GAAK8uF,EAAO9uF,IAAK,CAC9C,MAAMkvF,EAAOp/B,EAAQ9vD,EAAI,EAAI,EAAI2uF,EAAM7+B,EAAQ9vD,GACzCmvF,EAAOp/B,EAAQ/vD,EAAI,EAAI,EAAI4uF,EAAM7+B,EAAQ/vD,GAE/C,GAAIkvF,IAASC,GAAQD,EAAO,GAAKC,EAAO,EACtC,OAEFJ,EAAMD,EAAQ9uF,GAAK6R,KAAKC,IAAIo9E,EAAMC,E,CAGpC,OAAOJ,CACT,CAQAzrD,aAAa8rD,EAAuCC,GAIlD,MAAMC,EAAkB,IAAIj6E,MAAMg6E,EAAc9sF,QAEhD,OADA+oC,EAAcikD,UAAUH,EAAoBC,EAAeC,GACpDA,CACT,CASAhsD,iBAAiB8rD,EAAuCC,EAAkCC,GAIxF,MAAM17C,EAAYw7C,EAAmB7sF,OAAS8sF,EAAc9sF,OAC5D,IAAK,IAAIvC,EAAI,EAAGA,EAAIqvF,EAAc9sF,OAAQvC,IACxCsvF,EAAgBtvF,GAAKovF,EAAmBx7C,EAAY5zC,GAAKqvF,EAAcrvF,EAE3E,CAUAsjC,YACIpjC,EAAWiB,EAAW+/D,EAA+DsuB,EACrFC,GACF,MAAM/tC,EAAcpW,EAAcuW,UAAU3hD,EAAE03B,KAAMz2B,EAAEy2B,MAEtD,GAAI8pB,EAAa,CACf,GAAI8tC,IAAYzjD,EAAU0V,SAASC,EAAaxhD,EAAE03B,MAEhD,OAGF,MAAMxP,EAAO2jB,EAAU3jB,KAAKs5B,GACtBphD,EAAIkvF,EAAUtvF,EAAI,IAAI,EAAAu5B,OAAOioB,EAAa+tC,GAAcvvF,EAAE2zB,MAGhE,GAA2B,IAAvB6tB,EAAYn/C,OACdjC,EAAEgV,IAAI,GAAI4rD,EAAGhhE,EAAE8N,IAAI,IAAK7M,EAAE6M,IAAI,UAI3B,CACH,MAAM0hF,EAAgB,IAAIr6E,MAAcqsC,EAAYn/C,QAC9CotF,EAAmB,IAAIt6E,MAAMnV,EAAE03B,KAAKr1B,QACpCqtF,EAAmB,IAAIv6E,MAAMlU,EAAEy2B,KAAKr1B,QAC1C,IAYIstF,EAZAC,EAAsB,EACtBC,EAAsB,EACtBC,GAAY,EACZC,GAAY,EACM,IAAlB/vF,EAAE03B,KAAKr1B,SACTutF,EAAO5vF,EAAE8N,IAAI,IACbgiF,GAAY,GAEQ,IAAlB7uF,EAAEy2B,KAAKr1B,SACTwtF,EAAO5uF,EAAE6M,IAAI,IACbiiF,GAAY,GAGd,IAAK,IAAIjwF,EAAI,EAAGA,EAAIooB,EAAMpoB,IAAK,CAE7B6vF,EAAO7vF,EACP,IAAK,IAAIL,EAAI+hD,EAAYn/C,OAAS,EAAG5C,GAAK,EAAGA,IAC3C+vF,EAAc/vF,GAAKkwF,EAAOnuC,EAAY/hD,GACtCkwF,EAAOh+E,KAAKqD,MAAM26E,EAAOnuC,EAAY/hD,IAGlCqwF,IAEH1kD,EAAcikD,UAAUG,EAAexvF,EAAE03B,KAAM+3D,GAC/CG,EAAO5vF,EAAE8N,IAAI2hF,IAEVM,IACH3kD,EAAcikD,UAAUG,EAAevuF,EAAEy2B,KAAMg4D,GAC/CG,EAAO5uF,EAAE6M,IAAI4hF,IAGftvF,EAAEgV,IAAIo6E,EAAexuB,EAAG4uB,EAAMC,G,EAIlC,OAAOzvF,C,CAIX,CAOAgjC,wBAAwB3J,EAA0Bu2D,GAEhD,MAAM//B,EAAYx2B,EAAMp3B,OAClB4tF,EAAYD,EAAW3tF,OAC7B,GAAI4tD,EAAYggC,EACd,OAAO,EAET,IAAK,IAAInwF,EAAI,EAAGA,GAAKmwD,EAAWnwD,IAC9B,GAA6B,IAAzB25B,EAAMw2B,EAAYnwD,IAAY25B,EAAMw2B,EAAYnwD,KAAOkwF,EAAWC,EAAYnwF,GAChF,OAAO,EAGX,OAAO,CACT,CASAsjC,wBAAwBof,EAA+BhB,GACrD,MAAMvW,EAASuX,EAAWngD,OACpBq1B,EAAiB,GACvB,IAAK,IAAI53B,EAAI,EAAGA,EAAImrC,EAAQnrC,IAAK,CAC/B,MAAM+4B,EAAMoS,EAAS,EAAInrC,EACnBE,EAAIwiD,EAAW3pB,IAAQ,GACnB2oB,EAAYA,EAAYn/C,OAAS,EAAIvC,IAAM,GAC7C,GAAW,IAANE,GACX03B,EAAKxvB,QAAQ2wB,E,CAGjB,OAAOnB,CACT,EA9LF,kBAmMA,2BACI5qB,EAAoCq8B,EAAoC+mD,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAehnD,EAAO9mC,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI0oF,EAAc,GAAKA,GAAepjF,EAAOzK,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI2oF,EAAcC,EAAYjnD,EAAO9mC,OACnC,MAAM,IAAImF,MAAM,kDAElB,GAAI0oF,EAAcE,EAAYtjF,EAAOzK,OACnC,MAAM,IAAImF,MAAM,4CAGlB,IAAK,IAAI0b,EAAS,EAAGA,EAASktE,EAAWltE,IACvCpW,EAAOojF,EAAchtE,GAAUimB,EAAOgnD,EAAcjtE,EAExD,EAEA,iBAIEkgB,4BACIitD,EAA8BC,EAAoBC,EAA+BC,EACjFC,GACF,GAAyB,IAArBJ,EAAUhuF,QAAsC,IAAtBkuF,EAAWluF,OACvC,MAAM,IAAImF,MAAM,8BAGlB,IAAI/C,EACA0D,EACAlB,EAEAqpF,GACF7rF,EAAI4rF,EAAU,GACdloF,EAAIkoF,EAAU,KAEd5rF,EAAI4rF,EAAU,GACdloF,EAAIkoF,EAAU,IAGhB,IAAIK,GAAQ,EAUZ,GARIF,GACFvpF,EAAIspF,EAAW,GACfG,EAAO,IAEPzpF,EAAIspF,EAAW,GACfG,EAAO,GAGLH,EAAWG,KAAUvoF,EACvB,MAAM,IAAIX,MAAM,sBAGlB,GAAI/C,GAAK,GAAKwC,GAAK,GAAKkB,GAAK,EAC3B,MAAM,IAAIX,MAAM,2BAGlB,GAAIipF,IAAcrlD,EAAculD,iBAAiBF,EAAW,CAAChsF,EAAGwC,IAC9D,MAAM,IAAIO,MAAM,0CAGlB,MAAO,CAAC/C,EAAGwC,EAAGkB,EAChB,GAGF,MAAa85C,EACX7e,+BAA+BwtD,GAE7B,OAAQA,GACN,KAAK,EAAAr+D,KAAK4B,YAAYuE,SAASq0D,KAC7B,MAAO,OACT,KAAK,EAAAx6D,KAAK4B,YAAYuE,SAASs0D,MAC7B,MAAO,QACT,KAAK,EAAAz6D,KAAK4B,YAAYuE,SAASu0D,KAC7B,MAAO,OACT,KAAK,EAAA16D,KAAK4B,YAAYuE,SAASm0D,MAC7B,MAAO,QACT,KAAK,EAAAt6D,KAAK4B,YAAYuE,SAASo0D,OAC7B,MAAO,SACT,KAAK,EAAAv6D,KAAK4B,YAAYuE,SAASk0D,MAC7B,MAAO,QACT,KAAK,EAAAr6D,KAAK4B,YAAYuE,SAAS00D,OAC7B,MAAO,SACT,KAAK,EAAA76D,KAAK4B,YAAYuE,SAAS2K,MAC7B,MAAO,UACT,KAAK,EAAA9Q,KAAK4B,YAAYuE,SAASy0D,OAC7B,MAAO,UACT,KAAK,EAAA56D,KAAK4B,YAAYuE,SAAS6K,OAC7B,MAAO,SAIT,KAAK,EAAAhR,KAAK4B,YAAYuE,SAASw0D,MAC7B,MAAO,QACT,KAAK,EAAA36D,KAAK4B,YAAYuE,SAAS20D,OAC7B,MAAO,SAET,QACE,MAAM,IAAI7lF,MAAM,0BAA0B,EAAA+qB,KAAK4B,YAAYuE,SAASk4D,MAE1E,CAEAxtD,kCAAkCzP,GAChC,OAAQA,GACN,IAAK,OACH,OAAO,EAAApB,KAAK4B,YAAYuE,SAASq0D,KACnC,IAAK,QACH,OAAO,EAAAx6D,KAAK4B,YAAYuE,SAASs0D,MACnC,IAAK,OACH,OAAO,EAAAz6D,KAAK4B,YAAYuE,SAASu0D,KACnC,IAAK,QACH,OAAO,EAAA16D,KAAK4B,YAAYuE,SAASm0D,MACnC,IAAK,SACH,OAAO,EAAAt6D,KAAK4B,YAAYuE,SAASo0D,OACnC,IAAK,QACH,OAAO,EAAAv6D,KAAK4B,YAAYuE,SAASk0D,MACnC,IAAK,SACH,OAAO,EAAAr6D,KAAK4B,YAAYuE,SAAS00D,OACnC,IAAK,UACH,OAAO,EAAA76D,KAAK4B,YAAYuE,SAAS2K,MACnC,IAAK,UACH,OAAO,EAAA9Q,KAAK4B,YAAYuE,SAASy0D,OACnC,IAAK,SACH,OAAO,EAAA56D,KAAK4B,YAAYuE,SAAS6K,OACnC,IAAK,QACH,OAAO,EAAAhR,KAAK4B,YAAYuE,SAASw0D,MACnC,IAAK,SACH,OAAO,EAAA36D,KAAK4B,YAAYuE,SAAS20D,OAEnC,QACE,MAAM,IAAI7lF,MAAM,0BAA0BmsB,KAEhD,CAEAyP,2BAA2B1L,GAEzB,OAAOA,EAAKkK,KAAI/gC,GAAK,UAAK0pB,OAAO1pB,GAAKA,EAAEksB,WAAalsB,GACvD,CAEAuiC,gCAAgCmvC,GAC9B,MAAO,CACLj5C,WAAY2oB,EAAUC,wBAAwBqwB,EAAU/4C,UACxDC,MAAO,CAAC/B,KAAMuqB,EAAU8vB,oBAAoBQ,EAAU94C,MAAOZ,IAAK+I,KAAI/gC,GAAKA,EAAEm4B,aAEjF,CAEAoK,+BAA+B+S,GAC7B,MAAMze,EAAO,GACb,IAAK,IAAI53B,EAAI,EAAGA,EAAIq2C,EAAOsrC,aAAc3hF,IACvC43B,EAAKhuB,KAAKu6B,EAASC,aAAaiS,EAAOze,KAAK53B,KAE9C,OAAO43B,CACT,CAEA0L,qCAAqC3hC,GACnC,MAAM0gC,EAAa,GACnB,IAAK,IAAIriC,EAAI,EAAGA,EAAI2B,EAAKwxE,mBAAoBnzE,IAC3CqiC,EAAWz4B,KAAKjI,EAAK0gC,WAAWriC,IAElC,OAAOqiC,CACT,EA/FF,cAkGA,MAAa8B,EAIXb,oBAAoBhkC,EAAiCkrB,GACnD,OAAI,UAAKC,OAAOnrB,GACPA,EAAE2tB,WACA3tB,aAAa,EAAA64E,YAAYjuD,KAC3B,UAAKuC,UAAU,CAACnC,IAAKhrB,EAAEgrB,IAAKC,KAAMjrB,EAAEirB,KAAMC,SAAUA,SAAAA,IAAoByC,WAE1E3tB,CACT,CACAgkC,cAAchkC,GACZ,OAAO,UAAKmrB,OAAOnrB,IAAMA,aAAa,EAAA64E,YAAYjuD,IACpD,EAdF,aAiBA,MAAa6hB,EACXzI,YAAY1L,GACV,OAAOmU,EAAUglD,0BAA0Bn5D,EAAM,EAAGA,EAAKr1B,OAC3D,CAGA+gC,yBAAyB1L,EAAyB6qB,GAChD,GAAIA,EAAO,GAAKA,EAAO7qB,EAAKr1B,OAC1B,MAAM,IAAImF,MAAM,wBAAwB+6C,yCAA4C7qB,EAAKr1B,sBAE3F,OAAOwpC,EAAUglD,0BAA0Bn5D,EAAM6qB,EAAM7qB,EAAKr1B,OAC9D,CAGA+gC,uBAAuB1L,EAAyB6qB,GAC9C,GAAIA,EAAO,GAAKA,EAAO7qB,EAAKr1B,OAC1B,MAAM,IAAImF,MAAM,wBAAwB+6C,uCAA0C7qB,EAAKr1B,sBAEzF,OAAOwpC,EAAUglD,0BAA0Bn5D,EAAM,EAAG6qB,EACtD,CAEAnf,iCAAiC1L,EAAyB5T,EAAeC,GACvE,IAAImE,EAAO,EACX,IAAK,IAAIpoB,EAAIgkB,EAAOhkB,EAAIikB,EAAKjkB,IAAK,CAGhC,GAAI43B,EAAK53B,IAAM,EACb,MAAM,IAAI0H,MAEN,sHAEN0gB,GAAQwP,EAAK53B,E,CAEf,OAAOooB,CACT,CAEAkb,sBAAsB1L,GACpB,MAAMiS,EAAOjS,EAAKr1B,OAClB,GAAa,IAATsnC,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAAC,GAEV,MAAMC,EAAU,IAAIz0B,MAAMw0B,GAC1BC,EAAQD,EAAO,GAAK,EACpBC,EAAQD,EAAO,GAAKjS,EAAKiS,EAAO,GAChC,IAAK,IAAI7pC,EAAI6pC,EAAO,EAAG7pC,GAAK,IAAKA,EAC/B8pC,EAAQ9pC,GAAK8pC,EAAQ9pC,EAAI,GAAK43B,EAAK53B,EAAI,GAEzC,OAAO8pC,CACT,CAEAxG,iBAAiB1L,GAEf,OADaA,EAAKn1B,QACN8rC,SACd,CAEAjL,uBAAuBq/C,EAA4B74C,EAA4B2Y,QAChEz/B,IAATy/B,IACFA,EAAOkgC,EAAQpgF,QAEjB,IAAI6gB,EAAS,EACb,IAAK,IAAIpjB,EAAI,EAAGA,EAAIyiD,IAAQziD,EAC1BojB,GAAU0mB,EAAQ9pC,GAAK2iF,EAAQ3iF,GAEjC,OAAOojB,CACT,CAEAkgB,uBAAuBlgB,EAAgB0mB,GACrC,MAAMD,EAAOC,EAAQvnC,OACrB,GAAa,IAATsnC,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAACzmB,EAAS0mB,EAAQ,IAE3B,MAAM64C,EAAoB,IAAIttE,MAAMy0B,EAAQvnC,QAC5C,IAAK,IAAIvC,EAAI,EAAGA,EAAI2iF,EAAQpgF,OAAS,IAAKvC,EACxC2iF,EAAQ3iF,GAAK6R,KAAKqD,MAAMkO,EAAS0mB,EAAQ9pC,IACzCojB,GAAUu/D,EAAQ3iF,GAAK8pC,EAAQ9pC,GAGjC,OADA2iF,EAAQA,EAAQpgF,OAAS,GAAK6gB,EACvBu/D,CACT,CAKAr/C,qBAAqBmf,EAAc8B,GACjC,GAAI9B,GAAQ8B,GAAc9B,GAAQ8B,EAChC,MAAM,IAAI78C,MAAM,wCAElB,OAAO+6C,EAAO,EAAIA,EAAO8B,EAAa9B,CACxC,CAEAnf,qBAAqBgxB,EAAyB/P,GAC5C,OAAO+P,EAAKxyB,KAAIh/B,GAAKoG,KAAKsiD,cAAc1oD,EAAGyhD,IAC7C,CAUAjhB,sBAAsBjgB,EAAiBuU,EAAyBo5D,GAC9D,GAAoB,IAAhBp5D,EAAKr1B,QAAiC,IAAjB8gB,EAAM9gB,OAC7B,MAAM,IAAImF,MAAM,oDAElB,QAA0Bsb,IAAtBguE,EACFA,EAAoBp5D,EAAKr1B,YAEzB,GAAIyuF,GAAqB,GAAKA,EAAoBp5D,EAAKr1B,OACrD,MAAM,IAAImF,MAAM,kCAIpB,IAAK,IAAIpC,EAAI0rF,EAAoB,EAAG1rF,GAAK,IACvC+d,EAAM/d,OACF+d,EAAM/d,GAAKsyB,EAAKtyB,OAFwBA,EAK5C+d,EAAM/d,GAAK,CAEf,CAcAg+B,6BAA6B2tD,EAAiCC,GAE5D,GAA0B,IAAtBA,EAAW3uF,OAAc,CAC3B,GAA4B,IAAxB0uF,EAAa1uF,QAAiD,IAAjCwpC,EAAU3jB,KAAK6oE,GAC9C,MAAO,GAEP,MAAM,IAAIvpF,MAAM,oC,CAIpB,MAAMypF,EAAQD,EAAW3uF,OACnB01C,EAAe,IAAI5iC,MAAc87E,GACvC,IAAIC,GAAoB,EACpBC,EAAgB,EACpB,IAAK,IAAIrxF,EAAI,EAAGA,EAAImxF,EAAOnxF,IAAK,CAC9B,GAAIkxF,EAAWlxF,IAAM,EACnB,MAAM,IAAI0H,MAAM,qDAElB,IAAuB,IAAnBwpF,EAAWlxF,GAAW,CACxB,IAA0B,IAAtBoxF,EACF,MAAM,IAAI1pF,MAAM,kDAElB0pF,EAAmBpxF,C,KACd,CACL,GAAsB,IAAlBkxF,EAAWlxF,GAAU,CACvB,GAAIA,GAAKixF,EAAa1uF,OACpB,MAAM,IAAImF,MAAM,gFAElBuwC,EAAaj4C,GAAKixF,EAAajxF,E,MAE/Bi4C,EAAaj4C,GAAKkxF,EAAWlxF,GAE/BqxF,GAAiBp5C,EAAaj4C,E,EAIlC,MAAMsxF,EAAgBvlD,EAAU3jB,KAAK6oE,GACrC,IAA0B,IAAtBG,EAAyB,CAC3B,GAAIE,EAAgBD,GAAkB,EACpC,MAAM,IAAI3pF,MAAM,6EACZupF,qBAAgCC,MAEtCj5C,EAAam5C,GAAoBE,EAAgBD,C,MAIjD,GAAIA,IAAkBC,EACpB,MAAM,IAAI5pF,MAAM,2DAGpB,OAAOuwC,CACT,CAQA3U,uBAAuBpjC,EAAsBwpD,GAC3C,OAAIA,EACKA,EAAK5nB,KAAKtgC,GAAMtB,EAAEsB,KAElBtB,EAAEuC,QAAQ8rC,SAErB,CAOAjL,gBAAgB1L,EAAyB25D,GACvC,MAAM1nD,EAAOjS,EAAKr1B,OAClB,OAAOq1B,EAAKkK,KAAI,CAACtgC,EAAGxB,IAAMwB,EAAI+vF,EAAIvxF,GAAKuxF,EAAIvxF,EAAI6pC,IACjD,CAOAvG,gBAAgBkuD,EAA2BC,GACzC,OAAID,EAAOjvF,SAAWkvF,EAAOlvF,QAGtBivF,EAAOz7B,OAAM,CAACv0D,EAAGxB,IAAMwB,IAAMiwF,EAAOzxF,IAC7C,CAMAsjC,+BAA+B1L,GAC7B,GAAIA,EAAKr1B,OAAS,EAChB,MAAM,IAAI0mB,UAAU,mDAEtB,IAAIb,EAAO,EACX,IAAK,MAAM9oB,KAAKs4B,EAAM,CACpB,IAAK7lB,OAAOmjB,UAAU51B,GACpB,MAAM,IAAI2pB,UAAU,kBAAkB3pB,uBAExC,GAAIA,EAAI,GAAKA,EAAI,WACf,MAAM,IAAI2pB,UAAU,yBAAyB3pB,oBAE/C8oB,GAAQ9oB,C,CAEV,OAAO8oB,CACT,CAOAkb,oBAAoB1L,EAAyB6qB,GACvCA,EAAO,IACTA,GAAQ7qB,EAAKr1B,QAEf,MAAMmvF,EAAQ95D,EAAKm8B,QAAO,CAACjxD,EAAG5B,IAAM4B,EAAI5B,GAAG,GACrCywF,EAAQ/5D,EAAKn1B,MAAMggD,GAAMsR,QAAO,CAACjxD,EAAG5B,IAAM4B,EAAI5B,GAAG,GAGvD,MAFmB,CAACwwF,EAAQC,EAAOA,EAGrC,CAOAruD,oBAAoB1L,EAAyB08B,GAC3C,MAAM7J,EAAa,IAAIp1C,MAGvBi/C,EAAOvoB,EAAU2oB,cAAcJ,EAAM18B,EAAKr1B,QAE1C,IAAK,IAAIvC,EAAI,EAAGA,EAAI43B,EAAKr1B,OAAQvC,IAAK,CACpC,MAAM4xF,EAAgBt9B,EAAK9wD,QAAQxD,IAAM,EACzC,GAAI4xF,GAA6B,IAAZh6D,EAAK53B,GACxB,MAAM,IAAI0H,MAAM,6CAGG,IAAhB4sD,EAAK/xD,QAAgBq1B,EAAK53B,GAAK,GAAOs0D,EAAK/xD,OAAS,IAAMqvF,IAC7DnnC,EAAW7gD,KAAKguB,EAAK53B,G,CAIzB,OAAOyqD,CACT,CAOAnnB,sBAAsB1L,EAAyB08B,GAC7C,MAAM7J,EAAa,IAAIp1C,MAAcuiB,EAAKr1B,OAAS+xD,EAAK/xD,QAGxDkoD,EAAWjI,KAAK,GAGhB,IAAK,IAAIxiD,EAAI,EAAGA,EAAIs0D,EAAK/xD,OAAQvC,IAAK,CACpC,MAAMyiD,EAAO1W,EAAUyf,cAAc8I,EAAKt0D,GAAIyqD,EAAWloD,QACzD,GAAIkgD,GAAQgI,EAAWloD,OACrB,MAAM,IAAImF,MAAM,mCAElB,GAAyB,IAArB+iD,EAAWhI,GACb,MAAM,IAAI/6C,MAAM,+BAGlB+iD,EAAWhI,GAAQ,C,CAIrB,IAAIovC,EAAoB,EACxB,IAAK,IAAI7xF,EAAI,EAAGA,EAAIyqD,EAAWloD,OAAQvC,IACf,IAAlByqD,EAAWzqD,KACbyqD,EAAWzqD,GAAK43B,EAAKi6D,MAMzB,GAAIA,IAAsBj6D,EAAKr1B,OAC7B,MAAM,IAAImF,MAAM,qDAGlB,OAAO+iD,CACT,EAzUF,cA6UA,iBAEEnnB,WACIt2B,EAAoCq8B,EAAoC+mD,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAehnD,EAAO9mC,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI0oF,EAAc,GAAKA,GAAepjF,EAAOzK,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI2oF,EAAcC,EAAYjnD,EAAO9mC,OACnC,MAAM,IAAImF,MAAM,kDAElB,GAAI0oF,EAAcE,EAAYtjF,EAAOzK,OACnC,MAAM,IAAImF,MAAM,4CAGlB,IAAK,IAAI0b,EAAS,EAAGA,EAASktE,EAAWltE,IACvCpW,EAAOojF,EAAchtE,IAAWvR,KAAKuU,IAAIijB,EAAOgnD,EAAcjtE,GAAS,EAE3E,CAGAkgB,YACIt2B,EAAoCq8B,EAAoC+mD,EAAqBC,EAC7FC,EAAmBrkC,GACrB,GAAIokC,EAAc,GAAKA,GAAehnD,EAAO9mC,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI0oF,EAAc,GAAKA,GAAepjF,EAAOzK,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI2oF,EAAcC,EAAYjnD,EAAO9mC,OACnC,MAAM,IAAImF,MAAM,kDAElB,GAAI0oF,EAAcE,EAAYtjF,EAAOzK,OACnC,MAAM,IAAImF,MAAM,4CAGlB,IAAK,IAAI0b,EAAS,EAAGA,EAASktE,EAAWltE,IACvCpW,EAAOojF,EAAchtE,IAAY6oC,EAAQ5iB,EAAOgnD,EAAcjtE,EAElE,CAGAkgB,YACIt2B,EAAoCq8B,EAAoC+mD,EAAqBC,EAC7FC,EAAmBnvF,GACrB,GAAIkvF,EAAc,GAAKA,GAAehnD,EAAO9mC,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI0oF,EAAc,GAAKA,GAAepjF,EAAOzK,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI2oF,EAAcC,EAAYjnD,EAAO9mC,OACnC,MAAM,IAAImF,MAAM,kDAElB,GAAI0oF,EAAcE,EAAYtjF,EAAOzK,OACnC,MAAM,IAAImF,MAAM,4CAGlB,IAAK,IAAI0b,EAAS,EAAGA,EAASktE,EAAWltE,IACvCpW,EAAOojF,EAAchtE,GAAUvR,KAAKuU,IAAIijB,EAAOgnD,EAAcjtE,GAASjiB,EAE1E,CAGAmiC,WACIt2B,EAAoCq8B,EAAoC+mD,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAehnD,EAAO9mC,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI0oF,EAAc,GAAKA,GAAepjF,EAAOzK,OAC3C,MAAM,IAAImF,MAAM,6BAElB,GAAI2oF,EAAcC,EAAYjnD,EAAO9mC,OACnC,MAAM,IAAImF,MAAM,kDAElB,GAAI0oF,EAAcE,EAAYtjF,EAAOzK,OACnC,MAAM,IAAImF,MAAM,4CAGlB,IAAK,IAAI0b,EAAS,EAAGA,EAASktE,EAAWltE,IACvCpW,EAAOojF,EAAchtE,GAAWimB,EAAOgnD,EAAcjtE,GAAUpW,EAAOojF,EAAchtE,EAExF,GAGF,MAAag2C,EAOX91B,kBAAkB1L,EAAyB6qB,EAAcztC,EAAiBkkD,GAExE,GAAqB,IAAjBlkD,EAAMzS,OAAc,CACtB,IAAK22D,EACH,MAAM,IAAIxxD,MAAM,8EAElB0xD,EAAU04B,eAAel6D,EAAK6qB,GAAOyW,EAAYlkD,E,CAGnD,MAAMiuC,EAAqB,GACrBC,EAAU,CAAC,GACjB,IAAK,IAAIljD,EAAI,EAAGA,EAAIgV,EAAMzS,SAAUvC,EAAG,CAC3B,IAANA,GACFkjD,EAAQt5C,KAAKs5C,EAAQljD,EAAI,GAAKgV,EAAMhV,EAAI,IAE1C,MAAM25B,EAAQ/B,EAAKn1B,QACnBk3B,EAAM8oB,GAAQztC,EAAMhV,GACpBijD,EAAOr5C,KAAK+vB,E,CAEd,MAAO,CAACspB,EAAQC,EAClB,CAEA5f,sBAAsByuD,EAA8B74B,EAAoBlkD,GAEtE,GAAI+8E,EAAuB74B,GAAe,EACxC,MAAM,IAAIxxD,MAAM,4CAElB,IAAK,IAAI1H,EAAI,EAAGA,EAAIk5D,IAAcl5D,EAChCgV,EAAMpL,KAAKmoF,EAAuB74B,EAEtC,EArCF,cAwCA,MAAa84B,EAUX1uD,kBACIpjC,EAAWo0D,EAAgB29B,EAAmB1/B,EAC9CV,GACF,MAAMj6B,EAAO13B,EAAE03B,KAAKn1B,MAAM,GAEN,IAAhB6xD,EAAK/xD,QACPq1B,EAAK3rB,SAAQ,CAAClL,EAAG+yE,IAAQxf,EAAK1qD,KAAKkqE,KAGrC,MAAMrpB,EAAaunC,EAAWE,gBAAgBt6D,EAAM08B,GAAM,GAGpDlsC,EAAO2jB,EAAU3jB,KAAKqiC,GACtBvpD,EAAI,IAAI,EAAAu4B,OAAOgxB,EAAYvqD,EAAE2zB,MAC7BiW,EAAUiC,EAAUsM,eAAeoS,GACnC0nC,EAAepmD,EAAUsM,eAAezgB,GACxCw6D,EAAW,IAAI/8E,MAAMuiB,EAAKr1B,QAChC,IAAK,IAAIvC,EAAI,EAAGA,EAAIooB,EAAMpoB,IAAK,CAC7B,MAAM2iF,EAAU52C,EAAUyH,gBAAgBxzC,EAAG8pC,GAE7CwB,EAAcikD,UAAU5M,EAAS/qD,EAAMw6D,GACvClxF,EAAEoU,IACEqtE,EACAqP,EAAWK,iBACPnyF,EAAE+2C,WAAYqd,EAAM18B,EAAM,EAAGmU,EAAU0H,gBAAgB2+C,EAAUD,GAAe5/B,EAAKV,G,CAG/F,OAAIogC,EACK/wF,EAGA,IAAI,EAAAu4B,OACPu4D,EAAWE,gBAAgBt6D,EAAM08B,EAAM29B,GAAW/wF,EAAE2yB,UAAM7Q,OAAWA,EAAW9hB,EAAEkL,KAAMlL,EAAEw1C,OAElG,CAaApT,wBACIhN,EAA0Bg+B,EAAgB18B,EAAgB06D,EAAoBjtE,EAC9EktC,EAA4BV,GAC9B,IAAInhC,EAAM,EACV,GAAI4hE,GAAch+B,EAAK/xD,OACrB,OAAOgwD,EAAIj8B,EAAMjR,IAEnB,MAAMo9B,EAAO6R,EAAKg+B,GACZC,EAAO9vC,GAAQ7qB,EAAKr1B,OAAS,EAAIwpC,EAAU3jB,KAAKwP,EAAKn1B,MAAMggD,EAAO,IACxE,IAAK,IAAIziD,EAAI,EAAGA,EAAI43B,EAAK6qB,GAAOziD,IAC9B0wB,EAAY,IAAN1wB,EAAUgyF,EAAWK,iBAAiB/7D,EAAOg+B,EAAM18B,EAAM06D,EAAa,EAAGjtE,EAAKktC,EAAKV,GACzEA,EAAInhC,EAAKshE,EAAWK,iBAAiB/7D,EAAOg+B,EAAM18B,EAAM06D,EAAa,EAAGjtE,EAAKktC,EAAKV,IAClGxsC,GAAOktE,EAET,OAAO7hE,CACT,CASA4S,uBAAuB1L,EAAyB08B,EAAyBC,GACvE,MAAM9J,EAAa7yB,EAAKn1B,QACxB,IAAK,IAAIzC,EAAI,EAAGA,EAAIs0D,EAAK/xD,OAAQvC,IAE7ByqD,EAAW6J,EAAKt0D,IADdu0D,EACoB,EAEA,EAG1B,OAAO9J,EAAWzZ,QAAOjY,GAAe,IAARA,GAClC,EA3FF,eA8FA,MAAakwB,EAUX3lB,4BACIquB,EAA2BW,EAA8BnN,EAAuBrb,EAChFob,EAAqBE,GACvB,IAAKuM,GAAoBxM,EAAY5iD,SAAW+vD,EAAU/vD,OAAS,EACjE,MAAM,IAAImF,MAAM,sFAGlB,GAAIiqD,EAEF,IAAK,IAAI54B,EAAM,EAAGA,EAAMu5B,EAAU/vD,OAAS,EAAGw2B,IACxCA,GAAOosB,EAAY5iD,OACrB4iD,EAAYv7C,KAAK0oD,EAAUv5B,EAAM,IAEjCosB,EAAYpsB,GAAOu5B,EAAUv5B,EAAM,GAMzC,IAAK,IAAIA,EAAM,EAAGA,EAAMosB,EAAY5iD,OAAQw2B,IAC1C,GAAIA,EAAM+Q,EAAQvnC,QAChB,GAAIunC,EAAQ/Q,GAAO,EACjB,MAAM,IAAIrxB,MAAM,qDAGlBoiC,EAAQlgC,KAAK,GAKjB,IAAK,IAAImvB,EAAM,EAAGA,EAAMosB,EAAY5iD,OAAQw2B,IAC1C,GAAIA,EAAMmsB,EAAU3iD,QAClB,GAAI2iD,EAAUnsB,GAAO,EACnB,MAAM,IAAIrxB,MAAM,uDAGlBw9C,EAAUt7C,KAAK,GAKnB,IAAK,IAAImvB,EAAM,EAAGA,EAA2B,EAArBosB,EAAY5iD,OAAYw2B,IAC9C,GAAIA,EAAMqsB,EAAK7iD,QACb,GAAI6iD,EAAKrsB,GAAO,EACd,MAAM,IAAIrxB,MAAM,iDAGlB09C,EAAKx7C,KAAK,GAKd,IAAK,IAAImvB,EAAM,EAAGA,EAAMosB,EAAY5iD,OAAQw2B,IAAO,CACjD,GAAIosB,EAAYpsB,IAAQ,EACtB,MAAM,IAAIrxB,MAAM,2CAGlB,GAAI09C,EAAKrsB,IAAQosB,EAAYpsB,IAAQqsB,EAAKrsB,EAAMosB,EAAY5iD,SAAW4iD,EAAYpsB,GACjF,MAAM,IAAIrxB,MAAM,qC,CAGtB,CAGA47B,gCACIgvB,EAA8BxoB,EAA4Bob,EAC1DC,EAAgCC,EAAgBH,GAClD,GAAKA,EAAL,CAIA,GAAIG,EAAK7iD,SAAW,GAAK+vD,EAAU/vD,OAAS,GAC1C,MAAM,IAAImF,MAAM,gEAGlB,GAAIoiC,EAAQvnC,SAAY+vD,EAAU/vD,OAAS,EACzC,MAAM,IAAImF,MAAM,6DAGlB,GAAIy9C,EAAY5iD,SAAY+vD,EAAU/vD,OAAS,EAC7C,MAAM,IAAImF,MAAM,mEAGlB,IAAK,IAAIqxB,EAAM,EAAGA,EAAMu5B,EAAU/vD,OAAS,EAAGw2B,IAC5CkwB,EAAaupC,wBACTlgC,EAAUv5B,EAAM,GAAI+Q,EAAQ/Q,GAAMmsB,EAAUnsB,GAAMosB,EAAYpsB,GAAMqsB,EAAMrsB,EAAKA,EAAMu5B,EAAU/vD,OAAS,EACxG0iD,E,CAER,CAaA3hB,8BACIquB,EAA2BW,EAA8BxoB,EAAmBob,EAC5EC,EAAuBC,EAAgBH,GACzC,GAAIqN,EAAU/vD,QAAU,EACtB,MAAM,IAAImF,MAAM,8CAIlB,MAAM+iD,EAAa,CAAC6H,EAAU,GAAIA,EAAU,IAI5C,OAFArJ,EAAawpC,mBACT9gC,EAAkBW,EAAW7H,EAAY3gB,EAASob,EAAWC,EAAaC,EAAMH,GAC7EwF,CACT,CAYAnnB,8BACIgvB,EAA8BogC,EAA+B5oD,EAAmBob,EAChFC,EAAuBC,EAAgBH,GACzC,GAAIqN,EAAU/vD,QAAU,GAAKmwF,EAAWnwF,QAAU,EAChD,MAAM,IAAImF,MAAM,2DAIlB,MAAM+iD,EAAa,CAAC6H,EAAU,GAAIogC,EAAW,IAG7C,OADAzpC,EAAawpC,oBAAmB,EAAOngC,EAAW7H,EAAY3gB,EAASob,EAAWC,EAAaC,EAAMH,GAC9FwF,CACT,CAKQnnB,0BACJquB,EAA2BW,EAA8B7H,EAAsB3gB,EAC/Eob,EAA8BC,EAAgCC,EAAgBH,GAChF,GAAI0M,EACF,IAAK,IAAI54B,EAAM,EAAGA,EAAMu5B,EAAU/vD,OAAS,EAAGw2B,IAC5C0xB,EAAW7gD,KAAK,QAGlB,IAAK,IAAImvB,EAAM,EAAGA,EAAMu5B,EAAU/vD,OAAS,EAAGw2B,IAC5C0xB,EAAW7gD,KAAKq/C,EAAaupC,wBACzBlgC,EAAUv5B,EAAM,GAAI+Q,EAAQ/Q,GAAMmsB,EAAUnsB,GAAMosB,EAAYpsB,GAAMqsB,EAAMrsB,EAAKA,EAAMu5B,EAAU/vD,OAAS,EACxG0iD,GAGV,CAIQ3hB,+BACJqvD,EAAgB1oD,EAAgByc,EAAkBD,EAAgBrB,EAAgBwtC,EAClFC,EAAsB5tC,GACxB,MAAM6tC,EAAUpsC,GAAYD,EAAS,GAAK,EAC1C,IAAIxB,GAAuB,WAAZA,EAsBb,OAAOpzC,KAAKqD,OAAQy9E,EAASvtC,EAAKwtC,GAAgBxtC,EAAKytC,GAAgBC,GAAW7oD,EAAU,GArB5F,OAAQgb,GACN,IAAK,QAGH,OAFAG,EAAKwtC,GAAgB,EACrBxtC,EAAKytC,GAAgB,EACdhhF,KAAKqD,OAAQy9E,EAASG,GAAW7oD,EAAU,GACpD,IAAK,aACL,IAAK,aACH,GAAiB,IAAbyc,EACF,MAAM,IAAIh/C,MAAM,uDACX,CACL,MACMqrF,IADoBJ,EAAS1oD,EAAS,GAAKA,EACX,GAAKA,EAASwc,EAASksC,EAI7D,OAHAvtC,EAAKwtC,GACY,eAAZ3tC,EAA4BpzC,KAAKqD,OAAO69E,EAAY,GAAK,GAAKlhF,KAAKqD,MAAM69E,EAAY,GAC1F3tC,EAAKytC,GAAgBE,EAAY3tC,EAAKwtC,GAC/B/gF,KAAKqD,OAAQy9E,EAASI,EAAYtsC,GAAUxc,EAAU,E,CAEjE,QACE,MAAM,IAAIviC,MAAM,4BAKxB,EAvMF,iBA0Ma,EAAAyjD,UAAY,qBACZ,EAAAC,SAAW,qBAExB,4BAAiC5rD,GAC/B,OAAO,IAAIiG,aAAcE,OAAOnG,EAClC,C,0GC/tCa,EAAAwzF,oBACT,CAACx9D,EAAkCy9D,EAAgBC,EAClD9xD,KACC,GAAsB,iBAAX5L,GAAmC,OAAZA,EAAkB,CAClD,GAAI09D,EAAKpjD,IAAIta,GACX,MAAM,IAAI9tB,MAAM,iCAEhBwrF,EAAK3jF,IAAIimB,E,CAIbx0B,OAAOmyF,QAAQ39D,GAASvpB,SAAQ,EAAEorB,EAAKnO,MACrC,MAAM/f,EAAO,EAAW8pF,EAAS57D,EAAMA,EACvC,GAAqB,iBAAVnO,GACT,IAAA8pE,qBAAoB9pE,EAAkC/f,EAAO,IAAK+pF,EAAM9xD,QACnE,GAAqB,iBAAVlY,GAAuC,iBAAVA,EAC7CkY,EAAQj4B,EAAM+f,EAAMtV,gBACf,IAAqB,kBAAVsV,EAGhB,MAAM,IAAIxhB,MAAM,0CAA0CwhB,GAF1DkY,EAAQj4B,EAAM,EAAU,IAAM,I,IAIhC,C,i2BC1BR,gBAGA,YACA,UAEMiqF,EAAU,MAAiB,EAAAxyD,IAAIzW,KAAK4W,OAA6B,oBAAb7hC,SAC1D,IAAIm0F,EAQAC,EACAC,EARAC,GAAe,EACfC,GAAc,EACdC,GAAU,EAOd,MAAMC,EAAiF,GACjFC,EAAuF,GACvFC,EAA+E,GAC/EC,EAAyD,GACzDC,EAA8D,GAC9DC,EAAuD,GAEvDC,EAAe,KACnB,GAAIT,IAAiBC,GAAeC,IAAYL,EAC9C,MAAM,IAAI3rF,MAAM,mB,EAIdwsF,EAAwBC,IAC5B,OAAQA,EAAG/nF,KAAKynB,MACd,IAAK,YACH2/D,GAAe,EACXW,EAAG/nF,KAAKoX,KACVkwE,GAAU,EACVJ,EAAkB,GAAGa,EAAG/nF,KAAKoX,OAE7BiwE,GAAc,EACdH,EAAkB,MAEpB,MACF,IAAK,WACCa,EAAG/nF,KAAKoX,IACV+vE,EAAiB,GAAGY,EAAG/nF,KAAKoX,KAE5B+vE,EAAiB,KAEnB,MACF,IAAK,kBACCY,EAAG/nF,KAAKoX,IACVmwE,EAA+BxrF,QAAS,GAAGgsF,EAAG/nF,KAAKoX,KAEnDmwE,EAA+BxrF,QAAS,GAAGgsF,EAAG/nF,KAAKwd,KAErD,MACF,IAAK,kBACCuqE,EAAG/nF,KAAKoX,IACVowE,EAA+BzrF,QAAS,GAAGgsF,EAAG/nF,KAAKoX,KAEnDowE,EAA+BzrF,QAAS,GAAGgsF,EAAG/nF,KAAKwd,KAErD,MACF,IAAK,SACCuqE,EAAG/nF,KAAKoX,IACVqwE,EAAuB1rF,QAAS,GAAGgsF,EAAG/nF,KAAKoX,KAE3CqwE,EAAuB1rF,QAAS,GAAGgsF,EAAG/nF,KAAKwd,KAE7C,MACF,IAAK,UACCuqE,EAAG/nF,KAAKoX,IACVswE,EAAwB3rF,QAAS,GAAGgsF,EAAG/nF,KAAKoX,KAE5CswE,EAAwB3rF,QAAS,KAEnC,MACF,IAAK,MACCgsF,EAAG/nF,KAAKoX,IACVuwE,EAAa5rF,QAAS,GAAGgsF,EAAG/nF,KAAKoX,KAEjCuwE,EAAa5rF,QAAS,GAAGgsF,EAAG/nF,KAAKwd,KAEnC,MACF,IAAK,gBACCuqE,EAAG/nF,KAAKoX,IACVwwE,EAAsB7rF,QAAS,GAAGgsF,EAAG/nF,KAAKoX,KAE1CwwE,EAAsB7rF,QAAS,K,EAOjCisF,EAAgC,oBAAbl1F,SAAyE,QAA7C,EAAQ,OAARA,eAAQ,IAARA,cAAQ,EAARA,SAAUC,qBAAmC,eAAEC,SAAM4jB,EAE7F,EAAAme,SAAWb,UACtB,GAAsC8yD,IAAW,CAC/C,GAAIK,EACF,OAEF,GAAID,EACF,MAAM,IAAI9rF,MAAM,4CAElB,GAAIgsF,EACF,MAAM,IAAIhsF,MAAM,yCAYlB,OATA8rF,GAAe,OAGYxwE,IAAvB,EAAA4d,IAAIzW,KAAKkqE,WACPD,GAA4C,IAA/BA,EAAU5wF,QAAQ,WACjC,EAAAo9B,IAAIzW,KAAKkqE,UAAYD,EAAU3wF,OAAO,GAAI,EAAYC,YAAY,KAAO,IAItE,IAAIlD,SAAc,CAACqb,EAAS0H,KACjC8vE,SAAAA,EAAavnF,YAEbunF,EAAc,YACdA,EAAYlnF,UAAY+nF,EACxBZ,EAAoB,CAACz3E,EAAS0H,GAC9B,MAAMna,EAA0B,CAACyqB,KAAM,YAAaygE,GAAK,EAAA1zD,IAAIzW,MAC7DkpE,EAAY5qF,YAAYW,EAAQ,G,CAIlC,OAAO,IAAAmrF,uBAAsB,EAAA3zD,IAAIzW,K,EAIxB,EAAAqqE,QAAUl0D,MAAMU,EAAoByzD,KAC/C,GAAsCrB,IAEpC,OADAa,IACO,IAAIzzF,SAAc,CAACqb,EAAS0H,KACjCgwE,EAAmB,CAAC13E,EAAS0H,GAC7B,MAAMna,EAA0B,CAACyqB,KAAM,WAAYygE,GAAK,CAACtzD,aAAYyzD,iBACrEpB,EAAa5qF,YAAYW,EAAQ,IAGnCsrF,EAAKF,QAAQxzD,EAAYyzD,E,EAIhB,EAAAE,sBAAwBr0D,MAAMk4C,GACH4a,KACpCa,IACO,IAAIzzF,SAA+B,CAACqb,EAAS0H,KAClDowE,EAA+B/pF,KAAK,CAACiS,EAAS0H,IAC9C,MAAMna,EAA0B,CAACyqB,KAAM,kBAAmBygE,GAAK,CAAC9b,UAChE6a,EAAa5qF,YAAYW,EAAS,CAACovE,EAAMh5E,QAAQ,KAG5Ck1F,EAAKC,sBAAsBnc,GAIzB,EAAAoc,sBAAwBt0D,MAAMu0D,EAAkCr/D,IAEjC49D,KACpCa,IACO,IAAIzzF,SAAqC,CAACqb,EAAS0H,KACxDqwE,EAA+BhqF,KAAK,CAACiS,EAAS0H,IAC9C,MAAMna,EAA0B,CAACyqB,KAAM,kBAAmBygE,GAAK,CAACO,YAAWr/D,YAC3E69D,EAAa5qF,YAAYW,EAAQ,KAG5BsrF,EAAKE,sBAAsBC,EAAWr/D,GAIxC,EAAAs/D,cACTx0D,MAAMk4C,EAAmBhjD,IACW49D,KACpCa,IACO,IAAIzzF,SAAqC,CAACqb,EAAS0H,KACxDswE,EAAuBjqF,KAAK,CAACiS,EAAS0H,IACtC,MAAMna,EAA0B,CAACyqB,KAAM,SAAUygE,GAAK,CAAC9b,QAAOhjD,YAC9D69D,EAAa5qF,YAAYW,EAAS,CAACovE,EAAMh5E,QAAQ,KAG5Ck1F,EAAKI,cAActc,EAAOhjD,GAIxB,EAAAu/D,eAAiBz0D,MAAM00D,IAClC,GAAsC5B,IAEpC,OADAa,IACO,IAAIzzF,SAAc,CAACqb,EAAS0H,KACjCuwE,EAAwBlqF,KAAK,CAACiS,EAAS0H,IACvC,MAAMna,EAA0B,CAACyqB,KAAM,UAAWygE,GAAKU,GACvD3B,EAAa5qF,YAAYW,EAAQ,IAGnCsrF,EAAKK,eAAeC,E,EAIX,EAAA5+C,IAAM9V,MACf00D,EAAmBC,EAAwB5/C,EAA8Bq6C,EACzEl6D,IACoC49D,KACpCa,IACO,IAAIzzF,SAA8B,CAACqb,EAAS0H,KACjDwwE,EAAanqF,KAAK,CAACiS,EAAS0H,IAC5B,MAAMna,EAA0B,CAACyqB,KAAM,MAAOygE,GAAK,CAACU,YAAWC,eAAc5/C,SAAQq6C,gBAAel6D,YACpG69D,EAAa5qF,YAAYW,EAASsrF,EAAKQ,2BAA2B7/C,GAAQ,KAGrEq/C,EAAKt+C,IAAI4+C,EAAWC,EAAc5/C,EAAQq6C,EAAel6D,GAIvD,EAAAs0D,aAAexpD,MAAM00D,IAChC,GAAsC5B,IAEpC,OADAa,IACO,IAAIzzF,SAAc,CAACqb,EAAS0H,KACjCywE,EAAsBpqF,KAAK,CAACiS,EAAS0H,IACrC,MAAMna,EAA0B,CAACyqB,KAAM,gBAAiBygE,GAAKU,GAC7D3B,EAAa5qF,YAAYW,EAAQ,IAGnCsrF,EAAK5K,aAAakL,E,sGC9NtB,gBACA,UACA,UAEa,EAAAG,cAAiB3/D,IAC5B,MAAMrL,GAAO,IAAAirE,eACb,IAAIC,EAAmB,EACvB,MAAMC,EAAmB,GAEnBC,EAA0C//D,GAAW,CAAC,EAE5D,IACE,QAAkCxS,KAA9BwS,aAAO,EAAPA,EAASggE,kBACXD,EAAWC,iBAAmB,OACzB,GACiC,iBAA7BhgE,EAAQggE,mBAAkCzjF,OAAOmjB,UAAUM,EAAQggE,mBAC1EhgE,EAAQggE,iBAAmB,GAAKhgE,EAAQggE,iBAAmB,EAC7D,MAAM,IAAI9tF,MAAM,qCAAqC8tB,EAAQggE,oBAG/D,QAAmCxyE,KAA/BwS,aAAO,EAAPA,EAASigE,mBACXF,EAAWE,kBAAoB,OAC1B,GAAyC,iBAA9BjgE,EAAQigE,oBAAmC1jF,OAAOmjB,UAAUM,EAAQigE,mBACpF,MAAM,IAAI/tF,MAAM,qCAAqC8tB,EAAQigE,0BAGpCzyE,KAAvBwS,aAAO,EAAPA,EAAS1pB,aACXypF,EAAWzpF,WAAY,GAGzB,IAAI4pF,EAAgB,EAOpB,QANqB1yE,KAAjBwS,aAAO,EAAPA,EAASZ,OACX8gE,GAAgB,IAAAC,iBAAgBngE,EAAQZ,IAAK0gE,IAG/CD,EAAmBlrE,EAAKnM,qBACpBu3E,EAAWC,iBAAmBD,EAAWE,oBAAsBF,EAAWzpF,UAAY4pF,GACjE,IAArBL,EACF,MAAM,IAAI3tF,MAAM,4BAclB,YAXuBsb,KAAnBwS,aAAO,EAAPA,EAASogE,SACX,IAAA5C,qBAAoBx9D,EAAQogE,MAAO,GAAI,IAAIC,SAAoC,CAACx+D,EAAKnO,KACnF,MAAM4sE,GAAgB,IAAAH,iBAAgBt+D,EAAKi+D,GACrCS,GAAkB,IAAAJ,iBAAgBzsE,EAAOosE,GAE/C,GAAqF,IAAjFnrE,EAAKjM,sBAAsBm3E,EAAkBS,EAAeC,GAC9D,MAAM,IAAIruF,MAAM,iCAAiC2vB,OAASnO,I,IAKzD,CAACmsE,EAAkBC,E,CAC1B,MAAO11F,GAKP,MAJyB,IAArBy1F,GACFlrE,EAAK/L,sBAAsBi3E,GAE7BC,EAAOrpF,QAAQke,EAAKrL,OACdlf,C,+HC5DV,gBACA,UACA,UAGA,UAEA,IAAIo2F,EAqBJ,6CAME11D,4BAA4B21D,GAG1B,MAAMjyF,QAAiBuX,MAAM06E,GACvBt6E,QAAoB3X,EAAS2X,cACnC,OAAO,IAAAg5E,uBAAsB,IAAIvyF,WAAWuZ,GAC9C,CAEA2kB,gBAAgBC,EAAiC/K,GAM/C,GALKwgE,UACG,IAAAxB,SAAQ,EAAA5zD,IAAIzW,KAAK6W,WAlCT,CAAC+0C,IACnB,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,QACE,MAAM,IAAIruE,MAAM,8BAA8BquE,K,EAqBVmgB,CAAY,EAAAt1D,IAAIm1C,WACpDigB,GAAU,GAGgB,iBAAjBz1D,EACT,GAAqB,oBAAVhlB,MAAuB,CAEhC,MAAMi9D,QAAc,IAAA4R,WAAU,EAAA/nF,SAAV,CAAoBk+B,IACvCr3B,KAAK8rF,UAAW9rF,KAAKmhC,WAAYnhC,KAAKogF,mBAAqB,IAAAwL,eAActc,EAAOhjD,E,KAC5E,CAGL,MAAM2gE,QAAyCjtF,KAAKyrF,sBAAsBp0D,IAEzEr3B,KAAK8rF,UAAW9rF,KAAKmhC,WAAYnhC,KAAKogF,mBAAqB,IAAAsL,uBAAsBuB,EAAW3gE,E,MAG9FtsB,KAAK8rF,UAAW9rF,KAAKmhC,WAAYnhC,KAAKogF,mBAAqB,IAAAwL,eAAcv0D,EAAc/K,EAE5F,CAEA8K,gBACE,OAAO,IAAAy0D,gBAAe7rF,KAAK8rF,UAC7B,CAEA10D,UAAUipD,EAAiC6M,EAAqC5gE,GAE9E,MAAM6gE,EAAuB,GACvBpB,EAAyB,GAC/Bj0F,OAAOmyF,QAAQ5J,GAAOt9E,SAAQqqF,IAC5B,MAAMntF,EAAOmtF,EAAI,GACXjgD,EAASigD,EAAI,GACbjzE,EAAQna,KAAKmhC,WAAW7mC,QAAQ2F,GACtC,IAAe,IAAXka,EACF,MAAM,IAAI3b,MAAM,kBAAkByB,MAEpCktF,EAAWzsF,KAAKysC,GAChB4+C,EAAarrF,KAAKyZ,EAAM,IAG1B,MAAMqsE,EAA0B,GAChC1uF,OAAOmyF,QAAQiD,GAASnqF,SAAQqqF,IAC9B,MAAMntF,EAAOmtF,EAAI,GAEXjzE,EAAQna,KAAKogF,YAAY9lF,QAAQ2F,GACvC,IAAe,IAAXka,EACF,MAAM,IAAI3b,MAAM,mBAAmByB,MAErCumF,EAAc9lF,KAAKyZ,EAAM,IAG3B,MAAM81C,QACI,IAAA/iB,KAAIltC,KAAK8rF,UAAWC,EAAcoB,EAAWv0D,KAAI7iC,GAAK,CAACA,EAAE40B,KAAM50B,EAAE24B,KAAM34B,EAAEmN,QAAQsjF,EAAel6D,GAEpGnJ,EAAoC,CAAC,EAC3C,IAAK,IAAIrsB,EAAI,EAAGA,EAAIm5D,EAAQ52D,OAAQvC,IAClCqsB,EAAOnjB,KAAKogF,YAAYoG,EAAc1vF,KAAO,IAAI,EAAAy5B,OAAO0/B,EAAQn5D,GAAG,GAAIm5D,EAAQn5D,GAAG,GAAIm5D,EAAQn5D,GAAG,IAEnG,OAAOqsB,CACT,CAEAw9D,iBAEA,CAEAC,gBACO,IAAAA,cAAa5gF,KAAK8rF,UACzB,E,0GC7GF,gBACA,UACA,UAmEa,EAAAuB,kBAAqB/gE,IAChC,MAAMrL,GAAO,IAAAirE,eACb,IAAIoB,EAAuB,EAC3B,MAAMlB,EAAmB,GAEnBmB,EAAkDjhE,GAAW,CAAC,EA5CzC,CAACA,IACvBA,EAAQogE,QACXpgE,EAAQogE,MAAQ,CAAC,GAEdpgE,EAAQogE,MAAMp1D,UACjBhL,EAAQogE,MAAMp1D,QAAU,CAAC,GAE3B,MAAMA,EAAUhL,EAAQogE,MAAMp1D,QACzBA,EAAQk2D,+BAEXl2D,EAAQk2D,6BAA+B,I,EAmCzCC,CAAqBF,GAErB,SAC0CzzE,KAApCwS,aAAO,EAAPA,EAASohE,0BACXH,EAAeG,uBAAyB,OAE1C,MAAMA,EA7EuB,CAACA,IAChC,OAAQA,GACN,IAAK,WACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,MACH,OAAO,GACT,QACE,MAAM,IAAIlvF,MAAM,yCAAyCkvF,K,EAkE5BC,CAAyBJ,EAAeG,6BAEpC5zE,KAA/BwS,aAAO,EAAPA,EAASshE,qBACXL,EAAeK,mBAAoB,QAGH9zE,KAA9BwS,aAAO,EAAPA,EAASuhE,oBACXN,EAAeM,kBAAmB,QAGL/zE,KAA3BwS,aAAO,EAAPA,EAASwhE,iBACXP,EAAeO,cAAgB,cAEjC,MAAMA,EA3Ee,CAACA,IACxB,OAAQA,GACN,IAAK,aACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,QACE,MAAM,IAAItvF,MAAM,+BAA+BsvF,K,EAoE3BC,CAAiBR,EAAeO,eAEtD,IAAIE,EAAkB,EAKtB,QAJuBl0E,KAAnBwS,aAAO,EAAPA,EAAS2hE,SACXD,GAAkB,IAAAvB,iBAAgBngE,EAAQ2hE,MAAO7B,SAGjBtyE,KAA9BwS,aAAO,EAAPA,EAASggE,kBACXiB,EAAejB,iBAAmB,OAC7B,GACiC,iBAA7BhgE,EAAQggE,mBAAkCzjF,OAAOmjB,UAAUM,EAAQggE,mBAC1EhgE,EAAQggE,iBAAmB,GAAKhgE,EAAQggE,iBAAmB,EAC7D,MAAM,IAAI9tF,MAAM,qCAAqC8tB,EAAQggE,oBAG/D,QAAmCxyE,KAA/BwS,aAAO,EAAPA,EAASigE,mBACXgB,EAAehB,kBAAoB,OAC9B,GAAyC,iBAA9BjgE,EAAQigE,oBAAmC1jF,OAAOmjB,UAAUM,EAAQigE,mBACpF,MAAM,IAAI/tF,MAAM,qCAAqC8tB,EAAQigE,qBAW/D,QARiCzyE,KAA7BwS,aAAO,EAAPA,EAAS4hE,mBACXX,EAAeW,iBAAkB,GAGnCZ,EAAuBrsE,EAAK/N,yBACxBw6E,IAA0BH,EAAeK,oBAAsBL,EAAeM,iBAAmBC,IAC/FP,EAAeW,gBAAkB,EAAGF,EAAiBT,EAAejB,iBACtEiB,EAAehB,mBACU,IAAzBe,EACF,MAAM,IAAI9uF,MAAM,gCAkBlB,OAfI8tB,aAAO,EAAPA,EAAS6hE,qBAlFb,EAACb,EAA8Ba,EAC9B/B,KACC,IAAK,MAAMgC,KAAMD,EAAoB,CACnC,IAAIE,EAAuB,iBAAPD,EAAkBA,EAAKA,EAAGnuF,KAG9C,OAAQouF,GACN,IAAK,UACHA,EAAS,UACT,MACF,IAAK,OACL,IAAK,MACH,SACF,QACE,MAAM,IAAI7vF,MAAM,qBAAqB6vF,KAGzC,MAAMC,GAAmB,IAAA7B,iBAAgB4B,EAAQjC,GACjD,GAA0F,KAAtF,IAAAF,eAAc94E,4BAA4Bk6E,EAAsBgB,GAClE,MAAM,IAAI9vF,MAAM,oCAAoC6vF,I,GAgExDE,CAAsBjB,EAAsBhhE,EAAQ6hE,mBAAoB/B,QAGnDtyE,KAAnBwS,aAAO,EAAPA,EAASogE,SACX,IAAA5C,qBAAoBx9D,EAAQogE,MAAO,GAAI,IAAIC,SAAoC,CAACx+D,EAAKnO,KACnF,MAAM4sE,GAAgB,IAAAH,iBAAgBt+D,EAAKi+D,GACrCS,GAAkB,IAAAJ,iBAAgBzsE,EAAOosE,GAE/C,GAA6F,IAAzFnrE,EAAK3N,0BAA0Bg6E,EAAsBV,EAAeC,GACtE,MAAM,IAAIruF,MAAM,qCAAqC2vB,OAASnO,I,IAK7D,CAACstE,EAAsBlB,E,CAC9B,MAAO11F,GAKP,MAJ6B,IAAzB42F,GACFrsE,EAAKzN,0BAA0B85E,GAEjClB,EAAOrpF,QAAQke,EAAKrL,OACdlf,C,0GCtJV,gBAEa,EAAA+1F,gBAAkB,CAACvpF,EAAckpF,KAC5C,MAAMnrE,GAAO,IAAAirE,eAEPsC,EAAavtE,EAAKxH,gBAAgBvW,GAAQ,EAC1CurF,EAAaxtE,EAAKvL,QAAQ84E,GAIhC,OAHAvtE,EAAKzH,aAAatW,EAAMurF,EAAYD,GACpCpC,EAAO1rF,KAAK+tF,GAELA,CAAU,C,kOCPnB,eACA,UACA,UACA,UAOa,EAAAnD,QAAU,CAACxzD,EAAoByzD,KAC1C,MAAMmD,GAAY,IAAAxC,eAAcl5E,SAAS8kB,EAAYyzD,GACrD,GAAkB,IAAdmD,EACF,MAAM,IAAIlwF,MAAM,8CAA8CkwF,I,EASlE,MAAMC,EAAiB,IAAIt1D,IAMd,EAAAoyD,sBAAyBnc,IACpC,MAAMruD,GAAO,IAAAirE,eACP0C,EAAkB3tE,EAAKvL,QAAQ45D,EAAM7wE,YAE3C,OADAwiB,EAAKzjB,OAAO4O,IAAIkjE,EAAOsf,GAChB,CAACA,EAAiBtf,EAAM7wE,WAAW,EAG/B,EAAAitF,sBACT,CAACuB,EAAkC3gE,KACjC,MAAMrL,GAAO,IAAAirE,eAEb,IAAI2C,EAAgB,EAChBvB,EAAuB,EACvBlB,EAAmB,GAEvB,IAIE,IAHCkB,EAAsBlB,IAAU,IAAAiB,mBAAkB/gE,GAEnDuiE,EAAgB5tE,EAAKvN,kBAAkBu5E,EAAU,GAAIA,EAAU,GAAIK,GAC7C,IAAlBuB,EACF,MAAM,IAAIrwF,MAAM,yB,SAGlByiB,EAAKrL,MAAMq3E,EAAU,IACrBhsE,EAAKzN,0BAA0B85E,GAC/BlB,EAAOrpF,QAAQke,EAAKrL,M,CAGtB,MAAMyjC,EAAap4B,EAAKnN,kBAAkB+6E,GACpCC,EAAc7tE,EAAKjN,mBAAmB66E,GAEtC1tD,EAAa,GACb4tD,EAAwB,GACxB3O,EAAc,GACd4O,EAAyB,GAC/B,IAAK,IAAIl4F,EAAI,EAAGA,EAAIuiD,EAAYviD,IAAK,CACnC,MAAMmJ,EAAOghB,EAAK/M,iBAAiB26E,EAAe/3F,GAClD,GAAa,IAATmJ,EACF,MAAM,IAAIzB,MAAM,2BAElBuwF,EAAsBruF,KAAKT,GAC3BkhC,EAAWzgC,KAAKugB,EAAK1H,aAAatZ,G,CAEpC,IAAK,IAAInJ,EAAI,EAAGA,EAAIg4F,EAAah4F,IAAK,CACpC,MAAMmJ,EAAOghB,EAAK7M,kBAAkBy6E,EAAe/3F,GACnD,GAAa,IAATmJ,EACF,MAAM,IAAIzB,MAAM,4BAElBwwF,EAAuBtuF,KAAKT,GAC5BmgF,EAAY1/E,KAAKugB,EAAK1H,aAAatZ,G,CAIrC,OADA0uF,EAAeviF,IAAIyiF,EAAe,CAACA,EAAeE,EAAuBC,IAClE,CAACH,EAAe1tD,EAAYi/C,EAAY,EAQxC,EAAAwL,cACT,CAACtc,EAAmBhjD,KAClB,MAAM2gE,GAAmC,IAAAxB,uBAAsBnc,GAC/D,OAAO,IAAAoc,uBAAsBuB,EAAW3gE,EAAQ,EAGzC,EAAAu/D,eAAkBC,IAC7B,MAAM7qE,GAAO,IAAAirE,eACP50D,EAAUq3D,EAAe7pF,IAAIgnF,GACnC,IAAKx0D,EACH,MAAM,IAAI94B,MAAM,sBAElB,MAAMqwF,EAAgBv3D,EAAQ,GACxBy3D,EAAwBz3D,EAAQ,GAChC03D,EAAyB13D,EAAQ,GAEvCy3D,EAAsBhsF,QAAQke,EAAK3M,UACnC06E,EAAuBjsF,QAAQke,EAAK3M,UACpC2M,EAAKrN,mBAAmBi7E,GACxBF,EAAel1D,OAAOqyD,EAAU,EA2BlC,MAAMmD,EAA8BtkE,IAClC,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GACT,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GAET,QACE,MAAM,IAAInsB,MAAM,0BAA0BmsB,K,EAI1CukE,EAA8BtH,IAClC,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SAET,QACE,MAAM,IAAIppF,MAAM,0BAA0BopF,K,EAI1CuH,EAAiCxkE,IAGjC,OAAQA,GACN,IAAK,UACH,OAAO7sB,aACT,IAAK,QAUL,IAAK,OACH,OAAO5E,WATT,IAAK,OACH,OAAOiE,UACT,IAAK,SACH,OAAOO,YACT,IAAK,QACH,OAAOL,WACT,IAAK,QACH,OAAOE,WAGT,IAAK,UACH,OAAOS,aACT,IAAK,SACH,OAAOJ,YACT,IAAK,QACH,OAAOwxF,cACT,IAAK,SACH,OAAOC,eACT,QACE,MAAM,IAAI7wF,MAAM,qBAAqBmsB,K,EAOlC,EAAAuiB,IACT,CAAC4+C,EAAmBC,EAAwB5/C,EAA8Bq6C,EACzEl6D,KACC,MAAMrL,GAAO,IAAAirE,eACP50D,EAAUq3D,EAAe7pF,IAAIgnF,GACnC,IAAKx0D,EACH,MAAM,IAAI94B,MAAM,sBAElB,MAAMqwF,EAAgBv3D,EAAQ,GACxBy3D,EAAwBz3D,EAAQ,GAChC03D,EAAyB13D,EAAQ,GAEjC+hB,EAAa0yC,EAAa1yF,OAC1By1F,EAActI,EAAcntF,OAElC,IAAI8yF,EAAmB,EACnBmD,EAA6B,GAEjC,MAAMC,EAAwB,GACxBC,EAAwB,GAE9B,KACGrD,EAAkBmD,IAAoB,IAAArD,eAAc3/D,GAGrD,IAAK,IAAIx1B,EAAI,EAAGA,EAAIuiD,EAAYviD,IAAK,CACnC,MAAMo4B,EAAWid,EAAOr1C,GAAG,GACrB43B,EAAOyd,EAAOr1C,GAAG,GACjBoM,EAAOipC,EAAOr1C,GAAG,GAEvB,IAAI23F,EACAgB,EAEJ,GAAItjF,MAAM8f,QAAQ/oB,GAAO,CAEvBusF,EAAiB,EAAIvsF,EAAK7J,OAC1Bo1F,EAAaxtE,EAAKvL,QAAQ+5E,GAC1BD,EAAY9uF,KAAK+tF,GACjB,IAAIvlB,EAAYulB,EAAa,EAC7B,IAAK,IAAI33F,EAAI,EAAGA,EAAIoM,EAAK7J,OAAQvC,IAAK,CACpC,GAAuB,iBAAZoM,EAAKpM,GACd,MAAM,IAAIipB,UAAU,wBAAwBjpB,qBAE9CmqB,EAAKtjB,QAAQurE,MAAe,IAAAujB,iBAAgBvpF,EAAKpM,GAAI04F,E,OAGvDC,EAAiBvsF,EAAKzE,WACtBgwF,EAAaxtE,EAAKvL,QAAQ+5E,GAC1BD,EAAY9uF,KAAK+tF,GACjBxtE,EAAKzjB,OAAO4O,IAAI,IAAIlT,WAAWgK,EAAK5M,OAAQ4M,EAAKg2D,WAAYu2B,GAAiBhB,GAGhF,MAAMj6D,EAAQvT,EAAK7J,YACbyhE,EAAa53D,EAAKzJ,WAAW,EAAIkX,EAAKr1B,QAC5C,IACE,IAAIq2F,EAAW7W,EAAa,EAC5BnqD,EAAK3rB,SAAQlL,GAAKopB,EAAK3jB,OAAOoyF,KAAc73F,IAC5C,MAAMs1C,EAASlsB,EAAKzM,iBAChBy6E,EAA2B//D,GAAWu/D,EAAYgB,EAAgB5W,EAAYnqD,EAAKr1B,QACvF,GAAe,IAAX8zC,EACF,MAAM,IAAI3uC,MAAM,yBAElB+wF,EAAY7uF,KAAKysC,E,SAEjBlsB,EAAK3J,aAAakd,E,EAItB,MAAMm7D,EAAiB1uE,EAAK7J,YACtBw4E,EAAoB3uE,EAAKzJ,WAAwB,EAAb6hC,GACpCw2C,EAAmB5uE,EAAKzJ,WAAwB,EAAb6hC,GACnCy2C,EAAqB7uE,EAAKzJ,WAAyB,EAAds3E,GACrCiB,EAAoB9uE,EAAKzJ,WAAyB,EAAds3E,GAE1C,IACE,IAAIkB,EAAmBJ,EAAoB,EACvCK,EAAkBJ,EAAmB,EACrCK,EAAoBJ,EAAqB,EACzCK,EAAmBJ,EAAoB,EAC3C,IAAK,IAAIj5F,EAAI,EAAGA,EAAIuiD,EAAYviD,IAC9BmqB,EAAKtjB,QAAQqyF,KAAsBT,EAAYz4F,GAC/CmqB,EAAKtjB,QAAQsyF,KAAqBlB,EAAsBhD,EAAaj1F,IAEvE,IAAK,IAAIA,EAAI,EAAGA,EAAIg4F,EAAah4F,IAC/BmqB,EAAKtjB,QAAQuyF,KAAuB,EACpCjvE,EAAKtjB,QAAQwyF,KAAsBnB,EAAuBxI,EAAc1vF,IAI1E,IAAI43F,EAAYztE,EAAK7L,QACjBy5E,EAAegB,EAAkBD,EAAmBv2C,EAAY02C,EAAmBjB,EACnFgB,EAAoB3D,GAExB,MAAM9+D,EAA+B,GAErC,GAAkB,IAAdqhE,EACF,IAAK,IAAI53F,EAAI,EAAGA,EAAIg4F,EAAah4F,IAAK,CACpC,MAAMq2C,EAASlsB,EAAKtjB,QAAQmyF,EAAqB,EAAIh5F,GAE/Cs5F,EAA2BnvE,EAAK7J,YAEhCi5E,EAAmBpvE,EAAKzJ,WAAW,IAEzC,IAAImT,EAA6B8jE,EAAa,EAC9C,IAGE,GAFAC,EAAYztE,EAAKvM,kBACby4B,EAAQkjD,EAAkBA,EAAmB,EAAGA,EAAmB,EAAGA,EAAmB,IAC3E,IAAd3B,EACF,MAAM,IAAIlwF,MAAM,iDAAiDkwF,KAEnE,IAAI4B,EAAkBD,EAAmB,EACzC,MAAMnhE,EAAWjO,EAAKtjB,QAAQ2yF,KAC9B7B,EAAaxtE,EAAKtjB,QAAQ2yF,KAC1B,MAAMzX,EAAa53D,EAAKtjB,QAAQ2yF,KAC1B7X,EAAax3D,EAAKtjB,QAAQ2yF,KAC1B5hE,EAAO,GACb,IAAK,IAAI53B,EAAI,EAAGA,EAAI2hF,EAAY3hF,IAC9B43B,EAAKhuB,KAAKugB,EAAKtjB,QAAQk7E,EAAa,EAAI/hF,IAE1CmqB,EAAK3M,SAASukE,GAEd,MAAM35D,EAAuB,IAAhBwP,EAAKr1B,OAAe,EAAIq1B,EAAKm8B,QAAO,CAAC7zD,EAAGiB,IAAMjB,EAAIiB,IAE/D,GADA0yB,EAAOukE,EAA2BhgE,GACrB,WAATvE,EAAmB,CACrB,MAAMkE,EAAuB,GAC7B,IAAIq6C,EAAYulB,EAAa,EAC7B,IAAK,IAAI33F,EAAI,EAAGA,EAAIooB,EAAMpoB,IAAK,CAC7B,MAAMojB,EAAS+G,EAAKtjB,QAAQurE,KACtBqnB,EAAiBz5F,IAAMooB,EAAO,OAAIpF,EAAYmH,EAAKtjB,QAAQurE,GAAahvD,EAC9E2U,EAAWnuB,KAAKugB,EAAK1H,aAAaW,EAAQq2E,G,CAE5CljE,EAAO3sB,KAAK,CAACiqB,EAAM+D,EAAMG,G,KACpB,CACL,MACM3rB,EAAO,IADiBisF,EAA8BxkE,GAC/C,CAA0BzL,GACvC,IAAIhmB,WAAWgK,EAAK5M,OAAQ4M,EAAKg2D,WAAYh2D,EAAKzE,YAC7C2N,IAAI6U,EAAKzjB,OAAOb,SAAS8xF,EAAYA,EAAavrF,EAAKzE,aAC5D4uB,EAAO3sB,KAAK,CAACiqB,EAAM+D,EAAMxrB,G,UAG3B+d,EAAK3J,aAAa84E,GACL,WAATzlE,GAAqB8jE,GACvBxtE,EAAKrL,MAAM64E,GAEbxtE,EAAKrM,kBAAkBu4B,E,EAK7B,GAAkB,IAAduhD,EACF,OAAOrhE,EAEP,MAAM,IAAI7uB,MAAM,yCAAyCkwF,K,SAG3DztE,EAAK3J,aAAaq4E,E,UAGpBJ,EAAYxsF,QAAQke,EAAKrM,mBACzB46E,EAAYzsF,QAAQke,EAAKrL,OAEzBqL,EAAK/L,sBAAsBi3E,GAC3BmD,EAAiBvsF,QAAQke,EAAKrL,M,GAOzB,EAAAgrE,aAAgBkL,IAC3B,MAAM7qE,GAAO,IAAAirE,eACP50D,EAAUq3D,EAAe7pF,IAAIgnF,GACnC,IAAKx0D,EACH,MAAM,IAAI94B,MAAM,sBAElB,MAAMqwF,EAAgBv3D,EAAQ,GAGxBk5D,EAAkBvvE,EAAK3L,iBAAiBu5E,GAC9C,GAAwB,IAApB2B,EACF,MAAM,IAAIhyF,MAAM,kCAElByiB,EAAK3M,SAASk8E,EAAgB,EAGnB,EAAAxE,2BAA8BzhE,IACzC,MAAMkmE,EAA6B,GACnC,IAAK,MAAMtjD,KAAU5iB,EAAS,CAC5B,MAAMrnB,EAAOiqC,EAAO,IACfhhC,MAAM8f,QAAQ/oB,IAASA,EAAK5M,QAC/Bm6F,EAAQ/vF,KAAKwC,EAAK5M,O,CAGtB,OAAOm6F,CAAO,C,o2BC5ahB,mBAIA,YAEMC,EAEgC,EAAQ,MAE9C,IAAIzvE,EACAspE,GAAc,EACdD,GAAe,EACfE,GAAU,EAEd,MAiDMmG,EAAkB,CAACC,EAAkBC,IACrCA,EACKD,EAAU,8BAAgC,yBAE1CA,EAAU,qBAAuB,gBAI/B,EAAAvF,sBAAwBj0D,MAAM05D,IACzC,GAAIvG,EACF,OAAOjzF,QAAQqb,UAEjB,GAAI23E,EACF,MAAM,IAAI9rF,MAAM,yDAElB,GAAIgsF,EACF,MAAM,IAAIhsF,MAAM,sDAGlB8rF,GAAe,EAGf,MAAMyG,EAAUD,EAAMn5D,YAChBG,EAAag5D,EAAMh5D,WACnBF,EAAOk5D,EAAMl5D,KAEbi5D,EAAa/4D,EAAa,GA3EH,MAC7B,IAEE,MAAiC,oBAAtBp7B,oBAMmB,oBAAnBs0F,iBACT,IAAIA,gBAAiBC,MAAM1xF,YAAY,IAAI7C,kBAAkB,IAKxDR,YAAYg1F,SAAS,IAAIh4F,WAAW,CACzC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAI,GAAI,EAAK,EAAI,EAAG,EAAG,EAAI,EAAG,EACnE,EAAG,EAAI,EAAK,EAAK,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAI,IAAK,GAAI,EAAG,EAAG,GAAI,M,CAElE,MAAOxC,GACP,OAAO,C,GAuD4By6F,GAC/BP,EAAUh5D,GApDM,MACtB,IAeE,OAAO17B,YAAYg1F,SAAS,IAAIh4F,WAAW,CACzC,EAAK,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAK,GAAK,EAAG,GAAI,EACvF,IAAK,GAAI,IAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,IAAK,IAAK,EAAG,GAAI,K,CAEzF,MAAOxC,GACP,OAAO,C,GA+Be06F,GAElBC,EAAgD,iBAApBP,EAAM3F,UAAyB2F,EAAM3F,eAAYrxE,EAC7Ew3E,EAAeX,GAAgB,EAAOE,GACtCU,EAAuBZ,EAAgBC,EAASC,GAChDW,EAA8C,iBAApBV,EAAM3F,UAAyB2F,EAAM3F,UAAUoG,QAAwBz3E,EAEvG,IAAI23E,GAAY,EAEhB,MAAMC,EAA8B,GAgEpC,GA7DIX,EAAU,GACZW,EAAMhxF,KAAK,IAAIpJ,SAASqb,IACtB3E,YAAW,KACTyjF,GAAY,EACZ9+E,GAAS,GACRo+E,EAAQ,KAKfW,EAAMhxF,KAAK,IAAIpJ,SAAQ,CAACqb,EAAS0H,KAC/B,MAAMuB,EAAUi1E,EAAaH,EAAyB,UAChDn2B,EAAiC,CACrCzhE,WAAY,CAAC64F,EAAkBC,IACUf,GAAcc,EAAS9hB,SAAS,eACnD,oBAATgiB,KACFC,IAAIC,gBAAgB,IAAIF,KAC3B,CAGE,EAAQ,OAEV,CAAClnE,KAAM,qBAGTgnE,IAAaL,EAERE,QAAAA,GADgBH,QAAAA,EAAsBO,GACTL,EAG/BK,EAAkBD,GAI7B,GAAuCd,EACrC,GAAoB,oBAATgB,KACTt3B,EAAOr2D,oBAAsB6oF,EAAK7xE,KAAKniB,UAAW,4BAC7C,CACL,MAAMi5F,EAAmB,yDAAyDp2E,EAAQlR,kBAC1F6vD,EAAOr2D,oBAAsB,IAAI2tF,KAAK,CAACG,GAAmB,CAACrnE,KAAM,mB,CAIrE/O,EAAQ2+C,GAAQhoD,MAEZH,IACEk4E,GAAe,EACfC,GAAc,EACdtpE,EAAO7O,EACPO,GAAS,IAGVs/E,IACC3H,GAAe,EACfE,GAAU,EACVnwE,EAAO43E,EAAK,GACZ,WAGF36F,QAAQ46F,KAAKR,GAEfD,EACF,MAAM,IAAIjzF,MAAM,2DAA2DuyF,M,EAIlE,EAAA7E,YAAc,KACzB,GAAI3B,GAAetpE,EACjB,OAAOA,EAGT,MAAM,IAAIziB,MAAM,sCAAsC,EAG3C,EAAA+9B,QAAU,K,OACjBguD,GAAgBD,GAAiBE,IACnCF,GAAe,EAEwB,QAAtC,EAAArpE,EAA+Bxc,eAAO,SAAE0tF,sBACzClxE,OAAOnH,EAEPwwE,GAAe,EACfC,GAAc,EACdC,GAAU,E,sEC3LC,SAAS4H,IACtB,OAAO,IAAO,ktwEAAg1yE,cAAUt4E,OAAWA,EACr3yE,C,uBCAA1H,EAAOP,QAAU,SAAUg6D,EAASwmB,EAAmBC,EAAeC,GACpE,IAAIC,EAAcr4F,MAAQhC,OAE1B,IACE,IACE,IAAIs6F,EAEJ,IAEEA,EAAO,IAAID,EAAYX,KAAK,CAAChmB,GAO/B,CANE,MAAOn1E,IAGP+7F,EAAO,IADWD,EAAYE,aAAeF,EAAYG,mBAAqBH,EAAYI,gBAAkBJ,EAAYK,gBAEnHC,OAAOjnB,GACZ4mB,EAAOA,EAAKM,SACd,CAEA,IAAIjB,EAAMU,EAAYV,KAAOU,EAAYQ,UACrCC,EAAYnB,EAAIC,gBAAgBU,GAChCS,EAAS,IAAIV,EAAYH,GAAmBY,EAAWX,GAE3D,OADAR,EAAIqB,gBAAgBF,GACbC,CAGT,CAFE,MAAOx8F,GACP,OAAO,IAAI87F,EAAYH,GAAmB,+BAA+B3gD,OAAO0hD,mBAAmBvnB,IAAWymB,EAChH,CAOF,CANE,MAAO57F,GACP,IAAK67F,EACH,MAAM/zF,MAAM,kCAGd,OAAO,IAAIg0F,EAAYH,GAAmBE,EAAKD,EACjD,CACF,C,wvECtCAlgF,EAAOP,QAAUwhF,QAAQ,K,wBCAzBjhF,EAAOP,QAAUwhF,QAAQ,K,wBCAzBjhF,EAAOP,QAAUwhF,QAAQ,O,uBCAzBjhF,EAAOP,QAAUwhF,QAAQ,a,wBCAzBjhF,EAAOP,QAAUwhF,QAAQ,O,wBCAzBjhF,EAAOP,QAAUwhF,QAAQ,iB,wBCAzBjhF,EAAOP,QAAUwhF,QAAQ,qB,wBCAzBjhF,EAAOP,QAAUwhF,QAAQ,S,gECiBzB,IAAIpkB,EAAc,CAAC,EAKnBA,EAAYqkB,OAQZrkB,EAAYskB,MAMZtkB,EAAYukB,aAAe,EAM3BvkB,EAAYwkB,WAAa,EAMzBxkB,EAAYykB,uBAAyB,EAMrCzkB,EAAY2B,mBAAqB,EAKjC3B,EAAY0kB,SAAW,CACrBC,WAAY,EACZC,aAAc,GAOhB5kB,EAAY1jD,MAAQ,IAAIhuB,WAAW,GAMnC0xE,EAAY6kB,QAAU,IAAIh2F,aAAamxE,EAAY1jD,MAAMj1B,QAMzD24E,EAAY8kB,QAAU,IAAI/1F,aAAaixE,EAAY1jD,MAAMj1B,QAMzD24E,EAAY/nC,eAAuE,IAAtD,IAAIxpC,YAAY,IAAIxE,WAAW,CAAC,EAAG,IAAI5C,QAAQ,GAS5E24E,EAAYjuD,KAAO,SAASI,EAAKC,GAK/BrhB,KAAKohB,IAAY,EAANA,EAMXphB,KAAKqhB,KAAc,EAAPA,CACd,EAOA4tD,EAAYjuD,KAAKZ,OAAS,SAASgB,EAAKC,GAEtC,OAAc,GAAPD,GAAoB,GAARC,EAAY4tD,EAAYjuD,KAAKmB,KAAO,IAAI8sD,EAAYjuD,KAAKI,EAAKC,EACnF,EAKA4tD,EAAYjuD,KAAKvU,UAAUunF,UAAY,WACrC,OAAQh0F,KAAKohB,MAAQ,GAAiB,WAAZphB,KAAKqhB,IACjC,EAMA4tD,EAAYjuD,KAAKvU,UAAUmU,OAAS,SAASC,GAC3C,OAAO7gB,KAAKohB,KAAOP,EAAMO,KAAOphB,KAAKqhB,MAAQR,EAAMQ,IACrD,EAMA4tD,EAAYjuD,KAAKmB,KAAO,IAAI8sD,EAAYjuD,KAAK,EAAG,GAUhDiuD,EAAYglB,QAAU,SAASC,GAC7B,GAAKA,EAGCC,EAAeD,OAFnB,IAAIC,EAAe,KASrBn0F,KAAK+T,GAAKk7D,EAAYC,WAAWtW,SAASu7B,GAQ1Cn0F,KAAKo0F,MAAQD,EAQbn0F,KAAKq0F,SAAW,EAQhBr0F,KAAKs0F,OAAS,KAQdt0F,KAAKu0F,cAAgB,EAQrBv0F,KAAKw0F,UAAW,EAQhBx0F,KAAKy0F,aAAe,EAQpBz0F,KAAK00F,QAAU,GAQf10F,KAAK20F,iBAAmB,EAQxB30F,KAAK40F,gBAAiB,CACxB,EAEA3lB,EAAYglB,QAAQxnF,UAAUooF,MAAQ,WACpC70F,KAAK+T,GAAG8gF,QACR70F,KAAKo0F,MAAQp0F,KAAK+T,GAAG+gF,WACrB90F,KAAKq0F,SAAW,EAChBr0F,KAAKs0F,OAAS,KACdt0F,KAAKu0F,cAAgB,EACrBv0F,KAAKw0F,UAAW,EAChBx0F,KAAKy0F,aAAe,EACpBz0F,KAAK00F,QAAU,GACf10F,KAAK20F,iBAAmB,EACxB30F,KAAK40F,gBAAiB,CACxB,EASA3lB,EAAYglB,QAAQxnF,UAAUsoF,cAAgB,SAASA,GACrD/0F,KAAK40F,eAAiBG,CACxB,EASA9lB,EAAYglB,QAAQxnF,UAAU02E,WAAa,WACzC,OAAOnjF,KAAK+T,EACd,EAQAk7D,EAAYglB,QAAQxnF,UAAUuoF,aAAe,WAC3C,OAAOh1F,KAAK+T,GAAGoV,QAAQxsB,SAASqD,KAAK+T,GAAGkiD,WAAYj2D,KAAK+T,GAAGkiD,WAAaj2D,KAAKka,SAChF,EAYA+0D,EAAYglB,QAAQxnF,UAAUmoE,KAAO,SAAS11D,EAAM+1E,GAE9C/1E,EAAOlf,KAAKq0F,WACdr0F,KAAKq0F,SAAWn1E,GAQlB,IAHA,IAAIg2E,EAAwE,IAAvDl1F,KAAK+T,GAAG+gF,WAAa90F,KAAKo0F,MAAQa,GAA2B/1E,EAAO,EAGlFlf,KAAKo0F,MAAQc,EAAah2E,EAAO+1E,GAAkB,CACxD,IAAIE,EAAen1F,KAAK+T,GAAG+gF,WAC3B90F,KAAK+T,GAAKk7D,EAAYglB,QAAQmB,eAAep1F,KAAK+T,IAClD/T,KAAKo0F,OAASp0F,KAAK+T,GAAG+gF,WAAaK,CACrC,CAEAn1F,KAAKqoF,IAAI6M,EACX,EAKAjmB,EAAYglB,QAAQxnF,UAAU47E,IAAM,SAASgN,GAC3C,IAAK,IAAIv+F,EAAI,EAAGA,EAAIu+F,EAAWv+F,IAC7BkJ,KAAK+T,GAAGuhF,YAAYt1F,KAAKo0F,MAAO,EAEpC,EAKAnlB,EAAYglB,QAAQxnF,UAAU6oF,UAAY,SAASt1E,GACjDhgB,KAAK+T,GAAGuhF,UAAUt1F,KAAKo0F,OAAS,EAAGp0E,EACrC,EAKAivD,EAAYglB,QAAQxnF,UAAU8oF,WAAa,SAASv1E,GAClDhgB,KAAK+T,GAAGwhF,WAAWv1F,KAAKo0F,OAAS,EAAGp0E,EACtC,EAKAivD,EAAYglB,QAAQxnF,UAAUooE,WAAa,SAAS70D,GAClDhgB,KAAK+T,GAAG8gE,WAAW70E,KAAKo0F,OAAS,EAAGp0E,EACtC,EAKAivD,EAAYglB,QAAQxnF,UAAU+oF,WAAa,SAASx1E,GAClDhgB,KAAK+T,GAAGyhF,WAAWx1F,KAAKo0F,OAAS,EAAGp0E,EACtC,EAKAivD,EAAYglB,QAAQxnF,UAAUgpF,aAAe,SAASz1E,GACpDhgB,KAAK+T,GAAG0hF,aAAaz1F,KAAKo0F,OAAS,EAAGp0E,EACxC,EAKAivD,EAAYglB,QAAQxnF,UAAUipF,aAAe,SAAS11E,GACpDhgB,KAAK+T,GAAG2hF,aAAa11F,KAAKo0F,OAAS,EAAGp0E,EACxC,EAOAivD,EAAYglB,QAAQxnF,UAAUusE,QAAU,SAASh5D,GAC/ChgB,KAAK40E,KAAK,EAAG,GACb50E,KAAKs1F,UAAUt1E,EACjB,EAMAivD,EAAYglB,QAAQxnF,UAAUkpF,SAAW,SAAS31E,GAChDhgB,KAAK40E,KAAK,EAAG,GACb50E,KAAKu1F,WAAWv1E,EAClB,EAMAivD,EAAYglB,QAAQxnF,UAAUkqE,SAAW,SAAS32D,GAChDhgB,KAAK40E,KAAK,EAAG,GACb50E,KAAK60E,WAAW70D,EAClB,EAMAivD,EAAYglB,QAAQxnF,UAAUqsE,SAAW,SAAS94D,GAChDhgB,KAAK40E,KAAK,EAAG,GACb50E,KAAKw1F,WAAWx1E,EAClB,EAMAivD,EAAYglB,QAAQxnF,UAAU+tE,WAAa,SAASx6D,GAClDhgB,KAAK40E,KAAK,EAAG,GACb50E,KAAKy1F,aAAaz1E,EACpB,EAMAivD,EAAYglB,QAAQxnF,UAAUmpF,WAAa,SAAS51E,GAClDhgB,KAAK40E,KAAK,EAAG,GACb50E,KAAK01F,aAAa11E,EACpB,EAQAivD,EAAYglB,QAAQxnF,UAAUimE,aAAe,SAASmjB,EAAS71E,EAAO2Z,IAChE35B,KAAK40F,gBAAkB50E,GAAS2Z,KAClC35B,KAAKg5E,QAAQh5D,GACbhgB,KAAK81F,KAAKD,GAEd,EAOA5mB,EAAYglB,QAAQxnF,UAAUspF,cAAgB,SAASF,EAAS71E,EAAO2Z,IACjE35B,KAAK40F,gBAAkB50E,GAAS2Z,KAClC35B,KAAK21F,SAAS31E,GACdhgB,KAAK81F,KAAKD,GAEd,EAOA5mB,EAAYglB,QAAQxnF,UAAU0mE,cAAgB,SAAS0iB,EAAS71E,EAAO2Z,IACjE35B,KAAK40F,gBAAkB50E,GAAS2Z,KAClC35B,KAAK22E,SAAS32D,GACdhgB,KAAK81F,KAAKD,GAEd,EAOA5mB,EAAYglB,QAAQxnF,UAAUkmE,cAAgB,SAASkjB,EAAS71E,EAAO2Z,IACjE35B,KAAK40F,gBAAmB50E,EAAMY,OAAO+Y,KACvC35B,KAAK84E,SAAS94D,GACdhgB,KAAK81F,KAAKD,GAEd,EAOA5mB,EAAYglB,QAAQxnF,UAAU0tE,gBAAkB,SAAS0b,EAAS71E,EAAO2Z,IACnE35B,KAAK40F,gBAAkB50E,GAAS2Z,KAClC35B,KAAKw6E,WAAWx6D,GAChBhgB,KAAK81F,KAAKD,GAEd,EAOA5mB,EAAYglB,QAAQxnF,UAAUupF,gBAAkB,SAASH,EAAS71E,EAAO2Z,IACnE35B,KAAK40F,gBAAkB50E,GAAS2Z,KAClC35B,KAAK41F,WAAW51E,GAChBhgB,KAAK81F,KAAKD,GAEd,EAOA5mB,EAAYglB,QAAQxnF,UAAU0kE,eAAiB,SAAS0kB,EAAS71E,EAAO2Z,IAClE35B,KAAK40F,gBAAkB50E,GAAS2Z,KAClC35B,KAAKqxE,UAAUrxD,GACfhgB,KAAK81F,KAAKD,GAEd,EASA5mB,EAAYglB,QAAQxnF,UAAUwpF,eAAiB,SAASJ,EAAS71E,EAAO2Z,GAClE3Z,GAAS2Z,IACX35B,KAAKk2F,OAAOl2E,GACZhgB,KAAK81F,KAAKD,GAEd,EASA5mB,EAAYglB,QAAQxnF,UAAUypF,OAAS,SAAS10E,GAC9C,GAAIA,GAAOxhB,KAAKka,SACd,MAAM,IAAI1b,MAAM,iDAEpB,EAMAywE,EAAYglB,QAAQxnF,UAAU0pF,UAAY,WACxC,GAAIn2F,KAAKw0F,SACP,MAAM,IAAIh2F,MAAM,wDAEpB,EAOAywE,EAAYglB,QAAQxnF,UAAUqpF,KAAO,SAASD,GAC5C71F,KAAKs0F,OAAOuB,GAAW71F,KAAKka,QAC9B,EAKA+0D,EAAYglB,QAAQxnF,UAAUyN,OAAS,WACrC,OAAOla,KAAK+T,GAAG+gF,WAAa90F,KAAKo0F,KACnC,EAcAnlB,EAAYglB,QAAQmB,eAAiB,SAASrhF,GAC5C,IAAIohF,EAAephF,EAAG+gF,WAGtB,GAAmB,WAAfK,EACF,MAAM,IAAI32F,MAAM,uDAGlB,IAAI43F,EAAejB,GAAgB,EAC/BkB,EAAMpnB,EAAYC,WAAWtW,SAASw9B,GAG1C,OAFAC,EAAI1lB,YAAYylB,EAAejB,GAC/BkB,EAAIltE,QAAQ/c,IAAI2H,EAAGoV,QAASitE,EAAejB,GACpCkB,CACT,EAQApnB,EAAYglB,QAAQxnF,UAAU4kE,UAAY,SAASn3D,GACjDla,KAAK40E,KAAK3F,EAAYwkB,WAAY,GAClCzzF,KAAK60E,WAAW70E,KAAKka,SAAWA,EAAS+0D,EAAYwkB,WACvD,EAUAxkB,EAAYglB,QAAQxnF,UAAUykE,YAAc,SAASolB,GACnDt2F,KAAKm2F,YACc,MAAfn2F,KAAKs0F,SACPt0F,KAAKs0F,OAAS,IAEhBt0F,KAAKu0F,cAAgB+B,EACrB,IAAK,IAAIx/F,EAAI,EAAGA,EAAIw/F,EAAWx/F,IAC7BkJ,KAAKs0F,OAAOx9F,GAAK,EAEnBkJ,KAAKw0F,UAAW,EAChBx0F,KAAKy0F,aAAez0F,KAAKka,QAC3B,EAOA+0D,EAAYglB,QAAQxnF,UAAU+kE,UAAY,WACxC,GAAmB,MAAfxxE,KAAKs0F,SAAmBt0F,KAAKw0F,SAC/B,MAAM,IAAIh2F,MAAM,qDAGlBwB,KAAK22E,SAAS,GAKd,IAJA,IAAI4f,EAAYv2F,KAAKka,SAGjBpjB,EAAIkJ,KAAKu0F,cAAgB,EACtBz9F,GAAK,GAAuB,GAAlBkJ,KAAKs0F,OAAOx9F,GAASA,KAItC,IAHA,IAAI0/F,EAAe1/F,EAAI,EAGhBA,GAAK,EAAGA,IAEbkJ,KAAK21F,SAA2B,GAAlB31F,KAAKs0F,OAAOx9F,GAAUy/F,EAAYv2F,KAAKs0F,OAAOx9F,GAAK,GAInEkJ,KAAK21F,SAASY,EAAYv2F,KAAKy0F,cAC/B,IAAIl1E,GAAOi3E,EAFW,GAEuBvnB,EAAYukB,aACzDxzF,KAAK21F,SAASp2E,GAGd,IAAIk3E,EAAkB,EAClBC,EAAM12F,KAAKo0F,MACjBuC,EACE,IAAK7/F,EAAI,EAAGA,EAAIkJ,KAAK00F,QAAQr7F,OAAQvC,IAAK,CACxC,IAAI8/F,EAAM52F,KAAK+T,GAAG+gF,WAAa90F,KAAK00F,QAAQ59F,GAC5C,GAAIyoB,GAAOvf,KAAK+T,GAAG8iF,UAAUD,GAAM,CACjC,IAAK,IAAIngG,EAAIw4E,EAAYukB,aAAc/8F,EAAI8oB,EAAK9oB,GAAKw4E,EAAYukB,aAC/D,GAAIxzF,KAAK+T,GAAG8iF,UAAUH,EAAMjgG,IAAMuJ,KAAK+T,GAAG8iF,UAAUD,EAAMngG,GACxD,SAASkgG,EAGbF,EAAkBz2F,KAAK00F,QAAQ59F,GAC/B,KACF,CACF,CAmBA,OAjBI2/F,GAGFz2F,KAAKo0F,MAAQp0F,KAAK+T,GAAG+gF,WAAayB,EAGlCv2F,KAAK+T,GAAG8gE,WAAW70E,KAAKo0F,MAAOqC,EAAkBF,KAIjDv2F,KAAK00F,QAAQh0F,KAAKV,KAAKka,UAGvBla,KAAK+T,GAAG8gE,WAAW70E,KAAK+T,GAAG+gF,WAAayB,EAAWv2F,KAAKka,SAAWq8E,IAGrEv2F,KAAKw0F,UAAW,EACT+B,CACT,EAUAtnB,EAAYglB,QAAQxnF,UAAU4mB,OAAS,SAASyjE,EAAYC,EAAqBC,GAC/E,IAAIC,EAAcD,EAAkB/nB,EAAY2B,mBAAqB,EACrE,GAAImmB,EAAqB,CACvB,IAAIG,EAAkBH,EAGtB,GAFA/2F,KAAK40E,KAAK50E,KAAKq0F,SAAUplB,EAAYwkB,WACnCxkB,EAAYykB,uBAAyBuD,GACnCC,EAAgB79F,QAAU41E,EAAYykB,uBACxC,MAAM,IAAIl1F,MAAM,+CACdywE,EAAYykB,wBAEhB,IAAK,IAAI58F,EAAIm4E,EAAYykB,uBAAyB,EAAG58F,GAAK,EAAGA,IAC3DkJ,KAAKs1F,UAAU4B,EAAgBl6F,WAAWlG,GAE9C,CACAkJ,KAAK40E,KAAK50E,KAAKq0F,SAAUplB,EAAYwkB,WAAawD,GAClDj3F,KAAKqxE,UAAUylB,GACXG,GACFj3F,KAAK22E,SAAS32E,KAAK+T,GAAG+gF,WAAa90F,KAAKo0F,OAE1Cp0F,KAAK+T,GAAG48D,YAAY3wE,KAAKo0F,MAC3B,EAQAnlB,EAAYglB,QAAQxnF,UAAU0qF,mBAAqB,SAAUL,EAAYC,GACvE/2F,KAAKqzB,OAAOyjE,EAAYC,GAAqB,EAC/C,EAUA9nB,EAAYglB,QAAQxnF,UAAUqyE,cAAgB,SAASsY,EAAOC,GAC5D,IAAIC,EAAct3F,KAAK+T,GAAG+gF,WAAasC,EACnCG,EAAeD,EAAct3F,KAAK+T,GAAG28D,UAAU4mB,GAInD,GAHoD,GAA3Ct3F,KAAK+T,GAAG8iF,UAAUU,EAAeF,GAIxC,MAAM,IAAI74F,MAAM,sBAAwB64F,EAAQ,eAEpD,EAWApoB,EAAYglB,QAAQxnF,UAAU2kE,YAAc,SAASomB,EAAWC,EAAWC,GACzE13F,KAAKm2F,YACLn2F,KAAK20F,iBAAmB8C,EACxBz3F,KAAK40E,KAAK3F,EAAYwkB,WAAY+D,EAAYC,GAC9Cz3F,KAAK40E,KAAK8iB,EAAWF,EAAYC,EACnC,EASAxoB,EAAYglB,QAAQxnF,UAAU6kE,UAAY,WAExC,OADAtxE,KAAK60E,WAAW70E,KAAK20F,kBACd30F,KAAKka,QACd,EAUA+0D,EAAYglB,QAAQxnF,UAAUkrF,aAAe,SAASngG,GACpD,GAAIA,aAAa0B,WACf,IAAIomB,EAAO9nB,MAEX,CAAI8nB,EAAO,GAGX,IAHA,IACIxoB,EAAI,EAEDA,EAAIU,EAAE6B,QAAQ,CACnB,IAAIu+F,EAGA5gG,EAAIQ,EAAEwF,WAAWlG,MAEnB8gG,EADE5gG,EAAI,OAAUA,GAAK,MACTA,GAGCA,GAAK,IADVQ,EAAEwF,WAAWlG,MACO,UAId,IACdwoB,EAAK5e,KAAKk3F,IAENA,EAAY,KACdt4E,EAAK5e,KAAOk3F,GAAa,EAAK,GAAQ,MAElCA,EAAY,MACdt4E,EAAK5e,KAAOk3F,GAAa,GAAM,GAAQ,KAEvCt4E,EAAK5e,KACDk3F,GAAa,GAAM,EAAQ,IAC3BA,GAAa,GAAM,GAAQ,KAEjCt4E,EAAK5e,KAAOk3F,GAAa,EAAK,GAAQ,MAExCt4E,EAAK5e,KAAkB,GAAZk3F,EAAoB,KAEnC,CAjCa,CAoCf53F,KAAKg5E,QAAQ,GACbh5E,KAAKoxE,YAAY,EAAG9xD,EAAKjmB,OAAQ,GACjC2G,KAAK+T,GAAG48D,YAAY3wE,KAAKo0F,OAAS90E,EAAKjmB,QAC9BvC,EAAI,EAAb,IAAK,IAAWojB,EAASla,KAAKo0F,MAAOjrE,EAAQnpB,KAAK+T,GAAGoV,QAASryB,EAAIwoB,EAAKjmB,OAAQvC,IAC7EqyB,EAAMjP,KAAYoF,EAAKxoB,GAEzB,OAAOkJ,KAAKsxE,WACd,EASArC,EAAYglB,QAAQxnF,UAAUgmE,WAAa,SAASrxD,EAAKC,GACvD,OAAO4tD,EAAYjuD,KAAKZ,OAAOgB,EAAKC,EACtC,EASA4tD,EAAYC,WAAa,SAAS/lD,GAKhCnpB,KAAK63F,OAAS1uE,EAMdnpB,KAAK83F,UAAY,CACnB,EAQA7oB,EAAYC,WAAWtW,SAAW,SAASy8B,GACzC,OAAO,IAAIpmB,EAAYC,WAAW,IAAIh2E,WAAWm8F,GACnD,EAEApmB,EAAYC,WAAWziE,UAAUooF,MAAQ,WACvC70F,KAAK83F,UAAY,CACnB,EAOA7oB,EAAYC,WAAWziE,UAAU0c,MAAQ,WACvC,OAAOnpB,KAAK63F,MACd,EAOA5oB,EAAYC,WAAWziE,UAAUwpD,SAAW,WAC1C,OAAOj2D,KAAK83F,SACd,EAOA7oB,EAAYC,WAAWziE,UAAUkkE,YAAc,SAAS1a,GACtDj2D,KAAK83F,UAAY7hC,CACnB,EAOAgZ,EAAYC,WAAWziE,UAAUqoF,SAAW,WAC1C,OAAO90F,KAAK63F,OAAOx+F,MACrB,EAMA41E,EAAYC,WAAWziE,UAAU6lE,SAAW,SAASp4D,GACnD,OAAOla,KAAKg4E,UAAU99D,IAAW,IAAM,EACzC,EAMA+0D,EAAYC,WAAWziE,UAAUurE,UAAY,SAAS99D,GACpD,OAAOla,KAAK63F,OAAO39E,EACrB,EAMA+0D,EAAYC,WAAWziE,UAAUoqF,UAAY,SAAS38E,GACpD,OAAOla,KAAK+3F,WAAW79E,IAAW,IAAM,EAC1C,EAMA+0D,EAAYC,WAAWziE,UAAUsrF,WAAa,SAAS79E,GACrD,OAAOla,KAAK63F,OAAO39E,GAAUla,KAAK63F,OAAO39E,EAAS,IAAM,CAC1D,EAMA+0D,EAAYC,WAAWziE,UAAUikE,UAAY,SAASx2D,GACpD,OAAOla,KAAK63F,OAAO39E,GAAUla,KAAK63F,OAAO39E,EAAS,IAAM,EAAIla,KAAK63F,OAAO39E,EAAS,IAAM,GAAKla,KAAK63F,OAAO39E,EAAS,IAAM,EACzH,EAMA+0D,EAAYC,WAAWziE,UAAU6nE,WAAa,SAASp6D,GACrD,OAAOla,KAAK0wE,UAAUx2D,KAAY,CACpC,EAMA+0D,EAAYC,WAAWziE,UAAU+lE,UAAY,SAASt4D,GACpD,OAAO,IAAI+0D,EAAYjuD,KAAKhhB,KAAK0wE,UAAUx2D,GAASla,KAAK0wE,UAAUx2D,EAAS,GAC9E,EAMA+0D,EAAYC,WAAWziE,UAAUuxE,WAAa,SAAS9jE,GACrD,OAAO,IAAI+0D,EAAYjuD,KAAKhhB,KAAKs0E,WAAWp6D,GAASla,KAAKs0E,WAAWp6D,EAAS,GAChF,EAMA+0D,EAAYC,WAAWziE,UAAUutE,YAAc,SAAS9/D,GAEtD,OADA+0D,EAAY1jD,MAAM,GAAKvrB,KAAK0wE,UAAUx2D,GAC/B+0D,EAAY6kB,QAAQ,EAC7B,EAMA7kB,EAAYC,WAAWziE,UAAUurF,YAAc,SAAS99E,GAGtD,OAFA+0D,EAAY1jD,MAAM0jD,EAAY/nC,eAAiB,EAAI,GAAKlnC,KAAK0wE,UAAUx2D,GACvE+0D,EAAY1jD,MAAM0jD,EAAY/nC,eAAiB,EAAI,GAAKlnC,KAAK0wE,UAAUx2D,EAAS,GACzE+0D,EAAY8kB,QAAQ,EAC7B,EAMA9kB,EAAYC,WAAWziE,UAAU6oF,UAAY,SAASp7E,EAAQ8F,GAC5DhgB,KAAK63F,OAAO39E,GAA+B,CAC7C,EAMA+0D,EAAYC,WAAWziE,UAAUwrF,WAAa,SAAS/9E,EAAQ8F,GAC7DhgB,KAAK63F,OAAO39E,GAAU8F,CACxB,EAMAivD,EAAYC,WAAWziE,UAAU8oF,WAAa,SAASr7E,EAAQ8F,GAC7DhgB,KAAK63F,OAAO39E,GAAU8F,EACtBhgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,CACrC,EAMAivD,EAAYC,WAAWziE,UAAUyrF,YAAc,SAASh+E,EAAQ8F,GAC5DhgB,KAAK63F,OAAO39E,GAAU8F,EACtBhgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,CACvC,EAMAivD,EAAYC,WAAWziE,UAAUooE,WAAa,SAAS36D,EAAQ8F,GAC7DhgB,KAAK63F,OAAO39E,GAAU8F,EACtBhgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,EACnChgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,GACnChgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,EACrC,EAMAivD,EAAYC,WAAWziE,UAAU0rF,YAAc,SAASj+E,EAAQ8F,GAC5DhgB,KAAK63F,OAAO39E,GAAU8F,EACtBhgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,EACnChgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,GACnChgB,KAAK63F,OAAO39E,EAAS,GAAK8F,GAAS,EACvC,EAMAivD,EAAYC,WAAWziE,UAAU+oF,WAAa,SAASt7E,EAAQ8F,GAC7DhgB,KAAK60E,WAAW36D,EAAQ8F,EAAMoB,KAC9BphB,KAAK60E,WAAW36D,EAAS,EAAG8F,EAAMqB,KACpC,EAMA4tD,EAAYC,WAAWziE,UAAU2rF,YAAc,SAASl+E,EAAQ8F,GAC5DhgB,KAAKm4F,YAAYj+E,EAAQ8F,EAAMoB,KAC/BphB,KAAKm4F,YAAYj+E,EAAS,EAAG8F,EAAMqB,KACvC,EAMA4tD,EAAYC,WAAWziE,UAAUgpF,aAAe,SAASv7E,EAAQ8F,GAC/DivD,EAAY6kB,QAAQ,GAAK9zE,EACzBhgB,KAAK60E,WAAW36D,EAAQ+0D,EAAY1jD,MAAM,GAC5C,EAMA0jD,EAAYC,WAAWziE,UAAUipF,aAAe,SAASx7E,EAAQ8F,GAC/DivD,EAAY8kB,QAAQ,GAAK/zE,EACzBhgB,KAAK60E,WAAW36D,EAAQ+0D,EAAY1jD,MAAM0jD,EAAY/nC,eAAiB,EAAI,IAC3ElnC,KAAK60E,WAAW36D,EAAS,EAAG+0D,EAAY1jD,MAAM0jD,EAAY/nC,eAAiB,EAAI,GACjF,EAQA+nC,EAAYC,WAAWziE,UAAU4rF,oBAAsB,WACrD,GAAIr4F,KAAK63F,OAAOx+F,OAAS2G,KAAK83F,UAAY7oB,EAAYwkB,WAClDxkB,EAAYykB,uBACd,MAAM,IAAIl1F,MACN,kEAGN,IADA,IAAI2kB,EAAS,GACJrsB,EAAI,EAAGA,EAAIm4E,EAAYykB,uBAAwB58F,IACtDqsB,GAAUvmB,OAAOC,aACbmD,KAAKsyE,SAAStyE,KAAK83F,UAAY7oB,EAAYwkB,WAAa38F,IAE9D,OAAOqsB,CACT,EAUA8rD,EAAYC,WAAWziE,UAAUokE,SAAW,SAASL,EAAQ8nB,GAC3D,IAAIhE,EAAS9jB,EAASxwE,KAAK0wE,UAAUF,GACrC,OAAO8nB,EAAgBt4F,KAAK62F,UAAUvC,GAAUt0F,KAAK62F,UAAUvC,EAASgE,GAAiB,CAC3F,EASArpB,EAAYC,WAAWziE,UAAUyrE,QAAU,SAASniF,EAAGmkB,GAGrD,OAFAnkB,EAAEy6E,OAASt2D,EAASla,KAAK0wE,UAAUx2D,GACnCnkB,EAAEge,GAAK/T,KACAjK,CACT,EAeAk5E,EAAYC,WAAWziE,UAAUqlE,SAAW,SAAS53D,EAAQq+E,GAC3Dr+E,GAAUla,KAAK0wE,UAAUx2D,GAEzB,IAAI7gB,EAAS2G,KAAK0wE,UAAUx2D,GACxBiJ,EAAS,GACTrsB,EAAI,EAIR,GAFAojB,GAAU+0D,EAAYwkB,WAElB8E,IAAiBtpB,EAAY0kB,SAASC,WACxC,OAAO5zF,KAAK63F,OAAOl7F,SAASud,EAAQA,EAAS7gB,GAG/C,KAAOvC,EAAIuC,GAAQ,CACjB,IAAIu+F,EAGA5gG,EAAIgJ,KAAKg4E,UAAU99D,EAASpjB,KAChC,GAAIE,EAAI,IACN4gG,EAAY5gG,MACP,CACL,IAAIiB,EAAI+H,KAAKg4E,UAAU99D,EAASpjB,KAChC,GAAIE,EAAI,IACN4gG,GACQ,GAAJ5gG,IAAa,EACV,GAAJiB,MACE,CACL,IAAIb,EAAI4I,KAAKg4E,UAAU99D,EAASpjB,KAE9B8gG,EADE5gG,EAAI,KAEE,GAAJA,IAAa,IACT,GAAJiB,IAAa,EACV,GAAJb,GAIK,EAAJJ,IAAa,IACT,GAAJiB,IAAa,IACT,GAAJb,IAAa,EACV,GALC4I,KAAKg4E,UAAU99D,EAASpjB,IAOpC,CACF,CAGI8gG,EAAY,MACdz0E,GAAUvmB,OAAOC,aAAa+6F,IAE9BA,GAAa,MACbz0E,GAAUvmB,OAAOC,aACK,OAAnB+6F,GAAa,IACkB,OAAnB,KAAZA,IAEP,CAEA,OAAOz0E,CACT,EAOA8rD,EAAYC,WAAWziE,UAAUqkE,WAAa,SAAS52D,GACrD,OAAOA,EAASla,KAAK0wE,UAAUx2D,EACjC,EAQA+0D,EAAYC,WAAWziE,UAAUskE,SAAW,SAAS72D,GACnD,OAAOA,EAASla,KAAK0wE,UAAUx2D,GAAU+0D,EAAYwkB,UACvD,EAQAxkB,EAAYC,WAAWziE,UAAUukE,aAAe,SAAS92D,GACvD,OAAOla,KAAK0wE,UAAUx2D,EAASla,KAAK0wE,UAAUx2D,GAChD,EAMA+0D,EAAYC,WAAWziE,UAAUmzE,iBAAmB,SAAS4Y,GAC3D,GAAIA,EAAMn/F,QAAU41E,EAAYykB,uBAC9B,MAAM,IAAIl1F,MAAM,+CACAywE,EAAYykB,wBAE9B,IAAK,IAAI58F,EAAI,EAAGA,EAAIm4E,EAAYykB,uBAAwB58F,IACtD,GAAI0hG,EAAMx7F,WAAWlG,IAAMkJ,KAAKsyE,SAAStyE,KAAK83F,UAAY7oB,EAAYwkB,WAAa38F,GACjF,OAAO,EAGX,OAAO,CACT,EASAm4E,EAAYC,WAAWziE,UAAUgmE,WAAa,SAASrxD,EAAKC,GAC1D,OAAO4tD,EAAYjuD,KAAKZ,OAAOgB,EAAKC,EACtC,C,GCnuCIo3E,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqB7+E,IAAjB8+E,EACH,OAAOA,EAAa/mF,QAGrB,IAAIO,EAASqmF,yBAAyBE,GAAY,CAGjD9mF,QAAS,CAAC,GAOX,OAHAgnF,oBAAoBF,GAAUjsF,KAAK0F,EAAOP,QAASO,EAAQA,EAAOP,QAAS6mF,qBAGpEtmF,EAAOP,OACf,CCrBA6mF,oBAAoBtiG,EAAKgc,IACxB,IAAI0mF,EAAS1mF,GAAUA,EAAOwN,WAC7B,IAAOxN,EAAiB,QACxB,IAAM,EAEP,OADAsmF,oBAAoB7gG,EAAEihG,EAAQ,CAAE9hG,EAAG8hG,IAC5BA,CAAM,ECLdJ,oBAAoB7gG,EAAI,CAACga,EAASknF,KACjC,IAAI,IAAI5qE,KAAO4qE,EACXL,oBAAoBvhG,EAAE4hG,EAAY5qE,KAASuqE,oBAAoBvhG,EAAE0a,EAASsc,IAC5Er2B,OAAO4pB,eAAe7P,EAASsc,EAAK,CAAE6qE,YAAY,EAAMl0F,IAAKi0F,EAAW5qE,IAE1E,ECNDuqE,oBAAoBvhG,EAAI,CAACqqB,EAAKwT,IAAUl9B,OAAO2U,UAAUse,eAAere,KAAK8U,EAAKwT,GCClF0jE,oBAAoB9hG,EAAKib,IACH,oBAAXonF,QAA0BA,OAAOC,aAC1CphG,OAAO4pB,eAAe7P,EAASonF,OAAOC,YAAa,CAAEl5E,MAAO,WAE7DloB,OAAO4pB,eAAe7P,EAAS,aAAc,CAAEmO,OAAO,GAAO,ECF9D,IAAIm5E,oBAAsBT,oBAAoB,M","sources":["webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/cast.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external commonjs \"fs\"","webpack://onnxruntime-web/external commonjs \"os\"","webpack://onnxruntime-web/external commonjs \"path\"","webpack://onnxruntime-web/external commonjs \"perf_hooks\"","webpack://onnxruntime-web/external commonjs \"util\"","webpack://onnxruntime-web/external commonjs \"worker_threads\"","webpack://onnxruntime-web/external commonjs {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/external node-commonjs \"crypto\"","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"sourcesContent":["var _scriptDir,t=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(t){function n(){return E.buffer!=D&&z(E.buffer),j}function e(){return E.buffer!=D&&z(E.buffer),F}function r(){return E.buffer!=D&&z(E.buffer),U}function i(){return E.buffer!=D&&z(E.buffer),Y}function a(){return E.buffer!=D&&z(E.buffer),I}var u,o,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){o=t,c=n}));var f,s,l,p,h,m,d=Object.assign({},u),y=\"./this.program\",b=(t,n)=>{throw n},g=\"object\"==typeof window,_=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(t){return u.locateFile?u.locateFile(t,T):T+t}if(v){let t;T=_?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=()=>{h||(p=require(\"fs\"),h=require(\"path\"))},f=function(t,n){return m(),t=h.normalize(t),p.readFileSync(t,n?void 0:\"utf8\")},l=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),s=(t,n,e)=>{m(),t=h.normalize(t),p.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(t){if(!(t instanceof ot))throw t})),process.on(\"unhandledRejection\",(function(t){throw t})),b=(t,n)=>{if(J())throw process.exitCode=t,n;n instanceof ot||x(\"exiting due to exception: \"+n),process.exit(t)},u.inspect=function(){return\"[Emscripten Module object]\"};try{t=require(\"worker_threads\")}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=t.Worker}else(g||_)&&(_?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",v||(f=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},_&&(l=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),s=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\"GET\",t,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var S=console.log.bind(console),A=console.warn.bind(console);v&&(m(),S=t=>p.writeSync(1,t+\"\\n\"),A=t=>p.writeSync(2,t+\"\\n\"));var M,C=u.print||S,x=u.printErr||A;Object.assign(u,d),d=null,u.thisProgram&&(y=u.thisProgram),u.quit&&(b=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&rt(\"no native wasm support detected\");var E,k,D,j,F,U,Y,I,W=!1,P=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function H(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&P)return P.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,e):t.subarray(n,e));for(r=\"\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var u=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|u:(7&i)<<18|a<<12|u<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function q(t,n){return(t>>>=0)?H(e(),t,n):\"\"}function B(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var u=t.charCodeAt(a);if(55296<=u&&57343>=u&&(u=65536+((1023&u)<<10)|1023&t.charCodeAt(++a)),127>=u){if(e>=r)break;n[e++>>>0]=u}else{if(2047>=u){if(e+1>=r)break;n[e++>>>0]=192|u>>6}else{if(65535>=u){if(e+2>=r)break;n[e++>>>0]=224|u>>12}else{if(e+3>=r)break;n[e++>>>0]=240|u>>18,n[e++>>>0]=128|u>>12&63}n[e++>>>0]=128|u>>6&63}n[e++>>>0]=128|63&u}}return n[e>>>0]=0,e-i}function G(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function z(t){D=t,u.HEAP8=j=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=U=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=Y=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=I=new Float64Array(t)}w&&(D=u.buffer);var N=u.INITIAL_MEMORY||16777216;if(w)E=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)E=u.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:N/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");E&&(D=E.buffer),N=D.byteLength,z(D);var V,L=[],X=[],Z=[],$=[];function J(){return R||!1}function Q(){var t=u.preRun.shift();L.unshift(t)}var K,tt=0,nt=null,et=null;function rt(t){throw w?postMessage({cmd:\"onAbort\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\"Aborted(\"+t+\")\"),W=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),c(t),t}function it(){return K.startsWith(\"data:application/octet-stream;base64,\")}function at(){var t=K;try{if(t==K&&M)return new Uint8Array(M);if(l)return l(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){rt(t)}}K=\"ort-wasm-threaded.wasm\",it()||(K=O(K));var ut={};function ot(t){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+t+\")\",this.status=t}function ct(t){(t=pt.Vb[t])||rt(),pt.mc(t)}function ft(t){var n=pt.Cc();if(!n)return 6;pt.ac.push(n),pt.Vb[t.Ub]=n,n.Ub=t.Ub;var e={cmd:\"run\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return n.$b=()=>{e.time=performance.now(),n.postMessage(e,t.Nc)},n.loaded&&(n.$b(),delete n.$b),0}function st(t){if(w)return Vt(1,1,t);J()||(pt.oc(),u.onExit&&u.onExit(t),W=!0),b(t,new ot(t))}function lt(t,n){if(!n&&w)throw dt(t),\"unwind\";J()||w||(bn(),ht(Z),yn(0),en[1].length&&rn(1,10),en[2].length&&rn(2,10),pt.oc()),st(t)}var pt={Yb:[],ac:[],qc:[],Vb:{},fc:function(){w&&pt.Ec()},Pc:function(){},Ec:function(){pt.receiveObjectTransfer=pt.Gc,pt.threadInitTLS=pt.pc,pt.setExitStatus=pt.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(pt.Vb))pt.mc(t);for(t of pt.Yb)t.terminate();pt.Yb=[]},mc:function(t){var n=t.Ub;delete pt.Vb[n],pt.Yb.push(t),pt.ac.splice(pt.ac.indexOf(t),1),t.Ub=0,Tn(n)},Gc:function(){},pc:function(){pt.qc.forEach((t=>t()))},Fc:function(t,n){t.onmessage=e=>{var r=(e=e.data).cmd;if(t.Ub&&(pt.Bc=t.Ub),e.targetThread&&e.targetThread!=hn()){var i=pt.Vb[e.Qc];i?i.postMessage(e,e.transferList):x('Internal error! Worker sent a message \"'+r+'\" to target pthread '+e.targetThread+\", but that thread no longer exists!\")}else\"processProxyingQueue\"===r?Ht(e.queue):\"spawnThread\"===r?ft(e):\"cleanupThread\"===r?ct(e.thread):\"killThread\"===r?(e=e.thread,r=pt.Vb[e],delete pt.Vb[e],r.terminate(),Tn(e),pt.ac.splice(pt.ac.indexOf(r),1),r.Ub=0):\"cancelThread\"===r?pt.Vb[e.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(t.loaded=!0,n&&n(t),t.$b&&(t.$b(),delete t.$b)):\"print\"===r?C(\"Thread \"+e.threadId+\": \"+e.text):\"printErr\"===r?x(\"Thread \"+e.threadId+\": \"+e.text):\"alert\"===r?alert(\"Thread \"+e.threadId+\": \"+e.text):\"setimmediate\"===e.target?t.postMessage(e):\"onAbort\"===r?u.onAbort&&u.onAbort(e.arg):r&&x(\"worker sent an unknown command \"+r);pt.Bc=void 0},t.onerror=t=>{throw x(\"worker sent an error! \"+t.filename+\":\"+t.lineno+\": \"+t.message),t},v&&(t.on(\"message\",(function(n){t.onmessage({data:n})})),t.on(\"error\",(function(n){t.onerror(n)})),t.on(\"detachedExit\",(function(){}))),t.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:E,wasmModule:k})},yc:function(){var t=O(\"ort-wasm-threaded.worker.js\");pt.Yb.push(new Worker(t))},Cc:function(){return 0==pt.Yb.length&&(pt.yc(),pt.Fc(pt.Yb[0])),pt.Yb.pop()}};function ht(t){for(;0<t.length;)t.shift()(u)}function mt(t){var n=Mn();return t=t(),Cn(n),t}function dt(t){if(w)return Vt(2,0,t);try{lt(t)}catch(t){t instanceof ot||\"unwind\"==t||b(1,t)}}u.PThread=pt,u.establishStackSpace=function(){var t=hn(),n=r()[t+44>>2>>>0];t=r()[t+48>>2>>>0],An(n,n-t),Cn(n)};var yt=[];function bt(t){var n=yt[t];return n||(t>=yt.length&&(yt.length=t+1),yt[t]=n=V.get(t)),n}u.invokeEntryPoint=function(t,n){t=bt(t)(n),J()?pt.nc(t):On(t)};var gt,_t,vt=[],wt=0,Tt=0;function Ot(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){r()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,n()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=n()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,n()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=n()[this.Sb+13>>0>>>0]},this.fc=function(t,n){this.cc(0),this.xc(t),this.wc(n),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(r(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(r(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(En(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function St(t){return dn(new Ot(t).Sb)}function At(t,n,e,r){return w?Vt(3,1,t,n,e,r):Mt(t,n,e,r)}function Mt(t,n,e,r){if(\"undefined\"==typeof SharedArrayBuffer)return x(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var i=[];return w&&0===i.length?At(t,n,e,r):(t={Ic:e,Ub:t,zc:r,Nc:i},w?(t.Oc=\"spawnThread\",postMessage(t,i),0):ft(t))}function Ct(t,n,e){return w?Vt(4,1,t,n,e):0}function xt(t,n){if(w)return Vt(5,1,t,n)}function Rt(t,n){if(w)return Vt(6,1,t,n)}function Et(t,n,e){if(w)return Vt(7,1,t,n,e)}function kt(t,n,e){return w?Vt(8,1,t,n,e):0}function Dt(t,n){if(w)return Vt(9,1,t,n)}function jt(t,n,e){if(w)return Vt(10,1,t,n,e)}function Ft(t,n,e,r){if(w)return Vt(11,1,t,n,e,r)}function Ut(t,n,e,r){if(w)return Vt(12,1,t,n,e,r)}function Yt(t,n,e,r){if(w)return Vt(13,1,t,n,e,r)}function It(t){if(w)return Vt(14,1,t)}function Wt(t,n){if(w)return Vt(15,1,t,n)}function Pt(t,n,e){if(w)return Vt(16,1,t,n,e)}function Ht(t){Atomics.store(r(),t>>2,1),hn()&&wn(t),Atomics.compareExchange(r(),t>>2,1,0)}function qt(t){return i()[t>>>2]+4294967296*r()[t+4>>>2]}function Bt(t,n,e,r,i,a){return w?Vt(17,1,t,n,e,r,i,a):-52}function Gt(t,n,e,r,i,a){if(w)return Vt(18,1,t,n,e,r,i,a)}function zt(t){var e=G(t)+1,r=mn(e);return r&&B(t,n(),r,e),r}function Nt(t,n,e){function a(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}if(w)return Vt(19,1,t,n,e);var u=(new Date).getFullYear(),o=new Date(u,0,1),c=new Date(u,6,1);u=o.getTimezoneOffset();var f=c.getTimezoneOffset(),s=Math.max(u,f);r()[t>>2>>>0]=60*s,r()[n>>2>>>0]=Number(u!=f),t=a(o),n=a(c),t=zt(t),n=zt(n),f<u?(i()[e>>2>>>0]=t,i()[e+4>>2>>>0]=n):(i()[e>>2>>>0]=n,i()[e+4>>2>>>0]=t)}function Vt(t,n){var e=arguments.length-2,r=arguments;return mt((()=>{for(var i=xn(8*e),u=i>>3,o=0;o<e;o++){var c=r[2+o];a()[u+o>>>0]=c}return vn(t,e,i,n)}))}u.executeNotifiedProxyingQueue=Ht,_t=v?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:w?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Lt,Xt=[],Zt={};function $t(){if(!Lt){var t,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:y||\"./this.program\"};for(t in Zt)void 0===Zt[t]?delete n[t]:n[t]=Zt[t];var e=[];for(t in n)e.push(t+\"=\"+n[t]);Lt=e}return Lt}function Jt(t,e){if(w)return Vt(20,1,t,e);var r=0;return $t().forEach((function(a,u){var o=e+r;for(u=i()[t+4*u>>2>>>0]=o,o=0;o<a.length;++o)n()[u++>>0>>>0]=a.charCodeAt(o);n()[u>>0>>>0]=0,r+=a.length+1})),0}function Qt(t,n){if(w)return Vt(21,1,t,n);var e=$t();i()[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),i()[n>>2>>>0]=r,0}function Kt(t){return w?Vt(22,1,t):52}function tn(t,n,e,r){return w?Vt(23,1,t,n,e,r):52}function nn(t,n,e,r,i){return w?Vt(24,1,t,n,e,r,i):70}var en=[null,[],[]];function rn(t,n){var e=en[t];0===n||10===n?((1===t?C:x)(H(e,0)),e.length=0):e.push(n)}function an(t,n,r,a){if(w)return Vt(25,1,t,n,r,a);for(var u=0,o=0;o<r;o++){var c=i()[n>>2>>>0],f=i()[n+4>>2>>>0];n+=8;for(var s=0;s<f;s++)rn(t,e()[c+s>>>0]);u+=f}return i()[a>>2>>>0]=u,0}var un=0;function on(t){return 0==t%4&&(0!=t%100||0==t%400)}var cn=[31,29,31,30,31,30,31,31,30,31,30,31],fn=[31,28,31,30,31,30,31,31,30,31,30,31];function sn(t,e,i,a){function u(t,n,e){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<n;)t=e[0]+t;return t}function o(t,n){return u(t,n,\"0\")}function c(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function f(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function s(t){var n=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(on(t.getFullYear())?cn:fn)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=f(new Date(t.getFullYear(),0,4)),e=f(e),0>=c(n,t)?0>=c(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=r()[a+40>>2>>>0];for(var p in a={Lc:r()[a>>2>>>0],Kc:r()[a+4>>2>>>0],dc:r()[a+8>>2>>>0],jc:r()[a+12>>2>>>0],ec:r()[a+16>>2>>>0],Xb:r()[a+20>>2>>>0],Tb:r()[a+24>>2>>>0],Wb:r()[a+28>>2>>>0],Rc:r()[a+32>>2>>>0],Jc:r()[a+36>>2>>>0],Mc:l?q(l):\"\"},i=q(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(p,\"g\"),l[p]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(t){return h[t.Tb].substring(0,3)},\"%A\":function(t){return h[t.Tb]},\"%b\":function(t){return m[t.ec].substring(0,3)},\"%B\":function(t){return m[t.ec]},\"%C\":function(t){return o((t.Xb+1900)/100|0,2)},\"%d\":function(t){return o(t.jc,2)},\"%e\":function(t){return u(t.jc,2,\" \")},\"%g\":function(t){return s(t).toString().substring(2)},\"%G\":function(t){return s(t)},\"%H\":function(t){return o(t.dc,2)},\"%I\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),o(t,2)},\"%j\":function(t){for(var n=0,e=0;e<=t.ec-1;n+=(on(t.Xb+1900)?cn:fn)[e++]);return o(t.jc+n,3)},\"%m\":function(t){return o(t.ec+1,2)},\"%M\":function(t){return o(t.Kc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(t){return 0<=t.dc&&12>t.dc?\"AM\":\"PM\"},\"%S\":function(t){return o(t.Lc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(t){return t.Tb||7},\"%U\":function(t){return o(Math.floor((t.Wb+7-t.Tb)/7),2)},\"%V\":function(t){var n=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&n++,n)53==n&&(4==(e=(t.Tb+371-t.Wb)%7)||3==e&&on(t.Xb)||(n=1));else{n=52;var e=(t.Tb+7-t.Wb-1)%7;(4==e||5==e&&on(t.Xb%400-1))&&n++}return o(n,2)},\"%w\":function(t){return t.Tb},\"%W\":function(t){return o(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\"%y\":function(t){return(t.Xb+1900).toString().substring(2)},\"%Y\":function(t){return t.Xb+1900},\"%z\":function(t){var n=0<=(t=t.Jc);return t=Math.abs(t)/60,(n?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":function(t){return t.Mc},\"%%\":function(){return\"%\"}},i=i.replace(/%%/g,\"\\0\\0\"),l)i.includes(p)&&(i=i.replace(new RegExp(p,\"g\"),l[p](a)));return p=function(t){var n=Array(G(t)+1);return B(t,n,0,n.length),n}(i=i.replace(/\\0\\0/g,\"%\")),p.length>e?0:(function(t,e){n().set(t,e>>>0)}(p,t),p.length-1)}pt.fc();var ln=[null,st,dt,At,Ct,xt,Rt,Et,kt,Dt,jt,Ft,Ut,Yt,It,Wt,Pt,Bt,Gt,Nt,Jt,Qt,Kt,tn,nn,an],pn={b:function(t){return mn(t+24)+24},n:function(t){return(t=new Ot(t)).uc()||(t.hc(!0),wt--),t.ic(!1),vt.push(t),t.sc(),t.vc()},ma:function(t){throw x(\"Unexpected exception thrown, this is not properly supported - aborting\"),W=!0,t},x:function(){Sn(0);var t=vt.pop();if(t.Hc()&&!t.kc()){var n=t.Dc();n&&bt(n)(t.Zb),St(t.Zb)}Tt=0},e:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},l:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},h:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},t:St,M:function(){var t=vt.pop();t||rt(\"no exception to throw\");var n=t.Zb;throw t.kc()||(vt.push(t),t.ic(!0),t.hc(!1),wt++),Tt=n,n},c:function(t,n,e){throw new Ot(t).fc(n,e),Tt=t,wt++,t},pa:function(){return wt},Fa:function(t){gn(t,!_,1,!g),pt.pc()},T:function(t){w?postMessage({cmd:\"cleanupThread\",thread:t}):ct(t)},xa:Mt,j:function(t){throw Tt||(Tt=t),t},H:Ct,Ma:xt,ua:Rt,wa:Et,oa:kt,Ka:Dt,Ca:jt,Ja:Ft,V:Ut,va:Yt,sa:It,La:Wt,ta:Pt,Ta:function(){},X:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ua:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,e,r){if(t==n)setTimeout((()=>Ht(r)));else if(w)postMessage({targetThread:t,cmd:\"processProxyingQueue\",queue:r});else{if(!(t=pt.Vb[t]))return;t.postMessage({cmd:\"processProxyingQueue\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getUTCSeconds(),r()[n+4>>2>>>0]=t.getUTCMinutes(),r()[n+8>>2>>>0]=t.getUTCHours(),r()[n+12>>2>>>0]=t.getUTCDate(),r()[n+16>>2>>>0]=t.getUTCMonth(),r()[n+20>>2>>>0]=t.getUTCFullYear()-1900,r()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getSeconds(),r()[n+4>>2>>>0]=t.getMinutes(),r()[n+8>>2>>>0]=t.getHours(),r()[n+12>>2>>>0]=t.getDate(),r()[n+16>>2>>>0]=t.getMonth(),r()[n+20>>2>>>0]=t.getFullYear()-1900,r()[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1),i=(t.getTime()-e.getTime())/864e5|0;r()[n+28>>2>>>0]=i,r()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(i!=(e=e.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(e,i)),r()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(r()[t+20>>2>>>0]+1900,r()[t+16>>2>>>0],r()[t+12>>2>>>0],r()[t+8>>2>>>0],r()[t+4>>2>>>0],r()[t>>2>>>0],0),e=r()[t+32>>2>>>0],i=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),u=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),c=Math.min(o,u);return 0>e?r()[t+32>>2>>>0]=Number(u!=o&&c==i):0<e!=(c==i)&&(u=Math.max(o,u),n.setTime(n.getTime()+6e4*((0<e?c:u)-i))),r()[t+24>>2>>>0]=n.getDay(),e=(n.getTime()-a.getTime())/864e5|0,r()[t+28>>2>>>0]=e,r()[t>>2>>>0]=n.getSeconds(),r()[t+4>>2>>>0]=n.getMinutes(),r()[t+8>>2>>>0]=n.getHours(),r()[t+12>>2>>>0]=n.getDate(),r()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(n,e,r){t.Ac||(t.Ac=!0,Nt(n,e,r))},y:function(){rt(\"\")},U:function(){if(!v&&!_){var t=\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\";gt||(gt={}),gt[t]||(gt[t]=1,v&&(t=\"warning: \"+t),x(t))}},ra:function(){return 4294901760},B:_t,Ia:function(t,n,r){e().copyWithin(t>>>0,n>>>0,n+r>>>0)},F:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Da:function(t,n,e){Xt.length=n,e>>=3;for(var r=0;r<n;r++)Xt[r]=a()[e+r>>>0];return(0>t?ut[-t-1]:ln[t]).apply(null,Xt)},qa:function(t){var n=e().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var r=1;4>=r;r*=2){var i=n*(1+.2/r);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{E.grow(a-D.byteLength+65535>>>16),z(E.buffer);var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},Na:function(){throw\"unwind\"},Ga:Jt,Ha:Qt,J:lt,I:Kt,S:tn,ga:nn,R:an,d:function(){return un},na:function t(e,r){t.lc||(t.lc=function(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(v)try{var n=require(\"crypto\");return()=>n.randomBytes(1)[0]}catch(t){}return()=>rt(\"randomDevice\")}());for(var i=0;i<r;i++)n()[e+i>>0>>>0]=t.lc();return 0},ia:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ja:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},K:function(t){var n=Mn();try{return bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},f:function(t,n){var e=Mn();try{return bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},P:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},Q:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},k:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},p:function(t,n,e,r){var i=Mn();try{return bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},q:function(t,n,e,r,i){var a=Mn();try{return bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},N:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},s:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},w:function(t,n,e,r,i,a,u){var o=Mn();try{return bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},L:function(t,n,e,r,i,a,u,o){var c=Mn();try{return bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},E:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{return bt(t)(n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},aa:function(t,n,e,r,i,a,u,o){var c=Mn();try{return Pn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},_:function(t,n,e,r,i,a,u){var o=Mn();try{return Dn(t,n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},Z:function(t,n,e,r,i){var a=Mn();try{return Hn(t,n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},ca:function(t,n,e,r){var i=Mn();try{return In(t,n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},$:function(t){var n=Mn();try{return kn(t)}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},ba:function(t,n){var e=Mn();try{return Wn(t,n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},Y:function(t,n,e){var r=Mn();try{return jn(t,n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},g:function(t){var n=Mn();try{bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},r:function(t,n){var e=Mn();try{bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},i:function(t,n,e){var r=Mn();try{bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ha:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},m:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},v:function(t,n,e,r,i){var a=Mn();try{bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},u:function(t,n,e,r,i,a){var u=Mn();try{bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},O:function(t,n,e,r,i,a,u){var o=Mn();try{bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},A:function(t,n,e,r,i,a,u,o){var c=Mn();try{bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},ka:function(t,n,e,r,i,a,u,o,c){var f=Mn();try{bt(t)(n,e,r,i,a,u,o,c)}catch(t){if(Cn(f),t!==t+0)throw t;Sn(1,0)}},C:function(t,n,e,r,i,a,u,o,c,f,s){var l=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s)}catch(t){if(Cn(l),t!==t+0)throw t;Sn(1,0)}},D:function(t,n,e,r,i,a,u,o,c,f,s,l,p,h,m,d){var y=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s,l,p,h,m,d)}catch(t){if(Cn(y),t!==t+0)throw t;Sn(1,0)}},fa:function(t,n,e,r,i,a,u,o){var c=Mn();try{Fn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},da:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{Yn(t,n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},ea:function(t,n,e,r,i,a){var u=Mn();try{Un(t,n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},o:function(t){return t},a:E||u.wasmMemory,G:function(t){un=t},la:sn,z:function(t,n,e,r){return sn(t,n,e,r)}};!function(){function t(t,n){u.asm=t.exports,pt.qc.push(u.asm.sb),V=u.asm.ub,X.unshift(u.asm.Va),k=n,w||(tt--,u.monitorRunDependencies&&u.monitorRunDependencies(tt),0==tt&&(null!==nt&&(clearInterval(nt),nt=null),et&&(t=et,et=null,t())))}function n(n){t(n.instance,n.module)}function e(t){return function(){if(!M&&(g||_)){if(\"function\"==typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return t.arrayBuffer()})).catch((function(){return at()}));if(s)return new Promise((function(t,n){s(K,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return at()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\"failed to asynchronously prepare wasm: \"+t),rt(t)}))}var r={a:pn};if(w||(tt++,u.monitorRunDependencies&&u.monitorRunDependencies(tt)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\"Module.instantiateWasm callback failed with error: \"+t),!1}(M||\"function\"!=typeof WebAssembly.instantiateStreaming||it()||K.startsWith(\"file://\")||v||\"function\"!=typeof fetch?e(n):fetch(K,{credentials:\"same-origin\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(n,(function(t){return x(\"wasm streaming compile failed: \"+t),x(\"falling back to ArrayBuffer instantiation\"),e(n)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var hn=u._pthread_self=function(){return(hn=u._pthread_self=u.asm.ob).apply(null,arguments)},mn=u._malloc=function(){return(mn=u._malloc=u.asm.pb).apply(null,arguments)},dn=u._free=function(){return(dn=u._free=u.asm.qb).apply(null,arguments)},yn=u._fflush=function(){return(yn=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var bn=u.___funcs_on_exit=function(){return(bn=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},gn=u.__emscripten_thread_init=function(){return(gn=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var _n,vn=u._emscripten_run_in_main_runtime_thread_js=function(){return(vn=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},wn=u.__emscripten_proxy_execute_task_queue=function(){return(wn=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Tn=u.__emscripten_thread_free_data=function(){return(Tn=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},On=u.__emscripten_thread_exit=function(){return(On=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Sn=u._setThrew=function(){return(Sn=u._setThrew=u.asm.Bb).apply(null,arguments)},An=u._emscripten_stack_set_limits=function(){return(An=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Mn=u.stackSave=function(){return(Mn=u.stackSave=u.asm.Db).apply(null,arguments)},Cn=u.stackRestore=function(){return(Cn=u.stackRestore=u.asm.Eb).apply(null,arguments)},xn=u.stackAlloc=function(){return(xn=u.stackAlloc=u.asm.Fb).apply(null,arguments)},Rn=u.___cxa_can_catch=function(){return(Rn=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},En=u.___cxa_is_pointer_type=function(){return(En=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},kn=u.dynCall_j=function(){return(kn=u.dynCall_j=u.asm.Ib).apply(null,arguments)},Dn=u.dynCall_iiiiij=function(){return(Dn=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},jn=u.dynCall_jii=function(){return(jn=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Fn=u.dynCall_viiiiij=function(){return(Fn=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Un=u.dynCall_vjji=function(){return(Un=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Yn=u.dynCall_viiijjjii=function(){return(Yn=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},In=u.dynCall_iij=function(){return(In=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},Wn=u.dynCall_ji=function(){return(Wn=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},Pn=u.dynCall_iiiiiij=function(){return(Pn=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Hn=u.dynCall_iiij=function(){return(Hn=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function qn(){function t(){if(!_n&&(_n=!0,u.calledRun=!0,!W)&&(w||ht(X),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!w)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();$.unshift(t)}ht($)}}if(!(0<tt))if(w)o(u),w||ht(X),postMessage({cmd:\"loaded\"});else{if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)Q();ht(L),0<tt||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),t()}),1)):t())}}if(u.UTF8ToString=q,u.stringToUTF8=function(t,n,r){return B(t,e(),n,r)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=J,u.wasmMemory=E,u.stackSave=Mn,u.stackRestore=Cn,u.stackAlloc=xn,u.ExitStatus=ot,u.PThread=pt,et=function t(){_n||qn(),_n||(et=t)},u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return qn(),t.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t:\"function\"==typeof define&&define.amd?define([],(function(){return t})):\"object\"==typeof exports&&(exports.ortWasmThreaded=t);\n","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var ca=Object.assign({},d),da=\"./this.program\",ea=(a,b)=>{throw b;},fa=\"object\"==typeof window,m=\"function\"==typeof importScripts,p=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,q=\"\",ha,r,v,fs,y,ia;\r\nif(p)q=m?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",ia=()=>{y||(fs=require(\"fs\"),y=require(\"path\"))},ha=function(a,b){ia();a=y.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},v=a=>{a=ha(a,!0);a.buffer||(a=new Uint8Array(a));return a},r=(a,b,c)=>{ia();a=y.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(da=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){if(!(a instanceof ja))throw a;}),process.on(\"unhandledRejection\",\r\nfunction(a){throw a;}),ea=(a,b)=>{if(noExitRuntime||0<ka)throw process.exitCode=a,b;b instanceof ja||z(\"exiting due to exception: \"+b);process.exit(a)},d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||m)m?q=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\",ha=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);\r\nreturn b.responseText},m&&(v=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),r=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var la=d.print||console.log.bind(console),z=d.printErr||console.warn.bind(console);Object.assign(d,ca);ca=null;d.thisProgram&&(da=d.thisProgram);d.quit&&(ea=d.quit);\r\nvar A;d.wasmBinary&&(A=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&B(\"no native wasm support detected\");var ma,D=!1,na=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction oa(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&na)return na.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|h);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|k:(f&7)<<18|h<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function pa(a,b){return(a>>>=0)?oa(G,a,b):\"\"}\r\nfunction qa(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var l=a.charCodeAt(++h);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\r\nfunction ra(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var sa,H,G,I,J;function ta(){var a=ma.buffer;sa=a;d.HEAP8=H=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=I=new Int32Array(a);d.HEAPU8=G=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=J=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var ua,va=[],wa=[],xa=[],ya=[],ka=0;\r\nfunction za(){var a=d.preRun.shift();va.unshift(a)}var K=0,Aa=null,L=null;function B(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";z(a);D=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function Ba(){return N.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"ort-wasm.wasm\";if(!Ba()){var Ca=N;N=d.locateFile?d.locateFile(Ca,q):q+Ca}\r\nfunction Da(){var a=N;try{if(a==N&&A)return new Uint8Array(A);if(v)return v(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){B(b)}}\r\nfunction Ea(){if(!A&&(fa||m)){if(\"function\"==typeof fetch&&!N.startsWith(\"file://\"))return fetch(N,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+N+\"'\";return a.arrayBuffer()}).catch(function(){return Da()});if(r)return new Promise(function(a,b){r(N,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Da()})}function ja(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}\r\nfunction O(a){for(;0<a.length;)a.shift()(d)}var P=[],Q=0,R=0;\r\nfunction S(a){this.Db=a;this.zb=a-24;this.Ub=function(b){J[this.zb+4>>2>>>0]=b};this.Eb=function(){return J[this.zb+4>>2>>>0]};this.Sb=function(b){J[this.zb+8>>2>>>0]=b};this.Wb=function(){return J[this.zb+8>>2>>>0]};this.Tb=function(){I[this.zb>>2>>>0]=0};this.Ib=function(b){H[this.zb+12>>0>>>0]=b?1:0};this.Pb=function(){return 0!=H[this.zb+12>>0>>>0]};this.Jb=function(b){H[this.zb+13>>0>>>0]=b?1:0};this.Lb=function(){return 0!=H[this.zb+13>>0>>>0]};this.Rb=function(b,c){this.Fb(0);this.Ub(b);this.Sb(c);\r\nthis.Tb();this.Ib(!1);this.Jb(!1)};this.Nb=function(){I[this.zb>>2>>>0]+=1};this.Xb=function(){var b=I[this.zb>>2>>>0];I[this.zb>>2>>>0]=b-1;return 1===b};this.Fb=function(b){J[this.zb+16>>2>>>0]=b};this.Ob=function(){return J[this.zb+16>>2>>>0]};this.Qb=function(){if(Fa(this.Eb()))return J[this.Db>>2>>>0];var b=this.Ob();return 0!==b?b:this.Db}}function Ga(a){return Ha((new S(a)).zb)}var T=[];function U(a){var b=T[a];b||(a>=T.length&&(T.length=a+1),T[a]=b=ua.get(a));return b}\r\nfunction Ia(a){var b=ra(a)+1,c=Ja(b);c&&qa(a,H,c,b);return c}function Ka(a,b,c){function e(n){return(n=n.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?n[1]:\"GMT\"}var f=(new Date).getFullYear(),h=new Date(f,0,1),k=new Date(f,6,1);f=h.getTimezoneOffset();var l=k.getTimezoneOffset();I[a>>2>>>0]=60*Math.max(f,l);I[b>>2>>>0]=Number(f!=l);a=e(h);b=e(k);a=Ia(a);b=Ia(b);l<f?(J[c>>2>>>0]=a,J[c+4>>2>>>0]=b):(J[c>>2>>>0]=b,J[c+4>>2>>>0]=a)}function La(a,b,c){La.Vb||(La.Vb=!0,Ka(a,b,c))}var Ma={};\r\nfunction Na(){if(!Oa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:da||\"./this.program\"},b;for(b in Ma)void 0===Ma[b]?delete a[b]:a[b]=Ma[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Oa=c}return Oa}var Oa,Pa=[null,[],[]];function Qa(a,b){var c=Pa[a];0===b||10===b?((1===a?la:z)(oa(c,0)),c.length=0):c.push(b)}var V=0;\r\nfunction Ra(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var a=new Uint8Array(1);return()=>{crypto.getRandomValues(a);return a[0]}}if(p)try{var b=require(\"crypto\");return()=>b.randomBytes(1)[0]}catch(c){}return()=>B(\"randomDevice\")}function W(a,b){W.Mb||(W.Mb=Ra());for(var c=0;c<b;c++)H[a+c>>0>>>0]=W.Mb();return 0}function Sa(a){return 0===a%4&&(0!==a%100||0===a%400)}var Ta=[31,29,31,30,31,30,31,31,30,31,30,31],Ua=[31,28,31,30,31,30,31,31,30,31,30,31];\r\nfunction Va(a){var b=Array(ra(a)+1);qa(a,b,0,b.length);return b}\r\nfunction Wa(a,b,c,e){function f(g,u,w){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<u;)g=w[0]+g;return g}function h(g,u){return f(g,u,\"0\")}function k(g,u){function w(M){return 0>M?-1:0<M?1:0}var F;0===(F=w(g.getFullYear()-u.getFullYear()))&&0===(F=w(g.getMonth()-u.getMonth()))&&(F=w(g.getDate()-u.getDate()));return F}function l(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function n(g){var u=g.Bb;for(g=new Date((new Date(g.Cb+1900,0,1)).getTime());0<u;){var w=g.getMonth(),F=(Sa(g.getFullYear())?Ta:Ua)[w];if(u>F-g.getDate())u-=F-g.getDate()+1,g.setDate(1),11>w?g.setMonth(w+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+u);break}}w=new Date(g.getFullYear()+1,0,4);u=l(new Date(g.getFullYear(),\r\n0,4));w=l(w);return 0>=k(u,g)?0>=k(w,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var t=I[e+40>>2>>>0];e={$b:I[e>>2>>>0],Zb:I[e+4>>2>>>0],Gb:I[e+8>>2>>>0],Kb:I[e+12>>2>>>0],Hb:I[e+16>>2>>>0],Cb:I[e+20>>2>>>0],Ab:I[e+24>>2>>>0],Bb:I[e+28>>2>>>0],bc:I[e+32>>2>>>0],Yb:I[e+36>>2>>>0],ac:t?pa(t):\"\"};c=pa(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\r\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var x in t)c=c.replace(new RegExp(x,\"g\"),t[x]);var E=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),C=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":function(g){return E[g.Ab].substring(0,3)},\"%A\":function(g){return E[g.Ab]},\"%b\":function(g){return C[g.Hb].substring(0,\r\n3)},\"%B\":function(g){return C[g.Hb]},\"%C\":function(g){return h((g.Cb+1900)/100|0,2)},\"%d\":function(g){return h(g.Kb,2)},\"%e\":function(g){return f(g.Kb,2,\" \")},\"%g\":function(g){return n(g).toString().substring(2)},\"%G\":function(g){return n(g)},\"%H\":function(g){return h(g.Gb,2)},\"%I\":function(g){g=g.Gb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){for(var u=0,w=0;w<=g.Hb-1;u+=(Sa(g.Cb+1900)?Ta:Ua)[w++]);return h(g.Kb+u,3)},\"%m\":function(g){return h(g.Hb+1,2)},\"%M\":function(g){return h(g.Zb,\r\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.Gb&&12>g.Gb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.$b,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.Ab||7},\"%U\":function(g){return h(Math.floor((g.Bb+7-g.Ab)/7),2)},\"%V\":function(g){var u=Math.floor((g.Bb+7-(g.Ab+6)%7)/7);2>=(g.Ab+371-g.Bb-2)%7&&u++;if(u)53==u&&(w=(g.Ab+371-g.Bb)%7,4==w||3==w&&Sa(g.Cb)||(u=1));else{u=52;var w=(g.Ab+7-g.Bb-1)%7;(4==w||5==w&&Sa(g.Cb%400-1))&&u++}return h(u,2)},\"%w\":function(g){return g.Ab},\"%W\":function(g){return h(Math.floor((g.Bb+\r\n7-(g.Ab+6)%7)/7),2)},\"%y\":function(g){return(g.Cb+1900).toString().substring(2)},\"%Y\":function(g){return g.Cb+1900},\"%z\":function(g){g=g.Yb;var u=0<=g;g=Math.abs(g)/60;return(u?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.ac},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(x in t)c.includes(x)&&(c=c.replace(new RegExp(x,\"g\"),t[x](e)));c=c.replace(/\\0\\0/g,\"%\");x=Va(c);if(x.length>b)return 0;H.set(x,a>>>0);return x.length-1}\r\nvar Jb={a:function(a){return Ja(a+24)+24},m:function(a){a=new S(a);a.Pb()||(a.Ib(!0),Q--);a.Jb(!1);P.push(a);a.Nb();return a.Qb()},ia:function(a){z(\"Unexpected exception thrown, this is not properly supported - aborting\");D=!0;throw a;},w:function(){X(0);var a=P.pop();if(a.Xb()&&!a.Lb()){var b=a.Wb();b&&U(b)(a.Db);Ga(a.Db)}R=0},d:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];\r\nif(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},k:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},g:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;\r\nif(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},s:Ga,L:function(){var a=P.pop();a||B(\"no exception to throw\");var b=a.Db;a.Lb()||(P.push(a),a.Jb(!0),a.Ib(!1),Q++);R=b;throw b;},b:function(a,b,c){(new S(a)).Rb(b,c);R=a;Q++;throw a;},la:function(){return Q},i:function(a){R||(R=a);throw a;},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},\r\nHa:function(){},Ja:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ia:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getUTCSeconds();I[b+4>>2>>>0]=a.getUTCMinutes();I[b+8>>2>>>0]=a.getUTCHours();I[b+12>>2>>>\r\n0]=a.getUTCDate();I[b+16>>2>>>0]=a.getUTCMonth();I[b+20>>2>>>0]=a.getUTCFullYear()-1900;I[b+24>>2>>>0]=a.getUTCDay();I[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Ea:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getSeconds();I[b+4>>2>>>0]=a.getMinutes();I[b+8>>2>>>0]=a.getHours();I[b+12>>2>>>0]=a.getDate();I[b+16>>2>>>0]=a.getMonth();I[b+20>>2>>>0]=a.getFullYear()-1900;I[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);I[b+\r\n28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;I[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();I[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Fa:function(a){var b=new Date(I[a+20>>2>>>0]+1900,I[a+16>>2>>>0],I[a+12>>2>>>0],I[a+8>>2>>>0],I[a+4>>2>>>0],I[a>>2>>>0],0),c=I[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),\r\nl=Math.min(k,h);0>c?I[a+32>>2>>>0]=Number(h!=k&&l==e):0<c!=(l==e)&&(h=Math.max(k,h),b.setTime(b.getTime()+6E4*((0<c?l:h)-e)));I[a+24>>2>>>0]=b.getDay();I[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;I[a>>2>>>0]=b.getSeconds();I[a+4>>2>>>0]=b.getMinutes();I[a+8>>2>>>0]=b.getHours();I[a+12>>2>>>0]=b.getDate();I[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},sa:function(){return-52},ta:function(){},Ga:La,B:function(){B(\"\")},ma:function(){return 4294901760},I:p?()=>{var a=process.hrtime();return 1E3*\r\na[0]+a[1]/1E6}:()=>performance.now(),xa:function(a,b,c){G.copyWithin(a>>>0,b>>>0,b+c>>>0)},G:function(a){var b=G.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,e+(65536-e%65536)%65536);a:{try{ma.grow(f-sa.byteLength+65535>>>16);ta();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},va:function(a,b){var c=0;Na().forEach(function(e,f){var h=b+c;f=J[a+4*f>>2>>>0]=h;for(h=0;h<e.length;++h)H[f++>>\r\n0>>>0]=e.charCodeAt(h);H[f>>0>>>0]=0;c+=e.length+1});return 0},wa:function(a,b){var c=Na();J[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});J[b>>2>>>0]=e;return 0},ba:function(a){noExitRuntime||0<ka||(Ya(),O(xa),Za(0),Pa[1].length&&Qa(1,10),Pa[2].length&&Qa(2,10));if(!(noExitRuntime||0<ka)){if(d.onExit)d.onExit(a);D=!0}ea(a,new ja(a))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(a,b,c,e){for(var f=0,h=0;h<c;h++){var k=J[b>>2>>>0],l=J[b+4>>\r\n2>>>0];b+=8;for(var n=0;n<l;n++)Qa(a,G[k+n>>>0]);f+=l}J[e>>2>>>0]=f;return 0},c:function(){return V},ja:W,ea:$a,fa:ab,J:bb,e:cb,N:db,O:eb,j:fb,o:gb,p:hb,M:ib,r:jb,v:kb,K:lb,D:mb,X:nb,V:ob,U:pb,Z:qb,W:rb,Y:sb,T:tb,f:ub,q:vb,h:wb,da:xb,l:yb,t:zb,u:Ab,x:Bb,z:Cb,ga:Db,A:Eb,C:Fb,aa:Gb,_:Hb,$:Ib,n:function(a){return a},F:function(a){V=a},ha:Wa,y:function(a,b,c,e){return Wa(a,b,c,e)}};\r\n(function(){function a(f){d.asm=f.exports;ma=d.asm.Ka;ta();ua=d.asm.ib;wa.unshift(d.asm.La);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==Aa&&(clearInterval(Aa),Aa=null),L&&(f=L,L=null,f()))}function b(f){a(f.instance)}function c(f){return Ea().then(function(h){return WebAssembly.instantiate(h,e)}).then(function(h){return h}).then(f,function(h){z(\"failed to asynchronously prepare wasm: \"+h);B(h)})}var e={a:Jb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\r\na)}catch(f){return z(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return A||\"function\"!=typeof WebAssembly.instantiateStreaming||Ba()||N.startsWith(\"file://\")||p||\"function\"!=typeof fetch?c(b):fetch(N,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(h){z(\"wasm streaming compile failed: \"+h);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.La).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Ma).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Na).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.Oa).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Pa).apply(null,arguments)};\r\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Qa).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ra).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Sa).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ta).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ua).apply(null,arguments)};\r\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Va).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Wa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Xa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ya).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Za).apply(null,arguments)};\r\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm._a).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.$a).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.ab).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.bb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.cb).apply(null,arguments)};\r\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.db).apply(null,arguments)};\r\nvar Ja=d._malloc=function(){return(Ja=d._malloc=d.asm.eb).apply(null,arguments)},Ha=d._free=function(){return(Ha=d._free=d.asm.fb).apply(null,arguments)},Za=d._fflush=function(){return(Za=d._fflush=d.asm.gb).apply(null,arguments)},Ya=d.___funcs_on_exit=function(){return(Ya=d.___funcs_on_exit=d.asm.hb).apply(null,arguments)},X=d._setThrew=function(){return(X=d._setThrew=d.asm.jb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.kb).apply(null,arguments)},Z=d.stackRestore=\r\nfunction(){return(Z=d.stackRestore=d.asm.lb).apply(null,arguments)},Kb=d.stackAlloc=function(){return(Kb=d.stackAlloc=d.asm.mb).apply(null,arguments)},Xa=d.___cxa_can_catch=function(){return(Xa=d.___cxa_can_catch=d.asm.nb).apply(null,arguments)},Fa=d.___cxa_is_pointer_type=function(){return(Fa=d.___cxa_is_pointer_type=d.asm.ob).apply(null,arguments)},Lb=d.dynCall_j=function(){return(Lb=d.dynCall_j=d.asm.pb).apply(null,arguments)},Mb=d.dynCall_iiiiij=function(){return(Mb=d.dynCall_iiiiij=d.asm.qb).apply(null,\r\narguments)},Nb=d.dynCall_jii=function(){return(Nb=d.dynCall_jii=d.asm.rb).apply(null,arguments)},Ob=d.dynCall_viiiiij=function(){return(Ob=d.dynCall_viiiiij=d.asm.sb).apply(null,arguments)},Pb=d.dynCall_vjji=function(){return(Pb=d.dynCall_vjji=d.asm.tb).apply(null,arguments)},Qb=d.dynCall_viiijjjii=function(){return(Qb=d.dynCall_viiijjjii=d.asm.ub).apply(null,arguments)},Rb=d.dynCall_iij=function(){return(Rb=d.dynCall_iij=d.asm.vb).apply(null,arguments)},Sb=d.dynCall_ji=function(){return(Sb=d.dynCall_ji=\r\nd.asm.wb).apply(null,arguments)},Tb=d.dynCall_iiiiiij=function(){return(Tb=d.dynCall_iiiiiij=d.asm.xb).apply(null,arguments)},Ub=d.dynCall_iiij=function(){return(Ub=d.dynCall_iiij=d.asm.yb).apply(null,arguments)};function cb(a,b){var c=Y();try{return U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function vb(a,b){var c=Y();try{U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function wb(a,b,c){var e=Y();try{U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nfunction fb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function gb(a,b,c,e){var f=Y();try{return U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function kb(a,b,c,e,f,h,k){var l=Y();try{return U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function ub(a){var b=Y();try{U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function jb(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction hb(a,b,c,e,f){var h=Y();try{return U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function yb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Ab(a,b,c,e,f,h){var k=Y();try{U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function zb(a,b,c,e,f){var h=Y();try{U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function Bb(a,b,c,e,f,h,k){var l=Y();try{U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}\r\nfunction Cb(a,b,c,e,f,h,k,l){var n=Y();try{U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function eb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function db(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function Db(a,b,c,e,f,h,k,l,n){var t=Y();try{U(a)(b,c,e,f,h,k,l,n)}catch(x){Z(t);if(x!==x+0)throw x;X(1,0)}}function ib(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction lb(a,b,c,e,f,h,k,l){var n=Y();try{return U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function mb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{return U(a)(b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function Eb(a,b,c,e,f,h,k,l,n,t,x){var E=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x)}catch(C){Z(E);if(C!==C+0)throw C;X(1,0)}}function Fb(a,b,c,e,f,h,k,l,n,t,x,E,C,g,u,w){var F=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x,E,C,g,u,w)}catch(M){Z(F);if(M!==M+0)throw M;X(1,0)}}\r\nfunction bb(a){var b=Y();try{return U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ab(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function $a(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function xb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Gb(a,b,c,e,f,h,k,l){var n=Y();try{Ob(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}\r\nfunction Ib(a,b,c,e,f,h){var k=Y();try{Pb(a,b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function Hb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{Qb(a,b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function qb(a,b,c,e){var f=Y();try{return Rb(a,b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function sb(a,b){var c=Y();try{return Sb(a,b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}\r\nfunction nb(a,b,c,e,f,h,k,l){var n=Y();try{return Tb(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function rb(a){var b=Y();try{return Lb(a)}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ob(a,b,c,e,f,h,k){var l=Y();try{return Mb(a,b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function pb(a,b,c,e,f){var h=Y();try{return Ub(a,b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function tb(a,b,c){var e=Y();try{return Nb(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nd.UTF8ToString=pa;d.stringToUTF8=function(a,b,c){return qa(a,G,b,c)};d.lengthBytesUTF8=ra;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=Kb;var Vb;L=function Wb(){Vb||Xb();Vb||(L=Wb)};\r\nfunction Xb(){function a(){if(!Vb&&(Vb=!0,d.calledRun=!0,!D)){O(wa);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();ya.unshift(b)}O(ya)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)za();O(va);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\r\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();Xb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.14.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var t={474:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(t){function e(){return k.buffer!=D&&N(k.buffer),P}function r(){return k.buffer!=D&&N(k.buffer),U}function a(){return k.buffer!=D&&N(k.buffer),F}function i(){return k.buffer!=D&&N(k.buffer),I}function o(){return k.buffer!=D&&N(k.buffer),W}var u,s,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,e){s=t,c=e}));var l,f,p,h,d,y,b=Object.assign({},u),m=\\\"./this.program\\\",g=(t,e)=>{throw e},v=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,w=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=u.ENVIRONMENT_IS_PTHREAD||!1,A=\\\"\\\";function S(t){return u.locateFile?u.locateFile(t,A):A+t}if(w){let e;A=_?n(17).dirname(A)+\\\"/\\\":__dirname+\\\"/\\\",y=()=>{d||(h=n(147),d=n(17))},l=function(t,e){return y(),t=d.normalize(t),h.readFileSync(t,e?void 0:\\\"utf8\\\")},p=t=>((t=l(t,!0)).buffer||(t=new Uint8Array(t)),t),f=(t,e,n)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof st))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),g=(t,e)=>{if(Q())throw process.exitCode=t,e;e instanceof st||x(\\\"exiting due to exception: \\\"+e),process.exit(t)},u.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{e=n(267)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=e.Worker}else(v||_)&&(_?A=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(A=document.currentScript.src),_scriptDir&&(A=_scriptDir),A=0!==A.indexOf(\\\"blob:\\\")?A.substr(0,A.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",w||(l=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},_&&(p=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),f=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));w&&\\\"undefined\\\"==typeof performance&&(global.performance=n(74).performance);var T=console.log.bind(console),E=console.warn.bind(console);w&&(y(),T=t=>h.writeSync(1,t+\\\"\\\\n\\\"),E=t=>h.writeSync(2,t+\\\"\\\\n\\\"));var M,C=u.print||T,x=u.printErr||E;Object.assign(u,b),b=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(g=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&at(\\\"no native wasm support detected\\\");var k,j,D,P,U,F,I,W,H=!1,z=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function L(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&z)return z.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(t,e){return(t>>>=0)?L(r(),t,e):\\\"\\\"}function B(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function G(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=F=new Int32Array(t),u.HEAPU8=U=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}O&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(O)k=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)k=u.wasmMemory;else if(!((k=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),w&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");k&&(D=k.buffer),V=D.byteLength,N(D);var q,$=[],X=[],J=[],Z=[];function Q(){return R||!1}function K(){var t=u.preRun.shift();$.unshift(t)}var tt,et=0,nt=null,rt=null;function at(t){throw O?postMessage({cmd:\\\"onAbort\\\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\\\"Aborted(\\\"+t+\\\")\\\"),H=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),c(t),t}function it(){return tt.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ot(){var t=tt;try{if(t==tt&&M)return new Uint8Array(M);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){at(t)}}tt=\\\"ort-wasm-threaded.wasm\\\",it()||(tt=S(tt));var ut={};function st(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function ct(t){(t=ht.Vb[t])||at(),ht.mc(t)}function lt(t){var e=ht.Cc();if(!e)return 6;ht.ac.push(e),ht.Vb[t.Ub]=e,e.Ub=t.Ub;var n={cmd:\\\"run\\\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return e.$b=()=>{n.time=performance.now(),e.postMessage(n,t.Nc)},e.loaded&&(e.$b(),delete e.$b),0}function ft(t){if(O)return qt(1,1,t);Q()||(ht.oc(),u.onExit&&u.onExit(t),H=!0),g(t,new st(t))}function pt(t,e){if(!e&&O)throw bt(t),\\\"unwind\\\";Q()||O||(me(),dt(J),be(0),re[1].length&&ae(1,10),re[2].length&&ae(2,10),ht.oc()),ft(t)}var ht={Yb:[],ac:[],qc:[],Vb:{},fc:function(){O&&ht.Ec()},Pc:function(){},Ec:function(){ht.receiveObjectTransfer=ht.Gc,ht.threadInitTLS=ht.pc,ht.setExitStatus=ht.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(ht.Vb))ht.mc(t);for(t of ht.Yb)t.terminate();ht.Yb=[]},mc:function(t){var e=t.Ub;delete ht.Vb[e],ht.Yb.push(t),ht.ac.splice(ht.ac.indexOf(t),1),t.Ub=0,Oe(e)},Gc:function(){},pc:function(){ht.qc.forEach((t=>t()))},Fc:function(t,e){t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ub&&(ht.Bc=t.Ub),n.targetThread&&n.targetThread!=he()){var a=ht.Vb[n.Qc];a?a.postMessage(n,n.transferList):x('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"processProxyingQueue\\\"===r?Lt(n.queue):\\\"spawnThread\\\"===r?lt(n):\\\"cleanupThread\\\"===r?ct(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=ht.Vb[n],delete ht.Vb[n],r.terminate(),Oe(n),ht.ac.splice(ht.ac.indexOf(r),1),r.Ub=0):\\\"cancelThread\\\"===r?ht.Vb[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,e&&e(t),t.$b&&(t.$b(),delete t.$b)):\\\"print\\\"===r?C(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?x(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?t.postMessage(n):\\\"onAbort\\\"===r?u.onAbort&&u.onAbort(n.arg):r&&x(\\\"worker sent an unknown command \\\"+r);ht.Bc=void 0},t.onerror=t=>{throw x(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},w&&(t.on(\\\"message\\\",(function(e){t.onmessage({data:e})})),t.on(\\\"error\\\",(function(e){t.onerror(e)})),t.on(\\\"detachedExit\\\",(function(){}))),t.postMessage({cmd:\\\"load\\\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:k,wasmModule:j})},yc:function(){var t=S(\\\"ort-wasm-threaded.worker.js\\\");ht.Yb.push(new Worker(t))},Cc:function(){return 0==ht.Yb.length&&(ht.yc(),ht.Fc(ht.Yb[0])),ht.Yb.pop()}};function dt(t){for(;0<t.length;)t.shift()(u)}function yt(t){var e=Ee();return t=t(),Me(e),t}function bt(t){if(O)return qt(2,0,t);try{pt(t)}catch(t){t instanceof st||\\\"unwind\\\"==t||g(1,t)}}u.PThread=ht,u.establishStackSpace=function(){var t=he(),e=a()[t+44>>2>>>0];t=a()[t+48>>2>>>0],Te(e,e-t),Me(e)};var mt=[];function gt(t){var e=mt[t];return e||(t>=mt.length&&(mt.length=t+1),mt[t]=e=q.get(t)),e}u.invokeEntryPoint=function(t,e){t=gt(t)(e),Q()?ht.nc(t):Ae(t)};var vt,_t,wt=[],Ot=0,At=0;function St(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){a()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,e()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=e()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,e()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=e()[this.Sb+13>>0>>>0]},this.fc=function(t,e){this.cc(0),this.xc(t),this.wc(e),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(a(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(a(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(Re(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function Tt(t){return ye(new St(t).Sb)}function Et(t,e,n,r){return O?qt(3,1,t,e,n,r):Mt(t,e,n,r)}function Mt(t,e,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return x(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];return O&&0===a.length?Et(t,e,n,r):(t={Ic:n,Ub:t,zc:r,Nc:a},O?(t.Oc=\\\"spawnThread\\\",postMessage(t,a),0):lt(t))}function Ct(t,e,n){return O?qt(4,1,t,e,n):0}function xt(t,e){if(O)return qt(5,1,t,e)}function Rt(t,e){if(O)return qt(6,1,t,e)}function kt(t,e,n){if(O)return qt(7,1,t,e,n)}function jt(t,e,n){return O?qt(8,1,t,e,n):0}function Dt(t,e){if(O)return qt(9,1,t,e)}function Pt(t,e,n){if(O)return qt(10,1,t,e,n)}function Ut(t,e,n,r){if(O)return qt(11,1,t,e,n,r)}function Ft(t,e,n,r){if(O)return qt(12,1,t,e,n,r)}function It(t,e,n,r){if(O)return qt(13,1,t,e,n,r)}function Wt(t){if(O)return qt(14,1,t)}function Ht(t,e){if(O)return qt(15,1,t,e)}function zt(t,e,n){if(O)return qt(16,1,t,e,n)}function Lt(t){Atomics.store(a(),t>>2,1),he()&&we(t),Atomics.compareExchange(a(),t>>2,1,0)}function Yt(t){return i()[t>>>2]+4294967296*a()[t+4>>>2]}function Bt(t,e,n,r,a,i){return O?qt(17,1,t,e,n,r,a,i):-52}function Gt(t,e,n,r,a,i){if(O)return qt(18,1,t,e,n,r,a,i)}function Nt(t){var n=G(t)+1,r=de(n);return r&&B(t,e(),r,n),r}function Vt(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}if(O)return qt(19,1,t,e,n);var o=(new Date).getFullYear(),u=new Date(o,0,1),s=new Date(o,6,1);o=u.getTimezoneOffset();var c=s.getTimezoneOffset(),l=Math.max(o,c);a()[t>>2>>>0]=60*l,a()[e>>2>>>0]=Number(o!=c),t=r(u),e=r(s),t=Nt(t),e=Nt(e),c<o?(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e):(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t)}function qt(t,e){var n=arguments.length-2,r=arguments;return yt((()=>{for(var a=Ce(8*n),i=a>>3,u=0;u<n;u++){var s=r[2+u];o()[i+u>>>0]=s}return _e(t,n,a,e)}))}u.executeNotifiedProxyingQueue=Lt,_t=w?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:O?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var $t,Xt=[],Jt={};function Zt(){if(!$t){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(t in Jt)void 0===Jt[t]?delete e[t]:e[t]=Jt[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);$t=n}return $t}function Qt(t,n){if(O)return qt(20,1,t,n);var r=0;return Zt().forEach((function(a,o){var u=n+r;for(o=i()[t+4*o>>2>>>0]=u,u=0;u<a.length;++u)e()[o++>>0>>>0]=a.charCodeAt(u);e()[o>>0>>>0]=0,r+=a.length+1})),0}function Kt(t,e){if(O)return qt(21,1,t,e);var n=Zt();i()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),i()[e>>2>>>0]=r,0}function te(t){return O?qt(22,1,t):52}function ee(t,e,n,r){return O?qt(23,1,t,e,n,r):52}function ne(t,e,n,r,a){return O?qt(24,1,t,e,n,r,a):70}var re=[null,[],[]];function ae(t,e){var n=re[t];0===e||10===e?((1===t?C:x)(L(n,0)),n.length=0):n.push(e)}function ie(t,e,n,a){if(O)return qt(25,1,t,e,n,a);for(var o=0,u=0;u<n;u++){var s=i()[e>>2>>>0],c=i()[e+4>>2>>>0];e+=8;for(var l=0;l<c;l++)ae(t,r()[s+l>>>0]);o+=c}return i()[a>>2>>>0]=o,0}var oe=0;function ue(t){return 0==t%4&&(0!=t%100||0==t%400)}var se=[31,29,31,30,31,30,31,31,30,31,30,31],ce=[31,28,31,30,31,30,31,31,30,31,30,31];function le(t,n,r,i){function o(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function u(t,e){return o(t,e,\\\"0\\\")}function s(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function c(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var e=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(ue(t.getFullYear())?se:ce)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=c(new Date(t.getFullYear(),0,4)),n=c(n),0>=s(e,t)?0>=s(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var f=a()[i+40>>2>>>0];for(var p in i={Lc:a()[i>>2>>>0],Kc:a()[i+4>>2>>>0],dc:a()[i+8>>2>>>0],jc:a()[i+12>>2>>>0],ec:a()[i+16>>2>>>0],Xb:a()[i+20>>2>>>0],Tb:a()[i+24>>2>>>0],Wb:a()[i+28>>2>>>0],Rc:a()[i+32>>2>>>0],Jc:a()[i+36>>2>>>0],Mc:f?Y(f):\\\"\\\"},r=Y(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),f[p]);var h=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in f={\\\"%a\\\":function(t){return h[t.Tb].substring(0,3)},\\\"%A\\\":function(t){return h[t.Tb]},\\\"%b\\\":function(t){return d[t.ec].substring(0,3)},\\\"%B\\\":function(t){return d[t.ec]},\\\"%C\\\":function(t){return u((t.Xb+1900)/100|0,2)},\\\"%d\\\":function(t){return u(t.jc,2)},\\\"%e\\\":function(t){return o(t.jc,2,\\\" \\\")},\\\"%g\\\":function(t){return l(t).toString().substring(2)},\\\"%G\\\":function(t){return l(t)},\\\"%H\\\":function(t){return u(t.dc,2)},\\\"%I\\\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),u(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.ec-1;e+=(ue(t.Xb+1900)?se:ce)[n++]);return u(t.jc+e,3)},\\\"%m\\\":function(t){return u(t.ec+1,2)},\\\"%M\\\":function(t){return u(t.Kc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.dc&&12>t.dc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return u(t.Lc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Tb||7},\\\"%U\\\":function(t){return u(Math.floor((t.Wb+7-t.Tb)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&e++,e)53==e&&(4==(n=(t.Tb+371-t.Wb)%7)||3==n&&ue(t.Xb)||(e=1));else{e=52;var n=(t.Tb+7-t.Wb-1)%7;(4==n||5==n&&ue(t.Xb%400-1))&&e++}return u(e,2)},\\\"%w\\\":function(t){return t.Tb},\\\"%W\\\":function(t){return u(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Xb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Xb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Jc);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.Mc},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),f)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),f[p](i)));return p=function(t){var e=Array(G(t)+1);return B(t,e,0,e.length),e}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}ht.fc();var fe=[null,ft,bt,Et,Ct,xt,Rt,kt,jt,Dt,Pt,Ut,Ft,It,Wt,Ht,zt,Bt,Gt,Vt,Qt,Kt,te,ee,ne,ie],pe={b:function(t){return de(t+24)+24},n:function(t){return(t=new St(t)).uc()||(t.hc(!0),Ot--),t.ic(!1),wt.push(t),t.sc(),t.vc()},ma:function(t){throw x(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),H=!0,t},x:function(){Se(0);var t=wt.pop();if(t.Hc()&&!t.kc()){var e=t.Dc();e&&gt(e)(t.Zb),Tt(t.Zb)}At=0},e:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},l:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},h:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},t:Tt,M:function(){var t=wt.pop();t||at(\\\"no exception to throw\\\");var e=t.Zb;throw t.kc()||(wt.push(t),t.ic(!0),t.hc(!1),Ot++),At=e,e},c:function(t,e,n){throw new St(t).fc(e,n),At=t,Ot++,t},pa:function(){return Ot},Fa:function(t){ge(t,!_,1,!v),ht.pc()},T:function(t){O?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):ct(t)},xa:Mt,j:function(t){throw At||(At=t),t},H:Ct,Ma:xt,ua:Rt,wa:kt,oa:jt,Ka:Dt,Ca:Pt,Ja:Ut,V:Ft,va:It,sa:Wt,La:Ht,ta:zt,Ta:function(){},X:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ua:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,e,n,r){if(t==e)setTimeout((()=>Lt(r)));else if(O)postMessage({targetThread:t,cmd:\\\"processProxyingQueue\\\",queue:r});else{if(!(t=ht.Vb[t]))return;t.postMessage({cmd:\\\"processProxyingQueue\\\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getUTCSeconds(),a()[e+4>>2>>>0]=t.getUTCMinutes(),a()[e+8>>2>>>0]=t.getUTCHours(),a()[e+12>>2>>>0]=t.getUTCDate(),a()[e+16>>2>>>0]=t.getUTCMonth(),a()[e+20>>2>>>0]=t.getUTCFullYear()-1900,a()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[e+28>>2>>>0]=t},Qa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getFullYear()-1900,a()[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1),r=(t.getTime()-n.getTime())/864e5|0;a()[e+28>>2>>>0]=r,a()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(n=n.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(n,r)),a()[e+32>>2>>>0]=t},Ra:function(t){var e=new Date(a()[t+20>>2>>>0]+1900,a()[t+16>>2>>>0],a()[t+12>>2>>>0],a()[t+8>>2>>>0],a()[t+4>>2>>>0],a()[t>>2>>>0],0),n=a()[t+32>>2>>>0],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),o=new Date(e.getFullYear(),6,1).getTimezoneOffset(),u=i.getTimezoneOffset(),s=Math.min(u,o);return 0>n?a()[t+32>>2>>>0]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),e.setTime(e.getTime()+6e4*((0<n?s:o)-r))),a()[t+24>>2>>>0]=e.getDay(),n=(e.getTime()-i.getTime())/864e5|0,a()[t+28>>2>>>0]=n,a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(e,n,r){t.Ac||(t.Ac=!0,Vt(e,n,r))},y:function(){at(\\\"\\\")},U:function(){if(!w&&!_){var t=\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\";vt||(vt={}),vt[t]||(vt[t]=1,w&&(t=\\\"warning: \\\"+t),x(t))}},ra:function(){return 4294901760},B:_t,Ia:function(t,e,n){r().copyWithin(t>>>0,e>>>0,e+n>>>0)},F:function(){return w?n(37).cpus().length:navigator.hardwareConcurrency},Da:function(t,e,n){Xt.length=e,n>>=3;for(var r=0;r<e;r++)Xt[r]=o()[n+r>>>0];return(0>t?ut[-t-1]:fe[t]).apply(null,Xt)},qa:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var a=e*(1+.2/n);a=Math.min(a,t+100663296);var i=Math;a=Math.max(t,a),i=i.min.call(i,4294901760,a+(65536-a%65536)%65536);t:{try{k.grow(i-D.byteLength+65535>>>16),N(k.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw\\\"unwind\\\"},Ga:Qt,Ha:Kt,J:pt,I:te,S:ee,ga:ne,R:ie,d:function(){return oe},na:function t(r,a){t.lc||(t.lc=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(w)try{var e=n(113);return()=>e.randomBytes(1)[0]}catch(t){}return()=>at(\\\"randomDevice\\\")}());for(var i=0;i<a;i++)e()[r+i>>0>>>0]=t.lc();return 0},ia:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ja:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},K:function(t){var e=Ee();try{return gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},f:function(t,e){var n=Ee();try{return gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},P:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},Q:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},k:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},p:function(t,e,n,r){var a=Ee();try{return gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},q:function(t,e,n,r,a){var i=Ee();try{return gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},N:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},s:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},w:function(t,e,n,r,a,i,o){var u=Ee();try{return gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},L:function(t,e,n,r,a,i,o,u){var s=Ee();try{return gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},E:function(t,e,n,r,a,i,o,u,s,c,l,f){var p=Ee();try{return gt(t)(e,n,r,a,i,o,u,s,c,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},aa:function(t,e,n,r,a,i,o,u){var s=Ee();try{return He(t,e,n,r,a,i,o,u)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},_:function(t,e,n,r,a,i,o){var u=Ee();try{return je(t,e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},Z:function(t,e,n,r,a){var i=Ee();try{return ze(t,e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},ca:function(t,e,n,r){var a=Ee();try{return Ie(t,e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},$:function(t){var e=Ee();try{return ke(t)}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},ba:function(t,e){var n=Ee();try{return We(t,e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},Y:function(t,e,n){var r=Ee();try{return De(t,e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},g:function(t){var e=Ee();try{gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},r:function(t,e){var n=Ee();try{gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},i:function(t,e,n){var r=Ee();try{gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ha:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},m:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},v:function(t,e,n,r,a){var i=Ee();try{gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},u:function(t,e,n,r,a,i){var o=Ee();try{gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},O:function(t,e,n,r,a,i,o){var u=Ee();try{gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},A:function(t,e,n,r,a,i,o,u){var s=Ee();try{gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},ka:function(t,e,n,r,a,i,o,u,s){var c=Ee();try{gt(t)(e,n,r,a,i,o,u,s)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},C:function(t,e,n,r,a,i,o,u,s,c,l){var f=Ee();try{gt(t)(e,n,r,a,i,o,u,s,c,l)}catch(t){if(Me(f),t!==t+0)throw t;Se(1,0)}},D:function(t,e,n,r,a,i,o,u,s,c,l,f,p,h,d,y){var b=Ee();try{gt(t)(e,n,r,a,i,o,u,s,c,l,f,p,h,d,y)}catch(t){if(Me(b),t!==t+0)throw t;Se(1,0)}},fa:function(t,e,n,r,a,i,o,u){var s=Ee();try{Pe(t,e,n,r,a,i,o,u)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},da:function(t,e,n,r,a,i,o,u,s,c,l,f){var p=Ee();try{Fe(t,e,n,r,a,i,o,u,s,c,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},ea:function(t,e,n,r,a,i){var o=Ee();try{Ue(t,e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},o:function(t){return t},a:k||u.wasmMemory,G:function(t){oe=t},la:le,z:function(t,e,n,r){return le(t,e,n,r)}};!function(){function t(t,e){u.asm=t.exports,ht.qc.push(u.asm.sb),q=u.asm.ub,X.unshift(u.asm.Va),j=e,O||(et--,u.monitorRunDependencies&&u.monitorRunDependencies(et),0==et&&(null!==nt&&(clearInterval(nt),nt=null),rt&&(t=rt,rt=null,t())))}function e(e){t(e.instance,e.module)}function n(t){return function(){if(!M&&(v||_)){if(\\\"function\\\"==typeof fetch&&!tt.startsWith(\\\"file://\\\"))return fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+tt+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return ot()}));if(f)return new Promise((function(t,e){f(tt,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return ot()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\\\"failed to asynchronously prepare wasm: \\\"+t),at(t)}))}var r={a:pe};if(O||(et++,u.monitorRunDependencies&&u.monitorRunDependencies(et)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||it()||tt.startsWith(\\\"file://\\\")||w||\\\"function\\\"!=typeof fetch?n(e):fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){return x(\\\"wasm streaming compile failed: \\\"+t),x(\\\"falling back to ArrayBuffer instantiation\\\"),n(e)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var he=u._pthread_self=function(){return(he=u._pthread_self=u.asm.ob).apply(null,arguments)},de=u._malloc=function(){return(de=u._malloc=u.asm.pb).apply(null,arguments)},ye=u._free=function(){return(ye=u._free=u.asm.qb).apply(null,arguments)},be=u._fflush=function(){return(be=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var me=u.___funcs_on_exit=function(){return(me=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},ge=u.__emscripten_thread_init=function(){return(ge=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var ve,_e=u._emscripten_run_in_main_runtime_thread_js=function(){return(_e=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},we=u.__emscripten_proxy_execute_task_queue=function(){return(we=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Oe=u.__emscripten_thread_free_data=function(){return(Oe=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},Ae=u.__emscripten_thread_exit=function(){return(Ae=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Se=u._setThrew=function(){return(Se=u._setThrew=u.asm.Bb).apply(null,arguments)},Te=u._emscripten_stack_set_limits=function(){return(Te=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Ee=u.stackSave=function(){return(Ee=u.stackSave=u.asm.Db).apply(null,arguments)},Me=u.stackRestore=function(){return(Me=u.stackRestore=u.asm.Eb).apply(null,arguments)},Ce=u.stackAlloc=function(){return(Ce=u.stackAlloc=u.asm.Fb).apply(null,arguments)},xe=u.___cxa_can_catch=function(){return(xe=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},Re=u.___cxa_is_pointer_type=function(){return(Re=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},ke=u.dynCall_j=function(){return(ke=u.dynCall_j=u.asm.Ib).apply(null,arguments)},je=u.dynCall_iiiiij=function(){return(je=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},De=u.dynCall_jii=function(){return(De=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Pe=u.dynCall_viiiiij=function(){return(Pe=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Ue=u.dynCall_vjji=function(){return(Ue=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Fe=u.dynCall_viiijjjii=function(){return(Fe=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},Ie=u.dynCall_iij=function(){return(Ie=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},We=u.dynCall_ji=function(){return(We=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},He=u.dynCall_iiiiiij=function(){return(He=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},ze=u.dynCall_iiij=function(){return(ze=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function Le(){function t(){if(!ve&&(ve=!0,u.calledRun=!0,!H)&&(O||dt(X),s(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!O)){if(u.postRun)for(\\\"function\\\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}dt(Z)}}if(!(0<et))if(O)s(u),O||dt(X),postMessage({cmd:\\\"loaded\\\"});else{if(u.preRun)for(\\\"function\\\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)K();dt($),0<et||(u.setStatus?(u.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){u.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(u.UTF8ToString=Y,u.stringToUTF8=function(t,e,n){return B(t,r(),e,n)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=Q,u.wasmMemory=k,u.stackSave=Ee,u.stackRestore=Me,u.stackAlloc=Ce,u.ExitStatus=st,u.PThread=ht,rt=function t(){ve||Le(),ve||(rt=t)},u.preInit)for(\\\"function\\\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return Le(),t.ready});t.exports=r},932:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(t){var e,r,a;t=t||{},e||(e=void 0!==t?t:{}),e.ready=new Promise((function(t,e){r=t,a=e}));var i,o,u,s,c,l,f=Object.assign({},e),p=\\\"./this.program\\\",h=(t,e)=>{throw e},d=\\\"object\\\"==typeof window,y=\\\"function\\\"==typeof importScripts,b=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";b?(m=y?n(17).dirname(m)+\\\"/\\\":__dirname+\\\"/\\\",l=()=>{c||(s=n(147),c=n(17))},i=function(t,e){return l(),t=c.normalize(t),s.readFileSync(t,e?void 0:\\\"utf8\\\")},u=t=>((t=i(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,e,n)=>{l(),t=c.normalize(t),s.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof J))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),h=(t,e)=>{if(w||0<z)throw process.exitCode=t,e;e instanceof J||_(\\\"exiting due to exception: \\\"+e),process.exit(t)},e.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||y)&&(y?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",i=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},y&&(u=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var g,v=e.print||console.log.bind(console),_=e.printErr||console.warn.bind(console);Object.assign(e,f),f=null,e.thisProgram&&(p=e.thisProgram),e.quit&&(h=e.quit),e.wasmBinary&&(g=e.wasmBinary);var w=e.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&V(\\\"no native wasm support detected\\\");var O,A,S,T,E,M,C=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function R(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&x)return x.decode(t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function k(t,e){return(t>>>=0)?R(T,t,e):\\\"\\\"}function j(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function D(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function P(){var t=O.buffer;A=t,e.HEAP8=S=new Int8Array(t),e.HEAP16=new Int16Array(t),e.HEAP32=E=new Int32Array(t),e.HEAPU8=T=new Uint8Array(t),e.HEAPU16=new Uint16Array(t),e.HEAPU32=M=new Uint32Array(t),e.HEAPF32=new Float32Array(t),e.HEAPF64=new Float64Array(t)}var U,F=[],I=[],W=[],H=[],z=0;function L(){var t=e.preRun.shift();F.unshift(t)}var Y,B=0,G=null,N=null;function V(t){throw e.onAbort&&e.onAbort(t),_(t=\\\"Aborted(\\\"+t+\\\")\\\"),C=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),a(t),t}function q(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(Y=\\\"ort-wasm.wasm\\\",!q()){var $=Y;Y=e.locateFile?e.locateFile($,m):m+$}function X(){var t=Y;try{if(t==Y&&g)return new Uint8Array(g);if(u)return u(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){V(t)}}function J(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function Z(t){for(;0<t.length;)t.shift()(e)}var Q=[],K=0,tt=0;function et(t){this.Db=t,this.zb=t-24,this.Ub=function(t){M[this.zb+4>>2>>>0]=t},this.Eb=function(){return M[this.zb+4>>2>>>0]},this.Sb=function(t){M[this.zb+8>>2>>>0]=t},this.Wb=function(){return M[this.zb+8>>2>>>0]},this.Tb=function(){E[this.zb>>2>>>0]=0},this.Ib=function(t){S[this.zb+12>>0>>>0]=t?1:0},this.Pb=function(){return 0!=S[this.zb+12>>0>>>0]},this.Jb=function(t){S[this.zb+13>>0>>>0]=t?1:0},this.Lb=function(){return 0!=S[this.zb+13>>0>>>0]},this.Rb=function(t,e){this.Fb(0),this.Ub(t),this.Sb(e),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){E[this.zb>>2>>>0]+=1},this.Xb=function(){var t=E[this.zb>>2>>>0];return E[this.zb>>2>>>0]=t-1,1===t},this.Fb=function(t){M[this.zb+16>>2>>>0]=t},this.Ob=function(){return M[this.zb+16>>2>>>0]},this.Qb=function(){if(Mt(this.Eb()))return M[this.Db>>2>>>0];var t=this.Ob();return 0!==t?t:this.Db}}function nt(t){return vt(new et(t).zb)}var rt=[];function at(t){var e=rt[t];return e||(t>=rt.length&&(rt.length=t+1),rt[t]=e=U.get(t)),e}function it(t){var e=D(t)+1,n=gt(e);return n&&j(t,S,n,e),n}var ot={};function ut(){if(!st){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(t in ot)void 0===ot[t]?delete e[t]:e[t]=ot[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);st=n}return st}var st,ct=[null,[],[]];function lt(t,e){var n=ct[t];0===e||10===e?((1===t?v:_)(R(n,0)),n.length=0):n.push(e)}var ft=0;function pt(t){return 0==t%4&&(0!=t%100||0==t%400)}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],dt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(t,e,n,r){function a(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function i(t,e){return a(t,e,\\\"0\\\")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function s(t){var e=t.Bb;for(t=new Date(new Date(t.Cb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(pt(t.getFullYear())?ht:dt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=u(new Date(t.getFullYear(),0,4)),n=u(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var c=E[r+40>>2>>>0];for(var l in r={$b:E[r>>2>>>0],Zb:E[r+4>>2>>>0],Gb:E[r+8>>2>>>0],Kb:E[r+12>>2>>>0],Hb:E[r+16>>2>>>0],Cb:E[r+20>>2>>>0],Ab:E[r+24>>2>>>0],Bb:E[r+28>>2>>>0],bc:E[r+32>>2>>>0],Yb:E[r+36>>2>>>0],ac:c?k(c):\\\"\\\"},n=k(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),c[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in c={\\\"%a\\\":function(t){return f[t.Ab].substring(0,3)},\\\"%A\\\":function(t){return f[t.Ab]},\\\"%b\\\":function(t){return p[t.Hb].substring(0,3)},\\\"%B\\\":function(t){return p[t.Hb]},\\\"%C\\\":function(t){return i((t.Cb+1900)/100|0,2)},\\\"%d\\\":function(t){return i(t.Kb,2)},\\\"%e\\\":function(t){return a(t.Kb,2,\\\" \\\")},\\\"%g\\\":function(t){return s(t).toString().substring(2)},\\\"%G\\\":function(t){return s(t)},\\\"%H\\\":function(t){return i(t.Gb,2)},\\\"%I\\\":function(t){return 0==(t=t.Gb)?t=12:12<t&&(t-=12),i(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.Hb-1;e+=(pt(t.Cb+1900)?ht:dt)[n++]);return i(t.Kb+e,3)},\\\"%m\\\":function(t){return i(t.Hb+1,2)},\\\"%M\\\":function(t){return i(t.Zb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Gb&&12>t.Gb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return i(t.$b,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Ab||7},\\\"%U\\\":function(t){return i(Math.floor((t.Bb+7-t.Ab)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Bb+7-(t.Ab+6)%7)/7);if(2>=(t.Ab+371-t.Bb-2)%7&&e++,e)53==e&&(4==(n=(t.Ab+371-t.Bb)%7)||3==n&&pt(t.Cb)||(e=1));else{e=52;var n=(t.Ab+7-t.Bb-1)%7;(4==n||5==n&&pt(t.Cb%400-1))&&e++}return i(e,2)},\\\"%w\\\":function(t){return t.Ab},\\\"%W\\\":function(t){return i(Math.floor((t.Bb+7-(t.Ab+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Cb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Yb);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.ac},\\\"%%\\\":function(){return\\\"%\\\"}},n=n.replace(/%%/g,\\\"\\\\0\\\\0\\\"),c)n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),c[l](r)));return l=function(t){var e=Array(D(t)+1);return j(t,e,0,e.length),e}(n=n.replace(/\\\\0\\\\0/g,\\\"%\\\")),l.length>e?0:(S.set(l,t>>>0),l.length-1)}var bt={a:function(t){return gt(t+24)+24},m:function(t){return(t=new et(t)).Pb()||(t.Ib(!0),K--),t.Jb(!1),Q.push(t),t.Nb(),t.Qb()},ia:function(t){throw _(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),C=!0,t},w:function(){Ot(0);var t=Q.pop();if(t.Xb()&&!t.Lb()){var e=t.Wb();e&&at(e)(t.Db),nt(t.Db)}tt=0},d:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},k:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},g:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},s:nt,L:function(){var t=Q.pop();t||V(\\\"no exception to throw\\\");var e=t.Db;throw t.Lb()||(Q.push(t),t.Jb(!0),t.Ib(!1),K++),tt=e,e},b:function(t,e,n){throw new et(t).Rb(e,n),tt=t,K++,t},la:function(){return K},i:function(t){throw tt||(tt=t),t},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ia:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getUTCSeconds(),E[e+4>>2>>>0]=t.getUTCMinutes(),E[e+8>>2>>>0]=t.getUTCHours(),E[e+12>>2>>>0]=t.getUTCDate(),E[e+16>>2>>>0]=t.getUTCMonth(),E[e+20>>2>>>0]=t.getUTCFullYear()-1900,E[e+24>>2>>>0]=t.getUTCDay(),E[e+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getSeconds(),E[e+4>>2>>>0]=t.getMinutes(),E[e+8>>2>>>0]=t.getHours(),E[e+12>>2>>>0]=t.getDate(),E[e+16>>2>>>0]=t.getMonth(),E[e+20>>2>>>0]=t.getFullYear()-1900,E[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1);E[e+28>>2>>>0]=(t.getTime()-n.getTime())/864e5|0,E[e+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),E[e+32>>2>>>0]=0|(r!=n&&t.getTimezoneOffset()==Math.min(n,r))},Fa:function(t){var e=new Date(E[t+20>>2>>>0]+1900,E[t+16>>2>>>0],E[t+12>>2>>>0],E[t+8>>2>>>0],E[t+4>>2>>>0],E[t>>2>>>0],0),n=E[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),0,1),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),u=Math.min(o,i);return 0>n?E[t+32>>2>>>0]=Number(i!=o&&u==r):0<n!=(u==r)&&(i=Math.max(o,i),e.setTime(e.getTime()+6e4*((0<n?u:i)-r))),E[t+24>>2>>>0]=e.getDay(),E[t+28>>2>>>0]=(e.getTime()-a.getTime())/864e5|0,E[t>>2>>>0]=e.getSeconds(),E[t+4>>2>>>0]=e.getMinutes(),E[t+8>>2>>>0]=e.getHours(),E[t+12>>2>>>0]=e.getDate(),E[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function t(e,n,r){t.Vb||(t.Vb=!0,function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var u=o.getTimezoneOffset();E[t>>2>>>0]=60*Math.max(a,u),E[e>>2>>>0]=Number(a!=u),t=r(i),e=r(o),t=it(t),e=it(e),u<a?(M[n>>2>>>0]=t,M[n+4>>2>>>0]=e):(M[n>>2>>>0]=e,M[n+4>>2>>>0]=t)}(e,n,r))},B:function(){V(\\\"\\\")},ma:function(){return 4294901760},I:b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),xa:function(t,e,n){T.copyWithin(t>>>0,e>>>0,e+n>>>0)},G:function(t){var e=T.length;if(4294901760<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var a=Math;r=Math.max(t,r),a=a.min.call(a,4294901760,r+(65536-r%65536)%65536);t:{try{O.grow(a-A.byteLength+65535>>>16),P();var i=1;break t}catch(t){}i=void 0}if(i)return!0}return!1},va:function(t,e){var n=0;return ut().forEach((function(r,a){var i=e+n;for(a=M[t+4*a>>2>>>0]=i,i=0;i<r.length;++i)S[a++>>0>>>0]=r.charCodeAt(i);S[a>>0>>>0]=0,n+=r.length+1})),0},wa:function(t,e){var n=ut();M[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),M[e>>2>>>0]=r,0},ba:function(t){w||0<z||(wt(),Z(W),_t(0),ct[1].length&&lt(1,10),ct[2].length&&lt(2,10)),w||0<z||(e.onExit&&e.onExit(t),C=!0),h(t,new J(t))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(t,e,n,r){for(var a=0,i=0;i<n;i++){var o=M[e>>2>>>0],u=M[e+4>>2>>>0];e+=8;for(var s=0;s<u;s++)lt(t,T[o+s>>>0]);a+=u}return M[r>>2>>>0]=a,0},c:function(){return ft},ja:function t(e,r){t.Mb||(t.Mb=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=n(113);return()=>e.randomBytes(1)[0]}catch(t){}return()=>V(\\\"randomDevice\\\")}());for(var a=0;a<r;a++)S[e+a>>0>>>0]=t.Mb();return 0},ea:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},fa:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},J:function(t){var e=At();try{return at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},e:function(t,e){var n=At();try{return at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},N:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},O:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},j:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},o:function(t,e,n,r){var a=At();try{return at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},p:function(t,e,n,r,a){var i=At();try{return at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},M:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},r:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},v:function(t,e,n,r,a,i,o){var u=At();try{return at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},K:function(t,e,n,r,a,i,o,u){var s=At();try{return at(t)(e,n,r,a,i,o,u)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},D:function(t,e,n,r,a,i,o,u,s,c,l,f){var p=At();try{return at(t)(e,n,r,a,i,o,u,s,c,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},X:function(t,e,n,r,a,i,o,u){var s=At();try{return Ft(t,e,n,r,a,i,o,u)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},V:function(t,e,n,r,a,i,o){var u=At();try{return xt(t,e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},U:function(t,e,n,r,a){var i=At();try{return It(t,e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},Z:function(t,e,n,r){var a=At();try{return Pt(t,e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},W:function(t){var e=At();try{return Ct(t)}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},Y:function(t,e){var n=At();try{return Ut(t,e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},T:function(t,e,n){var r=At();try{return Rt(t,e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},f:function(t){var e=At();try{at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},q:function(t,e){var n=At();try{at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},h:function(t,e,n){var r=At();try{at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},da:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},l:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},t:function(t,e,n,r,a){var i=At();try{at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},u:function(t,e,n,r,a,i){var o=At();try{at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},x:function(t,e,n,r,a,i,o){var u=At();try{at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},z:function(t,e,n,r,a,i,o,u){var s=At();try{at(t)(e,n,r,a,i,o,u)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},ga:function(t,e,n,r,a,i,o,u,s){var c=At();try{at(t)(e,n,r,a,i,o,u,s)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},A:function(t,e,n,r,a,i,o,u,s,c,l){var f=At();try{at(t)(e,n,r,a,i,o,u,s,c,l)}catch(t){if(St(f),t!==t+0)throw t;Ot(1,0)}},C:function(t,e,n,r,a,i,o,u,s,c,l,f,p,h,d,y){var b=At();try{at(t)(e,n,r,a,i,o,u,s,c,l,f,p,h,d,y)}catch(t){if(St(b),t!==t+0)throw t;Ot(1,0)}},aa:function(t,e,n,r,a,i,o,u){var s=At();try{kt(t,e,n,r,a,i,o,u)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},_:function(t,e,n,r,a,i,o,u,s,c,l,f){var p=At();try{Dt(t,e,n,r,a,i,o,u,s,c,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},$:function(t,e,n,r,a,i){var o=At();try{jt(t,e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},n:function(t){return t},F:function(t){ft=t},ha:yt,y:function(t,e,n,r){return yt(t,e,n,r)}};!function(){function t(t){e.asm=t.exports,O=e.asm.Ka,P(),U=e.asm.ib,I.unshift(e.asm.La),B--,e.monitorRunDependencies&&e.monitorRunDependencies(B),0==B&&(null!==G&&(clearInterval(G),G=null),N&&(t=N,N=null,t()))}function n(e){t(e.instance)}function r(t){return function(){if(!g&&(d||y)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return X()}));if(o)return new Promise((function(t,e){o(Y,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return X()}))}().then((function(t){return WebAssembly.instantiate(t,i)})).then((function(t){return t})).then(t,(function(t){_(\\\"failed to asynchronously prepare wasm: \\\"+t),V(t)}))}var i={a:bt};if(B++,e.monitorRunDependencies&&e.monitorRunDependencies(B),e.instantiateWasm)try{return e.instantiateWasm(i,t)}catch(t){return _(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(g||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||q()||Y.startsWith(\\\"file://\\\")||b||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,i).then(n,(function(t){return _(\\\"wasm streaming compile failed: \\\"+t),_(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.La).apply(null,arguments)},e._OrtInit=function(){return(e._OrtInit=e.asm.Ma).apply(null,arguments)},e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Na).apply(null,arguments)},e._OrtAppendExecutionProvider=function(){return(e._OrtAppendExecutionProvider=e.asm.Oa).apply(null,arguments)},e._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Pa).apply(null,arguments)},e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Qa).apply(null,arguments)},e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ra).apply(null,arguments)},e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Sa).apply(null,arguments)},e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.Ta).apply(null,arguments)},e._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.Ua).apply(null,arguments)},e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.Va).apply(null,arguments)},e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Wa).apply(null,arguments)},e._OrtFree=function(){return(e._OrtFree=e.asm.Xa).apply(null,arguments)},e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ya).apply(null,arguments)},e._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Za).apply(null,arguments)},e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm._a).apply(null,arguments)},e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.$a).apply(null,arguments)},e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.ab).apply(null,arguments)},e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.bb).apply(null,arguments)},e._OrtRun=function(){return(e._OrtRun=e.asm.cb).apply(null,arguments)},e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.db).apply(null,arguments)};var mt,gt=e._malloc=function(){return(gt=e._malloc=e.asm.eb).apply(null,arguments)},vt=e._free=function(){return(vt=e._free=e.asm.fb).apply(null,arguments)},_t=e._fflush=function(){return(_t=e._fflush=e.asm.gb).apply(null,arguments)},wt=e.___funcs_on_exit=function(){return(wt=e.___funcs_on_exit=e.asm.hb).apply(null,arguments)},Ot=e._setThrew=function(){return(Ot=e._setThrew=e.asm.jb).apply(null,arguments)},At=e.stackSave=function(){return(At=e.stackSave=e.asm.kb).apply(null,arguments)},St=e.stackRestore=function(){return(St=e.stackRestore=e.asm.lb).apply(null,arguments)},Tt=e.stackAlloc=function(){return(Tt=e.stackAlloc=e.asm.mb).apply(null,arguments)},Et=e.___cxa_can_catch=function(){return(Et=e.___cxa_can_catch=e.asm.nb).apply(null,arguments)},Mt=e.___cxa_is_pointer_type=function(){return(Mt=e.___cxa_is_pointer_type=e.asm.ob).apply(null,arguments)},Ct=e.dynCall_j=function(){return(Ct=e.dynCall_j=e.asm.pb).apply(null,arguments)},xt=e.dynCall_iiiiij=function(){return(xt=e.dynCall_iiiiij=e.asm.qb).apply(null,arguments)},Rt=e.dynCall_jii=function(){return(Rt=e.dynCall_jii=e.asm.rb).apply(null,arguments)},kt=e.dynCall_viiiiij=function(){return(kt=e.dynCall_viiiiij=e.asm.sb).apply(null,arguments)},jt=e.dynCall_vjji=function(){return(jt=e.dynCall_vjji=e.asm.tb).apply(null,arguments)},Dt=e.dynCall_viiijjjii=function(){return(Dt=e.dynCall_viiijjjii=e.asm.ub).apply(null,arguments)},Pt=e.dynCall_iij=function(){return(Pt=e.dynCall_iij=e.asm.vb).apply(null,arguments)},Ut=e.dynCall_ji=function(){return(Ut=e.dynCall_ji=e.asm.wb).apply(null,arguments)},Ft=e.dynCall_iiiiiij=function(){return(Ft=e.dynCall_iiiiiij=e.asm.xb).apply(null,arguments)},It=e.dynCall_iiij=function(){return(It=e.dynCall_iiij=e.asm.yb).apply(null,arguments)};function Wt(){function t(){if(!mt&&(mt=!0,e.calledRun=!0,!C)){if(Z(I),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for(\\\"function\\\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t=e.postRun.shift();H.unshift(t)}Z(H)}}if(!(0<B)){if(e.preRun)for(\\\"function\\\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)L();Z(F),0<B||(e.setStatus?(e.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){e.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(e.UTF8ToString=k,e.stringToUTF8=function(t,e,n){return j(t,T,e,n)},e.lengthBytesUTF8=D,e.stackSave=At,e.stackRestore=St,e.stackAlloc=Tt,N=function t(){mt||Wt(),mt||(N=t)},e.preInit)for(\\\"function\\\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return Wt(),t.ready});t.exports=r},967:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=(t,n,r,a)=>{if(\\\"object\\\"==typeof t&&null!==t){if(r.has(t))throw new Error(\\\"Circular reference in options\\\");r.add(t)}Object.entries(t).forEach((([t,i])=>{const o=n?n+t:t;if(\\\"object\\\"==typeof i)(0,e.iterateExtraOptions)(i,o+\\\".\\\",r,a);else if(\\\"string\\\"==typeof i||\\\"number\\\"==typeof i)a(o,i.toString());else{if(\\\"boolean\\\"!=typeof i)throw new Error(\\\"Can't handle extra config type: \\\"+typeof i);a(o,i?\\\"1\\\":\\\"0\\\")}}))}},586:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setRunOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setRunOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);let i=0;if(void 0!==(null==t?void 0:t.tag)&&(i=(0,a.allocWasmString)(t.tag,o)),n=e._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,i),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,i,u))throw new Error(`Can't set a run config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},919:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setSessionOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setSessionOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};(t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});const e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==t?void 0:t.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const s=(t=>{switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}})(u.graphOptimizationLevel);void 0===(null==t?void 0:t.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==t?void 0:t.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==t?void 0:t.executionMode)&&(u.executionMode=\\\"sequential\\\");const c=(t=>{switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}})(u.executionMode);let l=0;if(void 0!==(null==t?void 0:t.logId)&&(l=(0,a.allocWasmString)(t.logId,o)),void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);if(void 0===(null==t?void 0:t.enableProfiling)&&(u.enableProfiling=!1),n=e._OrtCreateSessionOptions(s,!!u.enableCpuMemArena,!!u.enableMemPattern,c,!!u.enableProfiling,0,l,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error(\\\"Can't create session options\\\");return(null==t?void 0:t.executionProviders)&&((t,e,n)=>{for(const r of e){let e=\\\"string\\\"==typeof r?r:r.name;switch(e){case\\\"xnnpack\\\":e=\\\"XNNPACK\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(`not supported EP: ${e}`)}const o=(0,a.allocWasmString)(e,n);if(0!==(0,i.getInstance)()._OrtAppendExecutionProvider(t,o))throw new Error(`Can't append execution provider: ${e}`)}})(n,t.executionProviders,o),void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddSessionConfigEntry(n,i,u))throw new Error(`Can't set a session config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseSessionOptions(n),o.forEach(e._free),t}}},983:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.allocWasmString=void 0;const r=n(361);e.allocWasmString=(t,e)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(t)+1,i=n._malloc(a);return n.stringToUTF8(t,i,a),e.push(i),i}},349:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;const r=n(586),a=n(919),i=n(983),o=n(361);e.initOrt=(t,e)=>{const n=(0,o.getInstance)()._OrtInit(t,e);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=new Map;e.createSessionAllocate=t=>{const e=(0,o.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=(t,e)=>{const n=(0,o.getInstance)();let r=0,i=0,s=[];try{if([i,s]=(0,a.setSessionOptions)(e),r=n._OrtCreateSession(t[0],t[1],i),0===r)throw new Error(\\\"Can't create a session\\\")}finally{n._free(t[0]),n._OrtReleaseSessionOptions(i),s.forEach(n._free)}const c=n._OrtGetInputCount(r),l=n._OrtGetOutputCount(r),f=[],p=[],h=[],d=[];for(let t=0;t<c;t++){const e=n._OrtGetInputName(r,t);if(0===e)throw new Error(\\\"Can't get an input name\\\");p.push(e),f.push(n.UTF8ToString(e))}for(let t=0;t<l;t++){const e=n._OrtGetOutputName(r,t);if(0===e)throw new Error(\\\"Can't get an output name\\\");d.push(e),h.push(n.UTF8ToString(e))}return u.set(r,[r,p,d]),[r,f,h]},e.createSession=(t,n)=>{const r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=n[1],i=n[2];a.forEach(e._OrtFree),i.forEach(e._OrtFree),e._OrtReleaseSession(r),u.delete(t)};const s=t=>{switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${t}`)}},c=t=>{switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(`unsupported data type: ${t}`)}},l=t=>{switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}};e.run=(t,e,n,a,f)=>{const p=(0,o.getInstance)(),h=u.get(t);if(!h)throw new Error(\\\"invalid session id\\\");const d=h[0],y=h[1],b=h[2],m=e.length,g=a.length;let v=0,_=[];const w=[],O=[];try{[v,_]=(0,r.setRunOptions)(f);for(let t=0;t<m;t++){const e=n[t][0],r=n[t][1],a=n[t][2];let o,u;if(Array.isArray(a)){u=4*a.length,o=p._malloc(u),O.push(o);let t=o/4;for(let e=0;e<a.length;e++){if(\\\"string\\\"!=typeof a[e])throw new TypeError(`tensor data at index ${e} is not a string`);p.HEAPU32[t++]=(0,i.allocWasmString)(a[e],O)}}else u=a.byteLength,o=p._malloc(u),O.push(o),p.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);const c=p.stackSave(),l=p.stackAlloc(4*r.length);try{let t=l/4;r.forEach((e=>p.HEAP32[t++]=e));const n=p._OrtCreateTensor(s(e),o,u,l,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");w.push(n)}finally{p.stackRestore(c)}}const t=p.stackSave(),o=p.stackAlloc(4*m),u=p.stackAlloc(4*m),h=p.stackAlloc(4*g),A=p.stackAlloc(4*g);try{let n=o/4,r=u/4,i=h/4,s=A/4;for(let t=0;t<m;t++)p.HEAPU32[n++]=w[t],p.HEAPU32[r++]=y[e[t]];for(let t=0;t<g;t++)p.HEAPU32[i++]=0,p.HEAPU32[s++]=b[a[t]];let f=p._OrtRun(d,u,o,m,A,g,h,v);const _=[];if(0===f)for(let t=0;t<g;t++){const e=p.HEAPU32[h/4+t],n=p.stackSave(),r=p.stackAlloc(16);let a,i=0;try{if(f=p._OrtGetTensorData(e,r,r+4,r+8,r+12),0!==f)throw new Error(`Can't access output tensor data. error code = ${f}`);let t=r/4;const o=p.HEAPU32[t++];i=p.HEAPU32[t++];const u=p.HEAPU32[t++],s=p.HEAPU32[t++],h=[];for(let t=0;t<s;t++)h.push(p.HEAPU32[u/4+t]);p._OrtFree(u);const d=0===h.length?1:h.reduce(((t,e)=>t*e));if(a=c(o),\\\"string\\\"===a){const t=[];let e=i/4;for(let n=0;n<d;n++){const r=p.HEAPU32[e++],a=n===d-1?void 0:p.HEAPU32[e]-r;t.push(p.UTF8ToString(r,a))}_.push([a,h,t])}else{const t=new(l(a))(d);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(p.HEAPU8.subarray(i,i+t.byteLength)),_.push([a,h,t])}}finally{p.stackRestore(n),\\\"string\\\"===a&&i&&p._free(i),p._OrtReleaseTensor(e)}}if(0===f)return _;throw new Error(`failed to call OrtRun(). error code = ${f}.`)}finally{p.stackRestore(t)}}finally{w.forEach(p._OrtReleaseTensor),O.forEach(p._free),p._OrtReleaseRunOptions(v),_.forEach(p._free)}},e.endProfiling=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=e._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");e._OrtFree(a)},e.extractTransferableBuffers=t=>{const e=[];for(const n of t){const t=n[2];!Array.isArray(t)&&t.buffer&&e.push(t.buffer)}return e}},361:function(t,e,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(e,n);a&&!(\\\"get\\\"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,a)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),a=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return a(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;const u=i(n(17)),s=o(n(932)),c=n(474);let l,f=!1,p=!1,h=!1;const d=(t,e)=>e?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";e.initializeWebAssembly=async t=>{if(f)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const e=t.initTimeout,r=t.numThreads,a=t.simd,i=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}})(),o=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}})(),y=\\\"string\\\"==typeof t.wasmPaths?t.wasmPaths:void 0,b=d(!1,i),m=d(o,i),g=\\\"object\\\"==typeof t.wasmPaths?t.wasmPaths[m]:void 0;let v=!1;const _=[];if(e>0&&_.push(new Promise((t=>{setTimeout((()=>{v=!0,t()}),e)}))),_.push(new Promise(((t,e)=>{const r=i?c:s.default,a={locateFile:(t,e)=>i&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):t===b?null!=g?g:(null!=y?y:e)+m:e+t};if(i)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=u.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{const t=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([t],{type:\\\"text/javascript\\\"})}r(a).then((e=>{p=!1,f=!0,l=e,t()}),(t=>{p=!1,h=!0,e(t)}))}))),await Promise.race(_),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},e.getInstance=()=>{if(f&&l)return l;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},e.dispose=()=>{var t;!f||p||h||(p=!0,null===(t=l.PThread)||void 0===t||t.terminateAllThreads(),l=void 0,p=!1,f=!1,h=!0)}},154:t=>{\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var r=require(\\\"worker_threads\\\"),a=r.parentPort;a.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},113:t=>{\\\"use strict\\\";t.exports=require(\\\"crypto\\\")},147:t=>{\\\"use strict\\\";t.exports=require(\\\"fs\\\")},37:t=>{\\\"use strict\\\";t.exports=require(\\\"os\\\")},17:t=>{\\\"use strict\\\";t.exports=require(\\\"path\\\")},74:t=>{\\\"use strict\\\";t.exports=require(\\\"perf_hooks\\\")},267:t=>{\\\"use strict\\\";t.exports=require(\\\"worker_threads\\\")}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}(()=>{\\\"use strict\\\";const t=n(349),e=n(361);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":(0,e.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(t=>postMessage({type:\\\"init-wasm\\\",err:t})));break;case\\\"init-ort\\\":try{const{numThreads:e,loggingLevel:r}=n.data.in;(0,t.initOrt)(e,r),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{const{model:e}=n.data.in,r=(0,t.createSessionAllocate)(e);postMessage({type:\\\"create_allocate\\\",out:r})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{const{modeldata:e,options:r}=n.data.in,a=(0,t.createSessionFinalize)(e,r);postMessage({type:\\\"create_finalize\\\",out:a})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{const{model:e,options:r}=n.data.in,a=(0,t.createSession)(e,r);postMessage({type:\\\"create\\\",out:a})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{const e=n.data.in;(0,t.releaseSession)(e),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{const{sessionId:e,inputIndices:r,inputs:a,outputIndices:i,options:o}=n.data.in,u=(0,t.run)(e,r,a,i,o);postMessage({type:\\\"run\\\",out:u},(0,t.extractTransferableBuffers)(u))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{const e=n.data.in;(0,t.endProfiling)(e),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"onnxruntime-common\");","module.exports = require(\"crypto\");","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"names":["_scriptDir","t","document","currentScript","src","__filename","n","E","buffer","D","z","j","e","F","r","U","i","Y","a","I","u","o","c","ready","Promise","f","s","l","p","h","m","d","Object","assign","y","b","g","window","_","importScripts","v","process","versions","node","w","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","Uint8Array","readFile","argv","length","replace","slice","on","ot","J","exitCode","x","exit","inspect","console","error","global","Worker","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","S","log","bind","A","warn","writeSync","M","C","print","printErr","thisProgram","quit","wasmBinary","R","noExitRuntime","WebAssembly","rt","k","W","P","TextDecoder","H","decode","SharedArrayBuffer","subarray","String","fromCharCode","q","B","charCodeAt","G","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","N","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","V","L","X","Z","$","Q","preRun","shift","unshift","K","tt","nt","et","postMessage","cmd","arg","onAbort","RuntimeError","it","startsWith","at","ut","this","name","message","ct","pt","Vb","mc","ft","Cc","ac","push","Ub","start_routine","Ic","zc","pthread_ptr","$b","time","now","Nc","loaded","st","Vt","oc","onExit","lt","dt","bn","ht","yn","en","rn","Yb","qc","fc","Ec","Pc","receiveObjectTransfer","Gc","threadInitTLS","pc","setExitStatus","nc","values","terminate","splice","Tn","forEach","Fc","onmessage","data","Bc","targetThread","hn","Qc","transferList","Ht","queue","thread","threadId","text","alert","target","filename","lineno","urlOrBlob","mainScriptUrlOrBlob","wasmModule","yc","pop","mt","Mn","Cn","PThread","establishStackSpace","An","yt","bt","get","invokeEntryPoint","On","gt","_t","vt","wt","Tt","Ot","Zb","Sb","xc","bc","wc","Dc","rc","hc","uc","ic","kc","cc","sc","Atomics","add","Hc","sub","tc","vc","En","St","dn","At","Mt","Oc","Ct","xt","Rt","Et","kt","Dt","jt","Ft","Ut","Yt","It","Wt","Pt","store","wn","compareExchange","qt","Bt","Gt","zt","mn","Nt","toTimeString","match","Date","getFullYear","getTimezoneOffset","Math","max","Number","arguments","xn","vn","executeNotifiedProxyingQueue","hrtime","__performance_now_clock_drift","Lt","Xt","Zt","$t","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Jt","Qt","Kt","tn","nn","an","un","cn","fn","sn","toString","getMonth","getDate","getDay","Wb","Xb","getTime","setDate","setMonth","setFullYear","Lc","Kc","dc","jc","ec","Tb","Rc","Jc","Mc","RegExp","split","substring","floor","abs","includes","Array","set","ln","pn","ma","Sn","prototype","call","Rn","pa","Fa","gn","xa","Ma","ua","wa","oa","Ka","Ca","Ja","va","sa","La","ta","Ta","Ua","ya","Oa","za","setTimeout","Ea","Pa","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Qa","getSeconds","getMinutes","getHours","min","Ra","setTime","Aa","Ba","Sa","Ac","ra","Ia","copyWithin","hardwareConcurrency","Da","apply","qa","grow","Na","Ga","Ha","ga","na","lc","crypto","getRandomValues","randomBytes","ia","ja","aa","Pn","Dn","Hn","ca","In","kn","ba","Wn","jn","ha","ka","fa","Fn","da","Yn","ea","Un","la","asm","exports","sb","ub","Va","monitorRunDependencies","clearInterval","instance","module","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Wa","_OrtCreateSessionOptions","Xa","_OrtAppendExecutionProvider","Ya","_OrtAddSessionConfigEntry","Za","_OrtReleaseSessionOptions","_a","_OrtCreateSession","$a","_OrtReleaseSession","ab","_OrtGetInputCount","bb","_OrtGetOutputCount","cb","_OrtGetInputName","db","_OrtGetOutputName","eb","_OrtFree","fb","_OrtCreateTensor","gb","_OrtGetTensorData","hb","_OrtReleaseTensor","ib","_OrtCreateRunOptions","jb","_OrtAddRunConfigEntry","kb","_OrtReleaseRunOptions","lb","_OrtRun","mb","_OrtEndProfiling","nb","_pthread_self","ob","_malloc","pb","_free","qb","_fflush","rb","__emscripten_tls_init","___funcs_on_exit","tb","__emscripten_thread_init","vb","__emscripten_thread_crashed","wb","_n","_emscripten_run_in_main_runtime_thread_js","xb","__emscripten_proxy_execute_task_queue","yb","__emscripten_thread_free_data","zb","__emscripten_thread_exit","Ab","_setThrew","Bb","_emscripten_stack_set_limits","Cb","stackSave","Db","stackRestore","Eb","stackAlloc","Fb","___cxa_can_catch","Gb","___cxa_is_pointer_type","Hb","dynCall_j","Ib","dynCall_iiiiij","Jb","dynCall_jii","Kb","dynCall_viiiiij","Lb","dynCall_vjji","Mb","dynCall_viiijjjii","Nb","dynCall_iij","Ob","dynCall_ji","Pb","dynCall_iiiiiij","Qb","dynCall_iiij","Rb","qn","calledRun","onRuntimeInitialized","postRun","setStatus","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","ExitStatus","preInit","ortWasm","undefined","fs","ctx","params","offset","index","pending","reject","err","base64","string","charAt","ceil","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","args","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","__esModule","Guid","guid","TypeError","value","EMPTY","isGuid","validator","create","gen","createEmpty","parse","raw","count","out","random","equals","other","isEmpty","toJSON","Long","wasm","Instance","Module","low","high","unsigned","isLong","obj","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","result","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","bytes","fromBytesLE","fromBytesBE","valuesById","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","type","newBuffer","emptyArray","writer","hasOwnProperty","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","int32","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","object","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","version","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","finish","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","stack","pool","isNode","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","async","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","handler","OnnxruntimeWebAssemblySessionHandler","onnxjsBackend","registerBackend","wasmBackend","AttributeWithCacheKeyImpl","cacheKey","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","ortFbs","onnxruntime","experimental","fbs","Attribute","attributes","_attributes","Map","attr","getValue","getType","delete","getFloat","defaultValue","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","static","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","createSessionHandler","dispose","isBackend","init","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","CoordsGlslLib","GlslLib","super","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","width","height","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","coordsSnippet","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","packedSampler","valuesPerRow","squeezedShape","keptDims","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","newShape","squeezeShape","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","FunctionType","addDependency","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","root","has","EncodingGlslLib","encodeFloat32","decodeFloat32","encodeUint8","endianness","isLittleEndian","decodeUint8","ArrayBuffer","FragColorGlslLib","setFragColor","getColorAsFloat","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","GlslContext","glslRegistry","lib","libName","routinesInLib","currentNode","GlslLibRoutineNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","TopologicalSortGlslRoutines","returnOrderedNodes","samplers","uniformLines","sampler","arrayLength","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","run","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","group","channels","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","cast","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","concat","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scaleWidth","scaleHeight","scale","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","to","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","metadata","inputCount","fill","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","searchAxis","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","autoPad","dilations","kernelShape","pads","calculateOutputShape","activationFunction","applyActivation","getActivationSnippet","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","computeTotalPad","inDim","adj","kernel","dilation","outSize","distributePadding","totalPad","smallPad","convTranspose2d","adjustedAttributes","getAdjustedConvTransposeAttributes","convTranspose2DUnpacked","valueInit","inputChannelsPerGroup","createUnpackedConvTransposeProgramInfo","createUnpackedConvTransposeProgramInfoLoader","outputPadding","spatialRank","updateShape","calculateOutputShapeAndPads","newAttributes","activationAttributes","parseInternalActivationAttributes","featureMaps","adjustPads","batchSize","inputSpatialShape","outChannels","dilatedKernelShape","inputSpatialShapeWithPad","outputSpatialShape","conv2d","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","MIN_CLIP","MAX_CLIP","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","alpha","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","bias","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","reversedInputWH","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","validateInputsV2","createPadProgramInfo","validateInputsV11","attrubutes","generatePadAttributesFromInputs","integerData","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","getAdjustedPoolAttributesAndOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","hasDilations","adjustPoolAttributes","computePoolOutputShape","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","kw","sw","pwStart","pwEnd","dimW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","padCode","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getReshapedInputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","isCheapReshape","calculateReshapedDims","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","scales","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","logicalRowCount","sizeToDimension","featureCount","sizeFromDimension","computeSoftmax","isTransposeRequired","transposedInputShape","transposeAttribute","transposedInputs","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","validateInputsV13","sumProgramMetadata","createSumProgramInfo","sumLine","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","generateClipAttributesFromInputs","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","GlslPreprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","position","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","PreferLogicalStrategy","maxTextureSize","ProgramManager","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","WebGLInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","allocate","dataSize","dest","ALPHA","UNSIGNED_BYTE","_textureSize","byteOffset","isEmptyArray","parseAxisParam","assert","ax","isInt","sizeFromShape","sizeToSquarishShape","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","wh","computeTexture","logShape","squeezeResult","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","subscribers","createAndWaitForFence","tensorData","deleteTexture","_dataType","checkFn","delayFn","_counter","maxCounter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","canvas","OffscreenCanvas","createElement","createCanvas","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","getContext","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","isFramebufferReady","getActiveTexture","getParameter","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","RedFloat32DataEncoder","isRenderFloat32Supported","RGBAFloatDataEncoder","textureHalfFloatExtension","HALF_FLOAT_OES","Uint8DataEncoder","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","repeatedTry","fenceContext","createFence","pollFence","isFencePassed","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","KernelOp","getNodes","_ops","_starter","resolved","_values","getInputIndices","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","Graph","graphProto","GraphImpl","Value","_from","_to","tensorValueTypeFromProto","Node","_nodeProto","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","tensorDimsFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","_severity","_content","_category","severity","content","category","color","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","Event","startTime","endCallback","timer","waitForQueryAndGetTime","EventRecord","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","eventRes","endSync","checkTimer","toFixed","currentTime","previousPointer","started","load","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","flatbuffers","ByteBuffer","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","Shape","bb_pos","__init","readInt32","setPosition","SIZE_PREFIX_LENGTH","__offset","__indirect","__vector","__vector_len","builder","startObject","addFieldOffset","startVector","addOffset","endVector","numElems","endObject","startShape","addDim","endShape","DimensionValue","optionalEncoding","__string","valueOffset","denotationOffset","startDimension","addValue","addDenotation","endDimension","dimType","readInt8","UNKNOWN","readInt64","createLong","addFieldInt8","addFieldInt64","dimParamOffset","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","UNDEFINED","addFieldInt32","shapeOffset","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","MapType","keyType","TypeInfo","valueTypeOffset","startMapType","addKeyType","addValueType","endMapType","SequenceType","elemTypeOffset","startSequenceType","endSequenceType","EdgeEnd","readUint32","srcArgIndex","dstArgIndex","node_index","src_arg_index","dst_arg_index","prep","writeInt32","NodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","inputEdgesOffset","outputEdgesOffset","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","nameOffset","docStringOffset","domainOffset","opTypeOffset","executionProviderTypeOffset","inputsOffset","outputsOffset","attributesOffset","inputArgCountsOffset","addInt32","implicitInputsOffset","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","ValueInfo","typeOffset","startValueInfo","endValueInfo","readUint8","NONE","__union","startTypeInfo","endTypeInfo","OperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","dimsLength","rawDataLength","rawDataArray","stringDataLength","dimsOffset","addInt64","rawDataOffset","addInt8","stringDataOffset","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","SparseTensor","indices","valuesOffset","indicesOffset","startSparseTensor","addValues","addIndices","endSparseTensor","readFloat32","floatsLength","graphsLength","addFieldFloat32","sOffset","tOffset","gOffset","floatsOffset","addFloat32","intsOffset","stringsOffset","tensorsOffset","graphsOffset","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","initializersOffset","nodeArgsOffset","nodesOffset","nodeEdgesOffset","sparseInitializersOffset","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","Model","graphDocString","opsetImportOffset","producerNameOffset","producerVersionOffset","graphOffset","graphDocStringOffset","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","KernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","readUint64","kernelDefHashesLength","nodeIndicesOffset","kernelDefHashesOffset","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","SubGraphSessionState","graphId","sessionState","SessionState","graphIdOffset","sessionStateOffset","requiredField","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","kernelsOffset","subGraphSessionStatesOffset","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","__has_identifier","ortVersion","ortVersionOffset","modelOffset","startInferenceSession","addOrtVersion","addModel","endInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","Profiler","graphInputTypes","graphInputDims","_model","promisify","isView","modelProtoBlob","initializeOps","_executionPlan","ExecutionPlan","normalizeAndValidateInputs","outputTensors","execute","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","_strides","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","dataBuffer","createView","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","MatMulUtil","dimsA","dimsB","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","rest","valA","valB","isAScalar","isBScalar","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","isValidBroadcast","typeProto","getSizeFromDimensionRange","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","pad","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","determineSplit","numElementsAlongAxis","ReduceUtil","keepdims","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","filterDims","inSize","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","isProxy","proxyWorker","initWasmCallbacks","initOrtCallbacks","initializing","initialized","aborted","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSessionAllocate","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","path","getLogLevel","modelData","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","epName","epNameDataOffset","setExecutionProviders","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","ortWasmFactoryThreaded","getWasmFileName","useSimd","useThreads","flags","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","require","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","opt_initial_size","initial_size","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","voffset","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","table","field","table_start","vtable_start","elem_size","num_elems","alignment","createString","codePoint","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","vtable_offset","opt_encoding","ident","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}