{"version":3,"file":"ort.es5.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/@protobufjs/aspromise/index.js","webpack://ort/./node_modules/@protobufjs/base64/index.js","webpack://ort/./node_modules/@protobufjs/eventemitter/index.js","webpack://ort/./node_modules/@protobufjs/float/index.js","webpack://ort/./node_modules/@protobufjs/inquire/index.js","webpack://ort/./node_modules/@protobufjs/pool/index.js","webpack://ort/./node_modules/@protobufjs/utf8/index.js","webpack://ort/./node_modules/guid-typescript/dist/guid.js","webpack://ort/./node_modules/long/src/long.js","webpack://ort/./node_modules/onnx-proto/dist/onnx.js","webpack://ort/./node_modules/protobufjs/minimal.js","webpack://ort/./node_modules/protobufjs/src/index-minimal.js","webpack://ort/./node_modules/protobufjs/src/reader.js","webpack://ort/./node_modules/protobufjs/src/reader_buffer.js","webpack://ort/./node_modules/protobufjs/src/roots.js","webpack://ort/./node_modules/protobufjs/src/rpc.js","webpack://ort/./node_modules/protobufjs/src/rpc/service.js","webpack://ort/./node_modules/protobufjs/src/util/longbits.js","webpack://ort/./node_modules/protobufjs/src/util/minimal.js","webpack://ort/./node_modules/protobufjs/src/writer.js","webpack://ort/./node_modules/protobufjs/src/writer_buffer.js","webpack://ort/./lib/backend-onnxjs.ts","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/onnxjs/attribute-with-cache-key.ts","webpack://ort/./lib/onnxjs/attribute.ts","webpack://ort/./lib/onnxjs/backend.ts","webpack://ort/./lib/onnxjs/backends/backend-webgl.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/cast.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://ort/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/types.ts","webpack://ort/./lib/onnxjs/backends/webgl/utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://ort/./lib/onnxjs/execution-plan.ts","webpack://ort/./lib/onnxjs/graph.ts","webpack://ort/./lib/onnxjs/instrument.ts","webpack://ort/./lib/onnxjs/model.ts","webpack://ort/./lib/onnxjs/operators.ts","webpack://ort/./lib/onnxjs/opset.ts","webpack://ort/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://ort/./lib/onnxjs/session-handler.ts","webpack://ort/./lib/onnxjs/session.ts","webpack://ort/./lib/onnxjs/tensor.ts","webpack://ort/./lib/onnxjs/util.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/./node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/global","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\nif (isBigInt64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        const { height, width } = options;\n        const norm = options.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = 255;\n        }\n        else {\n            normMean = norm.mean;\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = 0;\n        }\n        else {\n            normBias = norm.bias;\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const offset = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(offset * 4) : new Float32Array(offset * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = offset, bTensorPointer = offset * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = offset * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = offset;\n            gTensorPointer = offset * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = offset;\n            rTensorPointer = offset * 2;\n        }\n        for (let i = 0; i < offset; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias) / normMean;\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias) / normMean;\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias) / normMean;\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias) / normMean;\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isURL = typeof (String) !== 'undefined' && (image instanceof String || typeof image === 'string');\n        let data;\n        let tensorConfig = {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.naturalHeight;\n                let width = image.naturalWidth;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                canvas.width = width;\n                canvas.height = height;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isURL) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        // using square brackets to avoid TS error - type 'never'\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        // using square brackets to avoid TS error - type 'never'\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toImageData(options) {\n        var _a, _b;\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            const width = this.dims[3];\n            const height = this.dims[2];\n            const channels = this.dims[1];\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const normMean = options !== undefined ? (((_a = options.norm) === null || _a === void 0 ? void 0 : _a.mean) !== undefined ? options.norm.mean : 255) : 255;\n            const normBias = options !== undefined ? (((_b = options.norm) === null || _b === void 0 ? void 0 : _b.bias) !== undefined ? options.norm.bias : 0) : 0;\n            const offset = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = offset, bTensorPointer = offset * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = offset;\n                bTensorPointer = offset * 2;\n                aTensorPointer = offset * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = offset;\n                bTensorPointer = offset * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = offset;\n                gTensorPointer = offset * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias) * normMean; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias) * normMean; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias) * normMean; // B value\n                image.data[aImagePointer] =\n                    aTensorPointer === -1 ? 255 : (this.data[aTensorPointer++] - normBias) * normMean; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","var _scriptDir,t=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(t){function n(){return E.buffer!=D&&z(E.buffer),j}function e(){return E.buffer!=D&&z(E.buffer),F}function r(){return E.buffer!=D&&z(E.buffer),U}function i(){return E.buffer!=D&&z(E.buffer),Y}function a(){return E.buffer!=D&&z(E.buffer),I}var u,o,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){o=t,c=n}));var f,s,l,p,h,m,d=Object.assign({},u),y=\"./this.program\",b=(t,n)=>{throw n},g=\"object\"==typeof window,_=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(t){return u.locateFile?u.locateFile(t,T):T+t}if(v){let t;T=_?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=()=>{h||(p=require(\"fs\"),h=require(\"path\"))},f=function(t,n){return m(),t=h.normalize(t),p.readFileSync(t,n?void 0:\"utf8\")},l=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),s=(t,n,e)=>{m(),t=h.normalize(t),p.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(t){if(!(t instanceof ot))throw t})),process.on(\"unhandledRejection\",(function(t){throw t})),b=(t,n)=>{if(J())throw process.exitCode=t,n;n instanceof ot||x(\"exiting due to exception: \"+n),process.exit(t)},u.inspect=function(){return\"[Emscripten Module object]\"};try{t=require(\"worker_threads\")}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=t.Worker}else(g||_)&&(_?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",v||(f=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},_&&(l=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),s=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\"GET\",t,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var S=console.log.bind(console),A=console.warn.bind(console);v&&(m(),S=t=>p.writeSync(1,t+\"\\n\"),A=t=>p.writeSync(2,t+\"\\n\"));var M,C=u.print||S,x=u.printErr||A;Object.assign(u,d),d=null,u.thisProgram&&(y=u.thisProgram),u.quit&&(b=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&rt(\"no native wasm support detected\");var E,k,D,j,F,U,Y,I,W=!1,P=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function H(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&P)return P.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,e):t.subarray(n,e));for(r=\"\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var u=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|u:(7&i)<<18|a<<12|u<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function q(t,n){return(t>>>=0)?H(e(),t,n):\"\"}function B(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var u=t.charCodeAt(a);if(55296<=u&&57343>=u&&(u=65536+((1023&u)<<10)|1023&t.charCodeAt(++a)),127>=u){if(e>=r)break;n[e++>>>0]=u}else{if(2047>=u){if(e+1>=r)break;n[e++>>>0]=192|u>>6}else{if(65535>=u){if(e+2>=r)break;n[e++>>>0]=224|u>>12}else{if(e+3>=r)break;n[e++>>>0]=240|u>>18,n[e++>>>0]=128|u>>12&63}n[e++>>>0]=128|u>>6&63}n[e++>>>0]=128|63&u}}return n[e>>>0]=0,e-i}function G(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function z(t){D=t,u.HEAP8=j=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=U=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=Y=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=I=new Float64Array(t)}w&&(D=u.buffer);var N=u.INITIAL_MEMORY||16777216;if(w)E=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)E=u.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:N/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");E&&(D=E.buffer),N=D.byteLength,z(D);var V,L=[],X=[],Z=[],$=[];function J(){return R||!1}function Q(){var t=u.preRun.shift();L.unshift(t)}var K,tt=0,nt=null,et=null;function rt(t){throw w?postMessage({cmd:\"onAbort\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\"Aborted(\"+t+\")\"),W=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),c(t),t}function it(){return K.startsWith(\"data:application/octet-stream;base64,\")}function at(){var t=K;try{if(t==K&&M)return new Uint8Array(M);if(l)return l(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){rt(t)}}K=\"ort-wasm-threaded.wasm\",it()||(K=O(K));var ut={};function ot(t){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+t+\")\",this.status=t}function ct(t){(t=pt.Vb[t])||rt(),pt.mc(t)}function ft(t){var n=pt.Cc();if(!n)return 6;pt.ac.push(n),pt.Vb[t.Ub]=n,n.Ub=t.Ub;var e={cmd:\"run\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return n.$b=()=>{e.time=performance.now(),n.postMessage(e,t.Nc)},n.loaded&&(n.$b(),delete n.$b),0}function st(t){if(w)return Vt(1,1,t);J()||(pt.oc(),u.onExit&&u.onExit(t),W=!0),b(t,new ot(t))}function lt(t,n){if(!n&&w)throw dt(t),\"unwind\";J()||w||(bn(),ht(Z),yn(0),en[1].length&&rn(1,10),en[2].length&&rn(2,10),pt.oc()),st(t)}var pt={Yb:[],ac:[],qc:[],Vb:{},fc:function(){w&&pt.Ec()},Pc:function(){},Ec:function(){pt.receiveObjectTransfer=pt.Gc,pt.threadInitTLS=pt.pc,pt.setExitStatus=pt.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(pt.Vb))pt.mc(t);for(t of pt.Yb)t.terminate();pt.Yb=[]},mc:function(t){var n=t.Ub;delete pt.Vb[n],pt.Yb.push(t),pt.ac.splice(pt.ac.indexOf(t),1),t.Ub=0,Tn(n)},Gc:function(){},pc:function(){pt.qc.forEach((t=>t()))},Fc:function(t,n){t.onmessage=e=>{var r=(e=e.data).cmd;if(t.Ub&&(pt.Bc=t.Ub),e.targetThread&&e.targetThread!=hn()){var i=pt.Vb[e.Qc];i?i.postMessage(e,e.transferList):x('Internal error! Worker sent a message \"'+r+'\" to target pthread '+e.targetThread+\", but that thread no longer exists!\")}else\"processProxyingQueue\"===r?Ht(e.queue):\"spawnThread\"===r?ft(e):\"cleanupThread\"===r?ct(e.thread):\"killThread\"===r?(e=e.thread,r=pt.Vb[e],delete pt.Vb[e],r.terminate(),Tn(e),pt.ac.splice(pt.ac.indexOf(r),1),r.Ub=0):\"cancelThread\"===r?pt.Vb[e.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(t.loaded=!0,n&&n(t),t.$b&&(t.$b(),delete t.$b)):\"print\"===r?C(\"Thread \"+e.threadId+\": \"+e.text):\"printErr\"===r?x(\"Thread \"+e.threadId+\": \"+e.text):\"alert\"===r?alert(\"Thread \"+e.threadId+\": \"+e.text):\"setimmediate\"===e.target?t.postMessage(e):\"onAbort\"===r?u.onAbort&&u.onAbort(e.arg):r&&x(\"worker sent an unknown command \"+r);pt.Bc=void 0},t.onerror=t=>{throw x(\"worker sent an error! \"+t.filename+\":\"+t.lineno+\": \"+t.message),t},v&&(t.on(\"message\",(function(n){t.onmessage({data:n})})),t.on(\"error\",(function(n){t.onerror(n)})),t.on(\"detachedExit\",(function(){}))),t.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:E,wasmModule:k})},yc:function(){var t=O(\"ort-wasm-threaded.worker.js\");pt.Yb.push(new Worker(t))},Cc:function(){return 0==pt.Yb.length&&(pt.yc(),pt.Fc(pt.Yb[0])),pt.Yb.pop()}};function ht(t){for(;0<t.length;)t.shift()(u)}function mt(t){var n=Mn();return t=t(),Cn(n),t}function dt(t){if(w)return Vt(2,0,t);try{lt(t)}catch(t){t instanceof ot||\"unwind\"==t||b(1,t)}}u.PThread=pt,u.establishStackSpace=function(){var t=hn(),n=r()[t+44>>2>>>0];t=r()[t+48>>2>>>0],An(n,n-t),Cn(n)};var yt=[];function bt(t){var n=yt[t];return n||(t>=yt.length&&(yt.length=t+1),yt[t]=n=V.get(t)),n}u.invokeEntryPoint=function(t,n){t=bt(t)(n),J()?pt.nc(t):On(t)};var gt,_t,vt=[],wt=0,Tt=0;function Ot(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){r()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,n()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=n()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,n()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=n()[this.Sb+13>>0>>>0]},this.fc=function(t,n){this.cc(0),this.xc(t),this.wc(n),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(r(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(r(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(En(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function St(t){return dn(new Ot(t).Sb)}function At(t,n,e,r){return w?Vt(3,1,t,n,e,r):Mt(t,n,e,r)}function Mt(t,n,e,r){if(\"undefined\"==typeof SharedArrayBuffer)return x(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var i=[];return w&&0===i.length?At(t,n,e,r):(t={Ic:e,Ub:t,zc:r,Nc:i},w?(t.Oc=\"spawnThread\",postMessage(t,i),0):ft(t))}function Ct(t,n,e){return w?Vt(4,1,t,n,e):0}function xt(t,n){if(w)return Vt(5,1,t,n)}function Rt(t,n){if(w)return Vt(6,1,t,n)}function Et(t,n,e){if(w)return Vt(7,1,t,n,e)}function kt(t,n,e){return w?Vt(8,1,t,n,e):0}function Dt(t,n){if(w)return Vt(9,1,t,n)}function jt(t,n,e){if(w)return Vt(10,1,t,n,e)}function Ft(t,n,e,r){if(w)return Vt(11,1,t,n,e,r)}function Ut(t,n,e,r){if(w)return Vt(12,1,t,n,e,r)}function Yt(t,n,e,r){if(w)return Vt(13,1,t,n,e,r)}function It(t){if(w)return Vt(14,1,t)}function Wt(t,n){if(w)return Vt(15,1,t,n)}function Pt(t,n,e){if(w)return Vt(16,1,t,n,e)}function Ht(t){Atomics.store(r(),t>>2,1),hn()&&wn(t),Atomics.compareExchange(r(),t>>2,1,0)}function qt(t){return i()[t>>>2]+4294967296*r()[t+4>>>2]}function Bt(t,n,e,r,i,a){return w?Vt(17,1,t,n,e,r,i,a):-52}function Gt(t,n,e,r,i,a){if(w)return Vt(18,1,t,n,e,r,i,a)}function zt(t){var e=G(t)+1,r=mn(e);return r&&B(t,n(),r,e),r}function Nt(t,n,e){function a(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}if(w)return Vt(19,1,t,n,e);var u=(new Date).getFullYear(),o=new Date(u,0,1),c=new Date(u,6,1);u=o.getTimezoneOffset();var f=c.getTimezoneOffset(),s=Math.max(u,f);r()[t>>2>>>0]=60*s,r()[n>>2>>>0]=Number(u!=f),t=a(o),n=a(c),t=zt(t),n=zt(n),f<u?(i()[e>>2>>>0]=t,i()[e+4>>2>>>0]=n):(i()[e>>2>>>0]=n,i()[e+4>>2>>>0]=t)}function Vt(t,n){var e=arguments.length-2,r=arguments;return mt((()=>{for(var i=xn(8*e),u=i>>3,o=0;o<e;o++){var c=r[2+o];a()[u+o>>>0]=c}return vn(t,e,i,n)}))}u.executeNotifiedProxyingQueue=Ht,_t=v?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:w?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Lt,Xt=[],Zt={};function $t(){if(!Lt){var t,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:y||\"./this.program\"};for(t in Zt)void 0===Zt[t]?delete n[t]:n[t]=Zt[t];var e=[];for(t in n)e.push(t+\"=\"+n[t]);Lt=e}return Lt}function Jt(t,e){if(w)return Vt(20,1,t,e);var r=0;return $t().forEach((function(a,u){var o=e+r;for(u=i()[t+4*u>>2>>>0]=o,o=0;o<a.length;++o)n()[u++>>0>>>0]=a.charCodeAt(o);n()[u>>0>>>0]=0,r+=a.length+1})),0}function Qt(t,n){if(w)return Vt(21,1,t,n);var e=$t();i()[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),i()[n>>2>>>0]=r,0}function Kt(t){return w?Vt(22,1,t):52}function tn(t,n,e,r){return w?Vt(23,1,t,n,e,r):52}function nn(t,n,e,r,i){return w?Vt(24,1,t,n,e,r,i):70}var en=[null,[],[]];function rn(t,n){var e=en[t];0===n||10===n?((1===t?C:x)(H(e,0)),e.length=0):e.push(n)}function an(t,n,r,a){if(w)return Vt(25,1,t,n,r,a);for(var u=0,o=0;o<r;o++){var c=i()[n>>2>>>0],f=i()[n+4>>2>>>0];n+=8;for(var s=0;s<f;s++)rn(t,e()[c+s>>>0]);u+=f}return i()[a>>2>>>0]=u,0}var un=0;function on(t){return 0==t%4&&(0!=t%100||0==t%400)}var cn=[31,29,31,30,31,30,31,31,30,31,30,31],fn=[31,28,31,30,31,30,31,31,30,31,30,31];function sn(t,e,i,a){function u(t,n,e){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<n;)t=e[0]+t;return t}function o(t,n){return u(t,n,\"0\")}function c(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function f(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function s(t){var n=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(on(t.getFullYear())?cn:fn)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=f(new Date(t.getFullYear(),0,4)),e=f(e),0>=c(n,t)?0>=c(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=r()[a+40>>2>>>0];for(var p in a={Lc:r()[a>>2>>>0],Kc:r()[a+4>>2>>>0],dc:r()[a+8>>2>>>0],jc:r()[a+12>>2>>>0],ec:r()[a+16>>2>>>0],Xb:r()[a+20>>2>>>0],Tb:r()[a+24>>2>>>0],Wb:r()[a+28>>2>>>0],Rc:r()[a+32>>2>>>0],Jc:r()[a+36>>2>>>0],Mc:l?q(l):\"\"},i=q(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(p,\"g\"),l[p]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(t){return h[t.Tb].substring(0,3)},\"%A\":function(t){return h[t.Tb]},\"%b\":function(t){return m[t.ec].substring(0,3)},\"%B\":function(t){return m[t.ec]},\"%C\":function(t){return o((t.Xb+1900)/100|0,2)},\"%d\":function(t){return o(t.jc,2)},\"%e\":function(t){return u(t.jc,2,\" \")},\"%g\":function(t){return s(t).toString().substring(2)},\"%G\":function(t){return s(t)},\"%H\":function(t){return o(t.dc,2)},\"%I\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),o(t,2)},\"%j\":function(t){for(var n=0,e=0;e<=t.ec-1;n+=(on(t.Xb+1900)?cn:fn)[e++]);return o(t.jc+n,3)},\"%m\":function(t){return o(t.ec+1,2)},\"%M\":function(t){return o(t.Kc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(t){return 0<=t.dc&&12>t.dc?\"AM\":\"PM\"},\"%S\":function(t){return o(t.Lc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(t){return t.Tb||7},\"%U\":function(t){return o(Math.floor((t.Wb+7-t.Tb)/7),2)},\"%V\":function(t){var n=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&n++,n)53==n&&(4==(e=(t.Tb+371-t.Wb)%7)||3==e&&on(t.Xb)||(n=1));else{n=52;var e=(t.Tb+7-t.Wb-1)%7;(4==e||5==e&&on(t.Xb%400-1))&&n++}return o(n,2)},\"%w\":function(t){return t.Tb},\"%W\":function(t){return o(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\"%y\":function(t){return(t.Xb+1900).toString().substring(2)},\"%Y\":function(t){return t.Xb+1900},\"%z\":function(t){var n=0<=(t=t.Jc);return t=Math.abs(t)/60,(n?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":function(t){return t.Mc},\"%%\":function(){return\"%\"}},i=i.replace(/%%/g,\"\\0\\0\"),l)i.includes(p)&&(i=i.replace(new RegExp(p,\"g\"),l[p](a)));return p=function(t){var n=Array(G(t)+1);return B(t,n,0,n.length),n}(i=i.replace(/\\0\\0/g,\"%\")),p.length>e?0:(function(t,e){n().set(t,e>>>0)}(p,t),p.length-1)}pt.fc();var ln=[null,st,dt,At,Ct,xt,Rt,Et,kt,Dt,jt,Ft,Ut,Yt,It,Wt,Pt,Bt,Gt,Nt,Jt,Qt,Kt,tn,nn,an],pn={b:function(t){return mn(t+24)+24},n:function(t){return(t=new Ot(t)).uc()||(t.hc(!0),wt--),t.ic(!1),vt.push(t),t.sc(),t.vc()},ma:function(t){throw x(\"Unexpected exception thrown, this is not properly supported - aborting\"),W=!0,t},x:function(){Sn(0);var t=vt.pop();if(t.Hc()&&!t.kc()){var n=t.Dc();n&&bt(n)(t.Zb),St(t.Zb)}Tt=0},e:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},l:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},h:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},t:St,M:function(){var t=vt.pop();t||rt(\"no exception to throw\");var n=t.Zb;throw t.kc()||(vt.push(t),t.ic(!0),t.hc(!1),wt++),Tt=n,n},c:function(t,n,e){throw new Ot(t).fc(n,e),Tt=t,wt++,t},pa:function(){return wt},Fa:function(t){gn(t,!_,1,!g),pt.pc()},T:function(t){w?postMessage({cmd:\"cleanupThread\",thread:t}):ct(t)},xa:Mt,j:function(t){throw Tt||(Tt=t),t},H:Ct,Ma:xt,ua:Rt,wa:Et,oa:kt,Ka:Dt,Ca:jt,Ja:Ft,V:Ut,va:Yt,sa:It,La:Wt,ta:Pt,Ta:function(){},X:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ua:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,e,r){if(t==n)setTimeout((()=>Ht(r)));else if(w)postMessage({targetThread:t,cmd:\"processProxyingQueue\",queue:r});else{if(!(t=pt.Vb[t]))return;t.postMessage({cmd:\"processProxyingQueue\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getUTCSeconds(),r()[n+4>>2>>>0]=t.getUTCMinutes(),r()[n+8>>2>>>0]=t.getUTCHours(),r()[n+12>>2>>>0]=t.getUTCDate(),r()[n+16>>2>>>0]=t.getUTCMonth(),r()[n+20>>2>>>0]=t.getUTCFullYear()-1900,r()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getSeconds(),r()[n+4>>2>>>0]=t.getMinutes(),r()[n+8>>2>>>0]=t.getHours(),r()[n+12>>2>>>0]=t.getDate(),r()[n+16>>2>>>0]=t.getMonth(),r()[n+20>>2>>>0]=t.getFullYear()-1900,r()[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1),i=(t.getTime()-e.getTime())/864e5|0;r()[n+28>>2>>>0]=i,r()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(i!=(e=e.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(e,i)),r()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(r()[t+20>>2>>>0]+1900,r()[t+16>>2>>>0],r()[t+12>>2>>>0],r()[t+8>>2>>>0],r()[t+4>>2>>>0],r()[t>>2>>>0],0),e=r()[t+32>>2>>>0],i=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),u=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),c=Math.min(o,u);return 0>e?r()[t+32>>2>>>0]=Number(u!=o&&c==i):0<e!=(c==i)&&(u=Math.max(o,u),n.setTime(n.getTime()+6e4*((0<e?c:u)-i))),r()[t+24>>2>>>0]=n.getDay(),e=(n.getTime()-a.getTime())/864e5|0,r()[t+28>>2>>>0]=e,r()[t>>2>>>0]=n.getSeconds(),r()[t+4>>2>>>0]=n.getMinutes(),r()[t+8>>2>>>0]=n.getHours(),r()[t+12>>2>>>0]=n.getDate(),r()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(n,e,r){t.Ac||(t.Ac=!0,Nt(n,e,r))},y:function(){rt(\"\")},U:function(){if(!v&&!_){var t=\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\";gt||(gt={}),gt[t]||(gt[t]=1,v&&(t=\"warning: \"+t),x(t))}},ra:function(){return 4294901760},B:_t,Ia:function(t,n,r){e().copyWithin(t>>>0,n>>>0,n+r>>>0)},F:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Da:function(t,n,e){Xt.length=n,e>>=3;for(var r=0;r<n;r++)Xt[r]=a()[e+r>>>0];return(0>t?ut[-t-1]:ln[t]).apply(null,Xt)},qa:function(t){var n=e().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var r=1;4>=r;r*=2){var i=n*(1+.2/r);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{E.grow(a-D.byteLength+65535>>>16),z(E.buffer);var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},Na:function(){throw\"unwind\"},Ga:Jt,Ha:Qt,J:lt,I:Kt,S:tn,ga:nn,R:an,d:function(){return un},na:function t(e,r){t.lc||(t.lc=function(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(v)try{var n=require(\"crypto\");return()=>n.randomBytes(1)[0]}catch(t){}return()=>rt(\"randomDevice\")}());for(var i=0;i<r;i++)n()[e+i>>0>>>0]=t.lc();return 0},ia:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ja:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},K:function(t){var n=Mn();try{return bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},f:function(t,n){var e=Mn();try{return bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},P:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},Q:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},k:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},p:function(t,n,e,r){var i=Mn();try{return bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},q:function(t,n,e,r,i){var a=Mn();try{return bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},N:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},s:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},w:function(t,n,e,r,i,a,u){var o=Mn();try{return bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},L:function(t,n,e,r,i,a,u,o){var c=Mn();try{return bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},E:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{return bt(t)(n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},aa:function(t,n,e,r,i,a,u,o){var c=Mn();try{return Pn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},_:function(t,n,e,r,i,a,u){var o=Mn();try{return Dn(t,n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},Z:function(t,n,e,r,i){var a=Mn();try{return Hn(t,n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},ca:function(t,n,e,r){var i=Mn();try{return In(t,n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},$:function(t){var n=Mn();try{return kn(t)}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},ba:function(t,n){var e=Mn();try{return Wn(t,n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},Y:function(t,n,e){var r=Mn();try{return jn(t,n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},g:function(t){var n=Mn();try{bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},r:function(t,n){var e=Mn();try{bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},i:function(t,n,e){var r=Mn();try{bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ha:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},m:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},v:function(t,n,e,r,i){var a=Mn();try{bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},u:function(t,n,e,r,i,a){var u=Mn();try{bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},O:function(t,n,e,r,i,a,u){var o=Mn();try{bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},A:function(t,n,e,r,i,a,u,o){var c=Mn();try{bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},ka:function(t,n,e,r,i,a,u,o,c){var f=Mn();try{bt(t)(n,e,r,i,a,u,o,c)}catch(t){if(Cn(f),t!==t+0)throw t;Sn(1,0)}},C:function(t,n,e,r,i,a,u,o,c,f,s){var l=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s)}catch(t){if(Cn(l),t!==t+0)throw t;Sn(1,0)}},D:function(t,n,e,r,i,a,u,o,c,f,s,l,p,h,m,d){var y=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s,l,p,h,m,d)}catch(t){if(Cn(y),t!==t+0)throw t;Sn(1,0)}},fa:function(t,n,e,r,i,a,u,o){var c=Mn();try{Fn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},da:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{Yn(t,n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},ea:function(t,n,e,r,i,a){var u=Mn();try{Un(t,n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},o:function(t){return t},a:E||u.wasmMemory,G:function(t){un=t},la:sn,z:function(t,n,e,r){return sn(t,n,e,r)}};!function(){function t(t,n){u.asm=t.exports,pt.qc.push(u.asm.sb),V=u.asm.ub,X.unshift(u.asm.Va),k=n,w||(tt--,u.monitorRunDependencies&&u.monitorRunDependencies(tt),0==tt&&(null!==nt&&(clearInterval(nt),nt=null),et&&(t=et,et=null,t())))}function n(n){t(n.instance,n.module)}function e(t){return function(){if(!M&&(g||_)){if(\"function\"==typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return t.arrayBuffer()})).catch((function(){return at()}));if(s)return new Promise((function(t,n){s(K,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return at()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\"failed to asynchronously prepare wasm: \"+t),rt(t)}))}var r={a:pn};if(w||(tt++,u.monitorRunDependencies&&u.monitorRunDependencies(tt)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\"Module.instantiateWasm callback failed with error: \"+t),!1}(M||\"function\"!=typeof WebAssembly.instantiateStreaming||it()||K.startsWith(\"file://\")||v||\"function\"!=typeof fetch?e(n):fetch(K,{credentials:\"same-origin\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(n,(function(t){return x(\"wasm streaming compile failed: \"+t),x(\"falling back to ArrayBuffer instantiation\"),e(n)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var hn=u._pthread_self=function(){return(hn=u._pthread_self=u.asm.ob).apply(null,arguments)},mn=u._malloc=function(){return(mn=u._malloc=u.asm.pb).apply(null,arguments)},dn=u._free=function(){return(dn=u._free=u.asm.qb).apply(null,arguments)},yn=u._fflush=function(){return(yn=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var bn=u.___funcs_on_exit=function(){return(bn=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},gn=u.__emscripten_thread_init=function(){return(gn=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var _n,vn=u._emscripten_run_in_main_runtime_thread_js=function(){return(vn=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},wn=u.__emscripten_proxy_execute_task_queue=function(){return(wn=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Tn=u.__emscripten_thread_free_data=function(){return(Tn=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},On=u.__emscripten_thread_exit=function(){return(On=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Sn=u._setThrew=function(){return(Sn=u._setThrew=u.asm.Bb).apply(null,arguments)},An=u._emscripten_stack_set_limits=function(){return(An=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Mn=u.stackSave=function(){return(Mn=u.stackSave=u.asm.Db).apply(null,arguments)},Cn=u.stackRestore=function(){return(Cn=u.stackRestore=u.asm.Eb).apply(null,arguments)},xn=u.stackAlloc=function(){return(xn=u.stackAlloc=u.asm.Fb).apply(null,arguments)},Rn=u.___cxa_can_catch=function(){return(Rn=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},En=u.___cxa_is_pointer_type=function(){return(En=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},kn=u.dynCall_j=function(){return(kn=u.dynCall_j=u.asm.Ib).apply(null,arguments)},Dn=u.dynCall_iiiiij=function(){return(Dn=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},jn=u.dynCall_jii=function(){return(jn=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Fn=u.dynCall_viiiiij=function(){return(Fn=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Un=u.dynCall_vjji=function(){return(Un=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Yn=u.dynCall_viiijjjii=function(){return(Yn=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},In=u.dynCall_iij=function(){return(In=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},Wn=u.dynCall_ji=function(){return(Wn=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},Pn=u.dynCall_iiiiiij=function(){return(Pn=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Hn=u.dynCall_iiij=function(){return(Hn=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function qn(){function t(){if(!_n&&(_n=!0,u.calledRun=!0,!W)&&(w||ht(X),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!w)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();$.unshift(t)}ht($)}}if(!(0<tt))if(w)o(u),w||ht(X),postMessage({cmd:\"loaded\"});else{if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)Q();ht(L),0<tt||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),t()}),1)):t())}}if(u.UTF8ToString=q,u.stringToUTF8=function(t,n,r){return B(t,e(),n,r)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=J,u.wasmMemory=E,u.stackSave=Mn,u.stackRestore=Cn,u.stackAlloc=xn,u.ExitStatus=ot,u.PThread=pt,et=function t(){_n||qn(),_n||(et=t)},u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return qn(),t.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t:\"function\"==typeof define&&define.amd?define([],(function(){return t})):\"object\"==typeof exports&&(exports.ortWasmThreaded=t);\n","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var ca=Object.assign({},d),da=\"./this.program\",ea=(a,b)=>{throw b;},fa=\"object\"==typeof window,m=\"function\"==typeof importScripts,p=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,q=\"\",ha,r,v,fs,y,ia;\r\nif(p)q=m?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",ia=()=>{y||(fs=require(\"fs\"),y=require(\"path\"))},ha=function(a,b){ia();a=y.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},v=a=>{a=ha(a,!0);a.buffer||(a=new Uint8Array(a));return a},r=(a,b,c)=>{ia();a=y.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(da=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){if(!(a instanceof ja))throw a;}),process.on(\"unhandledRejection\",\r\nfunction(a){throw a;}),ea=(a,b)=>{if(noExitRuntime||0<ka)throw process.exitCode=a,b;b instanceof ja||z(\"exiting due to exception: \"+b);process.exit(a)},d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||m)m?q=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\",ha=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);\r\nreturn b.responseText},m&&(v=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),r=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var la=d.print||console.log.bind(console),z=d.printErr||console.warn.bind(console);Object.assign(d,ca);ca=null;d.thisProgram&&(da=d.thisProgram);d.quit&&(ea=d.quit);\r\nvar A;d.wasmBinary&&(A=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&B(\"no native wasm support detected\");var ma,D=!1,na=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction oa(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&na)return na.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|h);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|k:(f&7)<<18|h<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function pa(a,b){return(a>>>=0)?oa(G,a,b):\"\"}\r\nfunction qa(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var l=a.charCodeAt(++h);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\r\nfunction ra(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var sa,H,G,I,J;function ta(){var a=ma.buffer;sa=a;d.HEAP8=H=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=I=new Int32Array(a);d.HEAPU8=G=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=J=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var ua,va=[],wa=[],xa=[],ya=[],ka=0;\r\nfunction za(){var a=d.preRun.shift();va.unshift(a)}var K=0,Aa=null,L=null;function B(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";z(a);D=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function Ba(){return N.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"ort-wasm.wasm\";if(!Ba()){var Ca=N;N=d.locateFile?d.locateFile(Ca,q):q+Ca}\r\nfunction Da(){var a=N;try{if(a==N&&A)return new Uint8Array(A);if(v)return v(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){B(b)}}\r\nfunction Ea(){if(!A&&(fa||m)){if(\"function\"==typeof fetch&&!N.startsWith(\"file://\"))return fetch(N,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+N+\"'\";return a.arrayBuffer()}).catch(function(){return Da()});if(r)return new Promise(function(a,b){r(N,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Da()})}function ja(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}\r\nfunction O(a){for(;0<a.length;)a.shift()(d)}var P=[],Q=0,R=0;\r\nfunction S(a){this.Db=a;this.zb=a-24;this.Ub=function(b){J[this.zb+4>>2>>>0]=b};this.Eb=function(){return J[this.zb+4>>2>>>0]};this.Sb=function(b){J[this.zb+8>>2>>>0]=b};this.Wb=function(){return J[this.zb+8>>2>>>0]};this.Tb=function(){I[this.zb>>2>>>0]=0};this.Ib=function(b){H[this.zb+12>>0>>>0]=b?1:0};this.Pb=function(){return 0!=H[this.zb+12>>0>>>0]};this.Jb=function(b){H[this.zb+13>>0>>>0]=b?1:0};this.Lb=function(){return 0!=H[this.zb+13>>0>>>0]};this.Rb=function(b,c){this.Fb(0);this.Ub(b);this.Sb(c);\r\nthis.Tb();this.Ib(!1);this.Jb(!1)};this.Nb=function(){I[this.zb>>2>>>0]+=1};this.Xb=function(){var b=I[this.zb>>2>>>0];I[this.zb>>2>>>0]=b-1;return 1===b};this.Fb=function(b){J[this.zb+16>>2>>>0]=b};this.Ob=function(){return J[this.zb+16>>2>>>0]};this.Qb=function(){if(Fa(this.Eb()))return J[this.Db>>2>>>0];var b=this.Ob();return 0!==b?b:this.Db}}function Ga(a){return Ha((new S(a)).zb)}var T=[];function U(a){var b=T[a];b||(a>=T.length&&(T.length=a+1),T[a]=b=ua.get(a));return b}\r\nfunction Ia(a){var b=ra(a)+1,c=Ja(b);c&&qa(a,H,c,b);return c}function Ka(a,b,c){function e(n){return(n=n.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?n[1]:\"GMT\"}var f=(new Date).getFullYear(),h=new Date(f,0,1),k=new Date(f,6,1);f=h.getTimezoneOffset();var l=k.getTimezoneOffset();I[a>>2>>>0]=60*Math.max(f,l);I[b>>2>>>0]=Number(f!=l);a=e(h);b=e(k);a=Ia(a);b=Ia(b);l<f?(J[c>>2>>>0]=a,J[c+4>>2>>>0]=b):(J[c>>2>>>0]=b,J[c+4>>2>>>0]=a)}function La(a,b,c){La.Vb||(La.Vb=!0,Ka(a,b,c))}var Ma={};\r\nfunction Na(){if(!Oa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:da||\"./this.program\"},b;for(b in Ma)void 0===Ma[b]?delete a[b]:a[b]=Ma[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Oa=c}return Oa}var Oa,Pa=[null,[],[]];function Qa(a,b){var c=Pa[a];0===b||10===b?((1===a?la:z)(oa(c,0)),c.length=0):c.push(b)}var V=0;\r\nfunction Ra(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var a=new Uint8Array(1);return()=>{crypto.getRandomValues(a);return a[0]}}if(p)try{var b=require(\"crypto\");return()=>b.randomBytes(1)[0]}catch(c){}return()=>B(\"randomDevice\")}function W(a,b){W.Mb||(W.Mb=Ra());for(var c=0;c<b;c++)H[a+c>>0>>>0]=W.Mb();return 0}function Sa(a){return 0===a%4&&(0!==a%100||0===a%400)}var Ta=[31,29,31,30,31,30,31,31,30,31,30,31],Ua=[31,28,31,30,31,30,31,31,30,31,30,31];\r\nfunction Va(a){var b=Array(ra(a)+1);qa(a,b,0,b.length);return b}\r\nfunction Wa(a,b,c,e){function f(g,u,w){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<u;)g=w[0]+g;return g}function h(g,u){return f(g,u,\"0\")}function k(g,u){function w(M){return 0>M?-1:0<M?1:0}var F;0===(F=w(g.getFullYear()-u.getFullYear()))&&0===(F=w(g.getMonth()-u.getMonth()))&&(F=w(g.getDate()-u.getDate()));return F}function l(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function n(g){var u=g.Bb;for(g=new Date((new Date(g.Cb+1900,0,1)).getTime());0<u;){var w=g.getMonth(),F=(Sa(g.getFullYear())?Ta:Ua)[w];if(u>F-g.getDate())u-=F-g.getDate()+1,g.setDate(1),11>w?g.setMonth(w+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+u);break}}w=new Date(g.getFullYear()+1,0,4);u=l(new Date(g.getFullYear(),\r\n0,4));w=l(w);return 0>=k(u,g)?0>=k(w,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var t=I[e+40>>2>>>0];e={$b:I[e>>2>>>0],Zb:I[e+4>>2>>>0],Gb:I[e+8>>2>>>0],Kb:I[e+12>>2>>>0],Hb:I[e+16>>2>>>0],Cb:I[e+20>>2>>>0],Ab:I[e+24>>2>>>0],Bb:I[e+28>>2>>>0],bc:I[e+32>>2>>>0],Yb:I[e+36>>2>>>0],ac:t?pa(t):\"\"};c=pa(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\r\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var x in t)c=c.replace(new RegExp(x,\"g\"),t[x]);var E=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),C=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":function(g){return E[g.Ab].substring(0,3)},\"%A\":function(g){return E[g.Ab]},\"%b\":function(g){return C[g.Hb].substring(0,\r\n3)},\"%B\":function(g){return C[g.Hb]},\"%C\":function(g){return h((g.Cb+1900)/100|0,2)},\"%d\":function(g){return h(g.Kb,2)},\"%e\":function(g){return f(g.Kb,2,\" \")},\"%g\":function(g){return n(g).toString().substring(2)},\"%G\":function(g){return n(g)},\"%H\":function(g){return h(g.Gb,2)},\"%I\":function(g){g=g.Gb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){for(var u=0,w=0;w<=g.Hb-1;u+=(Sa(g.Cb+1900)?Ta:Ua)[w++]);return h(g.Kb+u,3)},\"%m\":function(g){return h(g.Hb+1,2)},\"%M\":function(g){return h(g.Zb,\r\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.Gb&&12>g.Gb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.$b,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.Ab||7},\"%U\":function(g){return h(Math.floor((g.Bb+7-g.Ab)/7),2)},\"%V\":function(g){var u=Math.floor((g.Bb+7-(g.Ab+6)%7)/7);2>=(g.Ab+371-g.Bb-2)%7&&u++;if(u)53==u&&(w=(g.Ab+371-g.Bb)%7,4==w||3==w&&Sa(g.Cb)||(u=1));else{u=52;var w=(g.Ab+7-g.Bb-1)%7;(4==w||5==w&&Sa(g.Cb%400-1))&&u++}return h(u,2)},\"%w\":function(g){return g.Ab},\"%W\":function(g){return h(Math.floor((g.Bb+\r\n7-(g.Ab+6)%7)/7),2)},\"%y\":function(g){return(g.Cb+1900).toString().substring(2)},\"%Y\":function(g){return g.Cb+1900},\"%z\":function(g){g=g.Yb;var u=0<=g;g=Math.abs(g)/60;return(u?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.ac},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(x in t)c.includes(x)&&(c=c.replace(new RegExp(x,\"g\"),t[x](e)));c=c.replace(/\\0\\0/g,\"%\");x=Va(c);if(x.length>b)return 0;H.set(x,a>>>0);return x.length-1}\r\nvar Jb={a:function(a){return Ja(a+24)+24},m:function(a){a=new S(a);a.Pb()||(a.Ib(!0),Q--);a.Jb(!1);P.push(a);a.Nb();return a.Qb()},ia:function(a){z(\"Unexpected exception thrown, this is not properly supported - aborting\");D=!0;throw a;},w:function(){X(0);var a=P.pop();if(a.Xb()&&!a.Lb()){var b=a.Wb();b&&U(b)(a.Db);Ga(a.Db)}R=0},d:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];\r\nif(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},k:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},g:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;\r\nif(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},s:Ga,L:function(){var a=P.pop();a||B(\"no exception to throw\");var b=a.Db;a.Lb()||(P.push(a),a.Jb(!0),a.Ib(!1),Q++);R=b;throw b;},b:function(a,b,c){(new S(a)).Rb(b,c);R=a;Q++;throw a;},la:function(){return Q},i:function(a){R||(R=a);throw a;},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},\r\nHa:function(){},Ja:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ia:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getUTCSeconds();I[b+4>>2>>>0]=a.getUTCMinutes();I[b+8>>2>>>0]=a.getUTCHours();I[b+12>>2>>>\r\n0]=a.getUTCDate();I[b+16>>2>>>0]=a.getUTCMonth();I[b+20>>2>>>0]=a.getUTCFullYear()-1900;I[b+24>>2>>>0]=a.getUTCDay();I[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Ea:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getSeconds();I[b+4>>2>>>0]=a.getMinutes();I[b+8>>2>>>0]=a.getHours();I[b+12>>2>>>0]=a.getDate();I[b+16>>2>>>0]=a.getMonth();I[b+20>>2>>>0]=a.getFullYear()-1900;I[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);I[b+\r\n28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;I[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();I[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Fa:function(a){var b=new Date(I[a+20>>2>>>0]+1900,I[a+16>>2>>>0],I[a+12>>2>>>0],I[a+8>>2>>>0],I[a+4>>2>>>0],I[a>>2>>>0],0),c=I[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),\r\nl=Math.min(k,h);0>c?I[a+32>>2>>>0]=Number(h!=k&&l==e):0<c!=(l==e)&&(h=Math.max(k,h),b.setTime(b.getTime()+6E4*((0<c?l:h)-e)));I[a+24>>2>>>0]=b.getDay();I[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;I[a>>2>>>0]=b.getSeconds();I[a+4>>2>>>0]=b.getMinutes();I[a+8>>2>>>0]=b.getHours();I[a+12>>2>>>0]=b.getDate();I[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},sa:function(){return-52},ta:function(){},Ga:La,B:function(){B(\"\")},ma:function(){return 4294901760},I:p?()=>{var a=process.hrtime();return 1E3*\r\na[0]+a[1]/1E6}:()=>performance.now(),xa:function(a,b,c){G.copyWithin(a>>>0,b>>>0,b+c>>>0)},G:function(a){var b=G.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,e+(65536-e%65536)%65536);a:{try{ma.grow(f-sa.byteLength+65535>>>16);ta();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},va:function(a,b){var c=0;Na().forEach(function(e,f){var h=b+c;f=J[a+4*f>>2>>>0]=h;for(h=0;h<e.length;++h)H[f++>>\r\n0>>>0]=e.charCodeAt(h);H[f>>0>>>0]=0;c+=e.length+1});return 0},wa:function(a,b){var c=Na();J[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});J[b>>2>>>0]=e;return 0},ba:function(a){noExitRuntime||0<ka||(Ya(),O(xa),Za(0),Pa[1].length&&Qa(1,10),Pa[2].length&&Qa(2,10));if(!(noExitRuntime||0<ka)){if(d.onExit)d.onExit(a);D=!0}ea(a,new ja(a))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(a,b,c,e){for(var f=0,h=0;h<c;h++){var k=J[b>>2>>>0],l=J[b+4>>\r\n2>>>0];b+=8;for(var n=0;n<l;n++)Qa(a,G[k+n>>>0]);f+=l}J[e>>2>>>0]=f;return 0},c:function(){return V},ja:W,ea:$a,fa:ab,J:bb,e:cb,N:db,O:eb,j:fb,o:gb,p:hb,M:ib,r:jb,v:kb,K:lb,D:mb,X:nb,V:ob,U:pb,Z:qb,W:rb,Y:sb,T:tb,f:ub,q:vb,h:wb,da:xb,l:yb,t:zb,u:Ab,x:Bb,z:Cb,ga:Db,A:Eb,C:Fb,aa:Gb,_:Hb,$:Ib,n:function(a){return a},F:function(a){V=a},ha:Wa,y:function(a,b,c,e){return Wa(a,b,c,e)}};\r\n(function(){function a(f){d.asm=f.exports;ma=d.asm.Ka;ta();ua=d.asm.ib;wa.unshift(d.asm.La);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==Aa&&(clearInterval(Aa),Aa=null),L&&(f=L,L=null,f()))}function b(f){a(f.instance)}function c(f){return Ea().then(function(h){return WebAssembly.instantiate(h,e)}).then(function(h){return h}).then(f,function(h){z(\"failed to asynchronously prepare wasm: \"+h);B(h)})}var e={a:Jb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\r\na)}catch(f){return z(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return A||\"function\"!=typeof WebAssembly.instantiateStreaming||Ba()||N.startsWith(\"file://\")||p||\"function\"!=typeof fetch?c(b):fetch(N,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(h){z(\"wasm streaming compile failed: \"+h);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.La).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Ma).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Na).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.Oa).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Pa).apply(null,arguments)};\r\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Qa).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ra).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Sa).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ta).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ua).apply(null,arguments)};\r\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Va).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Wa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Xa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ya).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Za).apply(null,arguments)};\r\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm._a).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.$a).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.ab).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.bb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.cb).apply(null,arguments)};\r\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.db).apply(null,arguments)};\r\nvar Ja=d._malloc=function(){return(Ja=d._malloc=d.asm.eb).apply(null,arguments)},Ha=d._free=function(){return(Ha=d._free=d.asm.fb).apply(null,arguments)},Za=d._fflush=function(){return(Za=d._fflush=d.asm.gb).apply(null,arguments)},Ya=d.___funcs_on_exit=function(){return(Ya=d.___funcs_on_exit=d.asm.hb).apply(null,arguments)},X=d._setThrew=function(){return(X=d._setThrew=d.asm.jb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.kb).apply(null,arguments)},Z=d.stackRestore=\r\nfunction(){return(Z=d.stackRestore=d.asm.lb).apply(null,arguments)},Kb=d.stackAlloc=function(){return(Kb=d.stackAlloc=d.asm.mb).apply(null,arguments)},Xa=d.___cxa_can_catch=function(){return(Xa=d.___cxa_can_catch=d.asm.nb).apply(null,arguments)},Fa=d.___cxa_is_pointer_type=function(){return(Fa=d.___cxa_is_pointer_type=d.asm.ob).apply(null,arguments)},Lb=d.dynCall_j=function(){return(Lb=d.dynCall_j=d.asm.pb).apply(null,arguments)},Mb=d.dynCall_iiiiij=function(){return(Mb=d.dynCall_iiiiij=d.asm.qb).apply(null,\r\narguments)},Nb=d.dynCall_jii=function(){return(Nb=d.dynCall_jii=d.asm.rb).apply(null,arguments)},Ob=d.dynCall_viiiiij=function(){return(Ob=d.dynCall_viiiiij=d.asm.sb).apply(null,arguments)},Pb=d.dynCall_vjji=function(){return(Pb=d.dynCall_vjji=d.asm.tb).apply(null,arguments)},Qb=d.dynCall_viiijjjii=function(){return(Qb=d.dynCall_viiijjjii=d.asm.ub).apply(null,arguments)},Rb=d.dynCall_iij=function(){return(Rb=d.dynCall_iij=d.asm.vb).apply(null,arguments)},Sb=d.dynCall_ji=function(){return(Sb=d.dynCall_ji=\r\nd.asm.wb).apply(null,arguments)},Tb=d.dynCall_iiiiiij=function(){return(Tb=d.dynCall_iiiiiij=d.asm.xb).apply(null,arguments)},Ub=d.dynCall_iiij=function(){return(Ub=d.dynCall_iiij=d.asm.yb).apply(null,arguments)};function cb(a,b){var c=Y();try{return U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function vb(a,b){var c=Y();try{U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function wb(a,b,c){var e=Y();try{U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nfunction fb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function gb(a,b,c,e){var f=Y();try{return U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function kb(a,b,c,e,f,h,k){var l=Y();try{return U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function ub(a){var b=Y();try{U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function jb(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction hb(a,b,c,e,f){var h=Y();try{return U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function yb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Ab(a,b,c,e,f,h){var k=Y();try{U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function zb(a,b,c,e,f){var h=Y();try{U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function Bb(a,b,c,e,f,h,k){var l=Y();try{U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}\r\nfunction Cb(a,b,c,e,f,h,k,l){var n=Y();try{U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function eb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function db(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function Db(a,b,c,e,f,h,k,l,n){var t=Y();try{U(a)(b,c,e,f,h,k,l,n)}catch(x){Z(t);if(x!==x+0)throw x;X(1,0)}}function ib(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction lb(a,b,c,e,f,h,k,l){var n=Y();try{return U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function mb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{return U(a)(b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function Eb(a,b,c,e,f,h,k,l,n,t,x){var E=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x)}catch(C){Z(E);if(C!==C+0)throw C;X(1,0)}}function Fb(a,b,c,e,f,h,k,l,n,t,x,E,C,g,u,w){var F=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x,E,C,g,u,w)}catch(M){Z(F);if(M!==M+0)throw M;X(1,0)}}\r\nfunction bb(a){var b=Y();try{return U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ab(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function $a(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function xb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Gb(a,b,c,e,f,h,k,l){var n=Y();try{Ob(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}\r\nfunction Ib(a,b,c,e,f,h){var k=Y();try{Pb(a,b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function Hb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{Qb(a,b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function qb(a,b,c,e){var f=Y();try{return Rb(a,b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function sb(a,b){var c=Y();try{return Sb(a,b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}\r\nfunction nb(a,b,c,e,f,h,k,l){var n=Y();try{return Tb(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function rb(a){var b=Y();try{return Lb(a)}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ob(a,b,c,e,f,h,k){var l=Y();try{return Mb(a,b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function pb(a,b,c,e,f){var h=Y();try{return Ub(a,b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function tb(a,b,c){var e=Y();try{return Nb(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nd.UTF8ToString=pa;d.stringToUTF8=function(a,b,c){return qa(a,G,b,c)};d.lengthBytesUTF8=ra;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=Kb;var Vb;L=function Wb(){Vb||Xb();Vb||(L=Wb)};\r\nfunction Xb(){function a(){if(!Vb&&(Vb=!0,d.calledRun=!0,!D)){O(wa);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();ya.unshift(b)}O(ya)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)za();O(va);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\r\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();Xb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.14.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var t={474:function(t,e,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){function e(){return j.buffer!=D&&N(j.buffer),P}function r(){return j.buffer!=D&&N(j.buffer),U}function a(){return j.buffer!=D&&N(j.buffer),F}function i(){return j.buffer!=D&&N(j.buffer),I}function o(){return j.buffer!=D&&N(j.buffer),W}var u,c,s;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,e){c=t,s=e}));var f,l,p,h,d,y,b=Object.assign({},u),m=\\\"./this.program\\\",v=(t,e)=>{throw e},g=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,_=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=u.ENVIRONMENT_IS_PTHREAD||!1,S=\\\"\\\";function A(t){return u.locateFile?u.locateFile(t,S):S+t}if(_){let e;S=w?n(908).dirname(S)+\\\"/\\\":\\\"//\\\",y=()=>{d||(h=n(384),d=n(908))},f=function(t,e){return y(),t=d.normalize(t),h.readFileSync(t,e?void 0:\\\"utf8\\\")},p=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),l=(t,e,n)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof ct))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),v=(t,e)=>{if($())throw process.exitCode=t,e;e instanceof ct||x(\\\"exiting due to exception: \\\"+e),process.exit(t)},u.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{e=n(925)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}n.g.Worker=e.Worker}else(g||w)&&(w?S=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(S=document.currentScript.src),_scriptDir&&(S=_scriptDir),S=0!==S.indexOf(\\\"blob:\\\")?S.substr(0,S.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",_||(f=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},w&&(p=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),l=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));_&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var T=console.log.bind(console),E=console.warn.bind(console);_&&(y(),T=t=>h.writeSync(1,t+\\\"\\\\n\\\"),E=t=>h.writeSync(2,t+\\\"\\\\n\\\"));var M,C=u.print||T,x=u.printErr||E;Object.assign(u,b),b=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(v=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&at(\\\"no native wasm support detected\\\");var j,k,D,P,U,F,I,W,H=!1,L=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function z(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&L)return L.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(t,e){return(t>>>=0)?z(r(),t,e):\\\"\\\"}function B(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function G(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=F=new Int32Array(t),u.HEAPU8=U=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}O&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(O)j=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)j=u.wasmMemory;else if(!((j=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),_&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");j&&(D=j.buffer),V=D.byteLength,N(D);var q,X=[],J=[],Z=[],Q=[];function $(){return R||!1}function K(){var t=u.preRun.shift();X.unshift(t)}var tt,et=0,nt=null,rt=null;function at(t){throw O?postMessage({cmd:\\\"onAbort\\\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\\\"Aborted(\\\"+t+\\\")\\\"),H=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),s(t),t}function it(){return tt.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ot(){var t=tt;try{if(t==tt&&M)return new Uint8Array(M);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){at(t)}}tt=\\\"ort-wasm-threaded.wasm\\\",it()||(tt=A(tt));var ut={};function ct(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function st(t){(t=ht.Vb[t])||at(),ht.mc(t)}function ft(t){var e=ht.Cc();if(!e)return 6;ht.ac.push(e),ht.Vb[t.Ub]=e,e.Ub=t.Ub;var n={cmd:\\\"run\\\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return e.$b=()=>{n.time=performance.now(),e.postMessage(n,t.Nc)},e.loaded&&(e.$b(),delete e.$b),0}function lt(t){if(O)return qt(1,1,t);$()||(ht.oc(),u.onExit&&u.onExit(t),H=!0),v(t,new ct(t))}function pt(t,e){if(!e&&O)throw bt(t),\\\"unwind\\\";$()||O||(me(),dt(Z),be(0),re[1].length&&ae(1,10),re[2].length&&ae(2,10),ht.oc()),lt(t)}var ht={Yb:[],ac:[],qc:[],Vb:{},fc:function(){O&&ht.Ec()},Pc:function(){},Ec:function(){ht.receiveObjectTransfer=ht.Gc,ht.threadInitTLS=ht.pc,ht.setExitStatus=ht.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(ht.Vb))ht.mc(t);for(t of ht.Yb)t.terminate();ht.Yb=[]},mc:function(t){var e=t.Ub;delete ht.Vb[e],ht.Yb.push(t),ht.ac.splice(ht.ac.indexOf(t),1),t.Ub=0,Oe(e)},Gc:function(){},pc:function(){ht.qc.forEach((t=>t()))},Fc:function(t,e){t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ub&&(ht.Bc=t.Ub),n.targetThread&&n.targetThread!=he()){var a=ht.Vb[n.Qc];a?a.postMessage(n,n.transferList):x('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"processProxyingQueue\\\"===r?zt(n.queue):\\\"spawnThread\\\"===r?ft(n):\\\"cleanupThread\\\"===r?st(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=ht.Vb[n],delete ht.Vb[n],r.terminate(),Oe(n),ht.ac.splice(ht.ac.indexOf(r),1),r.Ub=0):\\\"cancelThread\\\"===r?ht.Vb[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,e&&e(t),t.$b&&(t.$b(),delete t.$b)):\\\"print\\\"===r?C(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?x(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?t.postMessage(n):\\\"onAbort\\\"===r?u.onAbort&&u.onAbort(n.arg):r&&x(\\\"worker sent an unknown command \\\"+r);ht.Bc=void 0},t.onerror=t=>{throw x(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},_&&(t.on(\\\"message\\\",(function(e){t.onmessage({data:e})})),t.on(\\\"error\\\",(function(e){t.onerror(e)})),t.on(\\\"detachedExit\\\",(function(){}))),t.postMessage({cmd:\\\"load\\\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:j,wasmModule:k})},yc:function(){var t=A(\\\"ort-wasm-threaded.worker.js\\\");ht.Yb.push(new Worker(t))},Cc:function(){return 0==ht.Yb.length&&(ht.yc(),ht.Fc(ht.Yb[0])),ht.Yb.pop()}};function dt(t){for(;0<t.length;)t.shift()(u)}function yt(t){var e=Ee();return t=t(),Me(e),t}function bt(t){if(O)return qt(2,0,t);try{pt(t)}catch(t){t instanceof ct||\\\"unwind\\\"==t||v(1,t)}}u.PThread=ht,u.establishStackSpace=function(){var t=he(),e=a()[t+44>>2>>>0];t=a()[t+48>>2>>>0],Te(e,e-t),Me(e)};var mt=[];function vt(t){var e=mt[t];return e||(t>=mt.length&&(mt.length=t+1),mt[t]=e=q.get(t)),e}u.invokeEntryPoint=function(t,e){t=vt(t)(e),$()?ht.nc(t):Se(t)};var gt,wt,_t=[],Ot=0,St=0;function At(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){a()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,e()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=e()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,e()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=e()[this.Sb+13>>0>>>0]},this.fc=function(t,e){this.cc(0),this.xc(t),this.wc(e),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(a(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(a(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(Re(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function Tt(t){return ye(new At(t).Sb)}function Et(t,e,n,r){return O?qt(3,1,t,e,n,r):Mt(t,e,n,r)}function Mt(t,e,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return x(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];return O&&0===a.length?Et(t,e,n,r):(t={Ic:n,Ub:t,zc:r,Nc:a},O?(t.Oc=\\\"spawnThread\\\",postMessage(t,a),0):ft(t))}function Ct(t,e,n){return O?qt(4,1,t,e,n):0}function xt(t,e){if(O)return qt(5,1,t,e)}function Rt(t,e){if(O)return qt(6,1,t,e)}function jt(t,e,n){if(O)return qt(7,1,t,e,n)}function kt(t,e,n){return O?qt(8,1,t,e,n):0}function Dt(t,e){if(O)return qt(9,1,t,e)}function Pt(t,e,n){if(O)return qt(10,1,t,e,n)}function Ut(t,e,n,r){if(O)return qt(11,1,t,e,n,r)}function Ft(t,e,n,r){if(O)return qt(12,1,t,e,n,r)}function It(t,e,n,r){if(O)return qt(13,1,t,e,n,r)}function Wt(t){if(O)return qt(14,1,t)}function Ht(t,e){if(O)return qt(15,1,t,e)}function Lt(t,e,n){if(O)return qt(16,1,t,e,n)}function zt(t){Atomics.store(a(),t>>2,1),he()&&_e(t),Atomics.compareExchange(a(),t>>2,1,0)}function Yt(t){return i()[t>>>2]+4294967296*a()[t+4>>>2]}function Bt(t,e,n,r,a,i){return O?qt(17,1,t,e,n,r,a,i):-52}function Gt(t,e,n,r,a,i){if(O)return qt(18,1,t,e,n,r,a,i)}function Nt(t){var n=G(t)+1,r=de(n);return r&&B(t,e(),r,n),r}function Vt(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}if(O)return qt(19,1,t,e,n);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var s=c.getTimezoneOffset(),f=Math.max(o,s);a()[t>>2>>>0]=60*f,a()[e>>2>>>0]=Number(o!=s),t=r(u),e=r(c),t=Nt(t),e=Nt(e),s<o?(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e):(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t)}function qt(t,e){var n=arguments.length-2,r=arguments;return yt((()=>{for(var a=Ce(8*n),i=a>>3,u=0;u<n;u++){var c=r[2+u];o()[i+u>>>0]=c}return we(t,n,a,e)}))}u.executeNotifiedProxyingQueue=zt,wt=_?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:O?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Xt,Jt=[],Zt={};function Qt(){if(!Xt){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(t in Zt)void 0===Zt[t]?delete e[t]:e[t]=Zt[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);Xt=n}return Xt}function $t(t,n){if(O)return qt(20,1,t,n);var r=0;return Qt().forEach((function(a,o){var u=n+r;for(o=i()[t+4*o>>2>>>0]=u,u=0;u<a.length;++u)e()[o++>>0>>>0]=a.charCodeAt(u);e()[o>>0>>>0]=0,r+=a.length+1})),0}function Kt(t,e){if(O)return qt(21,1,t,e);var n=Qt();i()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),i()[e>>2>>>0]=r,0}function te(t){return O?qt(22,1,t):52}function ee(t,e,n,r){return O?qt(23,1,t,e,n,r):52}function ne(t,e,n,r,a){return O?qt(24,1,t,e,n,r,a):70}var re=[null,[],[]];function ae(t,e){var n=re[t];0===e||10===e?((1===t?C:x)(z(n,0)),n.length=0):n.push(e)}function ie(t,e,n,a){if(O)return qt(25,1,t,e,n,a);for(var o=0,u=0;u<n;u++){var c=i()[e>>2>>>0],s=i()[e+4>>2>>>0];e+=8;for(var f=0;f<s;f++)ae(t,r()[c+f>>>0]);o+=s}return i()[a>>2>>>0]=o,0}var oe=0;function ue(t){return 0==t%4&&(0!=t%100||0==t%400)}var ce=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function fe(t,n,r,i){function o(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function u(t,e){return o(t,e,\\\"0\\\")}function c(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function f(t){var e=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(ue(t.getFullYear())?ce:se)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=c(e,t)?0>=c(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=a()[i+40>>2>>>0];for(var p in i={Lc:a()[i>>2>>>0],Kc:a()[i+4>>2>>>0],dc:a()[i+8>>2>>>0],jc:a()[i+12>>2>>>0],ec:a()[i+16>>2>>>0],Xb:a()[i+20>>2>>>0],Tb:a()[i+24>>2>>>0],Wb:a()[i+28>>2>>>0],Rc:a()[i+32>>2>>>0],Jc:a()[i+36>>2>>>0],Mc:l?Y(l):\\\"\\\"},r=Y(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),l[p]);var h=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in l={\\\"%a\\\":function(t){return h[t.Tb].substring(0,3)},\\\"%A\\\":function(t){return h[t.Tb]},\\\"%b\\\":function(t){return d[t.ec].substring(0,3)},\\\"%B\\\":function(t){return d[t.ec]},\\\"%C\\\":function(t){return u((t.Xb+1900)/100|0,2)},\\\"%d\\\":function(t){return u(t.jc,2)},\\\"%e\\\":function(t){return o(t.jc,2,\\\" \\\")},\\\"%g\\\":function(t){return f(t).toString().substring(2)},\\\"%G\\\":function(t){return f(t)},\\\"%H\\\":function(t){return u(t.dc,2)},\\\"%I\\\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),u(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.ec-1;e+=(ue(t.Xb+1900)?ce:se)[n++]);return u(t.jc+e,3)},\\\"%m\\\":function(t){return u(t.ec+1,2)},\\\"%M\\\":function(t){return u(t.Kc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.dc&&12>t.dc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return u(t.Lc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Tb||7},\\\"%U\\\":function(t){return u(Math.floor((t.Wb+7-t.Tb)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&e++,e)53==e&&(4==(n=(t.Tb+371-t.Wb)%7)||3==n&&ue(t.Xb)||(e=1));else{e=52;var n=(t.Tb+7-t.Wb-1)%7;(4==n||5==n&&ue(t.Xb%400-1))&&e++}return u(e,2)},\\\"%w\\\":function(t){return t.Tb},\\\"%W\\\":function(t){return u(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Xb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Xb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Jc);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.Mc},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),l)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),l[p](i)));return p=function(t){var e=Array(G(t)+1);return B(t,e,0,e.length),e}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}ht.fc();var le=[null,lt,bt,Et,Ct,xt,Rt,jt,kt,Dt,Pt,Ut,Ft,It,Wt,Ht,Lt,Bt,Gt,Vt,$t,Kt,te,ee,ne,ie],pe={b:function(t){return de(t+24)+24},n:function(t){return(t=new At(t)).uc()||(t.hc(!0),Ot--),t.ic(!1),_t.push(t),t.sc(),t.vc()},ma:function(t){throw x(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),H=!0,t},x:function(){Ae(0);var t=_t.pop();if(t.Hc()&&!t.kc()){var e=t.Dc();e&&vt(e)(t.Zb),Tt(t.Zb)}St=0},e:function(){var t=St;if(!t)return oe=0;var e=new At(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},l:function(){var t=St;if(!t)return oe=0;var e=new At(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},h:function(){var t=St;if(!t)return oe=0;var e=new At(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},t:Tt,M:function(){var t=_t.pop();t||at(\\\"no exception to throw\\\");var e=t.Zb;throw t.kc()||(_t.push(t),t.ic(!0),t.hc(!1),Ot++),St=e,e},c:function(t,e,n){throw new At(t).fc(e,n),St=t,Ot++,t},pa:function(){return Ot},Fa:function(t){ve(t,!w,1,!g),ht.pc()},T:function(t){O?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):st(t)},xa:Mt,j:function(t){throw St||(St=t),t},H:Ct,Ma:xt,ua:Rt,wa:jt,oa:kt,Ka:Dt,Ca:Pt,Ja:Ut,V:Ft,va:It,sa:Wt,La:Ht,ta:Lt,Ta:function(){},X:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ua:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,e,n,r){if(t==e)setTimeout((()=>zt(r)));else if(O)postMessage({targetThread:t,cmd:\\\"processProxyingQueue\\\",queue:r});else{if(!(t=ht.Vb[t]))return;t.postMessage({cmd:\\\"processProxyingQueue\\\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getUTCSeconds(),a()[e+4>>2>>>0]=t.getUTCMinutes(),a()[e+8>>2>>>0]=t.getUTCHours(),a()[e+12>>2>>>0]=t.getUTCDate(),a()[e+16>>2>>>0]=t.getUTCMonth(),a()[e+20>>2>>>0]=t.getUTCFullYear()-1900,a()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[e+28>>2>>>0]=t},Qa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getFullYear()-1900,a()[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1),r=(t.getTime()-n.getTime())/864e5|0;a()[e+28>>2>>>0]=r,a()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(n=n.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(n,r)),a()[e+32>>2>>>0]=t},Ra:function(t){var e=new Date(a()[t+20>>2>>>0]+1900,a()[t+16>>2>>>0],a()[t+12>>2>>>0],a()[t+8>>2>>>0],a()[t+4>>2>>>0],a()[t>>2>>>0],0),n=a()[t+32>>2>>>0],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),o=new Date(e.getFullYear(),6,1).getTimezoneOffset(),u=i.getTimezoneOffset(),c=Math.min(u,o);return 0>n?a()[t+32>>2>>>0]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),e.setTime(e.getTime()+6e4*((0<n?c:o)-r))),a()[t+24>>2>>>0]=e.getDay(),n=(e.getTime()-i.getTime())/864e5|0,a()[t+28>>2>>>0]=n,a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(e,n,r){t.Ac||(t.Ac=!0,Vt(e,n,r))},y:function(){at(\\\"\\\")},U:function(){if(!_&&!w){var t=\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\";gt||(gt={}),gt[t]||(gt[t]=1,_&&(t=\\\"warning: \\\"+t),x(t))}},ra:function(){return 4294901760},B:wt,Ia:function(t,e,n){r().copyWithin(t>>>0,e>>>0,e+n>>>0)},F:function(){return _?n(993).cpus().length:navigator.hardwareConcurrency},Da:function(t,e,n){Jt.length=e,n>>=3;for(var r=0;r<e;r++)Jt[r]=o()[n+r>>>0];return(0>t?ut[-t-1]:le[t]).apply(null,Jt)},qa:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var a=e*(1+.2/n);a=Math.min(a,t+100663296);var i=Math;a=Math.max(t,a),i=i.min.call(i,4294901760,a+(65536-a%65536)%65536);t:{try{j.grow(i-D.byteLength+65535>>>16),N(j.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw\\\"unwind\\\"},Ga:$t,Ha:Kt,J:pt,I:te,S:ee,ga:ne,R:ie,d:function(){return oe},na:function t(r,a){t.lc||(t.lc=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(_)try{var e=n(Object(function(){var t=new Error(\\\"Cannot find module 'crypto'\\\");throw t.code=\\\"MODULE_NOT_FOUND\\\",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>at(\\\"randomDevice\\\")}());for(var i=0;i<a;i++)e()[r+i>>0>>>0]=t.lc();return 0},ia:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},ja:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},K:function(t){var e=Ee();try{return vt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Ae(1,0)}},f:function(t,e){var n=Ee();try{return vt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Ae(1,0)}},P:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},Q:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},k:function(t,e,n){var r=Ee();try{return vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},p:function(t,e,n,r){var a=Ee();try{return vt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},q:function(t,e,n,r,a){var i=Ee();try{return vt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Ae(1,0)}},N:function(t,e,n,r,a,i){var o=Ee();try{return vt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},s:function(t,e,n,r,a,i){var o=Ee();try{return vt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},w:function(t,e,n,r,a,i,o){var u=Ee();try{return vt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Ae(1,0)}},L:function(t,e,n,r,a,i,o,u){var c=Ee();try{return vt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},E:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=Ee();try{return vt(t)(e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(Me(p),t!==t+0)throw t;Ae(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=Ee();try{return He(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},_:function(t,e,n,r,a,i,o){var u=Ee();try{return ke(t,e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Ae(1,0)}},Z:function(t,e,n,r,a){var i=Ee();try{return Le(t,e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Ae(1,0)}},ca:function(t,e,n,r){var a=Ee();try{return Ie(t,e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},$:function(t){var e=Ee();try{return je(t)}catch(t){if(Me(e),t!==t+0)throw t;Ae(1,0)}},ba:function(t,e){var n=Ee();try{return We(t,e)}catch(t){if(Me(n),t!==t+0)throw t;Ae(1,0)}},Y:function(t,e,n){var r=Ee();try{return De(t,e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},g:function(t){var e=Ee();try{vt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Ae(1,0)}},r:function(t,e){var n=Ee();try{vt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Ae(1,0)}},i:function(t,e,n){var r=Ee();try{vt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Ae(1,0)}},ha:function(t,e,n,r){var a=Ee();try{vt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},m:function(t,e,n,r){var a=Ee();try{vt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Ae(1,0)}},v:function(t,e,n,r,a){var i=Ee();try{vt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Ae(1,0)}},u:function(t,e,n,r,a,i){var o=Ee();try{vt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},O:function(t,e,n,r,a,i,o){var u=Ee();try{vt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Ae(1,0)}},A:function(t,e,n,r,a,i,o,u){var c=Ee();try{vt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},ka:function(t,e,n,r,a,i,o,u,c){var s=Ee();try{vt(t)(e,n,r,a,i,o,u,c)}catch(t){if(Me(s),t!==t+0)throw t;Ae(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,f){var l=Ee();try{vt(t)(e,n,r,a,i,o,u,c,s,f)}catch(t){if(Me(l),t!==t+0)throw t;Ae(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,f,l,p,h,d,y){var b=Ee();try{vt(t)(e,n,r,a,i,o,u,c,s,f,l,p,h,d,y)}catch(t){if(Me(b),t!==t+0)throw t;Ae(1,0)}},fa:function(t,e,n,r,a,i,o,u){var c=Ee();try{Pe(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Ae(1,0)}},da:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=Ee();try{Fe(t,e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(Me(p),t!==t+0)throw t;Ae(1,0)}},ea:function(t,e,n,r,a,i){var o=Ee();try{Ue(t,e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Ae(1,0)}},o:function(t){return t},a:j||u.wasmMemory,G:function(t){oe=t},la:fe,z:function(t,e,n,r){return fe(t,e,n,r)}};!function(){function t(t,e){u.asm=t.exports,ht.qc.push(u.asm.sb),q=u.asm.ub,J.unshift(u.asm.Va),k=e,O||(et--,u.monitorRunDependencies&&u.monitorRunDependencies(et),0==et&&(null!==nt&&(clearInterval(nt),nt=null),rt&&(t=rt,rt=null,t())))}function e(e){t(e.instance,e.module)}function n(t){return function(){if(!M&&(g||w)){if(\\\"function\\\"==typeof fetch&&!tt.startsWith(\\\"file://\\\"))return fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+tt+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return ot()}));if(l)return new Promise((function(t,e){l(tt,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return ot()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\\\"failed to asynchronously prepare wasm: \\\"+t),at(t)}))}var r={a:pe};if(O||(et++,u.monitorRunDependencies&&u.monitorRunDependencies(et)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||it()||tt.startsWith(\\\"file://\\\")||_||\\\"function\\\"!=typeof fetch?n(e):fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){return x(\\\"wasm streaming compile failed: \\\"+t),x(\\\"falling back to ArrayBuffer instantiation\\\"),n(e)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var he=u._pthread_self=function(){return(he=u._pthread_self=u.asm.ob).apply(null,arguments)},de=u._malloc=function(){return(de=u._malloc=u.asm.pb).apply(null,arguments)},ye=u._free=function(){return(ye=u._free=u.asm.qb).apply(null,arguments)},be=u._fflush=function(){return(be=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var me=u.___funcs_on_exit=function(){return(me=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},ve=u.__emscripten_thread_init=function(){return(ve=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var ge,we=u._emscripten_run_in_main_runtime_thread_js=function(){return(we=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},_e=u.__emscripten_proxy_execute_task_queue=function(){return(_e=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Oe=u.__emscripten_thread_free_data=function(){return(Oe=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},Se=u.__emscripten_thread_exit=function(){return(Se=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Ae=u._setThrew=function(){return(Ae=u._setThrew=u.asm.Bb).apply(null,arguments)},Te=u._emscripten_stack_set_limits=function(){return(Te=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Ee=u.stackSave=function(){return(Ee=u.stackSave=u.asm.Db).apply(null,arguments)},Me=u.stackRestore=function(){return(Me=u.stackRestore=u.asm.Eb).apply(null,arguments)},Ce=u.stackAlloc=function(){return(Ce=u.stackAlloc=u.asm.Fb).apply(null,arguments)},xe=u.___cxa_can_catch=function(){return(xe=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},Re=u.___cxa_is_pointer_type=function(){return(Re=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},je=u.dynCall_j=function(){return(je=u.dynCall_j=u.asm.Ib).apply(null,arguments)},ke=u.dynCall_iiiiij=function(){return(ke=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},De=u.dynCall_jii=function(){return(De=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Pe=u.dynCall_viiiiij=function(){return(Pe=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Ue=u.dynCall_vjji=function(){return(Ue=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Fe=u.dynCall_viiijjjii=function(){return(Fe=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},Ie=u.dynCall_iij=function(){return(Ie=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},We=u.dynCall_ji=function(){return(We=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},He=u.dynCall_iiiiiij=function(){return(He=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Le=u.dynCall_iiij=function(){return(Le=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function ze(){function t(){if(!ge&&(ge=!0,u.calledRun=!0,!H)&&(O||dt(J),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!O)){if(u.postRun)for(\\\"function\\\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Q.unshift(t)}dt(Q)}}if(!(0<et))if(O)c(u),O||dt(J),postMessage({cmd:\\\"loaded\\\"});else{if(u.preRun)for(\\\"function\\\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)K();dt(X),0<et||(u.setStatus?(u.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){u.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(u.UTF8ToString=Y,u.stringToUTF8=function(t,e,n){return B(t,r(),e,n)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=$,u.wasmMemory=j,u.stackSave=Ee,u.stackRestore=Me,u.stackAlloc=Ce,u.ExitStatus=ct,u.PThread=ht,rt=function t(){ge||ze(),ge||(rt=t)},u.preInit)for(\\\"function\\\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ze(),t.ready});t.exports=r},932:function(t,e,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){var e,r,a;t=t||{},e||(e=void 0!==t?t:{}),e.ready=new Promise((function(t,e){r=t,a=e}));var i,o,u,c,s,f,l=Object.assign({},e),p=\\\"./this.program\\\",h=(t,e)=>{throw e},d=\\\"object\\\"==typeof window,y=\\\"function\\\"==typeof importScripts,b=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";b?(m=y?n(908).dirname(m)+\\\"/\\\":\\\"//\\\",f=()=>{s||(c=n(384),s=n(908))},i=function(t,e){return f(),t=s.normalize(t),c.readFileSync(t,e?void 0:\\\"utf8\\\")},u=t=>((t=i(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,e,n)=>{f(),t=s.normalize(t),c.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof Z))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),h=(t,e)=>{if(_||0<L)throw process.exitCode=t,e;e instanceof Z||w(\\\"exiting due to exception: \\\"+e),process.exit(t)},e.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||y)&&(y?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",i=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},y&&(u=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var v,g=e.print||console.log.bind(console),w=e.printErr||console.warn.bind(console);Object.assign(e,l),l=null,e.thisProgram&&(p=e.thisProgram),e.quit&&(h=e.quit),e.wasmBinary&&(v=e.wasmBinary);var _=e.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&V(\\\"no native wasm support detected\\\");var O,S,A,T,E,M,C=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function R(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&x)return x.decode(t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function j(t,e){return(t>>>=0)?R(T,t,e):\\\"\\\"}function k(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function D(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function P(){var t=O.buffer;S=t,e.HEAP8=A=new Int8Array(t),e.HEAP16=new Int16Array(t),e.HEAP32=E=new Int32Array(t),e.HEAPU8=T=new Uint8Array(t),e.HEAPU16=new Uint16Array(t),e.HEAPU32=M=new Uint32Array(t),e.HEAPF32=new Float32Array(t),e.HEAPF64=new Float64Array(t)}var U,F=[],I=[],W=[],H=[],L=0;function z(){var t=e.preRun.shift();F.unshift(t)}var Y,B=0,G=null,N=null;function V(t){throw e.onAbort&&e.onAbort(t),w(t=\\\"Aborted(\\\"+t+\\\")\\\"),C=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),a(t),t}function q(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(Y=\\\"ort-wasm.wasm\\\",!q()){var X=Y;Y=e.locateFile?e.locateFile(X,m):m+X}function J(){var t=Y;try{if(t==Y&&v)return new Uint8Array(v);if(u)return u(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){V(t)}}function Z(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function Q(t){for(;0<t.length;)t.shift()(e)}var $=[],K=0,tt=0;function et(t){this.Db=t,this.zb=t-24,this.Ub=function(t){M[this.zb+4>>2>>>0]=t},this.Eb=function(){return M[this.zb+4>>2>>>0]},this.Sb=function(t){M[this.zb+8>>2>>>0]=t},this.Wb=function(){return M[this.zb+8>>2>>>0]},this.Tb=function(){E[this.zb>>2>>>0]=0},this.Ib=function(t){A[this.zb+12>>0>>>0]=t?1:0},this.Pb=function(){return 0!=A[this.zb+12>>0>>>0]},this.Jb=function(t){A[this.zb+13>>0>>>0]=t?1:0},this.Lb=function(){return 0!=A[this.zb+13>>0>>>0]},this.Rb=function(t,e){this.Fb(0),this.Ub(t),this.Sb(e),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){E[this.zb>>2>>>0]+=1},this.Xb=function(){var t=E[this.zb>>2>>>0];return E[this.zb>>2>>>0]=t-1,1===t},this.Fb=function(t){M[this.zb+16>>2>>>0]=t},this.Ob=function(){return M[this.zb+16>>2>>>0]},this.Qb=function(){if(Mt(this.Eb()))return M[this.Db>>2>>>0];var t=this.Ob();return 0!==t?t:this.Db}}function nt(t){return gt(new et(t).zb)}var rt=[];function at(t){var e=rt[t];return e||(t>=rt.length&&(rt.length=t+1),rt[t]=e=U.get(t)),e}function it(t){var e=D(t)+1,n=vt(e);return n&&k(t,A,n,e),n}var ot={};function ut(){if(!ct){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(t in ot)void 0===ot[t]?delete e[t]:e[t]=ot[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);ct=n}return ct}var ct,st=[null,[],[]];function ft(t,e){var n=st[t];0===e||10===e?((1===t?g:w)(R(n,0)),n.length=0):n.push(e)}var lt=0;function pt(t){return 0==t%4&&(0!=t%100||0==t%400)}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],dt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(t,e,n,r){function a(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function i(t,e){return a(t,e,\\\"0\\\")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var e=t.Bb;for(t=new Date(new Date(t.Cb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(pt(t.getFullYear())?ht:dt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=u(new Date(t.getFullYear(),0,4)),n=u(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=E[r+40>>2>>>0];for(var f in r={$b:E[r>>2>>>0],Zb:E[r+4>>2>>>0],Gb:E[r+8>>2>>>0],Kb:E[r+12>>2>>>0],Hb:E[r+16>>2>>>0],Cb:E[r+20>>2>>>0],Ab:E[r+24>>2>>>0],Bb:E[r+28>>2>>>0],bc:E[r+32>>2>>>0],Yb:E[r+36>>2>>>0],ac:s?j(s):\\\"\\\"},n=j(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),s[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in s={\\\"%a\\\":function(t){return l[t.Ab].substring(0,3)},\\\"%A\\\":function(t){return l[t.Ab]},\\\"%b\\\":function(t){return p[t.Hb].substring(0,3)},\\\"%B\\\":function(t){return p[t.Hb]},\\\"%C\\\":function(t){return i((t.Cb+1900)/100|0,2)},\\\"%d\\\":function(t){return i(t.Kb,2)},\\\"%e\\\":function(t){return a(t.Kb,2,\\\" \\\")},\\\"%g\\\":function(t){return c(t).toString().substring(2)},\\\"%G\\\":function(t){return c(t)},\\\"%H\\\":function(t){return i(t.Gb,2)},\\\"%I\\\":function(t){return 0==(t=t.Gb)?t=12:12<t&&(t-=12),i(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.Hb-1;e+=(pt(t.Cb+1900)?ht:dt)[n++]);return i(t.Kb+e,3)},\\\"%m\\\":function(t){return i(t.Hb+1,2)},\\\"%M\\\":function(t){return i(t.Zb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Gb&&12>t.Gb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return i(t.$b,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Ab||7},\\\"%U\\\":function(t){return i(Math.floor((t.Bb+7-t.Ab)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Bb+7-(t.Ab+6)%7)/7);if(2>=(t.Ab+371-t.Bb-2)%7&&e++,e)53==e&&(4==(n=(t.Ab+371-t.Bb)%7)||3==n&&pt(t.Cb)||(e=1));else{e=52;var n=(t.Ab+7-t.Bb-1)%7;(4==n||5==n&&pt(t.Cb%400-1))&&e++}return i(e,2)},\\\"%w\\\":function(t){return t.Ab},\\\"%W\\\":function(t){return i(Math.floor((t.Bb+7-(t.Ab+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Cb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Yb);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.ac},\\\"%%\\\":function(){return\\\"%\\\"}},n=n.replace(/%%/g,\\\"\\\\0\\\\0\\\"),s)n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),s[f](r)));return f=function(t){var e=Array(D(t)+1);return k(t,e,0,e.length),e}(n=n.replace(/\\\\0\\\\0/g,\\\"%\\\")),f.length>e?0:(A.set(f,t>>>0),f.length-1)}var bt={a:function(t){return vt(t+24)+24},m:function(t){return(t=new et(t)).Pb()||(t.Ib(!0),K--),t.Jb(!1),$.push(t),t.Nb(),t.Qb()},ia:function(t){throw w(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),C=!0,t},w:function(){Ot(0);var t=$.pop();if(t.Xb()&&!t.Lb()){var e=t.Wb();e&&at(e)(t.Db),nt(t.Db)}tt=0},d:function(){var t=tt;if(!t)return lt=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return lt=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return lt=i,t}return lt=n,t},k:function(){var t=tt;if(!t)return lt=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return lt=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return lt=i,t}return lt=n,t},g:function(){var t=tt;if(!t)return lt=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return lt=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return lt=i,t}return lt=n,t},s:nt,L:function(){var t=$.pop();t||V(\\\"no exception to throw\\\");var e=t.Db;throw t.Lb()||($.push(t),t.Jb(!0),t.Ib(!1),K++),tt=e,e},b:function(t,e,n){throw new et(t).Rb(e,n),tt=t,K++,t},la:function(){return K},i:function(t){throw tt||(tt=t),t},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ia:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getUTCSeconds(),E[e+4>>2>>>0]=t.getUTCMinutes(),E[e+8>>2>>>0]=t.getUTCHours(),E[e+12>>2>>>0]=t.getUTCDate(),E[e+16>>2>>>0]=t.getUTCMonth(),E[e+20>>2>>>0]=t.getUTCFullYear()-1900,E[e+24>>2>>>0]=t.getUTCDay(),E[e+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getSeconds(),E[e+4>>2>>>0]=t.getMinutes(),E[e+8>>2>>>0]=t.getHours(),E[e+12>>2>>>0]=t.getDate(),E[e+16>>2>>>0]=t.getMonth(),E[e+20>>2>>>0]=t.getFullYear()-1900,E[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1);E[e+28>>2>>>0]=(t.getTime()-n.getTime())/864e5|0,E[e+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),E[e+32>>2>>>0]=0|(r!=n&&t.getTimezoneOffset()==Math.min(n,r))},Fa:function(t){var e=new Date(E[t+20>>2>>>0]+1900,E[t+16>>2>>>0],E[t+12>>2>>>0],E[t+8>>2>>>0],E[t+4>>2>>>0],E[t>>2>>>0],0),n=E[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),0,1),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),u=Math.min(o,i);return 0>n?E[t+32>>2>>>0]=Number(i!=o&&u==r):0<n!=(u==r)&&(i=Math.max(o,i),e.setTime(e.getTime()+6e4*((0<n?u:i)-r))),E[t+24>>2>>>0]=e.getDay(),E[t+28>>2>>>0]=(e.getTime()-a.getTime())/864e5|0,E[t>>2>>>0]=e.getSeconds(),E[t+4>>2>>>0]=e.getMinutes(),E[t+8>>2>>>0]=e.getHours(),E[t+12>>2>>>0]=e.getDate(),E[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function t(e,n,r){t.Vb||(t.Vb=!0,function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var u=o.getTimezoneOffset();E[t>>2>>>0]=60*Math.max(a,u),E[e>>2>>>0]=Number(a!=u),t=r(i),e=r(o),t=it(t),e=it(e),u<a?(M[n>>2>>>0]=t,M[n+4>>2>>>0]=e):(M[n>>2>>>0]=e,M[n+4>>2>>>0]=t)}(e,n,r))},B:function(){V(\\\"\\\")},ma:function(){return 4294901760},I:b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),xa:function(t,e,n){T.copyWithin(t>>>0,e>>>0,e+n>>>0)},G:function(t){var e=T.length;if(4294901760<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var a=Math;r=Math.max(t,r),a=a.min.call(a,4294901760,r+(65536-r%65536)%65536);t:{try{O.grow(a-S.byteLength+65535>>>16),P();var i=1;break t}catch(t){}i=void 0}if(i)return!0}return!1},va:function(t,e){var n=0;return ut().forEach((function(r,a){var i=e+n;for(a=M[t+4*a>>2>>>0]=i,i=0;i<r.length;++i)A[a++>>0>>>0]=r.charCodeAt(i);A[a>>0>>>0]=0,n+=r.length+1})),0},wa:function(t,e){var n=ut();M[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),M[e>>2>>>0]=r,0},ba:function(t){_||0<L||(_t(),Q(W),wt(0),st[1].length&&ft(1,10),st[2].length&&ft(2,10)),_||0<L||(e.onExit&&e.onExit(t),C=!0),h(t,new Z(t))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(t,e,n,r){for(var a=0,i=0;i<n;i++){var o=M[e>>2>>>0],u=M[e+4>>2>>>0];e+=8;for(var c=0;c<u;c++)ft(t,T[o+c>>>0]);a+=u}return M[r>>2>>>0]=a,0},c:function(){return lt},ja:function t(e,r){t.Mb||(t.Mb=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=n(Object(function(){var t=new Error(\\\"Cannot find module 'crypto'\\\");throw t.code=\\\"MODULE_NOT_FOUND\\\",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>V(\\\"randomDevice\\\")}());for(var a=0;a<r;a++)A[e+a>>0>>>0]=t.Mb();return 0},ea:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},fa:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},J:function(t){var e=St();try{return at(t)()}catch(t){if(At(e),t!==t+0)throw t;Ot(1,0)}},e:function(t,e){var n=St();try{return at(t)(e)}catch(t){if(At(n),t!==t+0)throw t;Ot(1,0)}},N:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},O:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},j:function(t,e,n){var r=St();try{return at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},o:function(t,e,n,r){var a=St();try{return at(t)(e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},p:function(t,e,n,r,a){var i=St();try{return at(t)(e,n,r,a)}catch(t){if(At(i),t!==t+0)throw t;Ot(1,0)}},M:function(t,e,n,r,a,i){var o=St();try{return at(t)(e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},r:function(t,e,n,r,a,i){var o=St();try{return at(t)(e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},v:function(t,e,n,r,a,i,o){var u=St();try{return at(t)(e,n,r,a,i,o)}catch(t){if(At(u),t!==t+0)throw t;Ot(1,0)}},K:function(t,e,n,r,a,i,o,u){var c=St();try{return at(t)(e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=St();try{return at(t)(e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(At(p),t!==t+0)throw t;Ot(1,0)}},X:function(t,e,n,r,a,i,o,u){var c=St();try{return Ft(t,e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},V:function(t,e,n,r,a,i,o){var u=St();try{return xt(t,e,n,r,a,i,o)}catch(t){if(At(u),t!==t+0)throw t;Ot(1,0)}},U:function(t,e,n,r,a){var i=St();try{return It(t,e,n,r,a)}catch(t){if(At(i),t!==t+0)throw t;Ot(1,0)}},Z:function(t,e,n,r){var a=St();try{return Pt(t,e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},W:function(t){var e=St();try{return Ct(t)}catch(t){if(At(e),t!==t+0)throw t;Ot(1,0)}},Y:function(t,e){var n=St();try{return Ut(t,e)}catch(t){if(At(n),t!==t+0)throw t;Ot(1,0)}},T:function(t,e,n){var r=St();try{return Rt(t,e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},f:function(t){var e=St();try{at(t)()}catch(t){if(At(e),t!==t+0)throw t;Ot(1,0)}},q:function(t,e){var n=St();try{at(t)(e)}catch(t){if(At(n),t!==t+0)throw t;Ot(1,0)}},h:function(t,e,n){var r=St();try{at(t)(e,n)}catch(t){if(At(r),t!==t+0)throw t;Ot(1,0)}},da:function(t,e,n,r){var a=St();try{at(t)(e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},l:function(t,e,n,r){var a=St();try{at(t)(e,n,r)}catch(t){if(At(a),t!==t+0)throw t;Ot(1,0)}},t:function(t,e,n,r,a){var i=St();try{at(t)(e,n,r,a)}catch(t){if(At(i),t!==t+0)throw t;Ot(1,0)}},u:function(t,e,n,r,a,i){var o=St();try{at(t)(e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},x:function(t,e,n,r,a,i,o){var u=St();try{at(t)(e,n,r,a,i,o)}catch(t){if(At(u),t!==t+0)throw t;Ot(1,0)}},z:function(t,e,n,r,a,i,o,u){var c=St();try{at(t)(e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},ga:function(t,e,n,r,a,i,o,u,c){var s=St();try{at(t)(e,n,r,a,i,o,u,c)}catch(t){if(At(s),t!==t+0)throw t;Ot(1,0)}},A:function(t,e,n,r,a,i,o,u,c,s,f){var l=St();try{at(t)(e,n,r,a,i,o,u,c,s,f)}catch(t){if(At(l),t!==t+0)throw t;Ot(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,f,l,p,h,d,y){var b=St();try{at(t)(e,n,r,a,i,o,u,c,s,f,l,p,h,d,y)}catch(t){if(At(b),t!==t+0)throw t;Ot(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=St();try{jt(t,e,n,r,a,i,o,u)}catch(t){if(At(c),t!==t+0)throw t;Ot(1,0)}},_:function(t,e,n,r,a,i,o,u,c,s,f,l){var p=St();try{Dt(t,e,n,r,a,i,o,u,c,s,f,l)}catch(t){if(At(p),t!==t+0)throw t;Ot(1,0)}},$:function(t,e,n,r,a,i){var o=St();try{kt(t,e,n,r,a,i)}catch(t){if(At(o),t!==t+0)throw t;Ot(1,0)}},n:function(t){return t},F:function(t){lt=t},ha:yt,y:function(t,e,n,r){return yt(t,e,n,r)}};!function(){function t(t){e.asm=t.exports,O=e.asm.Ka,P(),U=e.asm.ib,I.unshift(e.asm.La),B--,e.monitorRunDependencies&&e.monitorRunDependencies(B),0==B&&(null!==G&&(clearInterval(G),G=null),N&&(t=N,N=null,t()))}function n(e){t(e.instance)}function r(t){return function(){if(!v&&(d||y)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return J()}));if(o)return new Promise((function(t,e){o(Y,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return J()}))}().then((function(t){return WebAssembly.instantiate(t,i)})).then((function(t){return t})).then(t,(function(t){w(\\\"failed to asynchronously prepare wasm: \\\"+t),V(t)}))}var i={a:bt};if(B++,e.monitorRunDependencies&&e.monitorRunDependencies(B),e.instantiateWasm)try{return e.instantiateWasm(i,t)}catch(t){return w(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(v||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||q()||Y.startsWith(\\\"file://\\\")||b||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,i).then(n,(function(t){return w(\\\"wasm streaming compile failed: \\\"+t),w(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.La).apply(null,arguments)},e._OrtInit=function(){return(e._OrtInit=e.asm.Ma).apply(null,arguments)},e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Na).apply(null,arguments)},e._OrtAppendExecutionProvider=function(){return(e._OrtAppendExecutionProvider=e.asm.Oa).apply(null,arguments)},e._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Pa).apply(null,arguments)},e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Qa).apply(null,arguments)},e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ra).apply(null,arguments)},e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Sa).apply(null,arguments)},e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.Ta).apply(null,arguments)},e._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.Ua).apply(null,arguments)},e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.Va).apply(null,arguments)},e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Wa).apply(null,arguments)},e._OrtFree=function(){return(e._OrtFree=e.asm.Xa).apply(null,arguments)},e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ya).apply(null,arguments)},e._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Za).apply(null,arguments)},e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm._a).apply(null,arguments)},e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.$a).apply(null,arguments)},e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.ab).apply(null,arguments)},e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.bb).apply(null,arguments)},e._OrtRun=function(){return(e._OrtRun=e.asm.cb).apply(null,arguments)},e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.db).apply(null,arguments)};var mt,vt=e._malloc=function(){return(vt=e._malloc=e.asm.eb).apply(null,arguments)},gt=e._free=function(){return(gt=e._free=e.asm.fb).apply(null,arguments)},wt=e._fflush=function(){return(wt=e._fflush=e.asm.gb).apply(null,arguments)},_t=e.___funcs_on_exit=function(){return(_t=e.___funcs_on_exit=e.asm.hb).apply(null,arguments)},Ot=e._setThrew=function(){return(Ot=e._setThrew=e.asm.jb).apply(null,arguments)},St=e.stackSave=function(){return(St=e.stackSave=e.asm.kb).apply(null,arguments)},At=e.stackRestore=function(){return(At=e.stackRestore=e.asm.lb).apply(null,arguments)},Tt=e.stackAlloc=function(){return(Tt=e.stackAlloc=e.asm.mb).apply(null,arguments)},Et=e.___cxa_can_catch=function(){return(Et=e.___cxa_can_catch=e.asm.nb).apply(null,arguments)},Mt=e.___cxa_is_pointer_type=function(){return(Mt=e.___cxa_is_pointer_type=e.asm.ob).apply(null,arguments)},Ct=e.dynCall_j=function(){return(Ct=e.dynCall_j=e.asm.pb).apply(null,arguments)},xt=e.dynCall_iiiiij=function(){return(xt=e.dynCall_iiiiij=e.asm.qb).apply(null,arguments)},Rt=e.dynCall_jii=function(){return(Rt=e.dynCall_jii=e.asm.rb).apply(null,arguments)},jt=e.dynCall_viiiiij=function(){return(jt=e.dynCall_viiiiij=e.asm.sb).apply(null,arguments)},kt=e.dynCall_vjji=function(){return(kt=e.dynCall_vjji=e.asm.tb).apply(null,arguments)},Dt=e.dynCall_viiijjjii=function(){return(Dt=e.dynCall_viiijjjii=e.asm.ub).apply(null,arguments)},Pt=e.dynCall_iij=function(){return(Pt=e.dynCall_iij=e.asm.vb).apply(null,arguments)},Ut=e.dynCall_ji=function(){return(Ut=e.dynCall_ji=e.asm.wb).apply(null,arguments)},Ft=e.dynCall_iiiiiij=function(){return(Ft=e.dynCall_iiiiiij=e.asm.xb).apply(null,arguments)},It=e.dynCall_iiij=function(){return(It=e.dynCall_iiij=e.asm.yb).apply(null,arguments)};function Wt(){function t(){if(!mt&&(mt=!0,e.calledRun=!0,!C)){if(Q(I),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for(\\\"function\\\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t=e.postRun.shift();H.unshift(t)}Q(H)}}if(!(0<B)){if(e.preRun)for(\\\"function\\\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)z();Q(F),0<B||(e.setStatus?(e.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){e.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(e.UTF8ToString=j,e.stringToUTF8=function(t,e,n){return k(t,T,e,n)},e.lengthBytesUTF8=D,e.stackSave=St,e.stackRestore=At,e.stackAlloc=Tt,N=function t(){mt||Wt(),mt||(N=t)},e.preInit)for(\\\"function\\\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return Wt(),t.ready});t.exports=r},967:function(t,e){\\\"use strict\\\";var n=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,a,i=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)o.push(r.value)}catch(t){a={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return o};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=function(t,r,a,i){if(\\\"object\\\"==typeof t&&null!==t){if(a.has(t))throw new Error(\\\"Circular reference in options\\\");a.add(t)}Object.entries(t).forEach((function(t){var o=n(t,2),u=o[0],c=o[1],s=r?r+u:u;if(\\\"object\\\"==typeof c)(0,e.iterateExtraOptions)(c,s+\\\".\\\",a,i);else if(\\\"string\\\"==typeof c||\\\"number\\\"==typeof c)i(s,c.toString());else{if(\\\"boolean\\\"!=typeof c)throw new Error(\\\"Can't handle extra config type: \\\".concat(typeof c));i(s,c?\\\"1\\\":\\\"0\\\")}}))}},586:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setRunOptions=void 0;var r=n(967),a=n(983),i=n(361);e.setRunOptions=function(t){var e=(0,i.getInstance)(),n=0,o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);var c=0;if(void 0!==(null==t?void 0:t.tag)&&(c=(0,a.allocWasmString)(t.tag,o)),0===(n=e._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,c)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,i,u))throw new Error(\\\"Can't set a run config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},919:function(t,e,n){\\\"use strict\\\";var r=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setSessionOptions=void 0;var a=n(967),i=n(983),o=n(361);e.setSessionOptions=function(t){var e=(0,o.getInstance)(),n=0,u=[],c=t||{};!function(t){t.extra||(t.extra={}),t.extra.session||(t.extra.session={});var e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly=\\\"1\\\")}(c);try{void 0===(null==t?void 0:t.graphOptimizationLevel)&&(c.graphOptimizationLevel=\\\"all\\\");var s=function(t){switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\".concat(t))}}(c.graphOptimizationLevel);void 0===(null==t?void 0:t.enableCpuMemArena)&&(c.enableCpuMemArena=!0),void 0===(null==t?void 0:t.enableMemPattern)&&(c.enableMemPattern=!0),void 0===(null==t?void 0:t.executionMode)&&(c.executionMode=\\\"sequential\\\");var f=function(t){switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\".concat(t))}}(c.executionMode),l=0;if(void 0!==(null==t?void 0:t.logId)&&(l=(0,i.allocWasmString)(t.logId,u)),void 0===(null==t?void 0:t.logSeverityLevel))c.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\".concat(t.logSeverityLevel));if(void 0===(null==t?void 0:t.logVerbosityLevel))c.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\".concat(t.logVerbosityLevel));if(void 0===(null==t?void 0:t.enableProfiling)&&(c.enableProfiling=!1),0===(n=e._OrtCreateSessionOptions(s,!!c.enableCpuMemArena,!!c.enableMemPattern,f,!!c.enableProfiling,0,l,c.logSeverityLevel,c.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");return(null==t?void 0:t.executionProviders)&&function(t,e,n){var a,u;try{for(var c=r(e),s=c.next();!s.done;s=c.next()){var f=s.value,l=\\\"string\\\"==typeof f?f:f.name;switch(l){case\\\"xnnpack\\\":l=\\\"XNNPACK\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(\\\"not supported EP: \\\".concat(l))}var p=(0,i.allocWasmString)(l,n);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(t,p))throw new Error(\\\"Can't append execution provider: \\\".concat(l))}}catch(t){a={error:t}}finally{try{s&&!s.done&&(u=c.return)&&u.call(c)}finally{if(a)throw a.error}}}(n,t.executionProviders,u),void 0!==(null==t?void 0:t.extra)&&(0,a.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,(function(t,r){var a=(0,i.allocWasmString)(t,u),o=(0,i.allocWasmString)(r,u);if(0!==e._OrtAddSessionConfigEntry(n,a,o))throw new Error(\\\"Can't set a session config entry: \\\".concat(t,\\\" - \\\").concat(r))})),[n,u]}catch(t){throw 0!==n&&e._OrtReleaseSessionOptions(n),u.forEach(e._free),t}}},983:function(t,e,n){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.allocWasmString=void 0;var r=n(361);e.allocWasmString=function(t,e){var n=(0,r.getInstance)(),a=n.lengthBytesUTF8(t)+1,i=n._malloc(a);return n.stringToUTF8(t,i,a),e.push(i),i}},349:function(t,e,n){\\\"use strict\\\";var r=this&&this.__read||function(t,e){var n=\\\"function\\\"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,a,i=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)o.push(r.value)}catch(t){a={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(a)throw a.error}}return o},a=this&&this.__values||function(t){var e=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&\\\"number\\\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;var i=n(586),o=n(919),u=n(983),c=n(361);e.initOrt=function(t,e){var n=(0,c.getInstance)()._OrtInit(t,e);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\".concat(n))};var s=new Map;e.createSessionAllocate=function(t){var e=(0,c.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=function(t,e){var n,a=(0,c.getInstance)(),i=0,u=0,f=[];try{if(u=(n=r((0,o.setSessionOptions)(e),2))[0],f=n[1],0===(i=a._OrtCreateSession(t[0],t[1],u)))throw new Error(\\\"Can't create a session\\\")}finally{a._free(t[0]),a._OrtReleaseSessionOptions(u),f.forEach(a._free)}for(var l=a._OrtGetInputCount(i),p=a._OrtGetOutputCount(i),h=[],d=[],y=[],b=[],m=0;m<l;m++){var v=a._OrtGetInputName(i,m);if(0===v)throw new Error(\\\"Can't get an input name\\\");d.push(v),h.push(a.UTF8ToString(v))}for(m=0;m<p;m++){var g=a._OrtGetOutputName(i,m);if(0===g)throw new Error(\\\"Can't get an output name\\\");b.push(g),y.push(a.UTF8ToString(g))}return s.set(i,[i,d,b]),[i,h,y]},e.createSession=function(t,n){var r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=function(t){var e=(0,c.getInstance)(),n=s.get(t);if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=n[1],i=n[2];a.forEach(e._OrtFree),i.forEach(e._OrtFree),e._OrtReleaseSession(r),s.delete(t)};var f=function(t){switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(\\\"unsupported data type: \\\".concat(t))}},l=function(t){switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\".concat(t))}};e.run=function(t,e,n,a,o){var p,h=(0,c.getInstance)(),d=s.get(t);if(!d)throw new Error(\\\"invalid session id\\\");var y=d[0],b=d[1],m=d[2],v=e.length,g=a.length,w=0,_=[],O=[],S=[];try{w=(p=r((0,i.setRunOptions)(o),2))[0],_=p[1];for(var A=function(t){var e=n[t][0],r=n[t][1],a=n[t][2],i=void 0,o=void 0;if(Array.isArray(a)){o=4*a.length,i=h._malloc(o),S.push(i);for(var c=i/4,s=0;s<a.length;s++){if(\\\"string\\\"!=typeof a[s])throw new TypeError(\\\"tensor data at index \\\".concat(s,\\\" is not a string\\\"));h.HEAPU32[c++]=(0,u.allocWasmString)(a[s],S)}}else o=a.byteLength,i=h._malloc(o),S.push(i),h.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,o),i);var f=h.stackSave(),l=h.stackAlloc(4*r.length);try{var p=l/4;r.forEach((function(t){return h.HEAP32[p++]=t}));var d=h._OrtCreateTensor(function(t){switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\".concat(t))}}(e),i,o,l,r.length);if(0===d)throw new Error(\\\"Can't create a tensor\\\");O.push(d)}finally{h.stackRestore(f)}},T=0;T<v;T++)A(T);var E=h.stackSave(),M=h.stackAlloc(4*v),C=h.stackAlloc(4*v),x=h.stackAlloc(4*g),R=h.stackAlloc(4*g);try{var j=M/4,k=C/4,D=x/4,P=R/4;for(T=0;T<v;T++)h.HEAPU32[j++]=O[T],h.HEAPU32[k++]=b[e[T]];for(T=0;T<g;T++)h.HEAPU32[D++]=0,h.HEAPU32[P++]=m[a[T]];var U=h._OrtRun(y,C,M,v,R,g,x,w),F=[];if(0===U)for(T=0;T<g;T++){var I=h.HEAPU32[x/4+T],W=h.stackSave(),H=h.stackAlloc(16),L=void 0,z=0;try{if(0!==(U=h._OrtGetTensorData(I,H,H+4,H+8,H+12)))throw new Error(\\\"Can't access output tensor data. error code = \\\".concat(U));var Y=H/4,B=h.HEAPU32[Y++];z=h.HEAPU32[Y++];for(var G=h.HEAPU32[Y++],N=h.HEAPU32[Y++],V=[],q=0;q<N;q++)V.push(h.HEAPU32[G/4+q]);h._OrtFree(G);var X=0===V.length?1:V.reduce((function(t,e){return t*e}));if(\\\"string\\\"===(L=f(B))){for(var J=[],Z=z/4,Q=0;Q<X;Q++){var $=h.HEAPU32[Z++],K=Q===X-1?void 0:h.HEAPU32[Z]-$;J.push(h.UTF8ToString($,K))}F.push([L,V,J])}else{var tt=new(l(L))(X);new Uint8Array(tt.buffer,tt.byteOffset,tt.byteLength).set(h.HEAPU8.subarray(z,z+tt.byteLength)),F.push([L,V,tt])}}finally{h.stackRestore(W),\\\"string\\\"===L&&z&&h._free(z),h._OrtReleaseTensor(I)}}if(0===U)return F;throw new Error(\\\"failed to call OrtRun(). error code = \\\".concat(U,\\\".\\\"))}finally{h.stackRestore(E)}}finally{O.forEach(h._OrtReleaseTensor),S.forEach(h._free),h._OrtReleaseRunOptions(w),_.forEach(h._free)}},e.endProfiling=function(t){var e=(0,c.getInstance)(),n=s.get(t);if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=e._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");e._OrtFree(a)},e.extractTransferableBuffers=function(t){var e,n,r=[];try{for(var i=a(t),o=i.next();!o.done;o=i.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}},361:function(t,e,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(e,n);a&&!(\\\"get\\\"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,a)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),a=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return a(e,t),e},o=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(a,i){function o(t){try{c(r.next(t))}catch(t){i(t)}}function u(t){try{c(r.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}c((r=r.apply(t,e||[])).next())}))},u=this&&this.__generator||function(t,e){var n,r,a,i,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;i&&(i=0,u[0]&&(o=0)),o;)try{if(n=1,r&&(a=2&u[0]?r.return:u[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,u[1])).done)return a;switch(r=0,a&&(u=[2&u[0],a.value]),u[0]){case 0:case 1:a=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,r=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==u[0]&&2!==u[0])){o=0;continue}if(3===u[0]&&(!a||u[1]>a[0]&&u[1]<a[3])){o.label=u[1];break}if(6===u[0]&&o.label<a[1]){o.label=a[1],a=u;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(u);break}a[2]&&o.ops.pop(),o.trys.pop();continue}u=e.call(t,o)}catch(t){u=[6,t],r=0}finally{n=a=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},c=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;var s,f=i(n(449)),l=c(n(932)),p=n(474),h=!1,d=!1,y=!1,b=function(t,e){return e?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};e.initializeWebAssembly=function(t){return o(void 0,void 0,void 0,(function(){var e,r,a,i,o,c,m,v,g,w,_;return u(this,(function(u){switch(u.label){case 0:if(h)return[2,Promise.resolve()];if(d)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(y)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return d=!0,e=t.initTimeout,r=t.numThreads,a=t.simd,i=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}}(),o=a&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}}(),c=\\\"string\\\"==typeof t.wasmPaths?t.wasmPaths:void 0,m=b(!1,i),v=b(o,i),g=\\\"object\\\"==typeof t.wasmPaths?t.wasmPaths[v]:void 0,w=!1,_=[],e>0&&_.push(new Promise((function(t){setTimeout((function(){w=!0,t()}),e)}))),_.push(new Promise((function(t,e){var r=i?p:l.default,a={locateFile:function(t,e){return i&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):t===m?null!=g?g:(null!=c?c:e)+v:e+t}};if(i)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=f.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\".concat(r.toString(),\\\"})();\\\");a.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(a).then((function(e){d=!1,h=!0,s=e,t()}),(function(t){d=!1,y=!0,e(t)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\".concat(e,\\\"ms\\\"));return[2]}}))}))},e.getInstance=function(){if(h&&s)return s;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},e.dispose=function(){var t;!h||d||y||(d=!0,null===(t=s.PThread)||void 0===t||t.terminateAllThreads(),s=void 0,d=!1,h=!1,y=!0)}},154:function(t){\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var r=require(\\\"worker_threads\\\"),a=r.parentPort;a.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var t=n(349),e=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":(0,e.initializeWebAssembly)(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(t){return postMessage({type:\\\"init-wasm\\\",err:t})}));break;case\\\"init-ort\\\":try{var r=n.data.in,a=r.numThreads,i=r.loggingLevel;(0,t.initOrt)(a,i),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{var o=n.data.in.model,u=(0,t.createSessionAllocate)(o);postMessage({type:\\\"create_allocate\\\",out:u})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{var c=n.data.in,s=(u=c.modeldata,c.options),f=(0,t.createSessionFinalize)(u,s);postMessage({type:\\\"create_finalize\\\",out:f})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{var l=n.data.in;o=l.model,s=l.options,f=(0,t.createSession)(o,s),postMessage({type:\\\"create\\\",out:f})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{var p=n.data.in;(0,t.releaseSession)(p),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{var h=n.data.in,d=h.sessionId,y=h.inputIndices,b=h.inputs,m=h.outputIndices,v=(s=h.options,(0,t.run)(d,y,b,m,s));postMessage({type:\\\"run\\\",out:v},(0,t.extractTransferableBuffers)(v))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{p=n.data.in,(0,t.endProfiling)(p),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","env","constructor","this","wasm","webgl","logLevelInternal","logLevel","value","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","set","Tensor","arg0","arg1","arg2","type","data","dims","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","static","buffer","options","height","width","norm","normMean","normBias","mean","bias","inputformat","bitmapFormat","outputformat","tensorFormat","offset","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isURL","String","tensorConfig","canvas","document","createElement","pixels2DContext","getContext","naturalHeight","naturalWidth","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","Promise","resolve","reject","context","newImage","Image","crossOrigin","src","onload","img","format","tempCanvas","putImageData","toImageData","_a","_b","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","_scriptDir","t","currentScript","n","E","D","z","j","F","r","U","Y","a","I","u","o","c","ready","f","s","l","p","h","m","d","assign","y","b","g","window","_","importScripts","process","versions","node","w","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","readFile","argv","replace","slice","on","ot","J","exitCode","x","exit","inspect","console","error","Worker","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","status","onerror","performance","S","log","bind","A","warn","writeSync","M","C","print","printErr","thisProgram","quit","wasmBinary","R","noExitRuntime","WebAssembly","rt","k","W","P","TextDecoder","H","decode","subarray","fromCharCode","q","B","charCodeAt","G","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","N","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","V","L","X","Z","$","Q","preRun","shift","unshift","K","tt","nt","et","postMessage","cmd","arg","onAbort","RuntimeError","it","startsWith","at","ut","message","ct","pt","Vb","mc","ft","Cc","ac","Ub","start_routine","Ic","zc","pthread_ptr","$b","time","now","Nc","loaded","st","Vt","oc","onExit","lt","dt","bn","ht","yn","en","rn","Yb","qc","fc","Ec","Pc","receiveObjectTransfer","Gc","threadInitTLS","pc","setExitStatus","nc","values","terminate","Tn","forEach","Fc","onmessage","Bc","targetThread","hn","Qc","transferList","Ht","queue","thread","threadId","text","alert","target","filename","lineno","urlOrBlob","mainScriptUrlOrBlob","wasmModule","yc","pop","mt","Mn","Cn","PThread","establishStackSpace","An","yt","bt","invokeEntryPoint","On","gt","_t","vt","wt","Tt","Ot","Zb","Sb","xc","bc","wc","Dc","rc","hc","uc","ic","kc","cc","sc","Atomics","add","Hc","sub","tc","vc","En","St","dn","At","Mt","Oc","Ct","xt","Rt","Et","kt","Dt","jt","Ft","Ut","Yt","It","Wt","Pt","store","wn","compareExchange","qt","Bt","Gt","zt","mn","Nt","toTimeString","match","Date","getFullYear","getTimezoneOffset","Math","max","arguments","xn","vn","executeNotifiedProxyingQueue","hrtime","__performance_now_clock_drift","Lt","Xt","Zt","$t","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Jt","Qt","Kt","tn","nn","an","un","cn","fn","sn","toString","getMonth","getDate","getDay","Wb","Xb","getTime","setDate","setMonth","setFullYear","Lc","Kc","dc","jc","ec","Tb","Rc","Jc","Mc","RegExp","split","substring","floor","abs","includes","ln","pn","ma","Sn","prototype","Rn","pa","Fa","gn","xa","Ma","ua","wa","oa","Ka","Ca","Ja","va","sa","La","ta","Ta","Ua","ya","Oa","za","setTimeout","Ea","Pa","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Qa","getSeconds","getMinutes","getHours","min","Ra","setTime","Aa","Ba","Sa","Ac","ra","Ia","copyWithin","hardwareConcurrency","Da","apply","qa","grow","Na","Ga","Ha","ga","na","lc","crypto","getRandomValues","randomBytes","ia","ja","aa","Pn","Dn","Hn","ca","In","kn","ba","Wn","jn","ha","ka","fa","Fn","da","Yn","ea","Un","la","asm","sb","ub","Va","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Wa","_OrtCreateSessionOptions","Xa","_OrtAppendExecutionProvider","Ya","_OrtAddSessionConfigEntry","Za","_OrtReleaseSessionOptions","_OrtCreateSession","$a","_OrtReleaseSession","ab","_OrtGetInputCount","bb","_OrtGetOutputCount","cb","_OrtGetInputName","db","_OrtGetOutputName","eb","_OrtFree","fb","_OrtCreateTensor","gb","_OrtGetTensorData","hb","_OrtReleaseTensor","ib","_OrtCreateRunOptions","jb","_OrtAddRunConfigEntry","kb","_OrtReleaseRunOptions","lb","_OrtRun","mb","_OrtEndProfiling","nb","_pthread_self","ob","_malloc","pb","_free","qb","_fflush","rb","__emscripten_tls_init","___funcs_on_exit","tb","__emscripten_thread_init","vb","__emscripten_thread_crashed","wb","_n","_emscripten_run_in_main_runtime_thread_js","xb","__emscripten_proxy_execute_task_queue","yb","__emscripten_thread_free_data","zb","__emscripten_thread_exit","Ab","_setThrew","Bb","_emscripten_stack_set_limits","Cb","stackSave","Db","stackRestore","Eb","stackAlloc","Fb","___cxa_can_catch","Gb","___cxa_is_pointer_type","Hb","dynCall_j","Ib","dynCall_iiiiij","Jb","dynCall_jii","Kb","dynCall_viiiiij","Lb","dynCall_vjji","Mb","dynCall_viiijjjii","Nb","dynCall_iij","Ob","dynCall_ji","Pb","dynCall_iiiiiij","Qb","dynCall_iiij","Rb","qn","calledRun","onRuntimeInitialized","postRun","setStatus","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","ExitStatus","preInit","ortWasm","fs","ctx","params","index","pending","base64","string","charAt","ceil","b64","s64","encode","start","end","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","args","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","SIZE","MAX","slab","utf8","len","read","write","c1","c2","__esModule","Guid","guid","EMPTY","isGuid","validator","create","gen","createEmpty","parse","raw","count","out","random","equals","other","isEmpty","toJSON","Long","Instance","Module","low","high","unsigned","isLong","obj","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","radixToPower","result","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","bytes","fromBytesLE","fromBytesBE","valuesById","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","int32","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","fromObject","object","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","elemType","shape","version","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","finish","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","stack","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","_cacheKey","sort","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","attributes","_attributes","attr","Attribute","getValue","getType","delete","getFloat","defaultValue","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","initialize","dispose","WebGLBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","glsl","getGlsl","floatTextureSetRGBASource","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","line1","line2","texture2D","programInfo","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","swapLastDimsSnippet","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","isLittleEndian","decodeUint8","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","cast","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","concat","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scaleWidth","scaleHeight","scale","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","to","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","inputCount","metadata","fill","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","fetchDataFromCorrectTextureMethod","getFetchDataFromCorrectTextureMethod","getSizeInConcatAxisValueFromIndexMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","searchAxis","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActivationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","computeTotalPad","inDim","adj","kernel","dilation","outSize","distributePadding","totalPad","smallPad","convTranspose2d","adjustedAttributes","getAdjustedConvTransposeAttributes","convTranspose2DUnpacked","valueInit","inputChannelsPerGroup","createUnpackedConvTransposeProgramInfo","createUnpackedConvTransposeProgramInfoLoader","outputPadding","spatialRank","updateShape","calculateOutputShapeAndPads","newAttributes","activationAttributes","parseInternalActivationAttributes","featureMaps","adjustPads","batchSize","inputSpatialShape","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","MIN_CLIP","MAX_CLIP","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","orank","irank","iDrank","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","alpha","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","declareC","broadcastC","calculateC","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","getBiasMethod","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","getOutputCoordsSnippet","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","validateInputsV2","createPadProgramInfo","validateInputsV11","attrubutes","generatePadAttributesFromInputs","integerData","padShape","padFunction","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","getAdjustedPoolAttributesAndOutputShape","op2","poolingCode","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","hasDilations","adjustPoolAttributes","computePoolOutputShape","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","padCode","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","oRank","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","logicalRowCount","sizeToDimension","featureCount","sizeFromDimension","computeSoftmax","transposeAttribute","isTransposeRequired","transposedInputShape","transposedInputs","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","validateInputsV13","sumProgramMetadata","createSumProgramInfo","sumLine","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","generateClipAttributesFromInputs","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","position","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","RED","RGBA32F","RGBA","textureSize","allocate","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","OffscreenCanvas","createCanvas","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","isFramebufferReady","getActiveTexture","getParameter","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","logInternal","toISOString","previousConfig","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","load","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","flatbuffers","ByteBuffer","ortModel","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","bb_pos","__init","getRootAsShape","Shape","readInt32","getSizePrefixedRootAsShape","setPosition","SIZE_PREFIX_LENGTH","__offset","__indirect","__vector","__vector_len","startShape","builder","startObject","addDim","addFieldOffset","createDimVector","startVector","addOffset","endVector","startDimVector","numElems","endShape","endObject","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","__string","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","readInt8","UNKNOWN","readInt64","createLong","startDimensionValue","addDimType","addFieldInt8","addDimValue","addFieldInt64","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addFieldInt32","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","readUint32","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","prep","writeInt32","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","addInt32","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","readUint8","NONE","__union","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","addInt64","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","addInt8","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","readFloat32","floatsLength","graphsLength","startAttribute","addF","addFieldFloat32","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","addFloat32","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","readUint64","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","requiredField","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","__has_identifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","_fetches","_options","inputMap","feed","outputMap","_initialized","graphInputTypes","graphInputDims","_model","promisify","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","dataBuffer","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","pad","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSessionAllocate","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","path","modelData","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","ep","epName","epNameDataOffset","setExecutionProviders","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","ortWasmFactoryThreaded","getWasmFileName","useSimd","useThreads","flags","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","opt_initial_size","initial_size","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","byte_size","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","voffset","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","new_buf_size","nbb","numfields","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","table","field","table_start","vtable_start","elem_size","num_elems","alignment","createString","codePoint","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","vtable_offset","opt_encoding","ident","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}